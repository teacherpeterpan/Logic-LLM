[
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1041_Q1",
    "context": "Bob is cold. Bob is quiet. Bob is red. Bob is smart. Charlie is kind. Charlie is quiet. Charlie is red. Charlie is rough. Dave is cold. Dave is kind. Dave is smart. Fiona is quiet. If something is quiet and cold then it is smart. Red, cold things are round. If something is kind and rough then it is red. All quiet things are rough. Cold, smart things are red. If something is rough then it is cold. All red things are rough. If Dave is smart and Dave is kind then Dave is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nQuiet(Bob, True) ::: Bob is quiet.\nRed(Bob, True) ::: Bob is red.\nSmart(Bob, True) ::: Bob is smart.\nKind(Charlie, True) ::: Charlie is kind.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nCold(Dave, True) ::: Dave is cold.\nKind(Dave, True) ::: Dave is kind.\nSmart(Dave, True) ::: Dave is smart.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nQuiet($x, True) && Cold($x, True) >>> Smart($x, True) ::: If something is quiet and cold then it is smart.\nRed($x, True) && Cold($x, True) >>> Round($x, True) ::: Red, cold things are round.\nKind($x, True) && Rough($x, True) >>> Red($x, True) ::: If something is kind and rough then it is red.\nQuiet($x, True) >>> Rough($x, True) ::: All quiet things are rough.\nCold($x, True) && Smart($x, True) >>> Red($x, True) ::: Cold, smart things are red.\nRough($x, True) >>> Cold($x, True) ::: If something is rough then it is cold.\nRed($x, True) >>> Rough($x, True) ::: All red things are rough.\nSmart($x, True) && Kind($x, True) >>> Quiet($x, True) ::: If Dave is smart and Dave is kind then Dave is quiet.\nQuery:\nKind(Charlie, True) ::: Charlie is kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-81_Q11",
    "context": "The cat eats the squirrel. The cat sees the squirrel. The cow eats the squirrel. The cow sees the cat. The rabbit is round. The rabbit sees the cat. The squirrel eats the rabbit. The squirrel is cold. The squirrel needs the rabbit. The squirrel sees the cat. If someone sees the cat and they are not green then they see the cow. If the rabbit is kind and the rabbit sees the squirrel then the squirrel needs the rabbit. Rough people are cold. If someone sees the rabbit then they are not round. If someone sees the squirrel and they are not green then they need the squirrel. If someone eats the cow then they see the rabbit. If someone eats the squirrel then they are rough. If someone is cold then they eat the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is not round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nNeeds($x, $y, bool) ::: Does x need y?\nFacts:\nEats(Cat, Squirrel, True) ::: The cat eats the squirrel.\nSees(Cat, Squirrel, True) ::: The cat sees the squirrel.\nEats(Cow, Squirrel, True) ::: The cow eats the squirrel.\nSees(Cow, Cat, True) ::: The cow sees the cat.\nRound(Rabbit, True) ::: The rabbit is round.\nSees(Rabbit, Cat, True) ::: The rabbit sees the cat.\nEats(Squirrel, Rabbit, True) ::: The squirrel eats the rabbit.\nCold(Squirrel, True) ::: The squirrel is cold.\nNeeds(Squirrel, Rabbit, True) ::: The squirrel needs the rabbit.\nSees(Squirrel, Cat, True) ::: The squirrel sees the cat.\nRules:\nSees(Cat, $x, True) >>> Sees(Cat, Cow, True) ::: If someone sees the cat and they are not green then they see the cow.\nKind(Rabbit, True) && Sees(Rabbit, Squirrel, True) >>> Squirrel(Squirrel, Rabbit, True) ::: If the rabbit is kind and the rabbit sees the squirrel then the squirrel needs the rabbit.\nRound($x, True) >>> Sees($x, Squirrel, True) ::: If someone sees the squirrel and they are not green then they need the squirrel.\nEats($x, Cow, True) >>> Sees($x, Rabbit, True) ::: If someone eats the cow then they see the rabbit.\nEats($x, Squirrel, True) >>> Cold($x, True) ::: If someone eats the squirrel then they are rough.\nCold($x, True) >>> Eats($x,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1284_Q8",
    "context": "Anne is furry. Anne is nice. Anne is smart. Bob is young. Erin is nice. Harry is smart. Harry is young. Young things are furry. Nice, furry things are green. All green things are nice. Nice, green things are big. All green things are smart. If something is big and young then it is round. All green things are big. If Harry is young then Harry is furry. Furry, smart things are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nNice(Anne, True) ::: Anne is nice.\nSmart(Anne, True) ::: Anne is smart.\nYoung(Bob, True) ::: Bob is young.\nNice(Erin, True) ::: Erin is nice.\nSmart(Harry, True) ::: Harry is smart.\nYoung(Harry, True) ::: Harry is young.\nRules:\nYoung($x, True) >>> Furry($x, True) ::: Young things are furry.\nNice($x, True) && Furry($x, True) >>> Green($x, True) ::: Nice, furry things are green.\nAll($x, Green($x, True)) >>> Nice($x, True) ::: All green things are nice.\nNice($x, True) && Green($x, True) >>> Big($x, True) ::: Nice, green things are big.\nAll($x, Green($x, True)) >>> Smart($x, True) ::: All green things are smart.\nIf($x, Young($x, True)) >>> Furry($x, True) ::: If Harry is young then Harry is furry.\nFurry($x, True) && Smart($x, True) >>> Nice($x, True) ::: Furry, smart things are nice.\nQuery:\nNot(Green(Harry, True)) ::: Harry is not green.\n------\nProblem:\nAnne is furry. Anne is nice. Anne is smart. Bob is young. Erin is nice. Harry is smart. Harry is young. Young things are furry. Nice, furry things are green. All green things are nice. Nice, green things are big. All green things are smart. If something is big and young then it is round. All green things are big. If Harry is young then Harry is furry. Furry, smart things are nice.\nQuestion:"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-585_Q19",
    "context": "Anne is round. Bob is red. Bob is smart. Erin is furry. Erin is red. Erin is rough. Erin is smart. Fiona is big. Fiona is furry. Fiona is smart. All smart things are furry. All furry things are red. All round things are rough. If Bob is white then Bob is furry. All red, rough things are big. All rough things are smart. If Fiona is furry then Fiona is red. If Bob is round and Bob is big then Bob is furry. If Fiona is red and Fiona is white then Fiona is smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nFacts:\nRound(Anne, True) ::: Anne is round.\nRed(Bob, True) ::: Bob is red.\nSmart(Bob, True) ::: Bob is smart.\nFurry(Erin, True) ::: Erin is furry.\nRed(Erin, True) ::: Erin is red.\nRough(Erin, True) ::: Erin is rough.\nSmart(Erin, True) ::: Erin is smart.\nBig(Fiona, True) ::: Fiona is big.\nFurry(Fiona, True) ::: Fiona is furry.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nSmart($x, True) >>> Furry($x, True) ::: All smart things are furry.\nFurry($x, True) >>> Red($x, True) ::: All furry things are red.\nRound($x, True) >>> Rough($x, True) ::: All round things are rough.\nRed($x, True) >>> White($x, True) ::: If Bob is white then Bob is furry.\nRed($x, True) >>> Big($x, True) ::: All red, rough things are big.\nRough($x, True) >>> Smart($x, True) ::: All rough things are smart.\nFurry($x, True) >>> Red($x, True) ::: If Fiona is furry then Fiona is red.\nRound($x, True) && Big($x, True) >>> Furry($x, True) ::: If Bob is round and Bob is big then Bob is furry.\nRed($x, True) && White($x, True) >>> Smart($x, True) ::: If Fiona is red and Fiona is white then Fiona is smart.\nQuery:\nNot(White(Bob, True)) ::: Bob is not white.\n------\nProblem:\nAnne is furry. Anne is green. Anne is red. Anne is rough."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-949_Q8",
    "context": "The bear is green. The bear likes the cat. The bear likes the dog. The bear visits the dog. The cat is young. The cat sees the bear. The cat sees the dog. The cat visits the bear. The cat visits the mouse. The dog is round. The dog likes the bear. The dog likes the mouse. The dog visits the mouse. The mouse is big. The mouse is cold. The mouse is round. If something visits the mouse and the mouse visits the dog then it is cold. If something likes the cat then it visits the dog. If something is cold then it likes the cat. If something is green then it sees the dog. If something likes the mouse then it sees the cat. If something is green and cold then it likes the cat. If something is big and it visits the bear then the bear is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nGreen(Bear, True) ::: The bear is green.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nLikes(Bear, Dog, True) ::: The bear likes the dog.\nVisits(Bear, Dog, True) ::: The bear visits the dog.\nYoung(Cat, True) ::: The cat is young.\nSees(Cat, Bear, True) ::: The cat sees the bear.\nSees(Cat, Dog, True) ::: The cat sees the dog.\nVisits(Cat, Bear, True) ::: The cat visits the bear.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nRound(Dog, True) ::: The dog is round.\nLikes(Dog, Bear, True) ::: The dog likes the bear.\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nVisits(Dog, Mouse, True) ::: The dog visits the mouse.\nBig(Mouse, True) ::: The mouse is big.\nCold(Mouse, True) ::: The mouse is cold.\nRound(Mouse, True) ::: The mouse is round.\nRules:\nVisits($x, $y, True) && Visits($y, $z, True) >>> Cold($x, True) ::: If something visits the mouse and the mouse visits the dog then it is cold.\nLikes($x, Cat, True) >>> Visits($x, Dog, True) ::: If something likes the cat then it visits the dog.\nCold($x, True) >>> Likes($x, Cat, True) ::: If something is cold then it likes the cat.\nGreen($x, True) >>> Sees($x, Dog, True) ::: If something is green then it sees the dog.\nLikes($"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-508_Q2",
    "context": "The bald eagle is big. The bald eagle is cold. The bald eagle is young. The cat is not kind. The cow is red. The cow likes the bald eagle. The squirrel visits the bald eagle. If something likes the cow then the cow likes the squirrel. All big things are cold. If the squirrel is red then the squirrel is young. If something likes the squirrel then the squirrel is red. If something is young then it likes the cow. If the squirrel likes the cat and the cow does not chase the squirrel then the cat likes the cow. If something visits the squirrel and the squirrel is big then it does not like the squirrel. If something is big then it visits the cow. If something visits the squirrel and it is not red then the squirrel does not visit the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nNotKind(Cat, True) ::: The cat is not kind.\nRed(Cow, True) ::: The cow is red.\nLikes(Cow, BaldEagle, True) ::: The cow likes the bald eagle.\nVisits(Cow, BaldEagle, True) ::: The squirrel visits the bald eagle.\nLikes(Cow, Squirrel, True) >>> Likes(Squirrel, Cow, True) ::: If something likes the cow then the cow likes the squirrel.\nAllBig($x, True) >>> Cold($x, True) ::: All big things are cold.\nYoung($x, True) >>> Likes($x, Cow, True) ::: If the squirrel is red then the squirrel is young.\nYoung($x, True) >>> Likes($x, Cow, True) ::: If something likes the squirrel then the squirrel is red.\nVisits($x, Squirrel, True) >>> Likes($x, Cow, True) ::: If something visits the squirrel and the squirrel is big then it does not like the squirrel.\nVisits($x, Squirrel, True) >>> NotRed($x, True) ::: If something visits the squirrel and it is not red then the squirrel does not visit the bald eagle.\nVisits($x, Cow, True) >>> Big($x, True) ::: If something visits the squirrel and it is not red then the squirrel does not visit the bald eagle.\nQuery:\nNotRed(Cow"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-270_Q8",
    "context": "Charlie is green. Dave is quiet. Dave is red. Dave is not white. Erin is not big. Erin is not cold. Erin is green. Harry is big. Harry is cold. Harry is green. If someone is red then they are not white. If Charlie is quiet then Charlie is blue. If someone is quiet and red then they are blue. All white people are cold. All green people are quiet. All blue, green people are red. If someone is red and not white then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nFacts:\nGreen(Charlie, True) ::: Charlie is green.\nQuiet(Dave, True) ::: Dave is quiet.\nRed(Dave, True) ::: Dave is red.\nWhite(Dave, False) ::: Dave is not white.\nGreen(Erin, True) ::: Erin is green.\nBig(Erin, False) ::: Erin is not big.\nCold(Erin, False) ::: Erin is not cold.\nGreen(Harry, True) ::: Harry is green.\nBig(Harry, True) ::: Harry is big.\nCold(Harry, True) ::: Harry is cold.\nRules:\nRed($x, True) >>> White($x, False) ::: If someone is red then they are not white.\nQuiet(Charlie, True) >>> Blue($x, True) ::: If Charlie is quiet then Charlie is blue.\nQuiet($x, True) && Red($x, True) >>> Blue($x, True) ::: If someone is quiet and red then they are blue.\nWhite($x, True) >>> Cold($x, True) ::: All white people are cold.\nGreen($x, True) >>> Quiet($x, True) ::: All green people are quiet.\nBlue($x, True) && Green($x, True) >>> Red($x, True) ::: All blue, green people are red.\nRed($x, True) && Not(White($x, True)) >>> Big($x, True) ::: If someone is red and not white then they are big.\nQuery:\nNot(Red(Charlie, True)) ::: Charlie is not red.\n------\nProblem:\nCharlie is green. Dave is quiet. Dave is red. Dave is not white. Erin is not big. Erin is not cold. Erin is green. Harry is big. Harry is cold. Harry is green. If someone is red then they are not white. If Charlie is quiet then Charlie is"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-487_Q19",
    "context": "The cat chases the lion. The cat is rough. The cat is young. The cat needs the lion. The cat needs the rabbit. The dog is green. The dog is young. The dog likes the cat. The lion is blue. The lion is green. The rabbit chases the lion. The rabbit is blue. The rabbit is rough. The rabbit likes the dog. The rabbit needs the dog. The rabbit needs the lion. If someone chases the lion then they are round. If the lion needs the rabbit and the rabbit chases the dog then the lion likes the dog. If someone is round and they chase the lion then they need the cat. If someone needs the cat and they chase the dog then they like the rabbit. If someone chases the lion and the lion is blue then the lion is round. If someone chases the rabbit then they are rough. If someone is rough and they like the rabbit then the rabbit is young. If the rabbit chases the cat and the cat needs the lion then the rabbit is young. If someone is round and they need the cat then they chase the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not like the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(Cat, Lion, True) ::: The cat chases the lion.\nRough(Cat, True) ::: The cat is rough.\nYoung(Cat, True) ::: The cat is young.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nNeeds(Cat, Rabbit, True) ::: The cat needs the rabbit.\nGreen(Dog, True) ::: The dog is green.\nYoung(Dog, True) ::: The dog is young.\nLikes(Dog, Cat, True) ::: The dog likes the cat.\nBlue(Lion, True) ::: The lion is blue.\nGreen(Lion, True) ::: The lion is green.\nChases(Rabbit, Lion, True) ::: The rabbit chases the lion.\nBlue(Rabbit, True) ::: The rabbit is blue.\nRough(Rabbit, True) ::: The rabbit is rough.\nLikes(Rabbit, Dog, True) ::: The rabbit likes the dog.\nNeeds(Rabbit, Dog, True) ::: The rabbit needs the dog.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nRound(x, True) >>> Chases(x, Lion, True) ::: If someone chases the lion then they are round.\nLikes(Cat, Dog, True) >>> Needs(Lion, Rabbit, True) ::: If the lion needs the rabbit and the rabbit chases the dog then the lion likes the dog.\nRound(x, True) >>> Needs(Cat, x, True) ::: If someone needs the cat and they chase the dog then they like the rabbit.\nChases(x, Lion, True) && Blue(Lion, True) >>> Round(x, True) ::: If someone chases the lion and"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-971_Q5",
    "context": "Charlie is green. Charlie is kind. Erin is blue. Erin is kind. Fiona is green. Gary is blue. Gary is furry. Gary is green. Gary is kind. Gary is round. If someone is round and kind then they are green. All green, round people are blue. Round people are big. If someone is kind then they are furry. All blue people are kind. If someone is green then they are big. If Erin is cold and Erin is green then Erin is blue. Cold, blue people are kind. All green, big people are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFacts:\nGreen(Charlie, True) ::: Charlie is green.\nKind(Charlie, True) ::: Charlie is kind.\nBlue(Erin, True) ::: Erin is blue.\nKind(Erin, True) ::: Erin is kind.\nGreen(Fiona, True) ::: Fiona is green.\nBlue(Gary, True) ::: Gary is blue.\nFurry(Gary, True) ::: Gary is furry.\nGreen(Gary, True) ::: Gary is green.\nKind(Gary, True) ::: Gary is kind.\nRound(Gary, True) ::: Gary is round.\nGreen(Gary, True) ::: Gary is green.\nKind(Gary, True) ::: Gary is kind.\nRound(Gary, True) ::: Gary is round.\nBig(Gary, True) ::: Gary is big.\nRules:\nRound($x, True) && Kind($x, True) >>> Green($x, True) ::: If someone is round and kind then they are green.\nGreen($x, True) && Round($x, True) >>> Blue($x, True) ::: All green, round people are blue.\nRound($x, True) >>> Big($x, True) ::: Round people are big.\nKind($x, True) >>> Furry($x, True) ::: If someone is kind then they are furry.\nBlue($x, True) >>> Kind($x, True) ::: All blue people are kind.\nGreen($x, True) >>> Big($x, True) ::: If someone is green then they are big.\nCold($x, True) && Blue($x, True) >>> Kind($x, True) ::: Cold, blue people are kind.\nGreen($x, True) && Big($x, True) >>> Round($x, True) ::: All green, big people are round.\nQuery:\nRound(Fiona, True) ::: Fiona is round"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-804_Q16",
    "context": "Anne is kind. Charlie is not big. Charlie is not green. Charlie is white. Erin is big. Erin is green. Erin is white. Fiona is green. Fiona is kind. Fiona is quiet. Fiona is red. Fiona is white. If Erin is big and Erin is red then Erin is kind. All rough things are green. If something is kind then it is green. Quiet, green things are big. If something is rough and green then it is red. If something is green then it is rough. If Erin is red then Erin is green. All red, rough things are quiet. If something is quiet and not red then it is not white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nRough($x, bool) ::: Is x rough?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nNot(Big(Charlie, True)) ::: Charlie is not big.\nNot(Green(Charlie, True)) ::: Charlie is not green.\nWhite(Charlie, True) ::: Charlie is white.\nBig(Erin, True) ::: Erin is big.\nGreen(Erin, True) ::: Erin is green.\nWhite(Erin, True) ::: Erin is white.\nGreen(Fiona, True) ::: Fiona is green.\nKind(Fiona, True) ::: Fiona is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nWhite(Fiona, True) ::: Fiona is white.\nRules:\nIf Erin is big and Erin is red then Erin is kind ::: Erin is big and Erin is red\nAll rough things are green ::: Rough($x, True) >>> Green($x, True)\nIf something is kind then it is green ::: Kind($x, True) >>> Green($x, True)\nQuiet, green things are big ::: Quiet($x, True) && Green($x, True) >>> Big($x, True)\nIf something is rough and green then it is red ::: Rough($x, True) && Green($x, True) >>> Red($x, True)\nIf something is green then it is rough ::: Green($x, True) >>> Rough($x, True)\nIf Erin is red then Erin is green ::: Red($x, True) >>> Green($x, True)\nAll red, rough things are quiet ::: Red($x, True) && Rough($x, True) >>> Quiet($x, True)\nIf something is quiet and not red then it is not white ::: Quiet($x, True) && Not(Red($x, True)) >>> Not(White($x,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-572_Q18",
    "context": "Charlie is green. Charlie is kind. Charlie is nice. Charlie is rough. Erin is kind. Erin is nice. Erin is quiet. Fiona is quiet. Fiona is rough. Harry is smart. All rough, green people are quiet. If someone is green and rough then they are nice. All kind, smart people are green. If Erin is green and Erin is blue then Erin is quiet. All quiet people are smart. All kind people are green. If someone is smart then they are kind. All rough, nice people are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nGreen(Charlie, True) ::: Charlie is green.\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nRough(Charlie, True) ::: Charlie is rough.\nKind(Erin, True) ::: Erin is kind.\nNice(Erin, True) ::: Erin is nice.\nQuiet(Erin, True) ::: Erin is quiet.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nRough($x, True) && Green($x, True) >>> Quiet($x, True) ::: All rough, green people are quiet.\nGreen($x, True) && Rough($x, True) >>> Nice($x, True) ::: If someone is green and rough then they are nice.\nKind($x, True) && Smart($x, True) >>> Green($x, True) ::: All kind, smart people are green.\nGreen($x, True) && Erin($x, True) && Erin($x, True) >>> Quiet($x, True) ::: If Erin is green and Erin is blue then Erin is quiet.\nQuiet($x, True) >>> Smart($x, True) ::: All quiet people are smart.\nKind($x, True) >>> Green($x, True) ::: All kind people are green.\nKind($x, True) >>> Smart($x, True) ::: If someone is smart then they are kind.\nRough($x, True) && Nice($x, True) >>> Blue($x, True) ::: All rough, nice people are blue.\nQuery:\nRough(Erin, True) ::: Erin is rough.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-285_Q16",
    "context": "Bob is big. Bob is cold. Bob is furry. Bob is smart. Fiona is cold. Fiona is not green. Fiona is white. Gary is smart. Harry is big. Harry is cold. Harry is smart. All green people are furry. If Gary is furry and Gary is not smart then Gary is white. Smart people are green. If Bob is not green and Bob is not white then Bob is furry. Big people are cold. If someone is smart and furry then they are big. If someone is white and not cold then they are not blue. All cold people are not blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(Bob, True) ::: Bob is big.\nCold(Bob, True) ::: Bob is cold.\nFurry(Bob, True) ::: Bob is furry.\nSmart(Bob, True) ::: Bob is smart.\nCold(Fiona, True) ::: Fiona is cold.\nNot(Green(Fiona, True)) ::: Fiona is not green.\nWhite(Fiona, True) ::: Fiona is white.\nSmart(Gary, True) ::: Gary is smart.\nBig(Harry, True) ::: Harry is big.\nCold(Harry, True) ::: Harry is cold.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nGreen($x, True) >>> Furry($x, True) ::: All green people are furry.\nNot(Furry($x, True)) && Not(Smart($x, True)) >>> Gary($x, True) ::: If Gary is furry and Gary is not smart then Gary is white.\nSmart($x, True) >>> Green($x, True) ::: Smart people are green.\nNot(Green($x, True)) && Not(White($x, True)) >>> Furry($x, True) ::: If Bob is not green and Bob is not white then Bob is furry.\nBig($x, True) >>> Cold($x, True) ::: Big people are cold.\nFurry($x, True) && Smart($x, True) >>> Big($x, True) ::: If someone is smart and furry then they are big.\nNot(White($x, True)) && Not(Cold($x, True)) >>> Not(Blue($x, True)) ::: If someone is white and not cold then they are not blue.\nNot(Cold($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-686_Q18",
    "context": "The bald eagle chases the squirrel. The bald eagle is blue. The bald eagle likes the cow. The bald eagle likes the lion. The cow chases the lion. The cow is green. The cow likes the bald eagle. The cow likes the lion. The lion likes the cow. The squirrel chases the bald eagle. The squirrel is big. The squirrel is green. The squirrel is red. The squirrel sees the bald eagle. If someone is red and they chase the bald eagle then the bald eagle is green. If someone likes the bald eagle then they like the lion. If someone is green then they see the lion. If the cow is blue then the cow likes the squirrel. If the bald eagle sees the lion then the lion sees the squirrel. If someone sees the squirrel then they are green. If someone likes the bald eagle then the bald eagle is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle chases the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nBlue($x, bool) ::: Is x blue?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nChases(BaldEagle, Squirrel, True) ::: The bald eagle chases the squirrel.\nBlue(BaldEagle, True) ::: The bald eagle is blue.\nLikes(BaldEagle, Cow, True) ::: The bald eagle likes the cow.\nLikes(BaldEagle, Lion, True) ::: The bald eagle likes the lion.\nChases(Cow, Lion, True) ::: The cow chases the lion.\nGreen(Cow, True) ::: The cow is green.\nLikes(Cow, BaldEagle, True) ::: The cow likes the bald eagle.\nLikes(Cow, Lion, True) ::: The cow likes the lion.\nLikes(Lion, Cow, True) ::: The lion likes the cow.\nChases(Squirrel, BaldEagle, True) ::: The squirrel chases the bald eagle.\nBig(Squirrel, True) ::: The squirrel is big.\nGreen(Squirrel, True) ::: The squirrel is green.\nRed(Squirrel, True) ::: The squirrel is red.\nSees(Squirrel, BaldEagle, True) ::: The squirrel sees the bald eagle.\nRules:\nRed($x, True) && Chases($x, BaldEagle, True) >>> Blue($x, True) ::: If someone is red and they chase the bald eagle then the bald eagle is green.\nLikes($x, BaldEagle, True) >>> Likes($x, Lion, True) ::: If someone likes the bald eagle then they like the lion.\nGreen($x, True) >>> Sees($x, Lion, True) ::: If someone is green"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-735_Q9",
    "context": "Bob is big. Bob is nice. Bob is smart. Charlie is nice. Dave is nice. Erin is big. Erin is blue. Erin is furry. Erin is quiet. Erin is round. Erin is smart. All nice things are big. All furry things are blue. Blue, furry things are quiet. If something is round and nice then it is blue. If Bob is round then Bob is blue. Big, quiet things are furry. If something is blue and furry then it is smart. If Charlie is nice and Charlie is big then Charlie is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(Bob, True) ::: Bob is big.\nNice(Bob, True) ::: Bob is nice.\nSmart(Bob, True) ::: Bob is smart.\nNice(Charlie, True) ::: Charlie is nice.\nNice(Dave, True) ::: Dave is nice.\nBig(Erin, True) ::: Erin is big.\nBlue(Erin, True) ::: Erin is blue.\nFurry(Erin, True) ::: Erin is furry.\nQuiet(Erin, True) ::: Erin is quiet.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nRules:\nNice($x, True) >>> Big($x, True) ::: All nice things are big.\nFurry($x, True) >>> Blue($x, True) ::: All furry things are blue.\nBlue($x, True) && Furry($x, True) >>> Quiet($x, True) ::: Blue, furry things are quiet.\nRound($x, True) && Nice($x, True) >>> Blue($x, True) ::: If something is round and nice then it is blue.\nBig($x, True) >>> Round($x, True) ::: If Bob is round then Bob is blue.\nBig($x, True) && Quiet($x, True) >>> Furry($x, True) ::: Big, quiet things are furry.\nFurry($x, True) && Blue($x, True) >>> Smart($x, True) ::: If something is blue and furry then it is smart.\nNice($x, True) && Charlie($x, True) >>> Quiet($x, True) ::: If Charlie is nice and Charlie is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-966_Q7",
    "context": "The bald eagle eats the cow. The bald eagle is young. The cow is nice. The cow sees the bald eagle. The dog eats the bald eagle. The tiger eats the cow. The tiger needs the bald eagle. If something is green and it eats the cow then it does not see the bald eagle. If something eats the tiger then the tiger is young. If something is red then it eats the tiger. If something sees the bald eagle then it eats the cow. If something is green and it needs the dog then it needs the bald eagle. If something sees the tiger then it needs the bald eagle. If something is red then it eats the bald eagle. If something is young then it is red. If something eats the dog and it is red then the dog is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nSees($x, $y, bool) ::: Does x see y?\nNeeds($x, $y, bool) ::: Does x need y?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nEats(BaldEagle, Cow, True) ::: The bald eagle eats the cow.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nNice(Cow, True) ::: The cow is nice.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nEats(Tiger, Cow, True) ::: The tiger eats the cow.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nGreen($x, True) >>> Eats($x, Cow, False) ::: If something is green and it eats the cow then it does not see the bald eagle.\nEats(Tiger, $x, True) >>> Young($x, True) ::: If something eats the tiger then the tiger is young.\nRed($x, True) >>> Eats($x, BaldEagle, True) ::: If something is red then it eats the bald eagle.\nYoung($x, True) >>> Red($x, True) ::: If something is young then it is red.\nEats(Dog, $x, True) >>> Red($x, True) && Young($x, True) ::: If something eats the dog and it is red then the dog is young.\nEats($x, Tiger, True) >>> Needs($x, BaldEagle, True) ::: If something eats the tiger then it needs the bald eagle.\nEats($x, Cow, True) >>> Sees($x, BaldEagle, True) ::: If something sees the tiger then it needs the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-145_Q9",
    "context": "Anne is kind. Anne is quiet. Anne is smart. Bob is kind. Bob is nice. Bob is smart. Fiona is not nice. Fiona is red. Gary is nice. Gary is white. If Bob is kind then Bob is smart. If something is kind and nice then it is smart. If something is nice and red then it is smart. If something is quiet and not nice then it is smart. All green things are kind. If Anne is quiet and Anne is white then Anne is kind. If Fiona is not nice then Fiona is green. All smart, kind things are white. If something is kind and green then it is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nQuiet(Anne, True) ::: Anne is quiet.\nSmart(Anne, True) ::: Anne is smart.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, True) ::: Bob is nice.\nSmart(Bob, True) ::: Bob is smart.\nNot(Nice(Fiona, True)) ::: Fiona is not nice.\nRed(Fiona, True) ::: Fiona is red.\nNice(Gary, True) ::: Gary is nice.\nWhite(Gary, True) ::: Gary is white.\nRules:\nIf Bob is kind then Bob is smart ::: If Bob is kind then Bob is smart.\nIf something is kind and nice then it is smart ::: If something is kind and nice then it is smart.\nIf something is nice and red then it is smart ::: If something is nice and red then it is smart.\nIf something is quiet and not nice then it is smart ::: If something is quiet and not nice then it is smart.\nAll green things are kind ::: All green things are kind.\nIf Anne is quiet and Anne is white then Anne is kind ::: If Anne is quiet and Anne is white then Anne is kind.\nIf Fiona is not nice then Fiona is green ::: If Fiona is not nice then Fiona is green.\nAll smart, kind things are white ::: All smart, kind things are white.\nIf something is kind and green then it is quiet ::: If something is kind and green then it is quiet.\nQuery:\nSmart(Fiona, True) ::: Fiona is smart.\n------\nProblem:\nAnne is kind. Anne is quiet. Anne is smart. Bob is kind. Bob is nice. Bob is smart. Fiona is not nice. Fiona is red. Gary is nice. Gary is white. If Bob is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-401_Q15",
    "context": "Anne is cold. Anne is kind. Charlie is blue. Charlie is round. Dave is blue. Fiona is not green. Fiona is kind. If Charlie is cold then Charlie is quiet. If Charlie is big then Charlie is not green. If Anne is kind then Anne is big. All big people are blue. Blue people are quiet. If Dave is kind then Dave is cold. If someone is round then they are green. Quiet people are round. If someone is kind and not blue then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nKind(Anne, True) ::: Anne is kind.\nBlue(Charlie, True) ::: Charlie is blue.\nRound(Charlie, True) ::: Charlie is round.\nBlue(Dave, True) ::: Dave is blue.\nNot(Green(Fiona, True)) ::: Fiona is not green.\nKind(Fiona, True) ::: Fiona is kind.\nRules:\nIf Charlie is cold then Charlie is quiet ::: If Charlie is cold then Charlie is quiet.\nIf Charlie is big then Charlie is not green ::: If Charlie is big then Charlie is not green.\nIf Anne is kind then Anne is big ::: If Anne is kind then Anne is big.\nAll big people are blue ::: All big people are blue.\nBlue people are quiet ::: Blue people are quiet.\nIf Dave is kind then Dave is cold ::: If Dave is kind then Dave is cold.\nIf someone is round then they are green ::: If someone is round then they are green.\nQuiet people are round ::: Quiet people are round.\nIf someone is kind and not blue then they are round ::: If someone is kind and not blue then they are round.\nQuery:\nNot(Cold(Dave, True)) ::: Dave is not cold.\n------\nProblem:\nAnne is cold. Anne is kind. Charlie is blue. Charlie is round. Dave is blue. Fiona is not green. Fiona is kind. If Charlie is cold then Charlie is quiet. If Charlie is big then Charlie is not green. If Anne is kind then Anne is big. All big people are blue. Blue people are quiet. If Dave is kind then Dave is cold. If someone is round then they are green. Quiet people are round. If someone is kind and not blue then they are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-352_Q8",
    "context": "Charlie is furry. Charlie is green. Charlie is white. Dave is blue. Dave is cold. Gary is cold. Gary is rough. Harry is blue. Harry is furry. Harry is rough. Harry is white. Nice, cold people are green. Rough people are green. Green people are blue. If someone is blue then they are nice. Furry, green people are rough. Green, nice people are furry. White people are nice. Cold people are blue. All rough, nice people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nFacts:\nFurry(Charlie, True) ::: Charlie is furry.\nGreen(Charlie, True) ::: Charlie is green.\nWhite(Charlie, True) ::: Charlie is white.\nBlue(Dave, True) ::: Dave is blue.\nCold(Dave, True) ::: Dave is cold.\nRough(Gary, True) ::: Gary is rough.\nCold(Gary, True) ::: Gary is cold.\nFurry(Harry, True) ::: Harry is furry.\nBlue(Harry, True) ::: Harry is blue.\nRough(Harry, True) ::: Harry is rough.\nWhite(Harry, True) ::: Harry is white.\nRules:\nNice($x, True) >>> Cold($x, True) ::: Nice, cold people are green.\nRough($x, True) >>> Green($x, True) ::: Rough people are green.\nGreen($x, True) >>> Blue($x, True) ::: Green people are blue.\nBlue($x, True) >>> Nice($x, True) ::: If someone is blue then they are nice.\nFurry($x, True) && Green($x, True) >>> Rough($x, True) ::: Furry, green people are rough.\nGreen($x, True) && Nice($x, True) >>> Furry($x, True) ::: Green, nice people are furry.\nWhite($x, True) >>> Nice($x, True) ::: White people are nice.\nCold($x, True) >>> Blue($x, True) ::: Cold people are blue.\nAll($x, Rough($x, True) && Nice($x, True) >>> White($x, True)) ::: All rough, nice people are white.\nQuery:\nNot(Furry(Dave, True)) ::: Dave is not"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-842_Q7",
    "context": "Anne is big. Anne is cold. Anne is young. Dave is round. Dave is white. Erin is cold. Erin is white. Erin is young. Gary is cold. Gary is young. If something is big then it is cold. Round things are big. Furry, round things are big. All cold things are furry. If Erin is round then Erin is young. All furry, big things are young. White things are round. If Gary is cold then Gary is white. All white, young things are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nFacts:\nBig(Anne, True) ::: Anne is big.\nCold(Anne, True) ::: Anne is cold.\nYoung(Anne, True) ::: Anne is young.\nRound(Dave, True) ::: Dave is round.\nWhite(Dave, True) ::: Dave is white.\nCold(Erin, True) ::: Erin is cold.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nCold(Gary, True) ::: Gary is cold.\nYoung(Gary, True) ::: Gary is young.\nRules:\nBig($x, True) >>> Cold($x, True) ::: If something is big then it is cold.\nRound($x, True) >>> Big($x, True) ::: Round things are big.\nFurry($x, True) && Round($x, True) >>> Big($x, True) ::: Furry, round things are big.\nAll($x, Cold($x, True)) >>> Furry($x, True) ::: All cold things are furry.\nYoung($x, True) >>> Erin($x, True) ::: If Erin is round then Erin is young.\nAll($x, Furry($x, True) && Big($x, True)) >>> Young($x, True) ::: All furry, big things are young.\nWhite($x, True) >>> Round($x, True) ::: White things are round.\nCold($x, True) >>> Gary($x, True) ::: If Gary is cold then Gary is white.\nAll($x, White($x, True) && Young($x, True)) >>> Nice($x, True) ::: All white, young things are nice.\nQuery:\nFurry(Dave, True) ::: Dave is furry."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-296_Q13",
    "context": "Anne is green. Charlie is big. Charlie is quiet. Charlie is round. Erin is green. Erin is kind. Erin is nice. Erin is quiet. Fiona is blue. Fiona is kind. Fiona is quiet. If something is kind then it is nice. If something is round and quiet then it is blue. If Charlie is kind then Charlie is big. All big, blue things are kind. Nice things are quiet. All green things are big. Quiet things are kind. Big things are kind. If Anne is green then Anne is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nBig(Charlie, True) ::: Charlie is big.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRound(Charlie, True) ::: Charlie is round.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::: Erin is kind.\nNice(Erin, True) ::: Erin is nice.\nQuiet(Erin, True) ::: Erin is quiet.\nBlue(Fiona, True) ::: Fiona is blue.\nKind(Fiona, True) ::: Fiona is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nKind($x, True) >>> Nice($x, True) ::: If something is kind then it is nice.\nRound($x, True) && Quiet($x, True) >>> Blue($x, True) ::: If something is round and quiet then it is blue.\nKind($x, True) >>> Big($x, True) ::: If Charlie is kind then Charlie is big.\nAll($x, True) >>> Kind($x, True) ::: All big, blue things are kind.\nNice($x, True) >>> Quiet($x, True) ::: Nice things are quiet.\nGreen($x, True) >>> Big($x, True) ::: All green things are big.\nQuiet($x, True) >>> Kind($x, True) ::: Quiet things are kind.\nBig($x, True) >>> Kind($x, True) ::: Big things are kind.\nIf($x, True) >>> Green($x, True) ::: If Anne is green then Anne is round.\nQuery:\nNot(Blue(Erin, True)) ::: Erin is not blue.\n------\nProblem:\nAnne is green. Anne is kind. Anne"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-203_Q21",
    "context": "Charlie is cold. Charlie is young. Dave is cold. Erin is white. Fiona is nice. Fiona is white. Fiona is young. All blue things are white. If something is nice and blue then it is white. All young, blue things are not green. If something is white then it is nice. If something is nice then it is round. If Charlie is round then Charlie is white. All blue things are young. If something is cold and green then it is young. Round things are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nYoung(Charlie, True) ::: Charlie is young.\nCold(Dave, True) ::: Dave is cold.\nWhite(Erin, True) ::: Erin is white.\nNice(Fiona, True) ::: Fiona is nice.\nWhite(Fiona, True) ::: Fiona is white.\nYoung(Fiona, True) ::: Fiona is young.\nBlue($x, True) >>> White($x, True) ::: All blue things are white.\nNice($x, True) && Blue($x, True) >>> White($x, True) ::: If something is nice and blue then it is white.\nYoung($x, True) && Blue($x, True) >>> Green($x, False) ::: All young, blue things are not green.\nWhite($x, True) >>> Nice($x, True) ::: If something is white then it is nice.\nNice($x, True) >>> Round($x, True) ::: If something is nice then it is round.\nCold($x, True) && Green($x, True) >>> Young($x, True) ::: If something is cold and green then it is young.\nBlue($x, True) >>> Round($x, True) ::: Round things are blue.\nQuery:\nNot(Cold(Fiona, True)) ::: Fiona is not cold.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1119_Q6",
    "context": "Anne is blue. Anne is cold. Anne is kind. Anne is quiet. Bob is blue. Bob is kind. Bob is nice. Bob is not quiet. Dave is not furry. Dave is green. Dave is quiet. Fiona is cold. All cold people are blue. Green, nice people are kind. All blue people are kind. Kind, cold people are nice. If someone is nice then they are green. Cold, green people are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nCold(Anne, True) ::: Anne is cold.\nKind(Anne, True) ::: Anne is kind.\nQuiet(Anne, True) ::: Anne is quiet.\nBlue(Bob, True) ::: Bob is blue.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, True) ::: Bob is nice.\nNot(Quiet(Bob, True)) ::: Bob is not quiet.\nNot(Furry(Dave, True)) ::: Dave is not furry.\nGreen(Dave, True) ::: Dave is green.\nQuiet(Dave, True) ::: Dave is quiet.\nRules:\nCold($x, True) >>> Blue($x, True) ::: All cold people are blue.\nGreen($x, True) >>> Kind($x, True) ::: Green, nice people are kind.\nBlue($x, True) >>> Kind($x, True) ::: All blue people are kind.\nKind($x, True) >>> Cold($x, True) ::: Kind, cold people are nice.\nNice($x, True) >>> Green($x, True) ::: If someone is nice then they are green.\nCold($x, True) >>> Quiet($x, True) ::: Cold, green people are quiet.\nQuery:\nNot(Kind(Fiona, True)) ::: Fiona is not kind.\n------\nProblem:"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-177_Q5",
    "context": "Anne is furry. Anne is smart. Bob is kind. Bob is nice. Charlie is big. Charlie is green. Charlie is nice. Charlie is young. Gary is furry. Gary is kind. Gary is nice. Gary is young. If something is young then it is nice. If Anne is green then Anne is big. Smart things are nice. All smart, kind things are green. Young, big things are kind. Kind, smart things are furry. If something is nice and big then it is young. All nice things are kind. If Anne is young and Anne is big then Anne is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nSmart(Anne, True) ::: Anne is smart.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, True) ::: Bob is nice.\nBig(Charlie, True) ::: Charlie is big.\nGreen(Charlie, True) ::: Charlie is green.\nNice(Charlie, True) ::: Charlie is nice.\nYoung(Charlie, True) ::: Charlie is young.\nKind(Gary, True) ::: Gary is kind.\nFurry(Gary, True) ::: Gary is furry.\nNice(Gary, True) ::: Gary is nice.\nYoung(Gary, True) ::: Gary is young.\nRules:\nYoung($x, True) >>> Nice($x, True) ::: If something is young then it is nice.\nGreen(Anne, True) >>> Big(Anne, True) ::: If Anne is green then Anne is big.\nSmart($x, True) >>> Nice($x, True) ::: Smart things are nice.\nGreen($x, True) && Kind($x, True) && Smart($x, True) >>> Furry($x, True) ::: All smart, kind things are green.\nYoung($x, True) && Big($x, True) >>> Kind($x, True) ::: Young,"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-315_Q16",
    "context": "Bob is blue. Bob is cold. Bob is green. Dave is blue. Dave is cold. Dave is green. Dave is kind. Dave is smart. Dave is white. Erin is smart. Fiona is blue. Blue people are smart. If Fiona is green and Fiona is blue then Fiona is big. Smart people are cold. If Bob is kind and Bob is blue then Bob is not green. If someone is blue then they are white. Green people are white. All big people are kind. If someone is cold then they are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nWhite($x, bool) ::: Is x white?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nGreen(Bob, True) ::: Bob is green.\nBlue(Dave, True) ::: Dave is blue.\nCold(Dave, True) ::: Dave is cold.\nGreen(Dave, True) ::: Dave is green.\nSmart(Dave, True) ::: Dave is smart.\nWhite(Dave, True) ::: Dave is white.\nSmart(Erin, True) ::: Erin is smart.\nBlue(Fiona, True) ::: Fiona is blue.\nRules:\nBlue($x, True) >>> Smart($x, True) ::: Blue people are smart.\nFiona(Green, True) && Fiona(Blue, True) >>> Fiona(Big, True) ::: If Fiona is green and Fiona is blue then Fiona is big.\nSmart($x, True) >>> Cold($x, True) ::: Smart people are cold.\nBlue($x, True) && Kind($x, True) >>> Green($x, False) ::: If Bob is kind and Bob is blue then Bob is not green.\nBlue($x, True) >>> White($x, True) ::: If someone is blue then they are white.\nGreen($x, True) >>> White($x, True) ::: Green people are white.\nBig($x, True) >>> Kind($x, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-29_Q21",
    "context": "The bald eagle is big. The bald eagle is red. The bald eagle sees the tiger. The bald eagle visits the bear. The bear needs the bald eagle. The bear sees the bald eagle. The bear does not see the tiger. The rabbit is big. The rabbit needs the bald eagle. The rabbit needs the bear. The rabbit visits the tiger. The tiger needs the bald eagle. The tiger needs the rabbit. The tiger visits the bear. If something is big then it needs the tiger. If something needs the tiger and it sees the bald eagle then the tiger is big. If something needs the tiger and it visits the bear then the tiger needs the rabbit. If the bald eagle visits the bear and the bald eagle needs the tiger then the bear needs the tiger. If something needs the tiger then it is red. If the bear sees the rabbit then the rabbit sees the tiger. If something is blue then it visits the bear. If something is blue and it needs the tiger then it does not visit the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not visit the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nRed(BaldEagle, True) ::: The bald eagle is red.\nSees(BaldEagle, Tiger, True) ::: The bald eagle sees the tiger.\nVisits(BaldEagle, Bear, True) ::: The bald eagle visits the bear.\nNeeds(Bear, BaldEagle, True) ::: The bear needs the bald eagle.\nSees(Bear, BaldEagle, True) ::: The bear sees the bald eagle.\nDoesNotSee(Bear, Tiger, True) ::: The bear does not see the tiger.\nBig(Rabbit, True) ::: The rabbit is big.\nNeeds(Rabbit, BaldEagle, True) ::: The rabbit needs the bald eagle.\nNeeds(Rabbit, Bear, True) ::: The rabbit needs the bear.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nNeeds(Tiger, Rabbit, True) ::: The tiger needs the rabbit.\nVisits(Tiger, Bear, True) ::: The tiger visits the bear.\nRules:\nBig($x, True) >>> Needs($x, Tiger, True) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-891_Q9",
    "context": "Bob is green. Bob is kind. Charlie is green. Charlie is not smart. Erin is not young. Fiona is nice. Fiona is young. Green, smart things are quiet. If something is kind then it is green. Smart things are young. Young things are kind. Quiet things are furry. All quiet, nice things are furry. Nice, green things are smart. If Bob is kind and Bob is not green then Bob is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nKind(Bob, True) ::: Bob is kind.\nGreen(Charlie, True) ::: Charlie is green.\nSmart(Charlie, False) ::: Charlie is not smart.\nYoung(Erin, False) ::: Erin is not young.\nNice(Fiona, True) ::: Fiona is nice.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nGreen($x, True) && Smart($x, True) >>> Quiet($x, True) ::: Green, smart things are quiet.\nKind($x, True) >>> Green($x, True) ::: If something is kind then it is green.\nSmart($x, True) >>> Young($x, True) ::: Smart things are young.\nYoung($x, True) >>> Kind($x, True) ::: Young things are kind.\nQuiet($x, True) && Nice($x, True) >>> Furry($x, True) ::: All quiet, nice things are furry.\nNice($x, True) && Green($x, True) >>> Smart($x, True) ::: Nice, green things are smart.\nKind($x, True) && Not(Green($x, True)) >>> Furry($x, True) ::: If Bob is kind and Bob is not green then Bob is furry.\nQuery:\nQuiet(F"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-992_Q8",
    "context": "The bear is nice. The bear likes the cat. The bear sees the dog. The cat eats the bear. The cat is cold. The cat sees the bear. The dog eats the bear. The dog eats the lion. The dog is blue. The dog sees the cat. The lion eats the cat. The lion is cold. The lion likes the bear. The lion likes the cat. If someone is big then they eat the dog. If someone is cold then they are nice. If someone is blue and they see the bear then they see the dog. If someone eats the dog then the dog is nice. If someone is blue and they see the dog then they are big. If someone eats the bear and they are nice then they are blue. If someone eats the bear and they see the dog then the dog is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not see the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nFacts:\nNice(Bear, True) ::: The bear is nice.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nSees(Bear, Dog, True) ::: The bear sees the dog.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nCold(Cat, True) ::: The cat is cold.\nSees(Cat, Bear, True) ::: The cat sees the bear.\nEats(Dog, Bear, True) ::: The dog eats the bear.\nEats(Dog, Lion, True) ::: The dog eats the lion.\nBlue(Dog, True) ::: The dog is blue.\nSees(Dog, Cat, True) ::: The dog sees the cat.\nEats(Lion, Cat, True) ::: The lion eats the cat.\nCold(Lion, True) ::: The lion is cold.\nLikes(Lion, Bear, True) ::: The lion likes the bear.\nLikes(Lion, Cat, True) ::: The lion likes the cat.\nRules:\nBig($x, True) >>> Eats($x, Dog) ::: If someone is big then they eat the dog.\nCold($x, True) >>> Nice($x, True) ::: If someone is cold then they are nice.\nBlue($x, True"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-242_Q23",
    "context": "The bald eagle chases the cow. The bald eagle is not kind. The bald eagle is round. The bear chases the tiger. The cow is red. The cow is round. The tiger sees the cow. If someone is young and they see the bald eagle then they see the bear. If someone chases the bear then the bear is young. If someone chases the tiger then they are rough. If someone chases the tiger then the tiger eats the bear. If the tiger is round and the tiger is kind then the tiger chases the bear. If someone is young then they see the bald eagle. If someone chases the cow then they chase the bear. If someone sees the bear then the bear chases the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not eat the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nSees($x, $y) ::: Does x see y?\nEats($x, $y) ::: Does x eat y?\nFacts:\nChases(BaldEagle, Cow) ::: The bald eagle chases the cow.\nKind(BaldEagle, False) ::: The bald eagle is not kind.\nRound(BaldEagle, True) ::: The bald eagle is round.\nChases(Bear, Tiger) ::: The bear chases the tiger.\nRed(Cow, True) ::: The cow is red.\nRound(Cow, True) ::: The cow is round.\nSees(Cow, Tiger) ::: The cow sees the tiger.\nYoung(BaldEagle, True) && Sees(BaldEagle, Bear) >>> Sees(BaldEagle, Tiger) ::: If someone is young and they see the bald eagle then they see the bear.\nYoung(Bear, True) >>> Chases(Bear, Cow) ::: If someone chases the bear then the bear is young.\nChases(Tiger, Bear) >>> Rough(Tiger) ::: If someone chases the tiger then they are rough.\nChases(Tiger, Bear) >>> Eats(Tiger, Bear) ::: If someone chases the tiger then the tiger eats the bear.\nRound(Tiger, True) && Kind(Tiger, True) >>> Chases(Tiger, Bear) ::: If the tiger is round and the tiger is kind then the tiger chases the bear.\nYoung(BaldE"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-70_Q11",
    "context": "The bald eagle chases the rabbit. The bald eagle chases the tiger. The lion needs the rabbit. The rabbit does not chase the lion. The rabbit needs the bald eagle. The rabbit needs the lion. The tiger visits the rabbit. If something chases the rabbit then it is big. If something needs the tiger then it is big. If something needs the lion and it visits the rabbit then it chases the lion. If something is big then it chases the lion. If something chases the tiger then the tiger needs the rabbit. If something visits the tiger then the tiger is not green. If something chases the lion then the lion chases the rabbit. If something chases the tiger then it visits the bald eagle. If something chases the rabbit and it does not visit the lion then the lion does not need the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion chases the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nFacts:\nChases(BaldEagle, Rabbit, True) ::: The bald eagle chases the rabbit.\nChases(BaldEagle, Tiger, True) ::: The bald eagle chases the tiger.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nNot(Chases(Rabbit, Lion, True)) ::: The rabbit does not chase the lion.\nNeeds(Rabbit, BaldEagle, True) ::: The rabbit needs the bald eagle.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nRules:\nChases($x, $y, True) >>> Big($x, True) ::: If something chases the rabbit then it is big.\nNeeds($x, Tiger, True) >>> Big($x, True) ::: If something needs the tiger then it is big.\nNeeds($x, Lion, True) && Visits($x, Rabbit, True) >>> Chases($x, Lion, True) ::: If something needs the lion and it visits the rabbit then it chases the lion.\nBig($x, True) >>> Chases($x, Lion, True) ::: If something is big then it chases the lion.\nChases($x, Tiger, True) >>> Needs(Tiger, Rabbit, True) ::: If something chases the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-165_Q13",
    "context": "Anne is furry. Anne is nice. Anne is rough. Anne is white. Erin is furry. Erin is rough. Erin is white. Fiona is big. Fiona is nice. Fiona is round. Harry is nice. Harry is rough. All furry things are white. If Harry is red then Harry is round. All round, red things are furry. If Harry is rough then Harry is round. Nice, red things are big. Round, red things are white. All nice, white things are red. If something is round then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nNice(Anne, True) ::: Anne is nice.\nRough(Anne, True) ::: Anne is rough.\nWhite(Anne, True) ::: Anne is white.\nFurry(Erin, True) ::: Erin is furry.\nRough(Erin, True) ::: Erin is rough.\nWhite(Erin, True) ::: Erin is white.\nBig(Fiona, True) ::: Fiona is big.\nNice(Fiona, True) ::: Fiona is nice.\nRound(Fiona, True) ::: Fiona is round.\nNice(Harry, True) ::: Harry is nice.\nRough(Harry, True) ::: Harry is rough.\nRules:\nFurry($x, True) >>> White($x, True) ::: All furry things are white.\nHarry($x, True) >>> Red($x, True) ::: If Harry is red then Harry is round.\nRed($x, True) >>> Furry($x, True) ::: All round, red things are furry.\nRough($x, True) >>> Round($x, True) ::: If Harry is rough then Harry is round.\nNice($x, True) >>> Red($x, True) ::: Nice, red things are big.\nRed($x, True) >>> White($x,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1330_Q11",
    "context": "Bob is red. Bob is young. Charlie is big. Charlie is green. Charlie is red. Charlie is rough. Charlie is young. Dave is big. Harry is rough. Harry is round. Harry is young. All rough, white things are young. All big things are round. All white, red things are rough. All round things are green. All big things are white. If Harry is round then Harry is big. All rough, young things are red. If something is young then it is green. All green things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nFacts:\nRed(Bob, True) ::: Bob is red.\nYoung(Bob, True) ::: Bob is young.\nBig(Charlie, True) ::: Charlie is big.\nGreen(Charlie, True) ::: Charlie is green.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nYoung(Charlie, True) ::: Charlie is young.\nBig(Dave, True) ::: Dave is big.\nRough(Harry, True) ::: Harry is rough.\nRound(Harry, True) ::: Harry is round.\nYoung(Harry, True) ::: Harry is young.\nRules:\nYoung($x, True) >>> Red($x, True) ::: All rough, young things are red.\nYoung($x, True) >>> Green($x, True) ::: If something is young then it is green.\nRed($x, True) >>> Young($x, True) ::: All green things are red.\nBig($x, True) >>> Round($x, True) ::: All big things are round.\nBig($x, True) >>> White($x, True) ::: All big things are white.\nRough($x, True) && White($x, True) >>> Young($x, True) ::: All rough, white things are young.\nRound($x, True) >>> Green($x, True) ::: All round things are green.\nWhite($x, True) >>> Red($x, True) ::: All white, red things are rough.\nQuery:\nYoung(Dave, True) ::: Dave is young.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-115_Q19",
    "context": "The bald eagle is blue. The bald eagle is red. The bald eagle likes the lion. The bald eagle needs the bear. The bald eagle needs the dog. The bear is not blue. The bear is nice. The bear needs the dog. The dog chases the bald eagle. The dog is red. The dog does not need the bear. The lion does not like the bear. If something likes the lion and it is not red then it chases the lion. If something is red and it needs the bald eagle then the bald eagle needs the lion. If something is round then it does not like the dog. If the bald eagle needs the dog then the dog is round. If something likes the dog then it likes the bald eagle. If something chases the lion and the lion likes the dog then the dog does not like the lion. If the bear likes the lion then the lion likes the dog. If something likes the bear then the bear likes the lion. If something is round then it likes the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not need the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nRound($x, bool) ::: Is x round?\nFacts:\nBlue(BaldEagle, True) ::: The bald eagle is blue.\nRed(BaldEagle, True) ::: The bald eagle is red.\nLikes(BaldEagle, Lion, True) ::: The bald eagle likes the lion.\nNeeds(BaldEagle, Bear, True) ::: The bald eagle needs the bear.\nNeeds(BaldEagle, Dog, True) ::: The bald eagle needs the dog.\nNot(Blue(Bear, True)) ::: The bear is not blue.\nNice(Bear, True) ::: The bear is nice.\nNeeds(Bear, Dog, True) ::: The bear needs the dog.\nNot(Red(Dog, True)) ::: The dog is red.\nNot(Needs(Bear, BaldEagle, True)) ::: The bear does not need the bald eagle.\nNot(Likes(Lion, Bear, True)) ::: The lion does not like the bear.\nIf(Likes(Lion, $x, True), Not(Red($x, True))) ::: If something likes the lion and it is not red then it chases the lion.\nIf(Red($x, True), Needs(BaldEagle, Lion, True)) ::: If something is red and it needs the bald eagle then the bald eagle needs the lion.\nNot(Round(Dog, True)) ::: The dog is not round.\nIf(Likes(Dog, $x, True), Likes(Dog, BaldEagle, True)) ::: If something likes the dog then it likes the bald eagle"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-747_Q6",
    "context": "The bear eats the tiger. The bear is not red. The bear likes the squirrel. The bear visits the squirrel. The mouse eats the tiger. The mouse is red. The mouse is rough. The mouse likes the bear. The mouse does not like the tiger. The squirrel likes the bear. The tiger eats the mouse. If the mouse likes the bear and the bear likes the mouse then the mouse is not kind. If someone visits the mouse then they like the squirrel. If someone is green then they visit the bear. If someone likes the bear and the bear visits the tiger then they visit the bear. If someone eats the bear and they do not like the tiger then they are green. If someone visits the mouse then the mouse eats the bear. If someone is red and they eat the tiger then the tiger visits the mouse. If someone visits the bear then they are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not like the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nFacts:\nEats(Bear, Tiger, True) ::: The bear eats the tiger.\nNot(Red(Bear, True)) ::: The bear is not red.\nLikes(Bear, Squirrel, True) ::: The bear likes the squirrel.\nVisits(Bear, Squirrel, True) ::: The bear visits the squirrel.\nEats(Mouse, Tiger, True) ::: The mouse eats the tiger.\nRed(Mouse, True) ::: The mouse is red.\nRough(Mouse, True) ::: The mouse is rough.\nLikes(Mouse, Bear, True) ::: The mouse likes the bear.\nNot(Likes(Mouse, Tiger, True)) ::: The mouse does not like the tiger.\nLikes(Squirrel, Bear, True) ::: The squirrel likes the bear.\nEats(Tiger, Mouse, True) ::: The tiger eats the mouse.\nRules:\nIf Mouse(Likes(Bear, Mouse) && Bear(Likes(Mouse, Bear)) then Mouse(Not(Kind(Mouse, True))) ::: If the mouse likes the bear and the bear likes the mouse then the mouse is not kind.\nIf Mouse(Visits(Mouse)) then Mouse(Likes(Squirrel, Mouse)) ::: If someone visits the mouse then they like the squirrel.\nIf Green(Mouse) then Mouse(Visits(Bear)) ::: If someone is green then they visit the bear.\nIf Bear(Likes(Mouse, Bear)) && Bear("
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-56_Q2",
    "context": "Dave is red. Erin is quiet. Fiona is white. Harry is big. Harry is not green. Harry is quiet. Harry is red. Quiet, red people are smart. If someone is quiet then they are smart. If Dave is red then Dave is big. If Dave is smart and Dave is white then Dave is big. If Fiona is white and Fiona is red then Fiona is rough. If someone is white then they are quiet. Rough people are green. All smart people are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nFacts:\nRed(Dave, True) ::: Dave is red.\nQuiet(Erin, True) ::: Erin is quiet.\nWhite(Fiona, True) ::: Fiona is white.\nBig(Harry, True) ::: Harry is big.\nGreen(Harry, False) ::: Harry is not green.\nQuiet(Harry, True) ::: Harry is quiet.\nRed(Harry, True) ::: Harry is red.\nRules:\nQuiet($x, True) >>> Smart($x, True) ::: If someone is quiet then they are smart.\nRed($x, True) >>> Big($x, True) ::: If Dave is red then Dave is big.\nRed($x, True) && Smart($x, True) && White($x, True) >>> Big($x, True) ::: If Dave is smart and Dave is white then Dave is big.\nWhite($x, True) >>> Quiet($x, True) ::: If Fiona is white and Fiona is red then Fiona is rough.\nRough($x, True) >>> Green($x, True) ::: Rough people are green.\nRed($x, True) >>> Smart($x, True) ::: All smart people are red.\nQuery:\nNot(Red(Harry, True)) ::: Harry is not red.\n------\nProblem:\nDave is red. Erin is quiet. Fiona is white. Harry is big. Harry is not green. Harry is quiet. Harry is red. Quiet, red people are smart. If someone is quiet then they are smart. If Dave is red then Dave is big. If Dave is smart and"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-144_Q7",
    "context": "The bald eagle is big. The bald eagle is not green. The bald eagle likes the bear. The bald eagle likes the squirrel. The bear chases the lion. The bear is green. The bear visits the bald eagle. The bear visits the squirrel. The lion is not green. The lion likes the bear. The lion visits the squirrel. The squirrel chases the bald eagle. The squirrel is cold. The squirrel visits the bald eagle. If someone is cold then they are not young. All big people are not green. If the lion is big and the lion is green then the lion chases the bald eagle. If someone chases the bald eagle then they like the bear. If someone is round and they visit the bald eagle then the bald eagle likes the squirrel. If someone visits the lion then they like the bald eagle. If the lion visits the squirrel and the squirrel chases the bear then the bear chases the bald eagle. If someone visits the lion then they are cold. If someone likes the bear then they chase the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear chases the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nNotGreen(BaldEagle, True) ::: The bald eagle is not green.\nLikes(BaldEagle, Bear, True) ::: The bald eagle likes the bear.\nLikes(BaldEagle, Squirrel, True) ::: The bald eagle likes the squirrel.\nChases(Bear, Lion, True) ::: The bear chases the lion.\nGreen(Bear, True) ::: The bear is green.\nVisits(Bear, BaldEagle, True) ::: The bear visits the bald eagle.\nVisits(Bear, Squirrel, True) ::: The bear visits the squirrel.\nNotGreen(Lion, True) ::: The lion is not green.\nLikes(Lion, Bear, True) ::: The lion likes the bear.\nVisits(Lion, Squirrel, True) ::: The lion visits the squirrel.\nChases(Squirrel, BaldEagle, True) ::: The squirrel chases the bald eagle.\nCold(Squirrel, True) ::: The squirrel is cold.\nVisits(Squirrel, BaldEagle, True) ::: The squirrel visits the bald eagle.\nRules:\nYoung($x, True) >>> NotGreen($x, True) ::: If someone is cold then they are not young.\nBig($x, True) >>>"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-459_Q14",
    "context": "Bob is not cold. Bob is furry. Bob is round. Charlie is big. Charlie is furry. Charlie is quiet. Charlie is red. Charlie is not white. Erin is big. Gary is big. Gary is quiet. If someone is red and cold then they are furry. All furry people are round. If Charlie is furry then Charlie is round. Big people are red. Round people are quiet. If someone is red then they are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nFacts:\nNotCold(Bob, True) ::: Bob is not cold.\nFurry(Bob, True) ::: Bob is furry.\nRound(Bob, True) ::: Bob is round.\nBig(Charlie, True) ::: Charlie is big.\nFurry(Charlie, True) ::: Charlie is furry.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nNotWhite(Charlie, True) ::: Charlie is not white.\nBig(Erin, True) ::: Erin is big.\nBig(Gary, True) ::: Gary is big.\nQuiet(Gary, True) ::: Gary is quiet.\nRules:\nFurry($x, True) >>> Round($x, True) ::: All furry people are round.\nFurry($x, True) >>> Round($x, True) ::: If Charlie is furry then Charlie is round.\nBig($x, True) >>> Red($x, True) ::: Big people are red.\nRound($x, True) >>> Quiet($x, True) ::: Round people are quiet.\nRed($x, True) >>> Cold($x, True) ::: If someone is red then they are cold.\nFurry($x, True) && Cold($x, True) >>> Red($x, True) ::: If someone is red and cold then they are furry.\nQuery:\nWhite(Gary, True) ::: Gary is white.\n------\nProblem:\nBob is furry. Bob is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-780_Q5",
    "context": "Anne is big. Anne is blue. Anne is kind. Anne is nice. Charlie is big. Charlie is blue. Charlie is nice. Dave is blue. Dave is cold. Dave is nice. Harry is blue. If Charlie is cold then Charlie is nice. If Harry is kind and Harry is nice then Harry is quiet. All blue things are cold. If something is quiet then it is kind. All kind things are big. Cold things are nice. If Harry is nice and Harry is big then Harry is kind. If something is nice then it is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nFacts:\nBig(Anne, True) ::: Anne is big.\nBlue(Anne, True) ::: Anne is blue.\nKind(Anne, True) ::: Anne is kind.\nNice(Anne, True) ::: Anne is nice.\nBig(Charlie, True) ::: Charlie is big.\nBlue(Charlie, True) ::: Charlie is blue.\nNice(Charlie, True) ::: Charlie is nice.\nBlue(Dave, True) ::: Dave is blue.\nCold(Dave, True) ::: Dave is cold.\nNice(Dave, True) ::: Dave is nice.\nBlue(Harry, True) ::: Harry is blue.\nRules:\nCharlie(Cold($x, True)) >>> Charlie(Nice($x, True)) ::: If Charlie is cold then Charlie is nice.\nHarry(Kind($x, True)) && Harry(Nice($x, True)) >>> Harry(Quiet($x, True)) ::: If Harry is kind and Harry is nice then Harry is quiet.\nBlue($x, True) >>> Cold($x, True) ::: All blue things are cold.\nQuiet($x, True) >>> Kind($x, True) ::: If something is quiet then it is kind.\nKind($x, True) >>> Big($x, True) ::: All kind things are big.\nCold($x, True) >>> Nice($x, True) ::: Cold things are nice.\nHarry(Nice($x, True)) && Harry(Big($x, True)) >>> Harry(Kind($x, True)) ::: If Harry is nice and Harry is big then Harry is kind.\nNice"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1258_Q18",
    "context": "Dave is blue. Erin is red. Erin is round. Erin is smart. Erin is white. Fiona is rough. Fiona is round. Harry is red. Harry is rough. Harry is smart. All smart, round people are blue. If Fiona is round then Fiona is red. If someone is red then they are young. If Harry is young and Harry is round then Harry is rough. If someone is young and smart then they are blue. White people are smart. Young people are round. If someone is young then they are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(Dave, True) ::: Dave is blue.\nRed(Erin, True) ::: Erin is red.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nWhite(Erin, True) ::: Erin is white.\nRough(Fiona, True) ::: Fiona is rough.\nRound(Fiona, True) ::: Fiona is round.\nSmart(Harry, True) ::: Harry is smart.\nRound(Harry, True) ::: Harry is round.\nRules:\nSmart($x, True) >>> Round($x, True) ::: All smart, round people are blue.\nRound(Erin, True) >>> Red(Erin, True) ::: If Fiona is round then Fiona is red.\nRed($x, True) >>> Young($x, True) ::: If someone is red then they are young.\nYoung($x, True) && Round($x, True) >>> Rough($x, True) ::: If Harry is young and Harry is round then Harry is rough.\nYoung($x, True) && Smart($x, True) >>> Blue($x, True) ::: If someone is young and smart then they are blue.\nWhite($x, True) >>> Smart($x, True) ::: White people are smart.\nRound($x, True) >>> Young($x, True) ::: Young people are round.\nYoung($x, True) >>> White($x, True) ::: If someone is young then they are white.\nQuery:\nRed(Dave, True) ::: Dave is red.\n------\nProblem:\nDave is blue. Erin is red. Erin is"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-173_Q11",
    "context": "The bald eagle eats the cow. The bald eagle is blue. The cat visits the bald eagle. The cat visits the rabbit. The cow is blue. The cow sees the rabbit. The rabbit eats the bald eagle. The rabbit is cold. The rabbit sees the cow. The rabbit visits the cat. If something visits the cow and it sees the cow then it visits the bald eagle. If something is nice then it is big. If something visits the bald eagle then it is nice. If something is cold and it visits the cow then the cow sees the cat. If something is round and it eats the bald eagle then it sees the bald eagle. If something visits the cat then it visits the rabbit. If something visits the rabbit and it sees the cow then it visits the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nVisits($x, $y) ::: Does x visit y?\nSees($x, $y) ::: Does x see y?\nIs($x, $y) ::: Is x y?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nFacts:\nEats(BaldEagle, Cow) ::: The bald eagle eats the cow.\nIs(BaldEagle, Blue) ::: The bald eagle is blue.\nVisits(Cat, BaldEagle) ::: The cat visits the bald eagle.\nVisits(Cat, Rabbit) ::: The cat visits the rabbit.\nIs(Cow, Blue) ::: The cow is blue.\nSees(Cow, Rabbit) ::: The cow sees the rabbit.\nEats(Rabbit, BaldEagle) ::: The rabbit eats the bald eagle.\nIs(Rabbit, Cold) ::: The rabbit is cold.\nSees(Rabbit, Cow) ::: The rabbit sees the cow.\nVisits(Rabbit, Cat) ::: The rabbit visits the cat.\nRules:\nVisits($x, $y) && Sees($x, $y) >>> Visits($x, BaldEagle) ::: If something visits the cow and it sees the cow then it visits the bald eagle.\nNice($x, True) >>> Big($x, True) ::: If something is nice then it is big.\nVisits($x, BaldEagle) >>> Nice($x, True) ::: If something visits the bald eagle then it is nice.\nCold($x, True) && Visits($x, Cow) >>> Cow($x, True) ::: If something is cold and it visits the cow then the cow sees the cat.\nRound($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-413_Q22",
    "context": "The bear is green. The bear is kind. The mouse needs the bear. The mouse visits the bear. The mouse visits the squirrel. The mouse visits the tiger. The squirrel chases the bear. The squirrel is cold. The squirrel is nice. The tiger is green. The tiger needs the bear. If something needs the mouse then it is kind. If the mouse is young then the mouse needs the bear. If something chases the bear then it needs the tiger. If something needs the squirrel and it visits the mouse then the mouse needs the squirrel. If something visits the squirrel then it needs the mouse. If something chases the squirrel and the squirrel is nice then it is young. If something visits the mouse and the mouse is green then it needs the tiger. If something is kind and it visits the tiger then the tiger visits the squirrel. If the bear needs the squirrel and the bear visits the tiger then the bear chases the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel chases the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nNeeds($x, $y, bool) ::: Does x need y?\nYoung($x, bool) ::: Is x young?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nGreen(Bear, True) ::: The bear is green.\nKind(Bear, True) ::: The bear is kind.\nNeeds(Mouse, Bear, True) ::: The mouse needs the bear.\nVisits(Mouse, Bear, True) ::: The mouse visits the bear.\nVisits(Mouse, Squirrel, True) ::: The mouse visits the squirrel.\nVisits(Mouse, Tiger, True) ::: The mouse visits the tiger.\nChases(Squirrel, Bear, True) ::: The squirrel chases the bear.\nCold(Squirrel, True) ::: The squirrel is cold.\nNice(Squirrel, True) ::: The squirrel is nice.\nGreen(Tiger, True) ::: The tiger is green.\nNeeds(Tiger, Bear, True) ::: The tiger needs the bear.\nRules:\nNeeds($x, Mouse, True) >>> Kind($x, True) ::: If something needs the mouse then it is kind.\nYoung(Mouse) >>> Needs(Mouse, Bear, True) ::: If the mouse is young then the mouse needs the bear.\nNeeds($x, Squirrel) && Visits($x, Mouse) >>> Needs(Mouse, Squirrel, True) ::: If something needs the squirrel and it visits the mouse then the mouse needs the squirrel.\nVisits($x, Squirrel) >>> Needs(Squirrel, $x, True) ::: If something visits the squirrel then it needs the mouse.\nCold($x) && Nice($x"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-977_Q22",
    "context": "The cat is young. The cat visits the mouse. The cow is cold. The cow likes the lion. The lion is cold. The lion likes the cat. The lion needs the mouse. The lion visits the mouse. The mouse is cold. The mouse is red. The mouse is young. The mouse likes the cat. The mouse needs the cat. The mouse needs the cow. If something needs the cat and the cat is red then it is blue. Blue things are red. If something likes the mouse and the mouse likes the cat then the cat is blue. If something is cold and red then it likes the mouse. If something needs the cow and it is cold then it is young. If something is nice then it visits the lion. If something needs the lion then it likes the cat. If something visits the cat and it likes the lion then the cat is blue. If something is cold and blue then it needs the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse needs the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nYoung(Cat, True) ::: The cat is young.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nCold(Cow, True) ::: The cow is cold.\nLikes(Cow, Lion, True) ::: The cow likes the lion.\nCold(Lion, True) ::: The lion is cold.\nLikes(Lion, Cat, True) ::: The lion likes the cat.\nNeeds(Lion, Mouse, True) ::: The lion needs the mouse.\nVisits(Lion, Mouse, True) ::: The lion visits the mouse.\nCold(Mouse, True) ::: The mouse is cold.\nRed(Mouse, True) ::: The mouse is red.\nYoung(Mouse, True) ::: The mouse is young.\nLikes(Mouse, Cat, True) ::: The mouse likes the cat.\nNeeds(Mouse, Cat, True) ::: The mouse needs the cat.\nNeeds(Mouse, Cow, True) ::: The mouse needs the cow.\nIfSomethingNeedsCatAndCatIsRedThenItIsBlue($x, $y, $z, bool) ::: If something needs the cat and the cat is red then it is blue.\nBlueThingsAreRed($x, $y, bool) ::: Blue things are red.\nIfSomethingLikesMouseAndMouseLikesCatThenCatIsBlue($x, $y, $z, bool) ::: If something likes the mouse and the mouse likes the cat then the cat is blue.\nIfSomethingIsColdAndRedThenItLikesMouse($x, $y, $z, bool) ::: If something is cold and red then it likes the mouse.\nIfSomethingNeedsCowAndItIsColdThenItIsYoung($x, $y, $z, bool) ::: If something needs the cow and it is cold then it is young.\nIfSomethingIsNiceThenItVisitsLion($x, $y, $z, bool) ::: If something is nice then it visits the lion.\nIfSomethingNeedsLionThenItLikesCat($x, $y, $z, bool) ::: If something needs the lion then it likes the cat.\nIfSomethingVisitsCatAndItLikesLionThenCatIsBlue($x, $y, $z, bool) ::: If something visits the cat and it likes the lion then the cat is blue.\nIfSomethingIsColdAndBlueThenItNeedsLion($x, $y, $z, bool) ::: If something is cold and blue then it needs the lion.\nQuery:\nNeeds(Mouse, Mouse, True) ::: The mouse needs the mouse.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-127_Q1",
    "context": "The bear is blue. The bear is green. The bear is red. The bear sees the rabbit. The cow is blue. The cow needs the tiger. The cow visits the rabbit. The rabbit is cold. The rabbit is nice. The rabbit needs the cow. The rabbit sees the cow. The rabbit sees the tiger. The tiger needs the bear. The tiger needs the rabbit. The tiger visits the bear. The tiger visits the cow. If something is green then it visits the tiger. If something sees the bear and it is cold then the bear is green. If the cow needs the rabbit and the rabbit needs the cow then the rabbit is red. If something is green then it needs the cow. If something visits the tiger then the tiger is red. If something needs the tiger and the tiger sees the cow then the cow needs the bear. If something sees the bear and it needs the bear then it sees the cow. If something visits the rabbit then the rabbit needs the tiger. If something needs the bear and the bear visits the tiger then it sees the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow visits the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBlue(Bear, True) ::: The bear is blue.\nGreen(Bear, True) ::: The bear is green.\nRed(Bear, True) ::: The bear is red.\nSees(Bear, Rabbit, True) ::: The bear sees the rabbit.\nBlue(Cow, True) ::: The cow is blue.\nNeeds(Cow, Tiger, True) ::: The cow needs the tiger.\nVisits(Cow, Rabbit, True) ::: The cow visits the rabbit.\nCold(Rabbit, True) ::: The rabbit is cold.\nNice(Rabbit, True) ::: The rabbit is nice.\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow.\nSees(Rabbit, Cow, True) ::: The rabbit sees the cow.\nSees(Rabbit, Tiger, True) ::: The rabbit sees the tiger.\nNeeds(Tiger, Bear, True) ::: The tiger needs the bear.\nNeeds(Tiger, Rabbit, True) ::: The tiger needs the rabbit.\nVisits(Tiger, Bear, True) ::: The tiger visits the bear.\nVisits(Tiger, Cow, True) ::: The tiger visits the cow.\nRules:\nGreen($x, True) >>> Visits($x, Tiger, True) ::: If something is green then it visits the tiger.\nSees(Bear, $x, True) && Cold($x, True) >>> Green($x, True) ::: If something sees the bear and it is cold then the bear is green.\nNeeds(Cow, Rabbit, True) && Needs(Rabbit, Cow, True) >>> Rabbit(Red, True) ::: If the cow needs the rabbit and the rabbit needs the cow then the rabbit is red.\nGreen($x, True) >>> Needs($x, Cow, True) ::: If something is green then it needs the cow.\nVisits($x, Tiger, True) >>> Red($x, True) ::: If something visits the tiger then the tiger is red.\nNeeds(Tiger, Bear, True) && Sees(Tiger, Cow, True) >>> Cow(Needs, Bear, True) ::: If something needs the tiger and the tiger sees the cow then the cow needs the bear.\nSees(Bear, $x) && Needs($x, Bear, True) >>> Sees($x, Cow, True) ::: If something sees the bear and it needs the bear then it sees the cow.\nVisits(Rab"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-613_Q12",
    "context": "Anne is blue. Anne is nice. Anne is quiet. Anne is rough. Fiona is big. Fiona is blue. Fiona is quiet. Gary is blue. Gary is quiet. Gary is rough. Gary is white. Harry is white. All big people are rough. All blue, nice people are big. If someone is rough then they are green. All nice people are big. Green people are blue. Rough, white people are nice. White people are nice. Green people are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nNice(Anne, True) ::: Anne is nice.\nQuiet(Anne, True) ::: Anne is quiet.\nRough(Anne, True) ::: Anne is rough.\nBig(Fiona, True) ::: Fiona is big.\nBlue(Fiona, True) ::: Fiona is blue.\nQuiet(Fiona, True) ::: Fiona is quiet.\nBlue(Gary, True) ::: Gary is blue.\nQuiet(Gary, True) ::: Gary is quiet.\nRough(Gary, True) ::: Gary is rough.\nWhite(Gary, True) ::: Gary is white.\nWhite(Harry, True) ::: Harry is white.\nRules:\nBig($x, True) >>> Rough($x, True) ::: All big people are rough.\nBlue($x, True) && Nice($x, True) >>> Big($x, True) ::: All blue, nice people are big.\nRough($x, True) >>> Green($x, True) ::: If someone is rough then they are green.\nNice($x, True) >>> Big($x, True) ::: All nice people are big.\nGreen($x, True) >>> Blue($x, True) ::: Green people are blue.\nRough($x, True) && White($x, True) >>> Nice($x, True) ::: Rough, white people are nice.\nWhite($x, True) >>> Nice($x, True) ::: White people are nice.\nGreen($x, True) >>> Nice($x, True) ::: Green people are nice.\nQuery:\nNot(Blue(Harry, True)) ::: Harry is not blue.\n------\nProblem:\nAnne is blue. Anne is nice. Anne is quiet. Anne is rough. Fiona is big. Fiona is blue. Fiona is quiet. Gary is blue. Gary is quiet. Gary is rough. Gary is white. Harry is white. All big people are rough. All blue, nice people are big. If someone is rough then they are green. All nice people are big. Green people are blue. Rough, white people are nice. White people are nice. Green people are nice.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is not blue.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nNice(Anne, True) ::: Anne is nice.\nQuiet(Anne, True) ::: Anne is quiet.\nRough("
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-908_Q13",
    "context": "Anne is quiet. Anne is red. Bob is kind. Bob is nice. Bob is quiet. Bob is not red. Bob is round. Charlie is big. Charlie is kind. Fiona is quiet. All round things are nice. All kind, red things are rough. If something is big then it is quiet. If something is rough then it is round. If Charlie is nice and Charlie is big then Charlie is not kind. If something is red then it is kind. If something is round and nice then it is not big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nRed(Anne, True) ::: Anne is red.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, True) ::: Bob is nice.\nQuite(Bob, True) ::: Bob is quiet.\nNot(Red(Bob, True)) ::: Bob is not red.\nRound(Bob, True) ::: Bob is round.\nBig(Charlie, True) ::: Charlie is big.\nKind(Charlie, True) ::: Charlie is kind.\nFiona(Quite, True) ::: Fiona is quiet.\nRules:\nRound($x, True) >>> Nice($x, True) ::: All round things are nice.\nKind($x, True) && Red($x, True) >>> Rough($x, True) ::: All kind, red things are rough.\nBig($x, True) >>> Quite($x, True) ::: If something is big then it is quiet.\nRough($x, True) >>> Round($x, True) ::: If something is rough then it is round.\nNot(Kind(Charlie, True)) && Big(Charlie, True) >>> Not(Kind(Charlie, True)) ::: If Charlie is nice and Charlie is big then Charlie is not kind.\nRed($x, True) >>> Kind($x, True) ::: If something is red then it is kind.\nNot(Round($x, True)) && Nice($x, True) >>> Not(Big($x, True)) ::: If something is round and nice then it is not big.\nQuery:\nNot(Rough(Fiona, True)) ::: Fiona is not rough.\n------\nProblem:\nAnne is quiet. Anne is red. Bob is kind. Bob is nice. Bob is quiet. Bob is not red. Bob is round. Charlie is big. Charlie is kind. Fiona is quiet. All round things are nice. All kind, red things are rough. If something is big then it is quiet. If something is rough then it is round. If Charlie is nice and Charlie is big then Charlie is not kind. If something is red then it is kind. If something is round and nice then it is not big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is not rough.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-40_Q24",
    "context": "The bald eagle is big. The bald eagle likes the cat. The bald eagle sees the squirrel. The cat chases the squirrel. The cat sees the squirrel. The squirrel likes the cat. The squirrel does not like the tiger. The tiger is big. The tiger is not young. The tiger sees the squirrel. If the tiger likes the bald eagle then the bald eagle sees the squirrel. If something likes the tiger and it does not chase the cat then the cat is not big. If something sees the cat then the cat is big. If something is big then it sees the bald eagle. If something sees the bald eagle then the bald eagle is young. Cold things are big. If something chases the tiger and it sees the cat then the tiger is big. If something is big then it chases the tiger. If something sees the bald eagle then it sees the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nLikes(BaldEagle, Cat, True) ::: The bald eagle likes the cat.\nSees(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nChases(Cat, Squirrel, True) ::: The cat chases the squirrel.\nSees(Cat, Squirrel, True) ::: The cat sees the squirrel.\nLikes(Squirrel, Cat, True) ::: The squirrel likes the cat.\nLikes(Squirrel, Tiger, False) ::: The squirrel does not like the tiger.\nBig(Tiger, True) ::: The tiger is big.\nYoung(Tiger, False) ::: The tiger is not young.\nSees(Tiger, Squirrel, True) ::: The tiger sees the squirrel.\nIf(Likes(Tiger, BaldEagle), Sees(BaldEagle, Squirrel)) ::: If the tiger likes the bald eagle then the bald eagle sees the squirrel.\nIf(Likes($x, Tiger) && Not(Chases($x, Cat)), Not(Big(Cat))) ::: If something likes the tiger and it does not chase the cat then the cat is not big.\nIf(Sees($x, Cat), Big(Cat)) ::: If something sees the cat then the cat is big.\nIf(Big($x), Sees($x, BaldEagle)) ::: If something is big then it sees the bald eagle.\nIf(Sees($x, BaldEagle), Young($x)) ::: If something sees the bald eagle then the bald eagle is young.\nCold($x, True) >>> Big($x, True) ::: Cold things are big.\nIf(Chases($x, Tiger) && Sees($x, Cat), Big(Tiger)) ::: If something chases the tiger and it sees the cat then the tiger is big.\nIf(Big($x), Chases($x, Tiger)) ::: If something is big then it chases the tiger.\nIf(Sees($x, BaldEagle), Sees($x, Cat)) ::: If something sees the bald eagle then it sees the cat.\nQuery:\nRough(Squirrel, True) ::: The squirrel is rough.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is quiet. The cat is rough. The cat is white. The cat is young. The dog is furry. The dog is green. The dog is quiet. The dog is rough. The dog is white. The dog is young. The tiger is furry."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-940_Q5",
    "context": "The bald eagle is kind. The bald eagle is not red. The bald eagle likes the dog. The dog needs the lion. The lion does not need the bald eagle. The mouse likes the dog. The mouse does not see the dog. If someone needs the mouse then the mouse does not see the bald eagle. If someone needs the dog then the dog needs the lion. If someone is rough then they see the mouse. If someone sees the mouse then the mouse is kind. If someone needs the lion then they do not see the bald eagle. If someone sees the dog then they need the mouse. All kind people are rough. If someone sees the mouse then they like the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle sees the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nRough($x, bool) ::: Is x rough?\nFacts:\nKind(BaldEagle, True) ::: The bald eagle is kind.\nRed(BaldEagle, False) ::: The bald eagle is not red.\nLikes(BaldEagle, Dog, True) ::: The bald eagle likes the dog.\nNeeds(Dog, Lion, True) ::: The dog needs the lion.\nNeeds(Lion, BaldEagle, False) ::: The lion does not need the bald eagle.\nLikes(Mouse, Dog, True) ::: The mouse likes the dog.\nSees(Mouse, Dog, False) ::: The mouse does not see the dog.\nRules:\nNeeds($x, $y, True) >>> Needs($y, $x, True) ::: If someone needs the mouse then the mouse does not see the bald eagle.\nNeeds($x, $y, True) >>> Likes($y, $x, True) ::: If someone needs the dog then the dog needs the lion.\nSees($x, $y, True) >>> Rough($x, True) ::: If someone sees the mouse then they are rough.\nRough($x, True) >>> Sees($x, Mouse, True) ::: If someone sees the mouse then the mouse is kind.\nNeeds($x, $y, True) >>> Sees($y, BaldEagle, False) ::: If someone needs the lion then they do not see the bald eagle.\nSees($x, $y, True) >>> Likes($x, Lion, True) ::: If someone sees the dog then they need the mouse.\nKind($x, True) >>> Rough($x, True) ::: All kind people are rough.\nLikes($x, $y, True) >>> Sees($x, Lion, True) ::: If someone sees the mouse then they like the lion.\nQuery:\nSees(BaldEagle, Mouse, True) ::: The bald eagle sees the mouse.\n------\nProblem:\nThe dog is furry. The dog is not green. The dog is not red. The dog is not white. The dog is not young. The dog is not quiet. The dog is not rough. The dog is not kind. The dog is not seen by the mouse. The dog is not seen by the lion. The dog is not seen by the bald eagle. The dog is not liked by the mouse. The dog is not liked by the lion. The dog is not liked by the bald eagle. The dog is not needed by the mouse. The dog is not needed by the lion. The dog is not needed by the bald eagle. The dog is not quiet. The dog is not rough. The dog is not kind. The dog is not seen by the mouse. The dog is not seen by the lion. The dog is not seen by the bald eagle. The dog is not"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-745_Q8",
    "context": "The dog is green. The dog is not kind. The lion is big. The lion is round. The lion needs the dog. The mouse is big. The mouse likes the dog. The mouse does not need the rabbit. The mouse visits the dog. The rabbit is kind. The rabbit visits the dog. If someone needs the dog then they visit the lion. If someone needs the mouse then they are kind. If someone is round and they like the rabbit then the rabbit visits the mouse. If someone visits the rabbit then the rabbit visits the mouse. If someone likes the dog then the dog visits the rabbit. If the mouse visits the lion and the mouse needs the dog then the dog needs the lion. If the rabbit needs the lion then the lion needs the mouse. If someone visits the mouse then the mouse needs the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not need the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nGreen(Dog, True) ::: The dog is green.\nNot(Kind(Dog, True)) ::: The dog is not kind.\nBig(Lion, True) ::: The lion is big.\nRound(Lion, True) ::: The lion is round.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nBig(Mouse, True) ::: The mouse is big.\nLikes(Mouse, Dog, True) ::: The mouse likes the dog.\nNot(Needs(Mouse, Rabbit, True)) ::: The mouse does not need the rabbit.\nVisits(Mouse, Dog, True) ::: The mouse visits the dog.\nKind(Rabbit, True) ::: The rabbit is kind.\nVisits(Rabbit, Dog, True) ::: The rabbit visits the dog.\nRules:\nIf someone needs the dog then they visit the lion. ::: If someone needs the dog then they visit the lion.\nIf someone needs the mouse then they are kind. ::: If someone needs the mouse then they are kind.\nIf someone is round and they like the rabbit then the rabbit visits the mouse. ::: If someone is round and they like the rabbit then the rabbit visits the mouse.\nIf someone visits the rabbit then the rabbit visits the mouse. ::: If someone visits the rabbit then the rabbit visits the mouse.\nIf the mouse visits the lion and the mouse needs the dog then the dog needs the lion. ::: If the mouse visits the lion and the mouse needs the dog then the dog needs the lion.\nIf the rabbit needs the lion then the lion needs the mouse. ::: If the rabbit needs the lion then the lion needs the mouse.\nIf someone visits the mouse then the mouse needs the dog. ::: If someone visits the mouse then the mouse needs the dog.\nQuery:\nNot(Needs(Mouse, Dog, True)) ::: The mouse does not need the dog.\n------\nProblem:\nThe dog is green. The dog is not kind. The lion is big. The lion is round. The lion needs the dog. The mouse is big. The mouse likes the dog. The mouse does not need the rabbit. The mouse visits the dog. The rabbit is kind. The rabbit visits the dog. If someone needs the dog then they visit the lion. If someone needs the mouse then they are kind. If someone is round and they like the rabbit then the rabbit visits the mouse. If someone visits the rabbit then the rabbit visits the mouse. If the mouse visits the lion and the mouse needs the dog then the dog needs the lion. If the rabbit needs the lion then the lion needs the mouse. If someone visits the mouse then the mouse needs the dog.\nQuestion:\nBased on the above information, is the following"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-970_Q8",
    "context": "Anne is blue. Anne is young. Dave is cold. Dave is furry. Erin is kind. Erin is red. Fiona is blue. Fiona is kind. Fiona is red. Fiona is young. If Dave is furry and Dave is cold then Dave is young. All nice, cold people are red. Red, young people are blue. If Anne is furry then Anne is young. If someone is young then they are kind. All kind, cold people are nice. If Anne is blue then Anne is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRules:\nYoung($x, True) >>> Furry($x, True) ::: Young people are furry.\nYoung($x, True) >>> Blue($x, True) ::: Red, young people are blue.\nFurry($x, True) && Cold($x, True) >>> Young($x, True) ::: If Dave is furry and Dave is cold then Dave is young.\nNice($x, True) >>> Cold($x, True) ::: All nice, cold people are red.\nYoung($x, True) >>> Kind($x, True) ::: If Anne is furry then Anne is young.\nYoung($x, True) >>> Kind($x, True) ::: If someone is young then they are kind.\nKind($x, True) >>> Cold($x, True) ::: All kind, cold people are nice.\nBlue($x, True) >>> Young($x, True) ::: If Anne is blue then Anne is young.\nQuery:\nNot(Nice(Dave, True)) ::: Dave is not nice.\n------\nProblem:\nAnne is blue. Anne is young. Dave is cold. Dave is furry. Erin is kind. Erin is red. Fiona is blue. Fiona is kind. Fiona is red. Fiona is young. If Dave is furry and Dave is cold then Dave is young. All nice, cold people are red. Red, young people are blue. If Anne is furry then Anne is young. If someone is young then they are kind. All kind, cold people are nice. If Anne is blue then Anne is young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Dave is not nice.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRules:\nYoung($x, True) >>> Furry($x, True) ::: Young people are furry.\nYoung($x, True) >>> Blue($x, True) ::: Red, young people are blue.\nFurry($x, True) && Cold($x, True) >>> Young($x, True) ::: If Dave is furry and Dave is cold then Dave is young.\nNice($x, True) >>> Cold($x, True) ::: All nice, cold people are red.\nYoung($x, True) >>> Kind($x, True) ::: If Anne is furry then Anne is young.\nYoung($x, True) >>> Kind($x, True) ::: If someone is young then they are kind.\nKind($x, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-354_Q18",
    "context": "Anne is not blue. Anne is green. Anne is kind. Charlie is white. Gary is green. Gary is kind. Gary is rough. Gary is round. Gary is not white. Harry is kind. Harry is quiet. Harry is white. White people are green. If someone is green and white then they are quiet. Blue, quiet people are round. All quiet people are blue. If someone is blue and not round then they are kind. If someone is quiet and round then they are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nFacts:\nNotBlue(Anne, True) ::: Anne is not blue.\nGreen(Anne, True) ::: Anne is green.\nKind(Anne, True) ::: Anne is kind.\nWhite(Charlie, True) ::: Charlie is white.\nGreen(Gary, True) ::: Gary is green.\nKind(Gary, True) ::: Gary is kind.\nRough(Gary, True) ::: Gary is rough.\nRound(Gary, True) ::: Gary is round.\nNotWhite(Gary, True) ::: Gary is not white.\nKind(Harry, True) ::: Harry is kind.\nQuiet(Harry, True) ::: Harry is quiet.\nWhite(Harry, True) ::: Harry is white.\nRules:\nWhite($x, True) >>> Green($x, True) ::: White people are green.\nGreen($x, True) && White($x, True) >>> Quiet($x, True) ::: If someone is green and white then they are quiet.\nBlue($x, True) && Quiet($x, True) >>> Round($x, True) ::: Blue, quiet people are round.\nNotRound($x, True) >>> Kind($x, True) ::: If someone is not round then they are kind.\nQuiet($x, True) && Round($x, True) >>> Kind($x, True) ::: If someone is quiet and round then they are kind.\nQuery:\nRough(Harry, True) ::: Harry is rough.\n------\nProblem:\nAnne is not blue. Anne is green. Anne is kind. Charlie is white. Gary is green. Gary is kind. Gary is rough. Gary is round. Gary is not white. Harry is kind. Harry is quiet. Harry is white. White people are green. If someone is green and white then they are quiet. Blue, quiet people are round. All quiet people are blue. If someone is blue and not round then they are kind. If someone is quiet and round then they are kind.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is rough.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nFacts:\nNotBlue(Anne, True) ::: Anne is not blue.\nGreen(Anne, True) ::: Anne is green.\nKind(Anne, True) ::: Anne is kind.\nWhite(Charlie, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-977_Q3",
    "context": "The cat is young. The cat visits the mouse. The cow is cold. The cow likes the lion. The lion is cold. The lion likes the cat. The lion needs the mouse. The lion visits the mouse. The mouse is cold. The mouse is red. The mouse is young. The mouse likes the cat. The mouse needs the cat. The mouse needs the cow. If something needs the cat and the cat is red then it is blue. Blue things are red. If something likes the mouse and the mouse likes the cat then the cat is blue. If something is cold and red then it likes the mouse. If something needs the cow and it is cold then it is young. If something is nice then it visits the lion. If something needs the lion then it likes the cat. If something visits the cat and it likes the lion then the cat is blue. If something is cold and blue then it needs the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse likes the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nYoung(Cat, True) ::: The cat is young.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nCold(Cow, True) ::: The cow is cold.\nLikes(Cow, Lion, True) ::: The cow likes the lion.\nCold(Lion, True) ::: The lion is cold.\nLikes(Lion, Cat, True) ::: The lion likes the cat.\nNeeds(Lion, Mouse, True) ::: The lion needs the mouse.\nVisits(Lion, Mouse, True) ::: The lion visits the mouse.\nCold(Mouse, True) ::: The mouse is cold.\nRed(Mouse, True) ::: The mouse is red.\nYoung(Mouse, True) ::: The mouse is young.\nLikes(Mouse, Cat, True) ::: The mouse likes the cat.\nNeeds(Mouse, Cat, True) ::: The mouse needs the cat.\nNeeds(Mouse, Cow, True) ::: The mouse needs the cow.\nIfSomethingNeedsTheCatAndTheCatIsRedThenItIsBlue($x, $y, $z, True) ::: If something needs the cat and the cat is red then it is blue.\nBlueThingsAreRed($x, $y, True) ::: Blue things are red.\nIfSomethingLikesTheMouseAndTheMouseLikesTheCatThenTheCatIsBlue($x, $y, $z, True) ::: If something likes the mouse and the mouse likes the cat then the cat is blue.\nIfSomethingIsColdAndRedThenItLikesTheMouse($x, $y, $z, True) ::: If something is cold and red then it likes the mouse.\nIfSomethingNeedsTheCowAndItIsColdThenItIsYoung($x, $y, $z, True) ::: If something needs the cow and it is cold then it is young.\nIfSomethingIsNiceThenItVisitsTheLion($x, $y, $z, True) ::: If something is nice then it visits the lion.\nIfSomethingNeedsTheLionThenItLikesTheCat($x, $y, $z, True) ::: If something needs the lion then it likes the cat.\nIfSomethingVisitsTheCatAndItLikesTheLionThenTheCatIsBlue($x, $y, $z, True) ::: If something visits the cat and it likes the lion then the cat is blue.\nIfSomethingIsColdAndBlueThenItNeedsTheLion($x, $y, $z, True) ::: If something is cold and blue then it needs the lion.\nQuery:\nLikes(Mouse"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1026_Q13",
    "context": "The cat is green. The cat is nice. The cat likes the squirrel. The rabbit likes the tiger. The rabbit does not need the cat. The rabbit needs the squirrel. The squirrel is cold. The squirrel needs the cat. The squirrel needs the rabbit. The tiger chases the cat. The tiger chases the rabbit. The tiger is kind. The tiger is nice. The tiger is young. The tiger likes the cat. The tiger needs the cat. If something chases the squirrel then the squirrel needs the tiger. If something needs the tiger then it likes the rabbit. If something chases the cat and it likes the rabbit then the rabbit chases the squirrel. If something chases the rabbit then the rabbit does not need the tiger. If something is kind and it chases the rabbit then it needs the tiger. If something is kind then it does not like the squirrel. If something likes the squirrel and it does not need the tiger then the squirrel likes the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not like the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Cat, True) ::: The cat is green.\nNice(Cat, True) ::: The cat is nice.\nLikes(Cat, Squirrel, True) ::: The cat likes the squirrel.\nLikes(Rabbit, Tiger, True) ::: The rabbit likes the tiger.\nNeeds(Rabbit, Cat, False) ::: The rabbit does not need the cat.\nNeeds(Rabbit, Squirrel, True) ::: The rabbit needs the squirrel.\nCold(Squirrel, True) ::: The squirrel is cold.\nNeeds(Squirrel, Cat, True) ::: The squirrel needs the cat.\nNeeds(Squirrel, Rabbit, True) ::: The squirrel needs the rabbit.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nKind(Tiger, True) ::: The tiger is kind.\nNice(Tiger, True) ::: The tiger is nice.\nYoung(Tiger, True) ::: The tiger is young.\nLikes(Tiger, Cat, True) ::: The tiger likes the cat.\nNeeds(Tiger, Cat, True) ::: The tiger needs the cat.\nRules:\nIf something chases the squirrel then the squirrel needs the tiger. ::: If something chases the squirrel then the squirrel needs the tiger.\nIf something needs the tiger then it likes the rabbit. ::: If something needs the tiger then it likes the rabbit.\nIf something chases the cat and it likes the rabbit then the rabbit chases the squirrel. ::: If something chases the cat and it likes the rabbit then the rabbit chases the squirrel.\nIf something chases the rabbit then the rabbit does not need the tiger. ::: If something chases the rabbit then the rabbit does not need the tiger.\nIf something is kind and it chases the rabbit then it needs the tiger. ::: If something is kind and it chases the rabbit then it needs the tiger.\nIf something is kind then it does not like the squirrel. ::: If something is kind then it does not like the squirrel.\nIf something likes the squirrel and it does not need the tiger then the squirrel likes the tiger. ::: If something likes the squirrel and it does not need the tiger then the squirrel likes the tiger.\nQuery:\nLikes(Rabbit, Rabbit, False) ::: The rabbit does not like the rabbit.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-861_Q8",
    "context": "The cat needs the dog. The dog is kind. The dog needs the rabbit. The rabbit eats the dog. The rabbit is green. The tiger chases the rabbit. The tiger is big. If something is nice and it eats the tiger then it needs the dog. If something chases the cat then it eats the cat. If the dog chases the tiger then the tiger needs the rabbit. If the rabbit chases the tiger then the rabbit chases the cat. If something chases the cat then the cat is kind. If something eats the dog then it chases the cat. If something is rough then it eats the dog. If something is kind then it is rough. If something eats the rabbit and the rabbit is big then it is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nKind($x, bool) ::: Is x kind?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nFacts:\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nKind(Dog, True) ::: The dog is kind.\nNeeds(Dog, Rabbit, True) ::: The dog needs the rabbit.\nEats(Rabbit, Dog, True) ::: The rabbit eats the dog.\nGreen(Rabbit, True) ::: The rabbit is green.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nBig(Tiger, True) ::: The tiger is big.\nRules:\nNice($x, True) && Eats($x, Tiger, True) >>> Needs($x, Dog, True) ::: If something is nice and it eats the tiger then it needs the dog.\nChases($x, Cat) >>> Eats($x, Cat, True) ::: If something chases the cat then it eats the cat.\nChases(Dog, Tiger) >>> Needs(Tiger, Rabbit, True) ::: If the dog chases the tiger then the tiger needs the rabbit.\nChases(Rabbit, Tiger) >>> Chases(Rabbit, Cat) ::: If the rabbit chases the tiger then the rabbit chases the cat.\nChases(Cat, $x) >>> Kind($x, True) ::: If something chases the cat then the cat is kind.\nEats(Dog, $x) >>> Chases($x, Cat) ::: If something eats the dog then it chases the cat.\nRough($x, True) >>> Eats(Dog, $x) ::: If something is rough then it eats the dog.\nKind($x, True) >>> Rough($x, True) ::: If something is kind then it is rough.\nEats(Rabbit, Dog, True) && Green(Rabbit, True) && Big(Rabbit, True) >>> Nice(Rabbit, True) ::: If something eats the rabbit and the rabbit is big then it is kind.\nQuery:\nRough(Cat, False) ::: The cat is not rough.\n------\nProblem:\nThe cat needs the dog. The dog is kind. The dog needs the rabbit. The rabbit eats the dog. The rabbit is green. The tiger chases the rabbit. The tiger is big. If something is nice and it eats the tiger then it needs the dog. If something chases the cat then it eats the cat. If the dog chases the tiger then the tiger needs the rabbit. If the rabbit chases the tiger then the rabbit chases the cat. If something chases the"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-616_Q11",
    "context": "The bald eagle is big. The bald eagle likes the cow. The bald eagle sees the rabbit. The cow is big. The cow sees the bald eagle. The dog is big. The dog is young. The dog likes the bald eagle. The rabbit sees the bald eagle. The rabbit visits the bald eagle. If the bald eagle sees the rabbit then the rabbit is big. If something likes the bald eagle then it is blue. If something likes the rabbit and the rabbit visits the cow then the cow is young. If something visits the rabbit then it is round. If something is round and it sees the cow then the cow sees the rabbit. If something is big then it visits the cow. If something sees the rabbit then the rabbit visits the bald eagle. If something is blue then it likes the rabbit. If something likes the cow and the cow is young then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle likes the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nLikes(BaldEagle, Cow, True) ::: The bald eagle likes the cow.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nBig(Cow, True) ::: The cow is big.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nBig(Dog, True) ::: The dog is big.\nYoung(Dog, True) ::: The dog is young.\nLikes(Dog, BaldEagle, True) ::: The dog likes the bald eagle.\nSees(Rabbit, BaldEagle, True) ::: The rabbit sees the bald eagle.\nVisits(Rabbit, BaldEagle, True) ::: The rabbit visits the bald eagle.\nRules:\nBig($x, True) >>> Visits($x, Cow, True) ::: If the bald eagle sees the rabbit then the rabbit is big.\nLikes($x, BaldEagle, True) >>> Blue($x, True) ::: If something likes the bald eagle then it is blue.\nLikes($x, Rabbit) && Visits($x, Cow, True) >>> Young($x, True) ::: If something likes the rabbit and the rabbit visits the cow then the cow is young.\nVisits($x, Rabbit, True) >>> Round($x, True) ::: If something visits the rabbit then it is round.\nVisits($x, Rabbit, True) && Sees($x, Cow, True) >>> Sees($x, Rabbit, True) ::: If something is round and it sees the cow then the cow sees the rabbit.\nBig($x, True) >>> Visits($x, Cow, True) ::: If something sees the rabbit then the rabbit visits the bald eagle.\nLikes($x, Cow, True) && Young($x, True) >>> Blue($x, True) ::: If something likes the cow and the cow is young then it is blue.\nLikes($x, Rabbit, True) >>> Blue($x, True) ::: If something likes the rabbit then it is blue.\nSees($x, Rabbit, True) >>> Visits($x, BaldEagle, True) ::: If something sees the rabbit then the rabbit visits the bald eagle.\nRules:\nBig($x, True) >>> Visits($x, Cow, True) ::: If the bald eagle sees the rabbit then the rabbit is big.\nLikes($x, BaldEagle, True) >>> Blue($x, True) ::: If something likes the bald eagle then it is blue.\nLikes($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-262_Q17",
    "context": "The cat is not big. The cat is kind. The cat sees the rabbit. The cow chases the rabbit. The cow chases the squirrel. The cow sees the squirrel. The cow visits the cat. The cow visits the squirrel. The rabbit chases the cat. The rabbit chases the cow. The rabbit is green. The rabbit visits the squirrel. The squirrel is blue. The squirrel is kind. The squirrel sees the rabbit. The squirrel visits the rabbit. If something visits the cow then it chases the rabbit. If something chases the cat then the cat chases the cow. If something chases the cow and the cow sees the squirrel then the squirrel is big. If something chases the cat then it visits the rabbit. If something visits the rabbit then it sees the cow. If something chases the cat and it sees the cow then the cow chases the cat. If something sees the rabbit and it chases the cat then the rabbit chases the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not chase the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nSees($x, $y, bool) ::: Does x see y?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nNotBig(Cat, True) ::: The cat is not big.\nKind(Cat, True) ::: The cat is kind.\nSees(Cat, Rabbit, True) ::: The cat sees the rabbit.\nChases(Cow, Rabbit, True) ::: The cow chases the rabbit.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nVisits(Cow, Cat, True) ::: The cow visits the cat.\nVisits(Cow, Squirrel, True) ::: The cow visits the squirrel.\nChases(Rabbit, Cat, True) ::: The rabbit chases the cat.\nChases(Rabbit, Cow, True) ::: The rabbit chases the cow.\nGreen(Rabbit, True) ::: The rabbit is green.\nVisits(Rabbit, Squirrel, True) ::: The rabbit visits the squirrel.\nBlue(Squirrel, True) ::: The squirrel is blue.\nKind(Squirrel, True) ::: The squirrel is kind.\nSees(Squirrel, Rabbit, True) ::: The squirrel sees the rabbit.\nVisits(Squirrel, Rabbit, True) ::: The squirrel visits the rabbit.\nRules:\nNotBig(x, True) >>> Kind(x, True) ::: If something is not big then it is kind.\nSees(x, y, True) >>> Chases(x, y, True) ::: If something sees the cow then it chases the rabbit.\nChases(x, y, True) >>> Visits(x, z, True) ::: If something chases the cat then it visits the rabbit.\nChases(x, y, True) && Sees(x, z, True) >>> Visits(z, y, True) ::: If something chases the cat and it sees the cow then the cow chases the cat.\nSees(x, y, True) && Chases(x, z, True) >>> Chases(z, x, True) ::: If something sees the rabbit and it chases the cat then the rabbit chases the squirrel.\nQuery:\nChases(Cat, Rabbit, True) ::: The cat does not chase the rabbit.\n------\nProblem:\nThe cat is not big. The cat is kind. The cat sees the rabbit. The cow chases the rabbit. The cow chases the squirrel. The cow sees the squirrel. The cow visits the cat. The cow visits the squirrel. The rabbit chases the cat. The rabbit chases the cow. The rabbit is green. The rabbit visits the squirrel. The squirrel"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-735_Q3",
    "context": "Bob is big. Bob is nice. Bob is smart. Charlie is nice. Dave is nice. Erin is big. Erin is blue. Erin is furry. Erin is quiet. Erin is round. Erin is smart. All nice things are big. All furry things are blue. Blue, furry things are quiet. If something is round and nice then it is blue. If Bob is round then Bob is blue. Big, quiet things are furry. If something is blue and furry then it is smart. If Charlie is nice and Charlie is big then Charlie is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(Bob, True) ::: Bob is big.\nNice(Bob, True) ::: Bob is nice.\nSmart(Bob, True) ::: Bob is smart.\nNice(Charlie, True) ::: Charlie is nice.\nNice(Dave, True) ::: Dave is nice.\nBig(Erin, True) ::: Erin is big.\nBlue(Erin, True) ::: Erin is blue.\nFurry(Erin, True) ::: Erin is furry.\nQuiet(Erin, True) ::: Erin is quiet.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nRules:\nNice($x, True) >>> Big($x, True) ::: All nice things are big.\nFurry($x, True) >>> Blue($x, True) ::: All furry things are blue.\nBlue($x, True) && Furry($x, True) >>> Quiet($x, True) ::: Blue, furry things are quiet.\nRound($x, True) && Nice($x, True) >>> Blue($x, True) ::: If something is round and nice then it is blue.\nBig($x, True) >>> Round($x, True) ::: If Bob is round then Bob is blue.\nBig($x, True) && Quiet($x, True) >>> Furry($x, True) ::: Big, quiet things are furry.\nFurry($x, True) && Blue($x, True) >>> Smart($x, True) ::: If something is blue and furry then it is smart.\nNice($x, True) && Big($x, True) >>> Quiet($x, True) ::: If Charlie is nice and Charlie is big then Charlie is quiet.\nQuery:\nBig(Dave, True) ::: Dave is big.\n------\nProblem:\nBob is big. Bob is nice. Bob is smart. Charlie is nice. Dave is nice. Erin is big. Erin is blue. Erin is furry. Erin is quiet. Erin is round. Erin is smart. All nice things are big. All furry things are blue. Blue, furry things are quiet. If something is round and nice then it is blue. If Bob is round then Bob is blue. Big, quiet things are furry. If something is blue and furry then it is smart. If Charlie is nice and Charlie is big then Charlie is quiet.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is blue.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1304_Q8",
    "context": "Anne is quiet. Anne is rough. Erin is nice. Erin is rough. Erin is round. Fiona is big. Fiona is furry. Fiona is nice. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is round. Harry is red. Harry is rough. All nice, big people are quiet. Quiet people are round. Rough, big people are furry. Big people are rough. If someone is furry then they are nice. If someone is rough then they are big. If Harry is round then Harry is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nRough(Anne, True) ::: Anne is rough.\nNice(Erin, True) ::: Erin is nice.\nRough(Erin, True) ::: Erin is rough.\nRound(Erin, True) ::: Erin is round.\nBig(Fiona, True) ::: Fiona is big.\nFurry(Fiona, True) ::: Fiona is furry.\nNice(Fiona, True) ::: Fiona is nice.\nQuite(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nRough(Fiona, True) ::: Fiona is rough.\nRound(Fiona, True) ::: Fiona is round.\nRed(Harry, True) ::: Harry is red.\nRough(Harry, True) ::: Harry is rough.\nRules:\nNice($x, True) >>> Big($x, True) ::: All nice, big people are quiet.\nQuite($x, True) >>> Round($x, True) ::: Quiet people are round.\nRough($x, True) >>> Big($x, True) ::: Rough, big people are furry.\nBig($x, True) >>> Rough($x, True) ::: Big people are rough.\nFurry($x, True) >>> Nice($x, True) ::: If someone is furry then they are nice.\nRough($x, True) >>> Big($x, True) ::: If someone is rough then they are big.\nIf(Harry, Round($x, True), Big($x, True)) ::: If Harry is round then Harry is big.\nQuery:\nNice(Harry, False) ::: Harry is not nice.\n------\nProblem:\nAnne is quiet. Anne is rough. Erin is nice. Erin is rough. Erin is round. Fiona is big. Fiona is furry. Fiona is nice. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is round. Harry is red. Harry is rough. All nice, big people are quiet. Quiet people are round. Rough, big people are furry. Big people are rough. If someone is furry then they are nice. If someone is rough then they are big. If Harry is round then Harry is big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is not nice.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFurry($x, bool"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-264_Q20",
    "context": "The bald eagle likes the cat. The bald eagle visits the rabbit. The cat needs the bald eagle. The cat needs the cow. The cat visits the rabbit. The cow likes the bald eagle. The cow likes the rabbit. The cow visits the bald eagle. The rabbit is green. The rabbit is red. The rabbit needs the cat. If someone needs the bald eagle and they are red then they visit the cow. If someone needs the bald eagle then the bald eagle needs the rabbit. If someone needs the cat then they like the bald eagle. If someone needs the bald eagle then they are red. If someone is green then they need the bald eagle. If someone likes the bald eagle and they need the bald eagle then the bald eagle visits the rabbit. If the cat likes the bald eagle then the bald eagle visits the cow. If someone visits the cow then they need the cat. If the cow is rough and the cow is nice then the cow is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit visits the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nLikes(BaldEagle, Cat, True) ::: The bald eagle likes the cat.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nNeeds(Cat, BaldEagle, True) ::: The cat needs the bald eagle.\nNeeds(Cat, Cow, True) ::: The cat needs the cow.\nVisits(Cat, Rabbit, True) ::: The cat visits the rabbit.\nLikes(Cow, BaldEagle, True) ::: The cow likes the bald eagle.\nLikes(Cow, Rabbit, True) ::: The cow likes the rabbit.\nVisits(Cow, BaldEagle, True) ::: The cow visits the bald eagle.\nIs(Rabbit, Green, True) ::: The rabbit is green.\nIs(Rabbit, Red, True) ::: The rabbit is red.\nNeeds(Rabbit, Cat, True) ::: The rabbit needs the cat.\nRules:\nIf someone needs the bald eagle and they are red then they visit the cow ::: If someone needs the bald eagle and they are red then they visit the cow.\nIf someone needs the bald eagle then the bald eagle needs the rabbit ::: If someone needs the bald eagle then the bald eagle needs the rabbit.\nIf someone needs the cat then they like the bald eagle ::: If someone needs the cat then they like the bald eagle.\nIf someone needs the bald eagle then they are red ::: If someone needs the bald eagle then they are red.\nIf someone is green then they need the bald eagle ::: If someone is green then they need the bald eagle.\nIf someone likes the bald eagle and they need the bald eagle then the bald eagle visits the rabbit ::: If someone likes the bald eagle and they need the bald eagle then the bald eagle visits the rabbit.\nIf the cat likes the bald eagle then the bald eagle visits the cow ::: If the cat likes the bald eagle then the bald eagle visits the cow.\nIf someone visits the cow then they need the cat ::: If someone visits the cow then they need the cat.\nIf the cow is rough and the cow is nice then the cow is red ::: If the cow is rough and the cow is nice then the cow is red.\nQuery:\nVisits(Rabbit, Cat, True) ::: The rabbit visits the cat.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The cat is young. The cow is furry. The cow is green. The cow is red. The cow is rough. The"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1066_Q2",
    "context": "Bob is quiet. Bob is white. Dave is kind. Dave is red. Dave is young. Fiona is red. Fiona is round. Gary is quiet. Gary is red. Gary is round. White things are round. If something is kind and white then it is green. All young things are kind. All round things are young. All quiet, kind things are white. Quiet, green things are red. Young, quiet things are kind. All quiet, red things are kind. If Gary is young then Gary is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nWhite(Bob, True) ::: Bob is white.\nKind(Dave, True) ::: Dave is kind.\nRed(Dave, True) ::: Dave is red.\nYoung(Dave, True) ::: Dave is young.\nRed(Fiona, True) ::: Fiona is red.\nRound(Fiona, True) ::: Fiona is round.\nQuite(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nRound(Gary, True) ::: Gary is round.\nRules:\nWhite($x, True) >>> Round($x, True) ::: White things are round.\nKind($x, True) && White($x, True) >>> Green($x, True) ::: If something is kind and white then it is green.\nYoung($x, True) >>> Kind($x, True) ::: All young things are kind.\nYoung($x, True) >>> Round($x, True) ::: All round things are young.\nQuite($x, True) && Kind($x, True) >>> White($x, True) ::: All quiet, kind things are white.\nQuite($x, True) && Green($x, True) >>> Red($x, True) ::: Quiet, green things are red.\nYoung($x, True) && Quite($x, True) >>> Kind($x, True) ::: Young, quiet things are kind.\nQuite($x, True) && Red($x, True) >>> Kind($x, True) ::: All quiet, red things are kind.\nIf Gary is young then Gary is round ::: If Gary is young then Gary is round.\nQuery:\nNot(Quite(Gary, True)) ::: Gary is not quiet.\n------\nProblem:\nBob is quiet. Bob is white. Dave is kind. Dave is red. Dave is young. Fiona is red. Fiona is round. Gary is quiet. Gary is red. Gary is round. White things are round. If something is kind and white then it is green. All young things are kind. All round things are young. All quiet, kind things are white. Quiet, green things are red. Young, quiet things are kind. All quiet, red things are kind. If Gary is young then Gary is round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is not quiet.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-866_Q19",
    "context": "Anne is furry. Anne is rough. Anne is round. Anne is smart. Anne is white. Dave is furry. Erin is big. Erin is white. Gary is quiet. Gary is round. Gary is smart. Gary is white. Rough, furry things are smart. If something is rough and round then it is smart. If Dave is smart then Dave is white. If something is furry then it is rough. Round, rough things are smart. White, furry things are round. All white, big things are round. All rough, big things are smart. If something is round then it is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nRound(Anne, True) ::: Anne is round.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nFurry(Dave, True) ::: Dave is furry.\nBig(Erin, True) ::: Erin is big.\nWhite(Erin, True) ::: Erin is white.\nQuiet(Gary, True) ::: Gary is quiet.\nRound(Gary, True) ::: Gary is round.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nRules:\nFurry($x, True) >>> Rough($x, True) ::: If something is furry then it is rough.\nRound($x, True) >>> Rough($x, True) ::: Round, rough things are smart.\nWhite($x, True) >>> Furry($x, True) ::: White, furry things are round.\nBig($x, True) >>> Round($x, True) ::: All white, big things are round.\nBig($x, True) >>> Rough($x, True) ::: All rough, big things are smart.\nRound($x, True) >>> Big($x, True) ::: If something is round then it is big.\nSmart($x, True) >>> White($x, True) ::: If Dave is smart then Dave is white.\nSmart($x, True) >>> Rough($x, True) ::: Rough, furry things are smart.\nQuery:\nQuiet(Erin, False) ::: Erin is not quiet.\n------\nProblem:\nAnne is furry. Anne is rough. Anne is round. Anne is smart. Anne is white. Dave is furry. Erin is big. Erin is white. Gary is quiet. Gary is round. Gary is smart. Gary is white. Rough, furry things are smart. If something is rough and round then it is smart. If Dave is smart then Dave is white. If something is furry then it is rough. Round, rough things are smart. White, furry things are round. All white, big things are round. All rough, big things are smart. If something is round then it is big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not quiet.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-604_Q12",
    "context": "The cat chases the dog. The cat chases the mouse. The cat chases the tiger. The cat eats the dog. The dog is big. The dog sees the cat. The mouse does not eat the cat. The mouse eats the tiger. The mouse does not see the tiger. The tiger eats the dog. The tiger is nice. If something is young and it eats the tiger then it eats the dog. If something sees the mouse and it eats the mouse then the mouse sees the tiger. If something sees the mouse then it is big. If something chases the dog then the dog chases the cat. If something chases the dog then it chases the cat. If something chases the tiger and the tiger eats the cat then the cat sees the mouse. If something sees the dog and it chases the tiger then the tiger chases the dog. If the tiger is green and the tiger is big then the tiger sees the dog. If something chases the cat then it sees the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not see the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Cat, Dog, True) ::: The cat chases the dog.\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nChases(Cat, Tiger, True) ::: The cat chases the tiger.\nEats(Cat, Dog, True) ::: The cat eats the dog.\nBig(Dog, True) ::: The dog is big.\nSees(Cat, Dog, True) ::: The cat sees the dog.\nDoesNotEat(Mouse, Cat, True) ::: The mouse does not eat the cat.\nEats(Mouse, Tiger, True) ::: The mouse eats the tiger.\nDoesNotSee(Mouse, Tiger, True) ::: The mouse does not see the tiger.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nNice(Tiger, True) ::: The tiger is nice.\nRules:\nYoung($x, True) >>> Eats($x, Tiger, True) >>> Eats($x, Dog, True) ::: If something is young and it eats the tiger then it eats the dog.\nSees($x, Mouse) >>> Eats($x, Mouse) >>> Sees($x, Tiger) ::: If something sees the mouse and it eats the mouse then the mouse sees the tiger.\nSees($x, Mouse) >>> Big($x, True) ::: If something sees the mouse then it is big.\nChases($x, Dog) >>> Chases($x, Cat) ::: If something chases the dog then the dog chases the cat.\nChases($x, Dog) >>> Chases($x, Cat) ::: If something chases the dog then it chases the cat.\nChases($x, Tiger) >>> Eats($Tiger, Cat) >>> Sees($Cat, Mouse) ::: If something chases the tiger and the tiger eats the cat then the cat sees the mouse.\nSees($x, Dog) >>> Chases($x, Tiger) ::: If the tiger is green and the tiger is big then the tiger sees the dog.\nChases($x, Cat) >>> Sees($x, Dog) ::: If something chases the cat then it sees the dog.\nQuery:\nDoesNotSee(Tiger, Dog, True) ::: The tiger does not see the dog.\n------\nProblem:\nThe cat chases the dog. The cat chases the mouse. The cat chases the tiger. The cat eats the dog. The dog is big. The dog sees the cat. The mouse does not eat the cat. The mouse eats the tiger. The mouse does not see the tiger. The tiger eats the dog. The tiger is nice"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-523_Q1",
    "context": "Anne is green. Anne is young. Charlie is blue. Charlie is green. Charlie is white. Dave is white. Erin is white. If Dave is kind and Dave is white then Dave is blue. If someone is white then they are nice. If someone is white then they are nice. All nice, green people are young. If someone is green then they are quiet. Nice people are kind. If Dave is blue then Dave is white. If Anne is nice and Anne is not white then Anne is green. If Dave is white and Dave is blue then Dave is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nYoung(Anne, True) ::: Anne is young.\nBlue(Charlie, True) ::: Charlie is blue.\nGreen(Charlie, True) ::: Charlie is green.\nWhite(Charlie, True) ::: Charlie is white.\nWhite(Dave, True) ::: Dave is white.\nWhite(Erin, True) ::: Erin is white.\nRules:\nYoung($x, True) >>> Green($x, True) ::: All nice, green people are young.\nGreen($x, True) >>> Quiet($x, True) ::: If someone is green then they are quiet.\nWhite($x, True) >>> Nice($x, True) ::: If someone is white then they are nice.\nWhite($x, True) >>> Nice($x, True) ::: If someone is white then they are nice.\nNice($x, True) >>> Kind($x, True) ::: Nice people are kind.\nWhite($x, True) >>> Kind($x, True) ::: If Dave is kind and Dave is white then Dave is blue.\nWhite($x, True) >>> Kind($x, True) ::: If Dave is kind and Dave is white then Dave is blue.\nGreen($x, True) >>> White($x, True) ::: If Dave is white and Dave is blue then Dave is green.\nGreen($x, True) >>> White($x, True) ::: If Dave is white and Dave is blue then Dave is green.\nAnne(Nice($x, True) && Not(White($x, True))) >>> Green($x, True) ::: If Anne is nice and Anne is not white then Anne is green.\nQuery:\nYoung(Anne, True) ::: Anne is young.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-818_Q2",
    "context": "Charlie is young. Erin is blue. Erin is not kind. Fiona is blue. Fiona is white. Gary is blue. Gary is kind. Furry, nice things are white. If something is young and blue then it is smart. All blue, smart things are furry. All smart, white things are furry. Young things are nice. If Fiona is smart and Fiona is young then Fiona is not furry. If Erin is kind then Erin is furry. If Gary is smart and Gary is white then Gary is not kind. If something is nice then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Erin, True) ::: Erin is blue.\nNot(Kind(Erin, True)) ::: Erin is not kind.\nBlue(Fiona, True) ::: Fiona is blue.\nWhite(Fiona, True) ::: Fiona is white.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nWhite(Gary, True) ::: Gary is white.\nNice(Furry, True) ::: Furry, nice things are white.\nYoung($x, True) >>> Smart($x, True) ::: If something is young and blue then it is smart.\nBlue($x, True) >>> Smart($x, True) ::: All blue, smart things are furry.\nSmart($x, True) >>> Furry($x, True) ::: All smart, white things are furry.\nYoung($x, True) >>> Nice($x, True) ::: Young things are nice.\nNot(Furry(Fiona, True)) >>> Fiona is smart && Fiona is young ::: If Fiona is smart and Fiona is young then Fiona is not furry.\nKind(Erin, True) >>> Furry(Erin, True) ::: If Erin is kind then Erin is furry.\nNot(Kind(Gary, True)) >>> Smart(Gary, True) && White(Gary, True) ::: If Gary is smart and Gary is white then Gary is not kind.\nBlue($x, True) >>> Nice($x, True) ::: If something is nice then it is blue.\nQuery:\nNot(White(Fiona, True)) ::: Fiona is not white."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-345_Q13",
    "context": "The cat is big. The cat is cold. The cat likes the cow. The cat visits the lion. The cow is blue. The cow likes the lion. The cow does not visit the lion. The lion chases the cat. The lion is not big. The lion is rough. The lion visits the cat. The squirrel likes the cow. If something visits the squirrel then it likes the cat. If something visits the cat then it likes the cat. If something likes the squirrel and it is big then the squirrel likes the lion. If something likes the cow and it visits the cow then the cow visits the cat. If something likes the cat then it chases the squirrel. If something chases the lion and the lion is not cold then it visits the cow. If something chases the lion then the lion chases the cow. If something chases the squirrel then the squirrel visits the cat. If the cow is rough then the cow chases the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not like the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Cat, True) ::: The cat is big.\nCold(Cat, True) ::: The cat is cold.\nLikes(Cat, Cow, True) ::: The cat likes the cow.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nBlue(Cow, True) ::: The cow is blue.\nLikes(Cow, Lion, True) ::: The cow likes the lion.\nVisits(Cow, Lion, False) ::: The cow does not visit the lion.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nNot(Big(Lion, True)) ::: The lion is not big.\nRough(Lion, True) ::: The lion is rough.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nIf(Visits(Squirrel, $x, True), Likes($x, Cat, True)) ::: If something visits the squirrel then it likes the cat.\nIf(Visits($x, Cat, True), Likes($x, Cat, True)) ::: If something visits the cat then it likes the cat.\nIf(Likes(Squirrel, $x, True), Big($x, True), Likes(Squirrel, Lion, True)) ::: If something likes the squirrel and it is big then the squirrel likes the lion.\nIf(Likes(Cow, $x, True), Visits($x, Cow, True), Visits(Cow, Cat, True)) ::: If something likes the cow and it visits the cow then the cow visits the cat."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-305_Q4",
    "context": "Anne is quiet. Bob is not rough. Gary is big. Gary is kind. Gary is rough. Gary is young. Harry is young. All big people are furry. Young people are furry. All quiet, kind people are furry. If Harry is furry and Harry is quiet then Harry is round. Rough, kind people are quiet. Young, rough people are kind. All quiet, furry people are round. Furry people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nNot(Rough(Bob, True)) ::: Bob is not rough.\nBig(Gary, True) ::: Gary is big.\nKind(Gary, True) ::: Gary is kind.\nRough(Gary, True) ::: Gary is rough.\nYoung(Gary, True) ::: Gary is young.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBig($x, True) >>> Furry($x, True) ::: All big people are furry.\nYoung($x, True) >>> Furry($x, True) ::: Young people are furry.\nQuite($x, True) && Kind($x, True) >>> Furry($x, True) ::: All quiet, kind people are furry.\nHarry(Furry, True) && Harry(Quite, True) >>> Harry(Round, True) ::: If Harry is furry and Harry is quiet then Harry is round.\nRough($x, True) && Kind($x, True) >>> Quite($x, True) ::: Rough, kind people are quiet.\nYoung($x, True) && Rough($x, True) >>> Kind($x, True) ::: Young, rough people are kind.\nFurry($x, True) >>> Round($x, True) ::: All quiet, furry people are round.\nFurry($x, True) >>> Rough($x, True) ::: Furry people are rough.\nQuery:\nNot(Furry(Harry, True)) ::: Harry is not furry.\n------\nProblem:\nAnne is quiet. Bob is not rough. Gary is big. Gary is kind. Gary is rough. Gary is young."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1003_Q2",
    "context": "Anne is big. Anne is blue. Anne is rough. Bob is cold. Bob is green. Bob is rough. Bob is white. Dave is blue. Dave is white. Harry is young. If Bob is big then Bob is white. Young people are white. Cold, young people are rough. If Anne is green and Anne is young then Anne is white. White, big people are blue. All blue people are green. If someone is young and white then they are big. Blue people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nBlue(Anne, True) ::: Anne is blue.\nRough(Anne, True) ::: Anne is rough.\nCold(Bob, True) ::: Bob is cold.\nGreen(Bob, True) ::: Bob is green.\nRough(Bob, True) ::: Bob is rough.\nWhite(Bob, True) ::: Bob is white.\nBlue(Dave, True) ::: Dave is blue.\nWhite(Dave, True) ::: Dave is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBig(Bob, True) >>> White(Bob, True) ::: If Bob is big then Bob is white.\nYoung($x, True) >>> White($x, True) ::: Young people are white.\nYoung($x, True) && Cold($x, True) >>> Rough($x, True) ::: Cold, young people are rough.\nGreen($x, True) && Young($x, True) >>> White($x, True) ::: If Anne is green and Anne is young then Anne is white.\nWhite($x, True) && Big($x, True) >>> Blue($x, True) ::: White, big people are blue.\nBlue($x, True) >>> Green($x, True) ::: All blue people are green.\nYoung($x, True) && White($x, True) >>> Big($x, True) ::: If someone is young and white then they are big.\nBlue($x, True) >>> Cold($x, True) ::: Blue people are cold.\nQuery:\nNot(Big(Anne, True)) ::: Anne is not big.\n------\nProblem:\nAnne is big. Anne is blue."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-327_Q5",
    "context": "Bob is quiet. Bob is smart. Charlie is quiet. Charlie is not white. Fiona is young. Harry is big. Harry is nice. If something is quiet and white then it is green. All smart things are green. Green things are white. All smart, young things are big. White things are not young. If something is smart and not young then it is nice. If Bob is green and Bob is nice then Bob is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nSmart(Bob, True) ::: Bob is smart.\nQuite(Charlie, True) ::: Charlie is quiet.\nWhite(Charlie, False) ::: Charlie is not white.\nYoung(Fiona, True) ::: Fiona is young.\nBig(Harry, True) ::: Harry is big.\nNice(Harry, True) ::: Harry is nice.\nRules:\nQuite($x, True) && White($x, True) >>> Green($x, True) ::: If something is quiet and white then it is green.\nSmart($x, True) >>> Green($x, True) ::: All smart things are green.\nGreen($x, True) >>> White($x, True) ::: Green things are white.\nSmart($x, True) && Young($x, True) >>> Big($x, True) ::: All smart, young things are big.\nWhite($x, True) >>> Young($x, False) ::: White things are not young.\nSmart($x, True) && Not(Young($x, True)) >>> Nice($x, True) ::: If something is smart and not young then it is nice.\nSmart($x, True) && Green($x, True) && Nice($x, True) >>> Big($x, True) ::: If Bob is green and Bob is nice then Bob is big.\nQuery:\nWhite(Bob, True) ::: Bob is white.\n------\nProblem:\nBob is quiet. Bob is smart. Charlie is quiet. Charlie is not white. Fiona is young. Harry is big. Harry is nice. If something is quiet and white then it is green. All smart things are green. Green things are white. All smart, young"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-327_Q13",
    "context": "Anne is cold. Anne is furry. Anne is rough. Anne is smart. Anne is white. Bob is nice. Bob is rough. Erin is cold. Erin is furry. Erin is nice. Erin is rough. Erin is smart. Erin is white. Erin is young. Fiona is cold. Fiona is furry. All smart things are cold. If Bob is young and Bob is cold then Bob is furry. Young things are cold. If Fiona is rough and Fiona is cold then Fiona is smart. Cold, furry things are white. All rough, nice things are young. If something is white and furry then it is smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nNice(Bob, True) ::: Bob is nice.\nRough(Bob, True) ::: Bob is rough.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nNice(Erin, True) ::: Erin is nice.\nRough(Erin, True) ::: Erin is rough.\nSmart(Erin, True) ::: Erin is smart.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nCold(Fiona, True) ::: Fiona is cold.\nFurry(Fiona, True) ::: Fiona is furry.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nYoung($x, True) >>> Cold($x, True) ::: Young things are cold.\nSmart($x, True) >>> Cold($x, True) ::: All smart things are cold.\nCold($x, True) && Furry($x, True) >>> White($x, True) ::: Cold, furry things are white.\nRough($x, True) && Nice($x, True) >>> Young($x, True) ::: All rough, nice things are young.\nFurry($x, True) && Smart($x, True) >>> White($x,"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-276_Q4",
    "context": "Bob is kind. Bob is round. Charlie is rough. Erin is green. Erin is rough. Erin is round. Gary is cold. All rough people are green. If someone is green then they are white. If someone is white then they are not big. If someone is green and not big then they are kind. If someone is kind and not big then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nWhite($x, bool) ::: Is x white?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nRound(Bob, True) ::: Bob is round.\nRough(Charlie, True) ::: Charlie is rough.\nGreen(Erin, True) ::: Erin is green.\nRough(Erin, True) ::: Erin is rough.\nRound(Erin, True) ::: Erin is round.\nCold(Gary, True) ::: Gary is cold.\nRules:\nRough($x, True) >>> Green($x, True) ::: All rough people are green.\nGreen($x, True) >>> White($x, True) ::: If someone is green then they are white.\nWhite($x, True) >>> Not(Big($x, True)) ::: If someone is white then they are not big.\nGreen($x, True) && Not(Big($x, True)) >>> Kind($x, True) ::: If someone is green and not big then they are kind.\nKind($x, True) && Not(Big($x, True)) >>> Round($x, True) ::: If someone is kind and not big then they are round.\nQuery:\nNot(White(Erin, True)) ::: Erin is not white.\n------\nProblem:\nBob is kind. Bob is round. Charlie is rough. Erin is green. Erin is rough. Erin is round. Gary is cold. All rough people are green. If someone is green then they are white. If someone is white then they are not big. If someone is green and not big then they are kind. If someone is kind and not big then they are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not white.\n###\nPredicates:\nKind($x, bool) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-305_Q9",
    "context": "Bob is big. Bob is blue. Bob is cold. Bob is furry. Bob is green. Bob is round. Dave is round. Erin is red. Fiona is cold. Fiona is green. All green things are blue. If something is round and cold then it is red. Blue, big things are round. If something is furry and blue then it is round. All red, green things are furry. If something is round then it is red. If Bob is furry and Bob is red then Bob is round. Red things are big. All blue things are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nFurry(Bob, True) ::: Bob is furry.\nGreen(Bob, True) ::: Bob is green.\nRound(Bob, True) ::: Bob is round.\nRound(Dave, True) ::: Dave is round.\nRed(Erin, True) ::: Erin is red.\nCold(Fiona, True) ::: Fiona is cold.\nGreen(Fiona, True) ::: Fiona is green.\nRules:\nGreen($x, True) >>> Blue($x, True) ::: All green things are blue.\nRound($x, True) && Cold($x, True) >>> Red($x, True) ::: If something is round and cold then it is red.\nBlue($x, True) >>> Big($x, True) ::: Blue, big things are round.\nFurry($x, True) && Blue($x, True) >>> Round($x, True) ::: If something is furry and blue then it is round.\nRed($x, True) >>> Green($x, True) ::: All red, green things are furry.\nRound($x, True) >>> Red($x, True) ::: If something is round then it is red.\nFurry($x, True) && Red($x, True) && Bob($x, True) >>> Round($x, True) ::: If Bob is furry and Bob is red then Bob is round.\nRed($x, True) >>> Big($x, True) ::: Red things are big.\nFurry($x, True) >>> Blue($x, True) ::: All blue things are fur"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-999_Q1",
    "context": "Anne is big. Anne is furry. Bob is blue. Bob is green. Bob is young. Charlie is furry. Charlie is green. Charlie is red. Gary is furry. Gary is green. Gary is young. Furry, green things are blue. All big things are green. Red, furry things are blue. All big, blue things are nice. If Bob is nice and Bob is big then Bob is red. If Gary is furry then Gary is blue. All nice, big things are young. All nice things are young. Blue, young things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nFurry(Anne, True) ::: Anne is furry.\nBlue(Bob, True) ::: Bob is blue.\nGreen(Bob, True) ::: Bob is green.\nYoung(Bob, True) ::: Bob is young.\nFurry(Charlie, True) ::: Charlie is furry.\nGreen(Charlie, True) ::: Charlie is green.\nRed(Charlie, True) ::: Charlie is red.\nFurry(Gary, True) ::: Gary is furry.\nGreen(Gary, True) ::: Gary is green.\nYoung(Gary, True) ::: Gary is young.\nRules:\nFurry($x, True) && Green($x, True) >>> Blue($x, True) ::: Furry, green things are blue.\nBig($x, True) >>> Green($x, True) ::: All big things are green.\nFurry($x, True) && Red($x, True) >>> Blue($x, True) ::: Red, furry things are blue.\nBig($x, True) && Blue($x, True) >>> Nice($x, True) ::: All big, blue things are nice.\nBlue($x, True) && Young($x, True) >>> Red($x, True) ::: Blue, young things are red.\nNice($x, True) && Big($x, True) && Blue($x, True) >>> Young($x, True) ::: If Bob is nice and Bob is big then Bob is red.\nFurry($x, True) >>> Blue($x, True) ::: If Gary is furry then Gary is blue.\nNice($x, True) && Big($x, True"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-281_Q15",
    "context": "The bear eats the cow. The cat chases the bear. The cat eats the bear. The cat eats the tiger. The cat is green. The cat is kind. The cat is rough. The cat sees the bear. The cat sees the tiger. The cow eats the bear. The cow eats the tiger. The cow is green. The cow sees the cat. The tiger chases the bear. The tiger chases the cat. The tiger chases the cow. If someone chases the bear and the bear is cold then they eat the cat. If someone chases the bear and the bear chases the tiger then the bear sees the tiger. If the cat chases the bear and the cat sees the tiger then the bear chases the tiger. If someone chases the tiger and they are green then the tiger chases the cow. Nice, kind people are cold. If someone chases the bear then the bear chases the cat. If someone chases the cat then they are nice. If someone is nice then they are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFacts:\nEats(Bear, Cow, True) ::: The bear eats the cow.\nChases(Cat, Bear, True) ::: The cat chases the bear.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nEats(Cat, Tiger, True) ::: The cat eats the tiger.\nIs(Cat, Green, True) ::: The cat is green.\nIs(Cat, Kind, True) ::: The cat is kind.\nIs(Cat, Rough, True) ::: The cat is rough.\nSees(Cat, Bear, True) ::: The cat sees the bear.\nSees(Cat, Tiger, True) ::: The cat sees the tiger.\nEats(Cow, Bear, True) ::: The cow eats the bear.\nEats(Cow, Tiger, True) ::: The cow eats the tiger.\nIs(Cow, Green, True) ::: The cow is green.\nSees(Cow, Cat, True) ::: The cow sees the cat.\nChases(Tiger, Bear, True) ::: The tiger chases the bear.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nChases(Tiger, Cow, True) ::: The tiger chases the cow.\nIf(Chases(Bear, $x, True), Cold($x, True)) ::: If someone chases the bear and the bear is cold then they eat the cat.\nIf(Chases(Bear, $x, True), Chases($x, Tiger, True)) ::: If someone chases the bear and the bear chases the tiger then the bear sees the tiger.\nIf(Chases(Cat, Bear, True), Chases(Cat, Tiger, True)) ::: If the cat chases the bear and the cat sees the tiger then the bear chases the tiger.\nIf(Chases(Tiger, $x, True), Is($x, Green, True)) ::: If someone chases the tiger and they are green then the tiger chases the cow.\nIs(Nice, Kind, True) ::: Nice, kind people are cold.\nIf(Chases(Bear, $x, True), Chases($x, Cat, True)) ::: If someone chases the bear then the bear chases the cat.\nIf(Chases(Cat, $x, True), Is($x, Nice, True)) ::: If someone chases the cat then they are nice.\nIf(Is($x, Nice, True), Is($x, Kind, True)) ::: If someone is nice then they are kind.\nQuery:\nNot(Cold(Cat, True)) ::: The cat is not cold.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-266_Q3",
    "context": "The bald eagle eats the cow. The bald eagle does not eat the dog. The bald eagle is rough. The cow is round. The cow sees the bald eagle. The cow does not see the dog. The cow visits the bald eagle. The cow visits the lion. The dog is rough. The lion is young. The lion does not see the bald eagle. The lion sees the cow. If someone is green and they eat the bald eagle then the bald eagle is not rough. If someone is big and they do not see the bald eagle then the bald eagle is rough. If someone is big then they visit the dog. If someone eats the lion and they are big then the lion eats the dog. If someone visits the dog then the dog eats the cow. If someone is rough and they eat the cow then they are young. If the lion eats the cow then the lion visits the bald eagle. If someone is big and they see the lion then they are green. If someone is young then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(BaldEagle, Cow, True) ::: The bald eagle eats the cow.\nEats(BaldEagle, Dog, False) ::: The bald eagle does not eat the dog.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nRound(Cow, True) ::: The cow is round.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nSees(Cow, Dog, False) ::: The cow does not see the dog.\nVisits(Cow, BaldEagle, True) ::: The cow visits the bald eagle.\nVisits(Cow, Lion, True) ::: The cow visits the lion.\nRough(Dog, True) ::: The dog is rough.\nYoung(Lion, True) ::: The lion is young.\nSees(Lion, BaldEagle, False) ::: The lion does not see the bald eagle.\nSees(Lion, Cow, True) ::: The lion sees the cow.\nRules:\nGreen($x, True) && Eats($x, BaldEagle, True) >>> BaldEagle(Rough, False) ::: If someone is green and they eat the bald eagle then the bald eagle is not rough.\nBig($x, True) && DoesNotSee($x, BaldEagle, True) >>> BaldEagle(Rough, True) ::: If someone is big and they do not see the bald eagle then the bald eagle is rough.\nBig($x, True) >>> Visits($x, Dog, True) ::: If someone is big then they visit the dog.\nEats($x, Lion, True) && Big($x, True) >>> Lion(Eats, Dog, True) ::: If someone eats the lion and they are big then the lion eats the dog.\nVisits($x, Dog, True) && Eats($x, Cow, True) >>> Cow(Eats, True) ::: If someone visits the dog then the dog eats the cow.\nRough($x, True) && Eats($x, Cow, True) >>> Young($x, True) ::: If someone is rough and they eat the cow then they are young.\nLion(Eats, Cow, True) >>> Lion(Visits, BaldEagle, True) ::: If the lion eats the cow then the lion visits the bald eagle.\nBig($x, True) && Sees($x, Lion, True) >>> Green($x, True) ::: If someone is big and they see the lion then they are green.\nYoung($x, True) >>> Big($x, True) ::: If someone is young then they are big.\nQuery:\nBig(Lion, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-280_Q8",
    "context": "The bald eagle needs the mouse. The bald eagle sees the mouse. The cow is red. The cow is rough. The cow sees the bald eagle. The cow sees the mouse. The dog eats the bald eagle. The dog is cold. The dog is rough. The dog needs the bald eagle. The mouse eats the bald eagle. The mouse eats the dog. The mouse is red. The mouse is rough. The mouse is young. The mouse sees the cow. If something is young then it needs the dog. If something eats the cow then the cow is kind. If something is young then it sees the bald eagle. If something is cold and it needs the dog then it eats the mouse. If something needs the bald eagle and it is red then it is young. If something eats the mouse then it needs the mouse. If something eats the bald eagle then it is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not need the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nFacts:\nNeeds(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nSees(BaldEagle, Mouse, True) ::: The bald eagle sees the mouse.\nRed(Cow, True) ::: The cow is red.\nRough(Cow, True) ::: The cow is rough.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nSees(Cow, Mouse, True) ::: The cow sees the mouse.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nCold(Dog, True) ::: The dog is cold.\nRough(Dog, True) ::: The dog is rough.\nNeeds(Dog, BaldEagle, True) ::: The dog needs the bald eagle.\nEats(Mouse, BaldEagle, True) ::: The mouse eats the bald eagle.\nEats(Mouse, Dog, True) ::: The mouse eats the dog.\nRed(Mouse, True) ::: The mouse is red.\nRough(Mouse, True) ::: The mouse is rough.\nYoung(Mouse, True) ::: The mouse is young.\nSees(Mouse, Cow, True) ::: The mouse sees the cow.\nRules:\nYoung($x, True) >>> Needs($x, Dog, True) ::: If something is young then it needs the dog.\nSees($x, BaldEagle, True) >>> Kind($x, True) ::: If something sees the bald eagle then the cow is kind.\nYoung($x, True) >>> Sees($x, BaldEagle, True) ::: If something is young then it sees the bald eagle.\nCold($x, True) && Needs($x, Dog, True) >>> Eats($x, Mouse, True) ::: If something is cold and it needs the dog then it eats the mouse.\nNeeds($x, BaldEagle, True) && Red($x, True) >>> Young($x, True) ::: If something needs the bald eagle and it is red then it is young.\nEats($x, Mouse, True) >>> Needs($x, Mouse, True) ::: If something eats the mouse then it needs the mouse.\nEats($x, BaldEagle, True) >>> Red($x, True) ::: If something eats the bald eagle then it is red.\nQuery:\nNeeds(Dog, Dog, True) ::: The dog does not need the dog.\n------\nProblem:\nThe dog is furry. The dog is green. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is red. The dog is kind. The dog is cold. The dog is rough. The dog is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-804_Q12",
    "context": "Anne is kind. Charlie is not big. Charlie is not green. Charlie is white. Erin is big. Erin is green. Erin is white. Fiona is green. Fiona is kind. Fiona is quiet. Fiona is red. Fiona is white. If Erin is big and Erin is red then Erin is kind. All rough things are green. If something is kind then it is green. Quiet, green things are big. If something is rough and green then it is red. If something is green then it is rough. If Erin is red then Erin is green. All red, rough things are quiet. If something is quiet and not red then it is not white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nRough($x, bool) ::: Is x rough?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nNot(Big(Charlie, True)) ::: Charlie is not big.\nNot(Green(Charlie, True)) ::: Charlie is not green.\nWhite(Charlie, True) ::: Charlie is white.\nBig(Erin, True) ::: Erin is big.\nGreen(Erin, True) ::: Erin is green.\nWhite(Erin, True) ::: Erin is white.\nGreen(Fiona, True) ::: Fiona is green.\nKind(Fiona, True) ::: Fiona is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nWhite(Fiona, True) ::: Fiona is white.\nRules:\nIf Erin is big and Erin is red then Erin is kind ::: Erin is big and Erin is red\nAll rough things are green ::: Rough($x, True) >>> Green($x, True)\nIf something is kind then it is green ::: Kind($x, True) >>> Green($x, True)\nQuiet, green things are big ::: Quiet($x, True) && Green($x, True) >>> Big($x, True)\nIf something is rough and green then it is red ::: Rough($x, True) && Green($x, True) >>> Red($x, True)\nIf something is green then it is rough ::: Green($x, True) >>> Rough($x, True)\nIf Erin is red then Erin is green ::: Red($x, True) >>> Green($x, True)\nAll red, rough things are quiet ::: Red($x, True) && Rough($x, True) >>> Quiet($x, True)\nIf something is quiet and not red then it is not white ::: Quiet($x, True) && Not(Red($x, True)) >>> Not(White($x, True))\nQuery:\nNot(Big(Anne, True)) ::: Anne is not big.\n------\nProblem:\nAnne is kind. Anne is not big. Anne is not green. Anne is white. Charlie is not big. Charlie is not green. Charlie is not red. Charlie is white. Erin is big. Erin is green. Erin is red. Erin is white. Fiona is big. Fiona is green. Fiona is red. Fiona is white. If Erin is big and Erin is red then Erin is kind. All rough things are green. If something is kind then it is green. Quiet, green things are big. If something is rough and green then it is red. If something is green then it is rough. If Erin is red then Erin is green. All red, rough things are quiet. If something is quiet and not red then it is not white.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Anne is not white.\n###"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-487_Q5",
    "context": "The cat chases the lion. The cat is rough. The cat is young. The cat needs the lion. The cat needs the rabbit. The dog is green. The dog is young. The dog likes the cat. The lion is blue. The lion is green. The rabbit chases the lion. The rabbit is blue. The rabbit is rough. The rabbit likes the dog. The rabbit needs the dog. The rabbit needs the lion. If someone chases the lion then they are round. If the lion needs the rabbit and the rabbit chases the dog then the lion likes the dog. If someone is round and they chase the lion then they need the cat. If someone needs the cat and they chase the dog then they like the rabbit. If someone chases the lion and the lion is blue then the lion is round. If someone chases the rabbit then they are rough. If someone is rough and they like the rabbit then the rabbit is young. If the rabbit chases the cat and the cat needs the lion then the rabbit is young. If someone is round and they need the cat then they chase the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat needs the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(Cat, Lion, True) ::: The cat chases the lion.\nRough(Cat, True) ::: The cat is rough.\nYoung(Cat, True) ::: The cat is young.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nNeeds(Cat, Rabbit, True) ::: The cat needs the rabbit.\nGreen(Dog, True) ::: The dog is green.\nYoung(Dog, True) ::: The dog is young.\nLikes(Dog, Cat, True) ::: The dog likes the cat.\nBlue(Lion, True) ::: The lion is blue.\nGreen(Lion, True) ::: The lion is green.\nChases(Rabbit, Lion, True) ::: The rabbit chases the lion.\nBlue(Rabbit, True) ::: The rabbit is blue.\nRough(Rabbit, True) ::: The rabbit is rough.\nLikes(Rabbit, Dog, True) ::: The rabbit likes the dog.\nNeeds(Rabbit, Dog, True) ::: The rabbit needs the dog.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nRound(Lion, True) >>> Chases($x, Lion, True) ::: If someone chases the lion then they are round.\nLikes(Cat, Dog, True) >>> Needs(Lion, Rabbit, True) ::: If the lion needs the rabbit and the rabbit chases the dog then the lion likes the dog.\nRound(Lion, True) >>> Needs(Cat, Dog, True) ::: If someone is round and they need the cat then they chase the dog.\nNeeds(Cat, Lion, True) >>> Likes(Rabbit, Dog, True) ::: If someone needs the cat and they chase the dog then they like the rabbit.\nChases(Lion, Rabbit, True) >>> Blue(Lion, True) ::: If someone chases the lion and the lion is blue then the lion is round.\nChases(Rabbit, Cat, True) >>> Needs(Cat, Lion, True) ::: If someone chases the rabbit then they are rough.\nRough(Rabbit, True) >>> Likes(Dog, Rabbit, True) ::: If someone is rough and they like the rabbit then the rabbit is young.\nChases(Cat, Rabbit, True) >>> Needs(Cat, Lion, True) ::: If the rabbit chases the cat and the cat needs the lion then the rabbit is young.\nRound(Cat, True) >>> Needs(Cat, Lion, True) ::: If someone is round and they need the cat then they chase the dog.\nQuery:\nNeeds(Cat, Cat, True) ::: The cat needs the cat.\n------\nProblem"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-684_Q9",
    "context": "Anne is smart. Charlie is big. Charlie is nice. Gary is green. Harry is furry. Harry is nice. Harry is red. All furry people are kind. If Charlie is big then Charlie is green. If someone is kind then they are big. Kind, green people are big. Smart people are furry. If someone is green then they are kind. All big, nice people are kind. All smart, nice people are red. Big, kind people are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nFacts:\nSmart(Anne, True) ::: Anne is smart.\nBig(Charlie, True) ::: Charlie is big.\nNice(Charlie, True) ::: Charlie is nice.\nGreen(Gary, True) ::: Gary is green.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nRed(Harry, True) ::: Harry is red.\nRules:\nFurry($x, True) >>> Kind($x, True) ::: All furry people are kind.\nBig($x, True) >>> Green($x, True) ::: If Charlie is big then Charlie is green.\nKind($x, True) >>> Big($x, True) ::: If someone is kind then they are big.\nKind($x, True) && Green($x, True) >>> Big($x, True) ::: Kind, green people are big.\nSmart($x, True) >>> Furry($x, True) ::: Smart people are furry.\nGreen($x, True) >>> Kind($x, True) ::: If someone is green then they are kind.\nBig($x, True) && Nice($x, True) >>> Kind($x, True) ::: Big, nice people are kind.\nSmart($x, True) && Nice($x, True) >>> Red($x, True) ::: All smart, nice people are red.\nBig($x, True) && Kind($x, True) >>> Nice($x, True) ::: Big, kind people are nice.\nQuery:\nNice(Anne, True) ::: Anne is nice.\n------\nProblem:\nAnne is furry. Anne is green. Anne is kind. Anne is quiet. Anne is red. Anne is rough. Anne is white. Anne is young. Charlie is furry. Charlie is green. Charlie is kind. Charlie is quiet. Charlie is rough. Charlie is white. Charlie is young. Erin is furry. Erin is green. Erin is kind. Erin is quiet. Erin is rough. Erin is white. Erin is young. Fiona is furry. Fiona is green. Fiona is kind. Fiona is quiet. Fiona is rough. Fiona is white. Fiona is young. Harry is furry. Harry is green. Harry is kind. Harry is quiet. Harry is rough. Harry is white. Harry is young. If Anne is green then Anne is kind. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is young. If Anne is green then Anne is quiet. If Anne is green then Anne is furry. If Anne is green then Anne is red. If Anne is green then Anne is kind. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is young. If Anne is green then Anne is quiet. If Anne is green then Anne is furry. If Anne is green then Anne is red."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-439_Q23",
    "context": "The bald eagle is cold. The bald eagle is green. The bald eagle needs the lion. The bald eagle visits the rabbit. The dog sees the lion. The lion is cold. The lion is green. The lion needs the dog. The lion needs the rabbit. The lion visits the bald eagle. The lion visits the dog. The rabbit is round. The rabbit visits the dog. The rabbit visits the lion. If something is round then it is rough. If something visits the rabbit and it needs the bald eagle then the rabbit visits the bald eagle. If something is rough then it visits the lion. If the dog needs the rabbit and the rabbit sees the bald eagle then the bald eagle sees the dog. If the rabbit visits the lion and the rabbit needs the dog then the dog is round. If something visits the rabbit then the rabbit needs the bald eagle. If something visits the lion and the lion needs the dog then it needs the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not see the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nNeeds(BaldEagle, Lion, True) ::: The bald eagle needs the lion.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nSees(Dog, Lion, True) ::: The dog sees the lion.\nCold(Lion, True) ::: The lion is cold.\nGreen(Lion, True) ::: The lion is green.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nVisits(Lion, BaldEagle, True) ::: The lion visits the bald eagle.\nVisits(Lion, Dog, True) ::: The lion visits the dog.\nRound(Rabbit, True) ::: The rabbit is round.\nVisits(Rabbit, Dog, True) ::: The rabbit visits the dog.\nVisits(Rabbit, Lion, True) ::: The rabbit visits the lion.\nRules:\nRound($x, True) >>> Visits($x, Lion, True) ::: If something is round then it visits the lion.\nSees($x, Rabbit, True) && Needs($x, BaldEagle, True) >>> Visits($x, BaldEagle, True) ::: If the dog needs the rabbit and the rabbit sees the bald eagle then the bald eagle sees the dog.\nVisits($x, Rabbit, True) && Needs($x, Dog, True) >>> Round($x, True) ::: If the rabbit visits the lion and the rabbit needs the dog then the dog is round.\nVisits($x, Rabbit, True) && Needs($x, BaldEagle, True) >>> Visits($x, BaldEagle, True) ::: If something visits the rabbit and it needs the bald eagle then the rabbit visits the bald eagle.\nNeeds($x, BaldEagle, True) >>> Visits($x, Lion, True) ::: If the rabbit visits the lion and the rabbit needs the dog then the dog is round.\nVisits($x, Rabbit, True) >>> Needs($x, BaldEagle, True) ::: If something visits the rabbit then the rabbit needs the bald eagle.\nNeeds($x, Dog, True) && Needs($x, Lion, True) >>> Needs($x, Dog, True) ::: If the lion needs the dog and the lion needs the dog then it needs the dog.\nQuery:\nSees(Rabbit, BaldEagle, False) ::: The rabbit does not see the bald eagle.\n------\nProblem:\nThe dog is furry. The dog is green. The dog is quiet. The dog is rough"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1176_Q11",
    "context": "Bob is not round. Charlie is furry. Charlie is nice. Charlie is smart. Erin is red. Fiona is furry. Fiona is young. All red people are not round. Red people are not blue. All young people are furry. If Erin is red and Erin is not round then Erin is nice. If someone is round and nice then they are not young. All smart people are young. Nice people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotRound(Bob, True) ::: Bob is not round.\nFurry(Charlie, True) ::: Charlie is furry.\nNice(Charlie, True) ::: Charlie is nice.\nSmart(Charlie, True) ::: Charlie is smart.\nRed(Erin, True) ::: Erin is red.\nFurry(Fiona, True) ::: Fiona is furry.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nRed($x, True) >>> NotRound($x, True) ::: All red people are not round.\nRed($x, True) >>> NotBlue($x, True) ::: Red people are not blue.\nYoung($x, True) >>> Furry($x, True) ::: All young people are furry.\nRed($x, True) && NotRound($x, True) >>> Nice($x, True) ::: If Erin is red and Erin is not round then Erin is nice.\nRound($x, True) && Nice($x, True) >>> NotYoung($x, True) ::: If someone is round and nice then they are not young.\nSmart($x, True) >>> Young($x, True) ::: All smart people are young.\nNice($x, True) >>> Smart($x, True) ::: Nice people are smart.\nQuery:\nFurry(Erin, True) ::: Erin is furry.\n------\nProblem:\nBob is not round. Charlie is furry. Charlie is nice. Charlie is smart. Erin is red. Fiona is furry. Fiona is young. All red people are not round. Red people are not blue. All young people are furry. If Erin is red and Erin is not round then Erin is nice. If someone is round and nice then they are not young. All smart people are young. Nice people are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is furry.\n###\nPredicates:\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotRound(Bob, True) ::: Bob is not round.\nFurry(Charlie, True) ::: Charlie is furry.\nNice(Charlie, True) ::: Charlie is nice.\nSmart(Charlie, True) ::: Charlie is smart.\nRed(Erin, True) ::: Erin is red.\nFurry(Fiona, True) ::: Fiona is furry.\nYou"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-213_Q8",
    "context": "The cat chases the dog. The cat is rough. The cat is young. The dog likes the squirrel. The dog sees the tiger. The squirrel chases the tiger. The squirrel is big. The squirrel is green. The squirrel likes the dog. The squirrel sees the dog. The tiger chases the cat. The tiger is green. The tiger likes the dog. The tiger likes the squirrel. If something likes the dog then it chases the tiger. If something is big and it chases the cat then the cat likes the squirrel. If something sees the cat then the cat is big. If something likes the squirrel then it sees the dog. If something is cold and it chases the cat then it sees the cat. If something sees the tiger then the tiger is big. Green, big things are young. Big things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not see the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(Cat, Dog, True) ::: The cat chases the dog.\nRough(Cat, True) ::: The cat is rough.\nYoung(Cat, True) ::: The cat is young.\nLikes(Dog, Squirrel, True) ::: The dog likes the squirrel.\nSees(Dog, Tiger, True) ::: The dog sees the tiger.\nChases(Squirrel, Tiger, True) ::: The squirrel chases the tiger.\nBig(Squirrel, True) ::: The squirrel is big.\nGreen(Squirrel, True) ::: The squirrel is green.\nLikes(Squirrel, Dog, True) ::: The squirrel likes the dog.\nSees(Squirrel, Dog, True) ::: The squirrel sees the dog.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nGreen(Tiger, True) ::: The tiger is green.\nLikes(Tiger, Dog, True) ::: The tiger likes the dog.\nLikes(Tiger, Squirrel, True) ::: The tiger likes the squirrel.\nRules:\nLikes($x, $y, True) >>> Chases($x, Tiger, True) ::: If something likes the dog then it chases the tiger.\nChases($x, Cat, True) && Big($x, True) >>> Likes($x, Squirrel, True) ::: If something is big and it chases the cat then the cat likes the squirrel.\nSees($x, Cat, True) >>> Big($x, True) ::: If something sees the cat then the cat is big.\nLikes($x, Squirrel, True) >>> Sees($x, Dog, True) ::: If something likes the squirrel then it sees the dog.\nCold($x, True) && Chases($x, Cat, True) >>> Sees($x, Cat, True) ::: If something is cold and it chases the cat then it sees the cat.\nSees($x, Tiger, True) >>> Big($x, True) ::: If something sees the tiger then the tiger is big.\nGreen($x, True) && Big($x, True) >>> Young($x, True) ::: Green, big things are young.\nBig($x, True) >>> Cold($x, True) ::: Big things are cold.\nQuery:\nSees(Tiger, Cat, True) ::: The tiger does not see the cat.\n------\nProblem:\nThe cat chases the dog. The cat is rough. The cat is young. The dog likes the squirrel. The dog sees the tiger. The squirrel chases the tiger. The squirrel is big. The squirrel is green. The squirrel likes the dog. The squirrel sees the dog. The tiger"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1421_Q14",
    "context": "Anne is cold. Anne is rough. Bob is cold. Bob is kind. Dave is big. Dave is red. Dave is smart. Harry is big. Harry is kind. Harry is smart. Big people are young. Red people are smart. If Anne is young and Anne is rough then Anne is smart. Young, cold people are red. Rough people are big. All kind people are rough. If Anne is kind and Anne is cold then Anne is smart. All young people are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nRough(Anne, True) ::: Anne is rough.\nCold(Bob, True) ::: Bob is cold.\nKind(Bob, True) ::: Bob is kind.\nBig(Dave, True) ::: Dave is big.\nRed(Dave, True) ::: Dave is red.\nSmart(Dave, True) ::: Dave is smart.\nBig(Harry, True) ::: Harry is big.\nKind(Harry, True) ::: Harry is kind.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBig($x, True) >>> Young($x, True) ::: Big people are young.\nRed($x, True) >>> Smart($x, True) ::: Red people are smart.\nYoung($x, True) && Cold($x, True) >>> Red($x, True) ::: Young, cold people are red.\nRough($x, True) >>> Big($x, True) ::: Rough people are big.\nKind($x, True) >>> Rough($x, True) ::: All kind people are rough.\nCold($x, True) && Kind($x, True) >>> Smart($x, True) ::: If Anne is kind and Anne is cold then Anne is smart.\nYoung($x, True) >>> Kind($x, True) ::: All young people are kind.\nQuery:\nCold(Harry, True) ::: Harry is cold.\n------\nProblem:\nAnne is cold. Anne is rough. Bob is cold. Bob is kind. Dave is big. Dave is red. Dave is smart. Harry is big. Harry is kind. Harry is smart. Big people are young. Red people are smart. If Anne is young and Anne is rough then Anne is smart. Young, cold people are red. Rough people are big. All kind people are rough. If Anne is kind and Anne is cold then Anne is smart. All young people are kind.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Anne is cold.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nRough(Anne, True) ::: Anne is rough.\nCold(Bob, True) ::: Bob is cold.\nKind(Bob, True) ::: Bob is kind.\nBig(Dave, True) ::: Dave is big.\nRed(Dave, True) ::: Dave is red.\nSm"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-195_Q15",
    "context": "Bob is rough. Charlie is nice. Charlie is rough. Charlie is white. Dave is not white. Gary is cold. Gary is quiet. Rough, white things are quiet. If Charlie is round and Charlie is quiet then Charlie is rough. All young things are round. Nice things are white. Rough, nice things are cold. If something is round and rough then it is nice. If something is rough then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nFacts:\nRough(Bob, True) ::: Bob is rough.\nNice(Charlie, True) ::: Charlie is nice.\nRough(Charlie, True) ::: Charlie is rough.\nWhite(Charlie, True) ::: Charlie is white.\nNot(White(Dave, True)) ::: Dave is not white.\nCold(Gary, True) ::: Gary is cold.\nQuiet(Gary, True) ::: Gary is quiet.\nRules:\nRough($x, True) && White($x, True) >>> Quiet($x, True) ::: Rough, white things are quiet.\nCharlie(Round($x, True) && Quiet($x, True)) >>> Rough($x, True) ::: If Charlie is round and Charlie is quiet then Charlie is rough.\nYoung($x, True) >>> Round($x, True) ::: All young things are round.\nNice($x, True) >>> White($x, True) ::: Nice things are white.\nRough($x, True) && Nice($x, True) >>> Cold($x, True) ::: Rough, nice things are cold.\nRound($x, True) && Rough($x, True) >>> Nice($x, True) ::: If something is round and rough then it is nice.\nRough($x, True) >>> Young($x, True) ::: If something is rough then it is young.\nQuery:\nNot(White(Gary, True)) ::: Gary is not white.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1364_Q12",
    "context": "Charlie is big. Charlie is cold. Charlie is kind. Charlie is quiet. Charlie is red. Charlie is rough. Charlie is smart. Erin is kind. Fiona is quiet. Fiona is rough. Harry is kind. Harry is rough. Kind things are big. All kind, smart things are rough. If something is red and quiet then it is big. All red things are cold. All cold, quiet things are smart. If something is big and smart then it is cold. All quiet things are cold. Kind, big things are red. All cold, smart things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nBig(Charlie, True) ::: Charlie is big.\nCold(Charlie, True) ::: Charlie is cold.\nKind(Charlie, True) ::: Charlie is kind.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nSmart(Charlie, True) ::: Charlie is smart.\nKind(Erin, True) ::: Erin is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nKind(Harry, True) ::: Harry is kind.\nRough(Harry, True) ::: Harry is rough.\nRules:\nKind($x, True) >>> Big($x, True) ::: Kind things are big.\nKind($x, True) && Smart($x, True) >>> Rough($x, True) ::: All kind, smart things are rough.\nRed($x, True) && Quiet($x, True) >>> Big($x, True) ::: If something is red and quiet then it is big.\nRed($x, True) >>> Cold($x, True) ::: All red things are cold.\nCold($x, True) && Quiet($x, True) >>> Smart($x, True) ::: All cold, quiet things are smart.\nBig($"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-532_Q21",
    "context": "Anne is furry. Anne is rough. Bob is cold. Bob is green. Bob is red. Gary is cold. Gary is quiet. Gary is red. Harry is not cold. Harry is red. Red things are not kind. If something is cold and not furry then it is not kind. Green, rough things are quiet. If something is furry and cold then it is quiet. If Bob is furry then Bob is green. Rough things are green. If something is kind and not furry then it is green. All quiet things are cold. Cold things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nCold(Bob, True) ::: Bob is cold.\nGreen(Bob, True) ::: Bob is green.\nRed(Bob, True) ::: Bob is red.\nCold(Gary, True) ::: Gary is cold.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nNot(Cold(Harry, True)) ::: Harry is not cold.\nRed(Harry, True) ::: Harry is red.\nNot(Kind(Harry, True)) ::: Harry is not kind.\nRules:\nRed($x, True) >>> Not(Kind($x, True)) ::: Red things are not kind.\nNot(Furry($x, True)) && Cold($x, True) >>> Not(Kind($x, True)) ::: If something is cold and not furry then it is not kind.\nGreen($x, True) && Rough($x, True) >>> Quiet($x, True) ::: Green, rough things are quiet.\nFurry($x, True) && Cold($x, True) >>> Quiet($x, True) ::: If something is furry and cold then it is quiet.\nIf(Bob, Furry(Bob, True)) ::: If Bob is furry then Bob is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-510_Q7",
    "context": "The bear is cold. The bear is not green. The bear is rough. The rabbit is cold. The squirrel is nice. The squirrel does not visit the rabbit. The squirrel visits the tiger. The tiger chases the bear. The tiger does not eat the rabbit. The tiger is cold. The tiger is nice. The tiger is not rough. The tiger visits the rabbit. The tiger visits the squirrel. If something is green and it visits the squirrel then the squirrel is green. If something chases the rabbit then it eats the bear. If the squirrel eats the rabbit and the rabbit visits the bear then the bear is not red. If something is cold then it chases the rabbit. If the rabbit chases the squirrel then the squirrel eats the bear. If something chases the bear and it visits the tiger then the tiger chases the squirrel. If something is cold and not nice then it eats the rabbit. If something eats the bear and the bear visits the squirrel then it eats the rabbit. If something eats the bear then it chases the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger chases the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nVisit($x, $y, bool) ::: Does x visit y?\nEat($x, $y, bool) ::: Does x eat y?\nChase($x, $y, bool) ::: Does x chase y?\nFacts:\nCold(Bear, True) ::: The bear is cold.\nNot(Green(Bear, True)) ::: The bear is not green.\nRough(Bear, True) ::: The bear is rough.\nCold(Rabbit, True) ::: The rabbit is cold.\nNice(Squirrel, True) ::: The squirrel is nice.\nNot(Visit(Rabbit, Squirrel, True)) ::: The squirrel does not visit the rabbit.\nVisit(Squirrel, Tiger, True) ::: The squirrel visits the tiger.\nChase(Tiger, Bear, True) ::: The tiger chases the bear.\nNot(Eat(Tiger, Rabbit, True)) ::: The tiger does not eat the rabbit.\nCold(Tiger, True) ::: The tiger is cold.\nNice(Tiger, True) ::: The tiger is nice.\nNot(Rough(Tiger, True)) ::: The tiger is not rough.\nVisit(Tiger, Rabbit, True) ::: The tiger visits the rabbit.\nVisit(Tiger, Squirrel, True) ::: The tiger visits the squirrel.\nRules:\nGreen($x, True) && Visit($x, Squirrel, True"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-559_Q20",
    "context": "The bear is big. The bear needs the rabbit. The bear sees the rabbit. The mouse likes the tiger. The mouse needs the rabbit. The mouse sees the rabbit. The mouse sees the tiger. The rabbit is round. The rabbit likes the tiger. The rabbit needs the tiger. The tiger is red. The tiger likes the mouse. If something sees the mouse and it likes the mouse then it sees the bear. If something needs the tiger then it likes the mouse. If something is red then it likes the mouse. If something likes the mouse then it sees the mouse. If something needs the mouse then the mouse sees the tiger. If the rabbit is nice then the rabbit likes the bear. If something is big and nice then it needs the bear. If something is round and it sees the bear then the bear likes the mouse. If something likes the rabbit and the rabbit needs the tiger then the tiger likes the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit needs the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nFacts:\nBig(Bear, True) ::: The bear is big.\nNeeds(Bear, Rabbit, True) ::: The bear needs the rabbit.\nSees(Bear, Rabbit, True) ::: The bear sees the rabbit.\nLikes(Mouse, Tiger, True) ::: The mouse likes the tiger.\nNeeds(Mouse, Rabbit, True) ::: The mouse needs the rabbit.\nSees(Mouse, Rabbit, True) ::: The mouse sees the rabbit.\nSees(Mouse, Tiger, True) ::: The mouse sees the tiger.\nRound(Rabbit, True) ::: The rabbit is round.\nLikes(Rabbit, Tiger, True) ::: The rabbit likes the tiger.\nNeeds(Rabbit, Tiger, True) ::: The rabbit needs the tiger.\nRed(Tiger, True) ::: The tiger is red.\nLikes(Tiger, Mouse, True) ::: The tiger likes the mouse.\nRules:\nBig($x, True) >>> Needs($x, Bear, True) ::: If something is big and nice then it needs the bear.\nRound($x, True) && Sees($x, Bear, True) >>> Likes($x, Mouse, True) ::: If something is round and it sees the bear then the bear likes the mouse.\nNeeds($x, T"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1029_Q2",
    "context": "The bear is young. The bear visits the lion. The cat is round. The cat needs the bear. The lion is cold. The lion is not green. The lion is round. The lion does not need the bear. The lion sees the bear. The lion visits the bear. The lion visits the cat. The lion visits the rabbit. The rabbit is green. The rabbit is rough. The rabbit sees the lion. The rabbit visits the cat. If something visits the cat then the cat sees the lion. If something visits the lion and the lion visits the rabbit then it needs the lion. If something needs the lion and the lion is round then it needs the cat. If something is green and it needs the rabbit then the rabbit is green. If something is round then it visits the lion. If something sees the cat and the cat visits the lion then it is not rough. If something needs the cat and it is not green then it sees the cat. If something is young and it visits the bear then it sees the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nFacts:\nYoung(Bear, True) ::: The bear is young.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Bear, True) ::: The cat needs the bear.\nCold(Lion, True) ::: The lion is cold.\nNotGreen(Lion, True) ::: The lion is not green.\nRound(Lion, True) ::: The lion is round.\nNotNeeds(Lion, Bear, True) ::: The lion does not need the bear.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nVisits(Lion, Bear, True) ::: The lion visits the bear.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nGreen(Rabbit, True) ::: The rabbit is green.\nRough(Rabbit, True) ::: The rabbit is rough.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nVisits(Rabbit, Cat, True) ::: The rabbit visits the cat.\nRules:\nYoung($x, True) >>> Visits($x, Bear, True) ::: If something visits the cat then"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-555_Q8",
    "context": "The bald eagle is green. The bald eagle is round. The bald eagle is young. The bald eagle needs the lion. The cat is green. The cat is kind. The cat does not need the bald eagle. The lion chases the bald eagle. The lion chases the tiger. The lion is round. The lion needs the bald eagle. The lion visits the bald eagle. The lion visits the cat. The tiger is not blue. The tiger is not green. The tiger is young. If someone visits the tiger then the tiger visits the lion. If someone is kind and blue then they visit the cat. If someone is green then they visit the bald eagle. If someone needs the tiger then they visit the tiger. If someone needs the tiger and the tiger needs the cat then the tiger needs the lion. If someone visits the lion then they need the tiger. If the tiger chases the bald eagle then the bald eagle is green. If the bald eagle is young then the bald eagle needs the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not visit the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nRound(BaldEagle, True) ::: The bald eagle is round.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nNeeds(BaldEagle, Lion, True) ::: The bald eagle needs the lion.\nGreen(Cat, True) ::: The cat is green.\nKind(Cat, True) ::: The cat is kind.\nNeeds(Cat, BaldEagle, False) ::: The cat does not need the bald eagle.\nChases(Lion, BaldEagle, True) ::: The lion chases the bald eagle.\nChases(Lion, Tiger, True) ::: The lion chases the tiger.\nRound(Lion, True) ::: The lion is round.\nNeeds(Lion, BaldEagle, True) ::: The lion needs the bald eagle.\nVisits(Lion, BaldEagle, True) ::: The lion visits the bald eagle.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nNot(Blue(Tiger, True)) ::: The tiger is not blue.\nNot(Green(Tiger, True)) ::: The tiger is not green.\nYoung(Tiger, True) ::: The tiger is young.\nIf(Visits(Tiger, Lion), Visits"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-949_Q5",
    "context": "The bear is green. The bear likes the cat. The bear likes the dog. The bear visits the dog. The cat is young. The cat sees the bear. The cat sees the dog. The cat visits the bear. The cat visits the mouse. The dog is round. The dog likes the bear. The dog likes the mouse. The dog visits the mouse. The mouse is big. The mouse is cold. The mouse is round. If something visits the mouse and the mouse visits the dog then it is cold. If something likes the cat then it visits the dog. If something is cold then it likes the cat. If something is green then it sees the dog. If something likes the mouse then it sees the cat. If something is green and cold then it likes the cat. If something is big and it visits the bear then the bear is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse visits the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nGreen(Bear, True) ::: The bear is green.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nLikes(Bear, Dog, True) ::: The bear likes the dog.\nVisits(Bear, Dog, True) ::: The bear visits the dog.\nYoung(Cat, True) ::: The cat is young.\nSees(Cat, Bear, True) ::: The cat sees the bear.\nSees(Cat, Dog, True) ::: The cat sees the dog.\nVisits(Cat, Bear, True) ::: The cat visits the bear.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nRound(Dog, True) ::: The dog is round.\nLikes(Dog, Bear, True) ::: The dog likes the bear.\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nVisits(Dog, Mouse, True) ::: The dog visits the mouse.\nBig(Mouse, True) ::: The mouse is big.\nCold(Mouse, True) ::: The mouse is cold.\nRound(Mouse, True) ::: The mouse is round.\nRules:\nVisits($x, $y, True) && Visits($y, $z, True) >>> Cold($x, True) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-200_Q12",
    "context": "Anne is quiet. Charlie is cold. Charlie is not quiet. Charlie is young. Erin is nice. Erin is quiet. Erin is smart. Fiona is not quiet. Fiona is round. Fiona is young. All smart, cold people are round. If someone is cold then they are young. If someone is young and quiet then they are blue. If someone is round and not quiet then they are blue. Nice, blue people are cold. If someone is quiet then they are cold. If someone is quiet then they are cold. All blue people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nCold(Charlie, True) ::: Charlie is cold.\nNotQuite(Charlie, True) ::: Charlie is not quiet.\nYoung(Charlie, True) ::: Charlie is young.\nNice(Erin, True) ::: Erin is nice.\nQuite(Erin, True) ::: Erin is quiet.\nSmart(Erin, True) ::: Erin is smart.\nNotQuite(Fiona, True) ::: Fiona is not quiet.\nRound(Fiona, True) ::: Fiona is round.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nYoung($x, True) >>> Cold($x, True) ::: If someone is young and quiet then they are blue.\nNotQuite($x, True) >>> Round($x, True) ::: If someone is round and not quiet then they are blue.\nSmart($x, True) >>> Cold($x, True) ::: All smart, cold people are round.\nCold($x, True) >>> Young($x, True) ::: If someone is cold then they are young.\nNice($x, True) >>> Cold($x, True) ::: Nice, blue people are cold.\nQuite($x, True) >>> Cold($x, True) ::: If someone is quiet then they are cold.\nQuite($x, True) >>>"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1364_Q5",
    "context": "Charlie is big. Charlie is cold. Charlie is kind. Charlie is quiet. Charlie is red. Charlie is rough. Charlie is smart. Erin is kind. Fiona is quiet. Fiona is rough. Harry is kind. Harry is rough. Kind things are big. All kind, smart things are rough. If something is red and quiet then it is big. All red things are cold. All cold, quiet things are smart. If something is big and smart then it is cold. All quiet things are cold. Kind, big things are red. All cold, smart things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nBig(Charlie, True) ::: Charlie is big.\nCold(Charlie, True) ::: Charlie is cold.\nKind(Charlie, True) ::: Charlie is kind.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nSmart(Charlie, True) ::: Charlie is smart.\nKind(Erin, True) ::: Erin is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nKind(Harry, True) ::: Harry is kind.\nRough(Harry, True) ::: Harry is rough.\nRules:\nKind($x, True) >>> Big($x, True) ::: Kind things are big.\nKind($x, True) && Smart($x, True) >>> Rough($x, True) ::: All kind, smart things are rough.\nRed($x, True) && Quiet($x, True) >>> Big($x, True) ::: If something is red and quiet then it is big.\nRed($x, True) >>> Cold($x, True) ::: All red things are cold.\nCold($x, True) && Quiet($x, True) >>> Smart($x, True) ::: All cold, quiet things are smart.\nBig($"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1210_Q4",
    "context": "Bob is not kind. Bob is smart. Dave is not blue. Dave is cold. Dave is kind. Dave is not red. Dave is smart. Dave is white. Fiona is kind. Fiona is smart. Fiona is white. Harry is red. If someone is red then they are kind. If Harry is kind then Harry is blue. If Harry is kind and Harry is not red then Harry is not blue. If Fiona is not kind then Fiona is blue. All young people are smart. All red, blue people are smart. If Harry is young and Harry is smart then Harry is white. If someone is smart and blue then they are young. If someone is blue and not red then they are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotKind(Bob, True) ::: Bob is not kind.\nSmart(Bob, True) ::: Bob is smart.\nNotBlue(Dave, True) ::: Dave is not blue.\nCold(Dave, True) ::: Dave is cold.\nKind(Dave, True) ::: Dave is kind.\nNotRed(Dave, True) ::: Dave is not red.\nSmart(Dave, True) ::: Dave is smart.\nWhite(Dave, True) ::: Dave is white.\nKind(Fiona, True) ::: Fiona is kind.\nSmart(Fiona, True) ::: Fiona is smart.\nWhite(Fiona, True) ::: Fiona is white.\nRed(Harry, True) ::: Harry is red.\nRules:\nIf Harry is kind then Harry is blue ::: If Harry is kind then Harry is blue.\nIf Harry is kind and Harry is not red then Harry is not blue ::: If Harry is kind and Harry is not red then Harry is not blue.\nIf Fiona is not kind then Fiona is blue ::: If Fiona is not kind then Fiona is blue.\nAll young people are smart ::: All young people are smart.\nAll red, blue people are smart ::: All red, blue people are smart.\nIf Harry is young and Harry is smart then Harry is white ::: If Harry is young and Harry is smart then Harry is white.\nIf someone is smart and blue then they are young ::: If someone is smart and blue then they are young.\nIf someone is blue and not red then they are young ::: If someone is blue and not red then they are young.\nQuery:\nNotKind(Harry, True) ::: Harry is not kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1017_Q5",
    "context": "Dave is big. Dave is furry. Erin is blue. Erin is cold. Erin is round. Fiona is quiet. Gary is rough. If something is rough and cold then it is furry. Quiet, big things are not round. If Dave is blue then Dave is furry. All quiet, blue things are big. If Fiona is furry then Fiona is blue. If something is quiet then it is cold. All big things are cold. All blue, round things are not quiet. Cold things are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Dave, True) ::: Dave is big.\nFurry(Dave, True) ::: Dave is furry.\nBlue(Erin, True) ::: Erin is blue.\nCold(Erin, True) ::: Erin is cold.\nRound(Erin, True) ::: Erin is round.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRough(Gary, True) ::: Gary is rough.\nRules:\nBig($x, True) >>> Cold($x, True) ::: All big things are cold.\nBlue($x, True) >>> Furry($x, True) ::: If Dave is blue then Dave is furry.\nQuiet($x, True) >>> Cold($x, True) ::: If something is quiet then it is cold.\nFurry($x, True) && Cold($x, True) >>> Rough($x, True) ::: If something is rough and cold then it is furry.\nQuiet($x, True) && Big($x, True) >>> Round($x, True) ::: Quiet, big things are not round.\nFurry($x, True) >>> Blue($x, True) ::: If Fiona is furry then Fiona is blue.\nBlue($x, True) && Round($x, True) >>> Quiet($x, True) ::: All blue, round things are not quiet.\nQuery:\nFurry(Erin, True) ::: Erin is furry.\n------\nProblem:\nDave is big. Dave is furry. Erin is blue. Erin is cold. Erin is round. Fiona is quiet. Gary is rough. If something is rough and cold then it"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-891_Q11",
    "context": "Bob is green. Bob is kind. Charlie is green. Charlie is not smart. Erin is not young. Fiona is nice. Fiona is young. Green, smart things are quiet. If something is kind then it is green. Smart things are young. Young things are kind. Quiet things are furry. All quiet, nice things are furry. Nice, green things are smart. If Bob is kind and Bob is not green then Bob is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nKind(Bob, True) ::: Bob is kind.\nGreen(Charlie, True) ::: Charlie is green.\nSmart(Charlie, False) ::: Charlie is not smart.\nYoung(Erin, False) ::: Erin is not young.\nNice(Fiona, True) ::: Fiona is nice.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nGreen($x, True) && Smart($x, True) >>> Quiet($x, True) ::: Green, smart things are quiet.\nKind($x, True) >>> Green($x, True) ::: If something is kind then it is green.\nSmart($x, True) >>> Young($x, True) ::: Smart things are young.\nYoung($x, True) >>> Kind($x, True) ::: Young things are kind.\nQuiet($x, True) && Nice($x, True) >>> Furry($x, True) ::: All quiet, nice things are furry.\nNice($x, True) && Green($x, True) >>> Smart($x, True) ::: Nice, green things are smart.\nKind($x, True) && Not(Green($x, True)) >>> Furry($x, True) ::: If Bob is kind and Bob is not green then Bob is furry.\nQuery:\nFurry(Fiona, True) ::: Fiona is furry.\n------\nProblem:\nBob is green. Bob is kind. Charlie is green. Charlie is not smart. Erin is not young. Fiona is nice. Fiona is young. Green, smart things are quiet. If something"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-521_Q4",
    "context": "The cow eats the lion. The lion eats the mouse. The lion needs the mouse. The mouse sees the lion. The tiger eats the lion. The tiger is green. The tiger is red. The tiger needs the lion. The tiger needs the mouse. The tiger sees the cow. If someone sees the lion then they are cold. If someone needs the tiger and they need the mouse then they are cold. If someone needs the tiger and the tiger eats the cow then the tiger needs the lion. All round people are green. All young, green people are round. If someone eats the mouse and the mouse sees the lion then they are green. If someone needs the tiger then the tiger sees the lion. If someone is cold and they see the lion then they need the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nNeeds($x, $y) ::: Does x need y?\nSees($x, $y) ::: Does x see y?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nEats(Cow, Lion) ::: The cow eats the lion.\nEats(Lion, Mouse) ::: The lion eats the mouse.\nNeeds(Lion, Mouse) ::: The lion needs the mouse.\nSees(Lion, Mouse) ::: The lion sees the mouse.\nEats(Tiger, Lion) ::: The tiger eats the lion.\nGreen(Tiger) ::: The tiger is green.\nRed(Tiger) ::: The tiger is red.\nNeeds(Tiger, Lion) ::: The tiger needs the lion.\nNeeds(Tiger, Mouse) ::: The tiger needs the mouse.\nSees(Tiger, Cow) ::: The tiger sees the cow.\nCold(Lion) ::: If someone sees the lion then they are cold.\nNeeds(Tiger, Mouse) && Needs(Tiger, Lion) >>> Cold($x, True) ::: If someone needs the tiger and they need the mouse then they are cold.\nNeeds(Tiger, Lion) && Eats(Tiger, Cow) >>> Needs(Tiger, Lion) ::: If someone needs the tiger and the tiger eats the cow then the tiger needs the lion.\nAll(Round($x, True)) >>> Green($x, True) ::: All round people are green.\nAll(Young($x, True) && Green($x, True)) >>> Round($x, True) ::: All young, green people are round.\nEats(Mouse, Lion) && Sees(Mouse, Lion) >>> Green($x, True) ::: If someone eats the mouse and the mouse sees the lion then they are green.\nSe"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-746_Q16",
    "context": "Bob is white. Charlie is furry. Charlie is kind. Dave is cold. Dave is smart. Gary is red. Gary is white. Green, furry things are smart. If Charlie is white then Charlie is green. White things are kind. Cold, smart things are red. All furry things are cold. If Bob is kind and Bob is furry then Bob is smart. If something is cold and kind then it is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nFacts:\nWhite(Bob, True) ::: Bob is white.\nFurry(Charlie, True) ::: Charlie is furry.\nKind(Charlie, True) ::: Charlie is kind.\nCold(Dave, True) ::: Dave is cold.\nSmart(Dave, True) ::: Dave is smart.\nRed(Gary, True) ::: Gary is red.\nWhite(Gary, True) ::: Gary is white.\nRules:\nGreen($x, True) && Furry($x, True) >>> Smart($x, True) ::: Green, furry things are smart.\nWhite($x, True) >>> Kind($x, True) ::: White things are kind.\nCold($x, True) && Smart($x, True) >>> Red($x, True) ::: Cold, smart things are red.\nFurry($x, True) >>> Cold($x, True) ::: All furry things are cold.\nFurry($x, True) && Kind($x, True) >>> Smart($x, True) ::: If Bob is kind and Bob is furry then Bob is smart.\nWhite($x, True) && Kind($x, True) >>> Cold($x, True) ::: If something is cold and kind then it is white.\nQuery:\nWhite(Dave, True) ::: Dave is white.\n------\nProblem:\nBob is white. Charlie is furry. Charlie is kind. Dave is cold. Dave is smart. Gary is red. Gary is white. Green, furry things are smart. If Charlie is white then Charlie is green. White things are kind. Cold, smart things are red. All furry things are cold. If Bob is kind and Bob is furry then Bob"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-781_Q5",
    "context": "Anne is big. Anne is cold. Anne is round. Charlie is cold. Charlie is furry. Charlie is kind. Charlie is nice. Charlie is round. Erin is big. Gary is furry. Gary is kind. Gary is nice. Gary is quiet. Gary is round. Big things are quiet. If something is quiet and big then it is kind. If something is cold then it is round. Nice things are cold. All cold things are kind. If something is kind then it is nice. If something is nice and furry then it is quiet. All kind things are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(Anne, True) ::: Anne is big.\nCold(Anne, True) ::: Anne is cold.\nRound(Anne, True) ::: Anne is round.\nCold(Charlie, True) ::: Charlie is cold.\nFurry(Charlie, True) ::: Charlie is furry.\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nRound(Charlie, True) ::: Charlie is round.\nBig(Erin, True) ::: Erin is big.\nFurry(Gary, True) ::: Gary is furry.\nKind(Gary, True) ::: Gary is kind.\nNice(Gary, True) ::: Gary is nice.\nQuiet(Gary, True) ::: Gary is quiet.\nRound(Gary, True) ::: Gary is round.\nRules:\nBig($x, True) >>> Quiet($x, True) ::: Big things are quiet.\nQuiet($x, True) && Big($x, True) >>> Kind($x, True) ::: If something is quiet and big then it is kind.\nCold($x, True) >>> Round($x, True) ::: If something is cold then it is round.\nNice($x, True) >>> Cold($x, True) ::: Nice things are cold.\nCold($x, True) >>> Kind($x, True) ::: All cold things are kind.\nKind($x, True) >>> Nice($x, True) ::: If something is kind then it is nice.\nNice($x, True) && Furry($x, True) >>> Quiet($x"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-902_Q8",
    "context": "The lion chases the mouse. The mouse is cold. The mouse needs the rabbit. The rabbit chases the squirrel. The rabbit sees the lion. The rabbit sees the squirrel. The squirrel chases the lion. If something is cold then it sees the rabbit. If something sees the rabbit then it sees the squirrel. If something is cold and it sees the squirrel then the squirrel is cold. If something chases the squirrel then it needs the squirrel. If something chases the squirrel and it is not cold then the squirrel does not chase the rabbit. If the rabbit sees the squirrel and the squirrel chases the rabbit then the rabbit does not chase the squirrel. If the rabbit chases the squirrel and the squirrel does not chase the rabbit then the squirrel needs the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nCold($x, bool) ::: Is x cold?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nChases(Lion, Mouse, True) ::: The lion chases the mouse.\nCold(Mouse, True) ::: The mouse is cold.\nNeeds(Mouse, Rabbit, True) ::: The mouse needs the rabbit.\nChases(Rabbit, Squirrel, True) ::: The rabbit chases the squirrel.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nSees(Rabbit, Squirrel, True) ::: The rabbit sees the squirrel.\nChases(Squirrel, Lion, True) ::: The squirrel chases the lion.\nRules:\nCold($x, True) >>> Sees($x, Rabbit, True) ::: If something is cold then it sees the rabbit.\nSees($x, Rabbit, True) >>> Sees($x, Squirrel, True) ::: If something sees the rabbit then it sees the squirrel.\nCold($x, True) && Sees($x, Squirrel, True) >>> Cold($x, True) ::: If something is cold and it sees the squirrel then the squirrel is cold.\nChases($x, Squirrel, True) >>> Needs($x, Squirrel, True) ::: If something chases the squirrel then it needs the squirrel.\nChases($x, Squirrel, True) && Not(Cold($x, True)) >>> Not(Chases(Squirrel, Rabbit, True)) ::: If something chases the squirrel and it is not cold then the squirrel does not chase the rabbit.\nSees($x, Squirrel, True) && Chases($x, Rabbit, True) >>> Not(Chases(Rabbit, Squirrel, True)) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-816_Q7",
    "context": "The cat is rough. The cat sees the rabbit. The mouse eats the cat. The mouse eats the squirrel. The mouse is kind. The mouse visits the cat. The mouse visits the rabbit. The rabbit eats the cat. The rabbit eats the mouse. The rabbit sees the cat. The squirrel is round. The squirrel sees the rabbit. If something sees the squirrel then it is kind. If something visits the mouse then the mouse sees the squirrel. If something eats the cat then the cat visits the squirrel. If something is blue then it sees the squirrel. If something is kind then it visits the rabbit. If something is rough then it sees the cat. If something is rough and it sees the cat then the cat is blue. If something visits the rabbit and it sees the squirrel then the squirrel is rough. If something eats the mouse then it is rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat sees the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nVisits($x, $y, bool) ::: Does x visit y?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nFacts:\nRough(Cat, True) ::: The cat is rough.\nSees(Cat, Rabbit, True) ::: The cat sees the rabbit.\nEats(Mouse, Cat, True) ::: The mouse eats the cat.\nEats(Mouse, Squirrel, True) ::: The mouse eats the squirrel.\nKind(Mouse, True) ::: The mouse is kind.\nVisits(Mouse, Cat, True) ::: The mouse visits the cat.\nVisits(Mouse, Rabbit, True) ::: The mouse visits the rabbit.\nSees(Rabbit, Cat, True) ::: The rabbit eats the cat.\nSees(Rabbit, Mouse, True) ::: The rabbit eats the mouse.\nSees(Rabbit, Cat, True) ::: The rabbit sees the cat.\nRound(Squirrel, True) ::: The squirrel is round.\nSees(Squirrel, Rabbit, True) ::: The squirrel sees the rabbit.\nRules:\nIf something sees the squirrel then it is kind ::: If something sees the squirrel then it is kind.\nIf something visits the mouse then the mouse sees the squirrel ::: If something visits the mouse then the mouse sees the squirrel.\nIf something eats the cat then the cat visits the squirrel ::: If something eats the cat then the cat visits the squirrel.\nIf something is blue then it sees the squirrel ::: If something is blue then it sees the squirrel.\nIf something is kind then it visits the rabbit ::: If something is kind then it visits the rabbit.\nIf something"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-765_Q15",
    "context": "Anne is blue. Anne is kind. Anne is quiet. Bob is not kind. Bob is young. Erin is white. Gary is blue. Gary is kind. Gary is nice. Gary is quiet. Gary is rough. Nice people are kind. All white, quiet people are blue. Kind, nice people are quiet. Rough people are nice. If someone is white then they are rough. All blue, nice people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nKind(Anne, True) ::: Anne is kind.\nQuiet(Anne, True) ::: Anne is quiet.\nNot(Kind(Bob, True)) ::: Bob is not kind.\nYoung(Bob, True) ::: Bob is young.\nWhite(Erin, True) ::: Erin is white.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nNice(Gary, True) ::: Gary is nice.\nQuiet(Gary, True) ::: Gary is quiet.\nRough(Gary, True) ::: Gary is rough.\nRules:\nNice($x, True) >>> Kind($x, True) ::: Nice people are kind.\nWhite($x, True) && Quiet($x, True) >>> Blue($x, True) ::: All white, quiet people are blue.\nKind($x, True) && Nice($x, True) >>> Quiet($x, True) ::: Kind, nice people are quiet.\nRough($x, True) >>> Nice($x, True) ::: Rough people are nice.\nWhite($x, True) >>> Rough($x, True) ::: If someone is white then they are rough.\nBlue($x, True) && Nice($x, True) >>> Rough($x, True) ::: All blue, nice people are rough.\nQuery:\nNot(Quiet(Bob, True)) ::: Bob is not quiet.\n------\nProblem:\nAnne is blue. Anne is kind. Anne is quiet. Bob is not kind. Bob is young. Erin is white. Gary is blue. Gary is kind. Gary is nice. Gary is quiet. Gary is rough"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-213_Q19",
    "context": "The cat chases the dog. The cat is rough. The cat is young. The dog likes the squirrel. The dog sees the tiger. The squirrel chases the tiger. The squirrel is big. The squirrel is green. The squirrel likes the dog. The squirrel sees the dog. The tiger chases the cat. The tiger is green. The tiger likes the dog. The tiger likes the squirrel. If something likes the dog then it chases the tiger. If something is big and it chases the cat then the cat likes the squirrel. If something sees the cat then the cat is big. If something likes the squirrel then it sees the dog. If something is cold and it chases the cat then it sees the cat. If something sees the tiger then the tiger is big. Green, big things are young. Big things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not see the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(Cat, Dog, True) ::: The cat chases the dog.\nRough(Cat, True) ::: The cat is rough.\nYoung(Cat, True) ::: The cat is young.\nLikes(Dog, Squirrel, True) ::: The dog likes the squirrel.\nSees(Dog, Tiger, True) ::: The dog sees the tiger.\nChases(Squirrel, Tiger, True) ::: The squirrel chases the tiger.\nBig(Squirrel, True) ::: The squirrel is big.\nGreen(Squirrel, True) ::: The squirrel is green.\nLikes(Squirrel, Dog, True) ::: The squirrel likes the dog.\nSees(Squirrel, Dog, True) ::: The squirrel sees the dog.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nGreen(Tiger, True) ::: The tiger is green.\nLikes(Tiger, Dog, True) ::: The tiger likes the dog.\nLikes(Tiger, Squirrel, True) ::: The tiger likes the squirrel.\nRules:\nLikes($x, $y, True) >>> Chases($x, Tiger, True) ::: If something likes the dog then it chases the tiger.\nChases($x, Cat, True) && Big($x, True) >>> Likes($x, Squirrel, True) ::: If something is big and it chases the cat then the cat likes the squirrel.\nSees($x, Cat, True) >>> Big($x, True) ::: If something sees the"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-442_Q5",
    "context": "The bald eagle chases the cat. The bald eagle does not eat the mouse. The cat eats the cow. The cow eats the cat. The cow is blue. The cow is young. The cow sees the cat. The cow does not see the mouse. The mouse does not chase the cow. The mouse eats the bald eagle. The mouse is round. If something eats the mouse then it is round. If the mouse is red then the mouse sees the cow. If something chases the cat then it does not chase the mouse. If the mouse chases the cat then the cat eats the mouse. If something is round then it chases the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat eats the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nEats($x, $y) ::: Does x eat y?\nSees($x, $y) ::: Does x see y?\nIs($x, $y) ::: Is x y?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(BaldEagle, Cat) ::: The bald eagle chases the cat.\nEats(BaldEagle, Mouse) ::: The bald eagle does not eat the mouse.\nEats(Cat, Cow) ::: The cat eats the cow.\nEats(Cow, Cat) ::: The cow eats the cat.\nIs(Cow, Blue) ::: The cow is blue.\nIs(Cow, Young) ::: The cow is young.\nSees(Cow, Cat) ::: The cow sees the cat.\nSees(Cow, Mouse) ::: The cow does not see the mouse.\nEats(Mouse, BaldEagle) ::: The mouse does not chase the cow.\nIs(Mouse, Round) ::: The mouse eats the bald eagle.\nRound(Mouse, True) ::: The mouse is round.\nRules:\nIf something eats the mouse then it is round ::: If something eats the mouse then it is round.\nIf the mouse is red then the mouse sees the cow ::: If the mouse is red then the mouse sees the cow.\nIf something chases the cat then it does not chase the mouse ::: If something chases the cat then it does not chase the mouse.\nIf the mouse chases the cat then the cat eats the mouse ::: If the mouse chases the cat then the cat eats the mouse.\nIf something is round then it chases the cat ::: If something is round then it chases the cat.\nQuery:\nEats(Cat, Mouse) ::: The cat eats the mouse.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-650_Q11",
    "context": "Anne is smart. Charlie is nice. Erin is furry. Erin is white. Fiona is smart. Fiona is white. Fiona is young. Nice, smart things are young. All young, white things are cold. White things are red. All furry, red things are nice. All young things are white. All young things are white. All smart, cold things are furry. If something is nice and white then it is smart. If Anne is furry and Anne is white then Anne is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nFacts:\nSmart(Anne, True) ::: Anne is smart.\nNice(Charlie, True) ::: Charlie is nice.\nFurry(Erin, True) ::: Erin is furry.\nWhite(Erin, True) ::: Erin is white.\nSmart(Fiona, True) ::: Fiona is smart.\nWhite(Fiona, True) ::: Fiona is white.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nNice($x, True) && Smart($x, True) >>> Young($x, True) ::: Nice, smart things are young.\nYoung($x, True) && White($x, True) >>> Cold($x, True) ::: All young, white things are cold.\nWhite($x, True) >>> Red($x, True) ::: White things are red.\nFurry($x, True) && Red($x, True) >>> Nice($x, True) ::: All furry, red things are nice.\nYoung($x, True) >>> White($x, True) ::: All young things are white.\nYoung($x, True) >>> White($x, True) ::: All young things are white.\nSmart($x, True) && Cold($x, True) >>> Furry($x, True) ::: All smart, cold things are furry.\nNice($x, True) && White($x, True) >>> Smart($x, True) ::: If something is nice and white then it is smart.\nFurry($x, True) && White($x, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-785_Q10",
    "context": "Anne is rough. Anne is young. Bob is nice. Bob is red. Bob is young. Charlie is cold. Charlie is quiet. Charlie is red. Charlie is rough. Charlie is smart. Fiona is cold. Fiona is quiet. Cold people are young. Rough, young people are nice. Cold, red people are smart. Red people are smart. If someone is smart and quiet then they are cold. All rough, nice people are red. All red, quiet people are cold. All smart people are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nFacts:\nRough(Anne, True) ::: Anne is rough.\nYoung(Anne, True) ::: Anne is young.\nNice(Bob, True) ::: Bob is nice.\nRed(Bob, True) ::: Bob is red.\nYoung(Bob, True) ::: Bob is young.\nRough(Charlie, True) ::: Charlie is rough.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nSmart(Charlie, True) ::: Charlie is smart.\nCold(Fiona, True) ::: Fiona is cold.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nCold($x, True) >>> Young($x, True) ::: Cold people are young.\nRough($x, True) && Young($x, True) >>> Nice($x, True) ::: Rough, young people are nice.\nCold($x, True) && Red($x, True) >>> Smart($x, True) ::: Cold, red people are smart.\nRed($x, True) >>> Smart($x, True) ::: Red people are smart.\nSmart($x, True) && Quiet($x, True) >>> Cold($x, True) ::: If someone is smart and quiet then they are cold.\nRough($x, True) && Nice($x, True) >>> Red($x, True) ::: All rough, nice people are red.\nRed"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-922_Q7",
    "context": "The cow is cold. The cow is not round. The cow sees the squirrel. The cow sees the tiger. The mouse needs the cow. The mouse needs the tiger. The squirrel needs the cow. The tiger is blue. The tiger is red. The tiger is round. The tiger sees the mouse. If something needs the squirrel then the squirrel sees the tiger. If the cow sees the squirrel then the cow eats the mouse. If the squirrel eats the mouse and the squirrel is not green then the mouse is not red. If the mouse needs the tiger and the mouse is red then the tiger does not see the squirrel. If something needs the mouse and the mouse eats the cow then the cow eats the squirrel. If something is blue then it needs the squirrel. If something needs the cow and the cow is blue then it eats the mouse. If something eats the mouse then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse eats the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nCold(Cow, True) ::: The cow is cold.\nRound(Cow, False) ::: The cow is not round.\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nSees(Cow, Tiger, True) ::: The cow sees the tiger.\nNeeds(Mouse, Cow, True) ::: The mouse needs the cow.\nNeeds(Mouse, Tiger, True) ::: The mouse needs the tiger.\nNeeds(Squirrel, Cow, True) ::: The squirrel needs the cow.\nBlue(Tiger, True) ::: The tiger is blue.\nRed(Tiger, True) ::: The tiger is red.\nRound(Tiger, True) ::: The tiger is round.\nSees(Tiger, Mouse, True) ::: The tiger sees the mouse.\nRules:\nIf something needs the squirrel then the squirrel sees the tiger. ::: If something needs the squirrel then the squirrel sees the tiger.\nIf the cow sees the squirrel then the cow eats the mouse. ::: If the cow sees the squirrel then the cow eats the mouse.\nIf the squirrel eats the mouse and the squirrel is not green then the mouse is not red. ::: If the squirrel eats the mouse and the squirrel is not green then the mouse is not red.\nIf the mouse needs the tiger and the mouse is red then the tiger does not see the squirrel"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-754_Q4",
    "context": "Anne is big. Anne is furry. Anne is rough. Anne is round. Anne is young. Charlie is big. Charlie is cold. Dave is furry. Dave is young. Harry is furry. Harry is nice. Harry is young. All round things are cold. Cold, furry things are rough. If something is furry and rough then it is round. If Charlie is round and Charlie is furry then Charlie is nice. All round, nice things are rough. Big, cold things are furry. Furry, round things are cold. Nice, round things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Anne, True) ::: Anne is big.\nFurry(Anne, True) ::: Anne is furry.\nRound(Anne, True) ::: Anne is round.\nYoung(Anne, True) ::: Anne is young.\nBig(Charlie, True) ::: Charlie is big.\nCold(Charlie, True) ::: Charlie is cold.\nFurry(Dave, True) ::: Dave is furry.\nYoung(Dave, True) ::: Dave is young.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nYoung(Harry, True) ::: Harry is young.\nRules:\nRound($x, True) >>> Cold($x, True) ::: All round things are cold.\nCold($x, True) && Furry($x, True) >>> Rough($x, True) ::: Cold, furry things are rough.\nFurry($x, True) && Rough($x, True) >>> Round($x, True) ::: If something is furry and rough then it is round.\nCharlie(Round($x, True) && Furry($x, True)) >>> Nice($x, True) ::: If Charlie is round and Charlie is furry then Charlie is nice.\nRound($x, True) && Nice($x, True) >>> Rough($x, True) ::: All round, nice things are rough.\nBig($x, True) && Cold($x, True) >>> Furry($x, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-143_Q6",
    "context": "Anne is round. Bob is blue. Bob is kind. Bob is red. Dave is big. Dave is kind. Dave is smart. Fiona is big. Fiona is red. Fiona is rough. Fiona is round. If Bob is round and Bob is red then Bob is rough. Big people are kind. All blue people are big. All round people are blue. All smart, red people are kind. All kind people are rough. All rough, big people are smart. Round, smart people are blue. If Fiona is smart and Fiona is red then Fiona is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nFacts:\nRound(Anne, True) ::: Anne is round.\nBlue(Bob, True) ::: Bob is blue.\nKind(Bob, True) ::: Bob is kind.\nRed(Bob, True) ::: Bob is red.\nBig(Dave, True) ::: Dave is big.\nKind(Dave, True) ::: Dave is kind.\nSmart(Dave, True) ::: Dave is smart.\nRound(Fiona, True) ::: Fiona is round.\nRed(Fiona, True) ::: Fiona is red.\nRough(Fiona, True) ::: Fiona is rough.\nRules:\nBig($x, True) >>> Kind($x, True) ::: Big people are kind.\nBlue($x, True) >>> Big($x, True) ::: All blue people are big.\nRound($x, True) >>> Blue($x, True) ::: All round people are blue.\nSmart($x, True) && Red($x, True) >>> Kind($x, True) ::: All smart, red people are kind.\nKind($x, True) >>> Rough($x, True) ::: All kind people are rough.\nRough($x, True) && Big($x, True) >>> Smart($x, True) ::: All rough, big people are smart.\nRound($x, True) && Smart($x, True) >>> Blue($x, True) ::: Round, smart people are blue.\nQuery:\nNot(Smart(Bob, True)) ::: Bob is not smart.\n------\nProblem:\nAnne is furry. Anne is green."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1003_Q5",
    "context": "Anne is big. Anne is blue. Anne is rough. Bob is cold. Bob is green. Bob is rough. Bob is white. Dave is blue. Dave is white. Harry is young. If Bob is big then Bob is white. Young people are white. Cold, young people are rough. If Anne is green and Anne is young then Anne is white. White, big people are blue. All blue people are green. If someone is young and white then they are big. Blue people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nBlue(Anne, True) ::: Anne is blue.\nRough(Anne, True) ::: Anne is rough.\nCold(Bob, True) ::: Bob is cold.\nGreen(Bob, True) ::: Bob is green.\nRough(Bob, True) ::: Bob is rough.\nWhite(Bob, True) ::: Bob is white.\nBlue(Dave, True) ::: Dave is blue.\nWhite(Dave, True) ::: Dave is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBig(Bob, True) >>> White(Bob, True) ::: If Bob is big then Bob is white.\nYoung($x, True) >>> White($x, True) ::: Young people are white.\nYoung($x, True) && Cold($x, True) >>> Rough($x, True) ::: Cold, young people are rough.\nGreen($x, True) && Young($x, True) >>> White($x, True) ::: If Anne is green and Anne is young then Anne is white.\nWhite($x, True) && Big($x, True) >>> Blue($x, True) ::: White, big people are blue.\nBlue($x, True) >>> Green($x, True) ::: All blue people are green.\nYoung($x, True) && White($x, True) >>> Big($x, True) ::: If someone is young and white then they are big.\nBlue($x, True) >>> Cold($x, True) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-689_Q7",
    "context": "Anne is big. Anne is rough. Anne is young. Bob is young. Charlie is cold. Charlie is green. Charlie is nice. Charlie is young. Gary is green. Gary is young. Big, quiet people are green. If someone is cold and young then they are nice. If Bob is rough and Bob is green then Bob is cold. Green people are nice. All nice people are quiet. Young people are cold. If someone is quiet and nice then they are rough. If someone is rough and young then they are cold. All rough, nice people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nBig(Anne, True) ::: Anne is big.\nRough(Anne, True) ::: Anne is rough.\nYoung(Anne, True) ::: Anne is young.\nYoung(Bob, True) ::: Bob is young.\nCold(Charlie, True) ::: Charlie is cold.\nGreen(Charlie, True) ::: Charlie is green.\nNice(Charlie, True) ::: Charlie is nice.\nYoung(Charlie, True) ::: Charlie is young.\nGreen(Gary, True) ::: Gary is green.\nYoung(Gary, True) ::: Gary is young.\nRules:\nBig($x, True) >>> Green($x, True) ::: Big, quiet people are green.\nCold($x, True) && Young($x, True) >>> Nice($x, True) ::: If someone is cold and young then they are nice.\nCold($x, True) && Young($x, True) >>> Nice($x, True) ::: If Bob is rough and Bob is green then Bob is cold.\nGreen($x, True) >>> Nice($x, True) ::: Green people are nice.\nNice($x, True) >>> Quiet($x, True) ::: All nice people are quiet.\nYoung($x, True) >>> Cold($x, True) ::: Young people are cold.\nQuiet($x, True) && Nice($x, True) >>> Rough($x, True) ::: If someone is quiet and nice then they are rough.\nRough($x, True) && Young($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-789_Q23",
    "context": "The bald eagle eats the lion. The bald eagle is cold. The bald eagle sees the cat. The cat eats the lion. The cat is round. The cat sees the bald eagle. The lion chases the cat. The lion eats the cat. The lion eats the squirrel. The squirrel chases the bald eagle. The squirrel chases the lion. The squirrel eats the lion. The squirrel is cold. The squirrel is kind. If something is round then it sees the cat. If something chases the cat and the cat is cold then the cat eats the squirrel. If something chases the cat and it is kind then it is round. If the lion eats the squirrel and the lion sees the cat then the lion is young. If something is cold then it chases the cat. If the squirrel eats the bald eagle and the bald eagle is cold then the bald eagle is round. If something chases the bald eagle and it is young then it chases the squirrel. If something eats the squirrel and it eats the cat then the squirrel chases the cat. If something is round then it eats the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is not kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nSees($x, $y) ::: Does x see y?\nChases($x, $y) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(BaldEagle, Lion) ::: The bald eagle eats the lion.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nSees(BaldEagle, Cat) ::: The bald eagle sees the cat.\nEats(Cat, Lion) ::: The cat eats the lion.\nRound(Cat, True) ::: The cat is round.\nSees(Cat, BaldEagle) ::: The cat sees the bald eagle.\nChases(Cat, Lion) ::: The cat chases the lion.\nEats(Lion, Cat) ::: The lion eats the cat.\nEats(Lion, Squirrel) ::: The lion eats the squirrel.\nChases(Squirrel, BaldEagle) ::: The squirrel chases the bald eagle.\nChases(Squirrel, Lion) ::: The squirrel chases the lion.\nEats(Squirrel, Lion) ::: The squirrel eats the lion.\nCold(Squirrel, True) ::: The squirrel is cold.\nKind(Squirrel, True) ::: The squirrel is kind.\nRules:\nIf something is round then it sees the cat ::: If something is round then it sees the cat.\nIf something chases the cat and the cat is cold then the cat eats the squirrel ::: If something chases the cat and the cat is cold then the cat eats the squirrel.\nIf something chases the cat and it is kind then it is round"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-983_Q11",
    "context": "Charlie is blue. Charlie is quiet. Dave is blue. Dave is cold. Dave is young. Erin is blue. Erin is quiet. Erin is white. Erin is young. Gary is cold. Gary is quiet. Gary is young. All quiet things are furry. If Charlie is cold then Charlie is young. White things are cold. All young things are nice. If Gary is nice then Gary is young. If something is young then it is nice. If something is furry and blue then it is white. If something is young and furry then it is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nFacts:\nQuiet(Charlie, True) ::: Charlie is quiet.\nBlue(Charlie, True) ::: Charlie is blue.\nQuiet(Dave, True) ::: Dave is quiet.\nBlue(Dave, True) ::: Dave is blue.\nYoung(Dave, True) ::: Dave is young.\nBlue(Erin, True) ::: Erin is blue.\nQuiet(Erin, True) ::: Erin is quiet.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nCold(Gary, True) ::: Gary is cold.\nQuiet(Gary, True) ::: Gary is quiet.\nYoung(Gary, True) ::: Gary is young.\nRules:\nQuiet($x, True) >>> Furry($x, True) ::: All quiet things are furry.\nCold(Charlie, True) >>> Young(Charlie, True) ::: If Charlie is cold then Charlie is young.\nWhite($x, True) >>> Cold($x, True) ::: White things are cold.\nYoung($x, True) >>> Nice($x, True) ::: All young things are nice.\nNice(Gary, True) >>> Young(Gary, True) ::: If Gary is nice then Gary is young.\nNice($x, True) >>> Young($x, True) ::: If something is young then it is nice.\nFurry($x, True) && Blue($x, True) >>> White($x, True) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1170_Q13",
    "context": "Bob is kind. Charlie is quiet. Charlie is rough. Fiona is kind. Fiona is rough. Fiona is white. Gary is nice. If Gary is red and Gary is white then Gary is quiet. All white things are rough. If something is rough then it is red. If something is nice then it is white. All smart things are white. Rough, quiet things are not kind. If something is quiet and not smart then it is kind. Smart things are quiet. If something is smart and not rough then it is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRough(Charlie, True) ::: Charlie is rough.\nKind(Fiona, True) ::: Fiona is kind.\nRough(Fiona, True) ::: Fiona is rough.\nWhite(Fiona, True) ::: Fiona is white.\nNice(Gary, True) ::: Gary is nice.\nRules:\nIf Gary is red and Gary is white then Gary is quiet ::: If Gary is red and Gary is white then Gary is quiet.\nAll white things are rough ::: All white things are rough.\nIf something is rough then it is red ::: If something is rough then it is red.\nIf something is nice then it is white ::: If something is nice then it is white.\nAll smart things are white ::: All smart things are white.\nRough, quiet things are not kind ::: Rough, quiet things are not kind.\nIf something is quiet and not smart then it is kind ::: If something is quiet and not smart then it is kind.\nSmart things are quiet ::: Smart things are quiet.\nIf something is smart and not rough then it is quiet ::: If something is smart and not rough then it is quiet.\nQuery:\nNot(White(Charlie, True)) ::: Charlie is not white.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1201_Q18",
    "context": "Anne is furry. Bob is furry. Gary is blue. Gary is cold. Gary is furry. Gary is quiet. Gary is round. Harry is blue. Harry is cold. Harry is quiet. Harry is round. Harry is young. Cold, blue things are quiet. All round, furry things are quiet. If Bob is blue and Bob is round then Bob is young. If something is round then it is blue. If something is young and round then it is blue. If Harry is quiet and Harry is furry then Harry is blue. Furry things are cold. Cold things are round. If something is young and furry then it is rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is furry.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nRough($x, bool) ::: Is x rough?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nFurry(Bob, True) ::: Bob is furry.\nBlue(Gary, True) ::: Gary is blue.\nCold(Gary, True) ::: Gary is cold.\nFurry(Gary, True) ::: Gary is furry.\nQuiet(Gary, True) ::: Gary is quiet.\nRound(Gary, True) ::: Gary is round.\nBlue(Harry, True) ::: Harry is blue.\nCold(Harry, True) ::: Harry is cold.\nQuiet(Harry, True) ::: Harry is quiet.\nRound(Harry, True) ::: Harry is round.\nYoung(Harry, True) ::: Harry is young.\nRules:\nCold($x, True) >>> Blue($x, True) ::: Cold, blue things are quiet.\nFurry($x, True) && Round($x, True) >>> Quiet($x, True) ::: All round, furry things are quiet.\nBlue($x, True) && Round($x, True) >>> Young($x, True) ::: If Bob is blue and Bob is round then Bob is young.\nRound($x, True) >>> Blue($x, True) ::: If something"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-301_Q4",
    "context": "The cat eats the dog. The cat is young. The cat needs the rabbit. The dog is young. The dog needs the rabbit. The lion is green. The lion needs the cat. The rabbit chases the cat. The rabbit chases the dog. The rabbit eats the cat. The rabbit needs the cat. The rabbit needs the lion. All green things are red. If something is red and young then it eats the lion. If something eats the cat then the cat is green. If something is blue and it eats the cat then the cat chases the dog. If something eats the rabbit and it needs the lion then the rabbit is red. If something eats the lion then the lion is young. If something is big then it eats the cat. If something eats the rabbit then the rabbit eats the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nBig($x, bool) ::: Is x big?\nChases($x, $y, bool) ::: Does x chase y?\nFacts:\nEats(Cat, Dog, True) ::: The cat eats the dog.\nYoung(Cat, True) ::: The cat is young.\nNeeds(Cat, Rabbit, True) ::: The cat needs the rabbit.\nYoung(Dog, True) ::: The dog is young.\nNeeds(Dog, Rabbit, True) ::: The dog needs the rabbit.\nGreen(Lion, True) ::: The lion is green.\nNeeds(Lion, Cat, True) ::: The lion needs the cat.\nChases(Cat, Rabbit, True) ::: The rabbit chases the cat.\nChases(Dog, Rabbit, True) ::: The rabbit chases the dog.\nEats(Cat, Rabbit, True) ::: The rabbit eats the cat.\nNeeds(Rabbit, Cat, True) ::: The rabbit needs the cat.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nRed(Lion, True) ::: All green things are red.\nYoung(Lion, True) ::: If something is red and young then it eats the lion.\nEats(Cat"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-136_Q10",
    "context": "The bald eagle is rough. The bear eats the dog. The bear is big. The bear needs the dog. The bear sees the cat. The bear sees the dog. The cat eats the dog. The dog is nice. The dog is rough. The dog needs the bear. The dog needs the cat. The dog sees the bald eagle. If something eats the bear then the bear eats the bald eagle. If something needs the cat then the cat eats the bald eagle. If something sees the cat and the cat is green then the cat eats the bear. If something eats the bear and it eats the dog then the bear is rough. If something eats the bald eagle then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nEats($x, $y, bool) ::: Does x eat y?\nBig($x, bool) ::: Is x big?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nGreen($x, bool) ::: Is x green?\nFacts:\nRough(BaldEagle, True) ::: The bald eagle is rough.\nEats(Bear, Dog, True) ::: The bear eats the dog.\nBig(Bear, True) ::: The bear is big.\nNeeds(Bear, Dog, True) ::: The bear needs the dog.\nSees(Bear, Cat, True) ::: The bear sees the cat.\nSees(Bear, Dog, True) ::: The bear sees the dog.\nEats(Cat, Dog, True) ::: The cat eats the dog.\nNice(Dog, True) ::: The dog is nice.\nRough(Dog, True) ::: The dog is rough.\nNeeds(Dog, Bear, True) ::: The dog needs the bear.\nNeeds(Dog, Cat, True) ::: The dog needs the cat.\nSees(Dog, BaldEagle, True) ::: The dog sees the bald eagle.\nRules:\nEats(Bear, BaldEagle, True) >>> BearEatsBaldEagle ::: If something eats the bear then the bear eats the bald eagle.\nNeeds(Cat, BaldEagle, True) >>> CatEatsBaldEagle ::: If something needs the cat then the cat eats the bald eagle"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-873_Q17",
    "context": "The bald eagle is green. The bald eagle likes the squirrel. The bald eagle likes the tiger. The bear is nice. The bear is round. The bear likes the bald eagle. The bear likes the tiger. The squirrel is young. The squirrel likes the bear. The squirrel needs the bald eagle. The squirrel sees the tiger. The tiger is cold. The tiger likes the bear. The tiger likes the squirrel. The tiger needs the bear. The tiger sees the bear. If something needs the bald eagle and the bald eagle likes the bear then the bald eagle needs the tiger. If something needs the squirrel then it needs the tiger. If something is green then it needs the squirrel. If something needs the bear and it needs the bald eagle then the bear likes the bald eagle. If something likes the bald eagle then it is young. If something likes the bear and it sees the bald eagle then it needs the bear. Round things are green. If something sees the squirrel and the squirrel likes the bear then it is cold. If something needs the bear and the bear is green then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nLikes(BaldEagle, Squirrel, True) ::: The bald eagle likes the squirrel.\nLikes(BaldEagle, Tiger, True) ::: The bald eagle likes the tiger.\nNice(Bear, True) ::: The bear is nice.\nRound(Bear, True) ::: The bear is round.\nLikes(Bear, BaldEagle, True) ::: The bear likes the bald eagle.\nLikes(Bear, Tiger, True) ::: The bear likes the tiger.\nYoung(Squirrel, True) ::: The squirrel is young.\nLikes(Squirrel, Bear, True) ::: The squirrel likes the bear.\nNeeds(Squirrel, BaldEagle, True) ::: The squirrel needs the bald eagle.\nSees(Squirrel, Tiger, True) ::: The squirrel sees the tiger.\nCold(Tiger, True) ::: The tiger is cold.\nLikes(Tiger, Bear, True) ::: The tiger likes the bear.\nLikes(Tiger, Squirrel, True) ::: The tiger likes the squirrel.\nNeeds(Tiger, Bear"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-115_Q3",
    "context": "The bald eagle is blue. The bald eagle is red. The bald eagle likes the lion. The bald eagle needs the bear. The bald eagle needs the dog. The bear is not blue. The bear is nice. The bear needs the dog. The dog chases the bald eagle. The dog is red. The dog does not need the bear. The lion does not like the bear. If something likes the lion and it is not red then it chases the lion. If something is red and it needs the bald eagle then the bald eagle needs the lion. If something is round then it does not like the dog. If the bald eagle needs the dog then the dog is round. If something likes the dog then it likes the bald eagle. If something chases the lion and the lion likes the dog then the dog does not like the lion. If the bear likes the lion then the lion likes the dog. If something likes the bear then the bear likes the lion. If something is round then it likes the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nRound($x, bool) ::: Is x round?\nFacts:\nBlue(BaldEagle, True) ::: The bald eagle is blue.\nRed(BaldEagle, True) ::: The bald eagle is red.\nLikes(BaldEagle, Lion, True) ::: The bald eagle likes the lion.\nNeeds(BaldEagle, Bear, True) ::: The bald eagle needs the bear.\nNeeds(BaldEagle, Dog, True) ::: The bald eagle needs the dog.\nNot(Blue(Bear, True)) ::: The bear is not blue.\nNice(Bear, True) ::: The bear is nice.\nNeeds(Bear, Dog, True) ::: The bear needs the dog.\nChases(Dog, BaldEagle, True) ::: The dog chases the bald eagle.\nRed(Dog, True) ::: The dog is red.\nNot(Needs(Dog, Bear, True)) ::: The dog does not need the bear.\nNot(Likes(Lion, Bear, True)) ::: The lion does not like the bear.\nIf(Likes(Lion, $x, True), Not(Red($x, True))) ::: If something likes the lion and it is not red then it chases the lion.\nIf(Red($x, True), Needs(BaldEagle,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-882_Q12",
    "context": "Bob is nice. Dave is big. Erin is furry. Erin is nice. Erin is rough. Harry is cold. Harry is white. All rough people are furry. If someone is rough and cold then they are white. If someone is nice then they are big. Furry, nice people are big. All big people are red. All nice, big people are rough. All furry, big people are cold. All cold, white people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nFacts:\nNice(Bob, True) ::: Bob is nice.\nBig(Dave, True) ::: Dave is big.\nFurry(Erin, True) ::: Erin is furry.\nNice(Erin, True) ::: Erin is nice.\nRough(Erin, True) ::: Erin is rough.\nWhite(Harry, True) ::: Harry is white.\nCold(Harry, True) ::: Harry is cold.\nRules:\nRough($x, True) >>> Furry($x, True) ::: All rough people are furry.\nRough($x, True) && Cold($x, True) >>> White($x, True) ::: If someone is rough and cold then they are white.\nNice($x, True) >>> Big($x, True) ::: If someone is nice then they are big.\nFurry($x, True) && Nice($x, True) >>> Big($x, True) ::: Furry, nice people are big.\nBig($x, True) >>> Red($x, True) ::: All big people are red.\nNice($x, True) && Big($x, True) >>> Rough($x, True) ::: All nice, big people are rough.\nFurry($x, True) && Big($x,"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1229_Q3",
    "context": "Anne is cold. Anne is white. Bob is nice. Bob is white. Dave is blue. Gary is blue. Gary is smart. All blue people are smart. If someone is smart then they are cold. If someone is white then they are quiet. If someone is nice and quiet then they are blue. All white, furry people are blue. If Gary is furry then Gary is cold. If Bob is not white then Bob is smart. All cold, blue people are not furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nFurry($x, bool) ::: Is x furry?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nWhite(Anne, True) ::: Anne is white.\nNice(Bob, True) ::: Bob is nice.\nWhite(Bob, True) ::: Bob is white.\nBlue(Dave, True) ::: Dave is blue.\nBlue(Gary, True) ::: Gary is blue.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nBlue($x, True) >>> Smart($x, True) ::: All blue people are smart.\nSmart($x, True) >>> Cold($x, True) ::: If someone is smart then they are cold.\nWhite($x, True) >>> Quiet($x, True) ::: If someone is white then they are quiet.\nNice($x, True) && Quiet($x, True) >>> Blue($x, True) ::: If someone is nice and quiet then they are blue.\nWhite($x, True) && Furry($x, True) >>> Blue($x, True) ::: All white, furry people are blue.\nFurry($x, True) >>> Cold($x, True) ::: If Gary is furry then Gary is cold.\nNot(White($x, True)) >>> Smart($x, True) ::: If Bob is not white then Bob is smart.\nNot(Furry($x"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-127_Q2",
    "context": "The bear is blue. The bear is green. The bear is red. The bear sees the rabbit. The cow is blue. The cow needs the tiger. The cow visits the rabbit. The rabbit is cold. The rabbit is nice. The rabbit needs the cow. The rabbit sees the cow. The rabbit sees the tiger. The tiger needs the bear. The tiger needs the rabbit. The tiger visits the bear. The tiger visits the cow. If something is green then it visits the tiger. If something sees the bear and it is cold then the bear is green. If the cow needs the rabbit and the rabbit needs the cow then the rabbit is red. If something is green then it needs the cow. If something visits the tiger then the tiger is red. If something needs the tiger and the tiger sees the cow then the cow needs the bear. If something sees the bear and it needs the bear then it sees the cow. If something visits the rabbit then the rabbit needs the tiger. If something needs the bear and the bear visits the tiger then it sees the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBlue(Bear, True) ::: The bear is blue.\nGreen(Bear, True) ::: The bear is green.\nRed(Bear, True) ::: The bear is red.\nSees(Bear, Rabbit, True) ::: The bear sees the rabbit.\nBlue(Cow, True) ::: The cow is blue.\nNeeds(Cow, Tiger, True) ::: The cow needs the tiger.\nVisits(Cow, Rabbit, True) ::: The cow visits the rabbit.\nCold(Rabbit, True) ::: The rabbit is cold.\nNice(Rabbit, True) ::: The rabbit is nice.\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow.\nSees(Rabbit, Cow, True) ::: The rabbit sees the cow.\nSees(Rabbit, Tiger, True) ::: The rabbit sees the tiger.\nNeeds(Tiger, Bear, True) ::: The tiger needs the bear.\nNeeds(Tiger, Rabbit, True) ::: The tiger needs the rabbit.\nVisits(Tiger, Bear,"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1015_Q3",
    "context": "Anne is furry. Anne is nice. Dave is furry. Dave is not nice. Erin is smart. Harry is furry. Harry is nice. All round people are quiet. All round people are green. All quiet, furry people are green. Furry people are green. Big, quiet people are not smart. Smart people are nice. All green people are big. If Anne is big and Anne is green then Anne is round. If someone is quiet and smart then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nNice(Anne, True) ::: Anne is nice.\nFurry(Dave, True) ::: Dave is furry.\nNice(Dave, False) ::: Dave is not nice.\nSmart(Erin, True) ::: Erin is smart.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nQuiet(Anne, True) ::: Anne is quiet.\nQuiet(Dave, True) ::: Dave is quiet.\nRound(Anne, True) ::: Anne is round.\nRound(Dave, True) ::: Dave is round.\nGreen(Anne, True) ::: Anne is green.\nGreen(Dave, True) ::: Dave is green.\nBig(Anne, True) ::: Anne is big.\nBig(Dave, True) ::: Dave is big.\nRules:\nFurry($x, True) >>> Green($x, True) ::: Furry people are green.\nFurry($x, True) >>> Green($x, True) ::: Furry people are green.\nQuiet($x, True) && Furry($x, True) >>> Green($x,"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-333_Q7",
    "context": "Bob is round. Erin is quiet. Erin is smart. Erin is not white. Fiona is green. Fiona is quiet. Fiona is smart. Gary is big. Gary is green. Gary is quiet. Gary is white. All quiet things are smart. Round things are quiet. All green, round things are white. If Fiona is not quiet then Fiona is white. Smart, white things are big. If something is nice and quiet then it is big. If something is quiet and not smart then it is not green. All quiet, smart things are green. If something is big then it is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFacts:\nRound(Bob, True) ::: Bob is round.\nQuiet(Erin, True) ::: Erin is quiet.\nSmart(Erin, True) ::: Erin is smart.\nNot(White(Erin, True)) ::: Erin is not white.\nGreen(Fiona, True) ::: Fiona is green.\nQuiet(Fiona, True) ::: Fiona is quiet.\nSmart(Fiona, True) ::: Fiona is smart.\nGreen(Gary, True) ::: Gary is green.\nQuiet(Gary, True) ::: Gary is quiet.\nWhite(Gary, True) ::: Gary is white.\nRules:\nQuiet($x, True) >>> Smart($x, True) ::: All quiet things are smart.\nRound($x, True) >>> Quiet($x, True) ::: Round things are quiet.\nGreen($x, True) && Round($x, True) >>> White($x, True) ::: All green, round things are white.\nNot(Quiet(Fiona, True)) >>> White(Fiona, True) ::: If Fiona is not quiet then Fiona is white.\nSmart($x, True) && White($x, True) >>> Big($x, True) ::: Smart, white things are big.\nNice($x, True) && Quiet($x, True) >>> Big($x, True) ::: If something is nice and quiet then it is big.\nQuiet($x, True) && Not(Smart($x, True)) >>> Not(Green($x, True)) ::: If something is quiet and not smart then it is not green.\nSmart($x, True) && Green($x, True) >>> Quiet($x, True) ::: All quiet, smart things are green.\nBig($x, True) >>> Nice($x, True) ::: If something is big then it is nice.\nQuery:\nGreen(Bob, True) ::: Bob is green.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-640_Q8",
    "context": "Bob is rough. Dave is furry. Dave is nice. Dave is not red. Dave is smart. Fiona is green. Fiona is nice. Harry is blue. Harry is furry. Harry is green. Harry is nice. Harry is not red. Harry is rough. Harry is smart. Smart things are green. If something is nice and not rough then it is red. If something is nice then it is smart. If something is rough then it is nice. If something is blue then it is furry. All blue, smart things are furry. If Bob is furry and Bob is not rough then Bob is green. If something is green then it is blue. If something is red and not nice then it is not blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nFacts:\nRough(Bob, True) ::: Bob is rough.\nFurry(Dave, True) ::: Dave is furry.\nNice(Dave, True) ::: Dave is nice.\nRed(Dave, False) ::: Dave is not red.\nSmart(Dave, True) ::: Dave is smart.\nGreen(Fiona, True) ::: Fiona is green.\nNice(Fiona, True) ::: Fiona is nice.\nBlue(Harry, True) ::: Harry is blue.\nFurry(Harry, True) ::: Harry is furry.\nGreen(Harry, True) ::: Harry is green.\nNice(Harry, True) ::: Harry is nice.\nRed(Harry, False) ::: Harry is not red.\nRough(Harry, True) ::: Harry is rough.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nSmart($x, True) >>> Green($x, True) ::: Smart things are green.\nNice($x, True) && Not($x, Rough) >>> Red($x, True) ::: If something is nice and not rough then it is red.\nNice($x, True) >>> Smart($x, True) ::: If something is nice then it is smart.\nRough($x, True) >>> Nice($x, True) ::: If something is rough then it is nice.\nBlue($x, True) >>> Furry($x, True) ::: If something is blue then it is furry.\nAll($x, Blue, Smart) >>> Furry($x, True) ::: All blue, smart things are furry.\nFurry($x, True) && Not($x, Rough) >>> Green($x, True) ::: If Bob is furry and Bob is not rough then Bob is green.\nGreen($x, True) >>> Blue($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-454_Q15",
    "context": "Anne is green. Anne is nice. Anne is not rough. Anne is smart. Bob is green. Bob is nice. Fiona is white. Gary is rough. Gary is round. Gary is white. If something is nice then it is round. If something is white then it is round. If something is young and not nice then it is round. If Bob is round and Bob is green then Bob is rough. If something is young and green then it is smart. Smart things are white. If something is rough and not green then it is white. If something is rough then it is young. All rough things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nNice(Anne, True) ::: Anne is nice.\nNot(Rough(Anne, True)) ::: Anne is not rough.\nSmart(Anne, True) ::: Anne is smart.\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, True) ::: Bob is nice.\nWhite(Fiona, True) ::: Fiona is white.\nRound(Gary, True) ::: Gary is round.\nWhite(Gary, True) ::: Gary is white.\nRules:\nNice($x, True) >>> Round($x, True) ::: If something is nice then it is round.\nWhite($x, True) >>> Round($x, True) ::: If something is white then it is round.\nYoung($x, True) && Not(Nice($x, True)) >>> Round($x, True) ::: If something is young and not nice then it is round.\nAnd(Bob(Round($x, True)), Bob(Green($x, True))) >>> Rough($x, True) ::: If Bob is round and Bob is green then Bob is rough.\nYoung($x, True) && Green($x, True) >>> Smart($x, True) ::: If something is young and green then it is smart.\nSmart($x, True) >>> White($x, True) ::: Smart things are white.\nNot(Green($x, True)) && Rough($x, True) >>> White($x, True) ::: If something is rough and not green then it is white.\nRough($x, True) >>> Young($x, True) ::: If something is rough then it is young.\nAll(Rough($x, True), Young($x, True)) ::: All rough things are young.\nQuery:\nNot(Young(Fiona, True)) ::: Fiona is not young.\n------\nProblem:\nAnne is green. Anne is"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-298_Q21",
    "context": "The bald eagle eats the tiger. The bald eagle is young. The bald eagle likes the mouse. The bald eagle needs the rabbit. The mouse is kind. The mouse needs the bald eagle. The rabbit is young. The rabbit needs the mouse. The tiger is round. The tiger likes the bald eagle. The tiger needs the mouse. If something likes the rabbit then it eats the mouse. If something needs the rabbit then it likes the rabbit. All kind things are round. If the mouse eats the rabbit then the mouse eats the bald eagle. If something eats the mouse then the mouse needs the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y) ::: Does x like y?\nNeeds($x, $y) ::: Does x need y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nFacts:\nEats(BaldEagle, Tiger) ::: The bald eagle eats the tiger.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nLikes(BaldEagle, Mouse) ::: The bald eagle likes the mouse.\nNeeds(BaldEagle, Rabbit) ::: The bald eagle needs the rabbit.\nKind(Mouse, True) ::: The mouse is kind.\nNeeds(Mouse, BaldEagle) ::: The mouse needs the bald eagle.\nYoung(Rabbit, True) ::: The rabbit is young.\nNeeds(Rabbit, Mouse) ::: The rabbit needs the mouse.\nRound(Tiger, True) ::: The tiger is round.\nLikes(Tiger, BaldEagle) ::: The tiger likes the bald eagle.\nNeeds(Tiger, Mouse) ::: The tiger needs the mouse.\nRules:\nIf something likes the rabbit then it eats the mouse ::: If something likes the rabbit then it eats the mouse.\nIf something needs the rabbit then it likes the rabbit ::: If something needs the rabbit then it likes the rabbit.\nAll kind things are round ::: All kind things are round.\nIf the mouse eats the rabbit then the mouse eats the bald eagle ::: If the mouse eats the rabbit then the mouse eats the bald eagle.\nIf something eats the mouse then the mouse needs the rabbit ::: If something eats the mouse then the mouse needs the rabbit.\nQuery:\nNot(Red(Tiger, True)) ::: The tiger is not red.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is quiet. The cat is rough. The cat is white. The dog is furry. The dog is green. The dog is quiet. The dog is rough."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-844_Q1",
    "context": "Anne is big. Anne is cold. Anne is furry. Anne is white. Erin is cold. Fiona is round. Gary is smart. All smart things are furry. Big, blue things are round. If Gary is cold then Gary is smart. All blue, furry things are big. If Gary is furry then Gary is blue. Round things are cold. Cold, white things are furry. Round things are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFacts:\nBig(Anne, True) ::: Anne is big.\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nWhite(Anne, True) ::: Anne is white.\nCold(Erin, True) ::: Erin is cold.\nRound(Fiona, True) ::: Fiona is round.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nSmart($x, True) >>> Furry($x, True) ::: All smart things are furry.\nBig($x, True) && Blue($x, True) >>> Round($x, True) ::: Big, blue things are round.\nCold($x, True) >>> Smart($x, True) ::: If Gary is cold then Gary is smart.\nBlue($x, True) && Furry($x, True) >>> Big($x, True) ::: All blue, furry things are big.\nFurry($x, True) >>> Blue($x, True) ::: If Gary is furry then Gary is blue.\nRound($x, True) >>> Cold($x, True) ::: Round things are cold.\nCold($x, True) && White($x, True) >>> Furry($x, True) ::: Cold, white things are furry.\nRound($x, True) >>> Blue($x, True) ::: Round things are blue.\nQuery:\nCold(Anne, True) ::: Anne is cold.\n------\nProblem:\nAnne is big. Anne is cold. Anne is furry. Anne is white. Erin is cold. Fiona is round. Gary is smart. All smart things are furry. Big, blue things are round. If Gary is cold then Gary is smart. All blue, furry things are big. If Gary is furry then Gary is blue. Round things are cold. Cold, white things are furry. Round things are blue.\nQuestion:\nBased on the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-876_Q12",
    "context": "Anne is kind. Anne is red. Anne is round. Charlie is blue. Charlie is quiet. Charlie is red. Dave is blue. Erin is quiet. Erin is red. Erin is smart. If something is round then it is rough. Smart things are kind. If something is rough then it is kind. All blue things are red. Red things are round. All kind, blue things are round. If Dave is kind and Dave is rough then Dave is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nRed(Anne, True) ::: Anne is red.\nRound(Anne, True) ::: Anne is round.\nBlue(Charlie, True) ::: Charlie is blue.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nBlue(Dave, True) ::: Dave is blue.\nQuiet(Erin, True) ::: Erin is quiet.\nRed(Erin, True) ::: Erin is red.\nSmart(Erin, True) ::: Erin is smart.\nRules:\nRound($x, True) >>> Rough($x, True) ::: If something is round then it is rough.\nSmart($x, True) >>> Kind($x, True) ::: Smart things are kind.\nRough($x, True) >>> Kind($x, True) ::: If something is rough then it is kind.\nBlue($x, True) >>> Red($x, True) ::: All blue things are red.\nRed($x, True) >>> Round($x, True) ::: Red things are round.\nKind($x, True) && Blue($x, True) >>> Round($x, True) ::: All kind, blue things are round.\nDave(Kind($x, True) && Rough($x, True)) >>> Quiet($x, True) ::: If Dave is kind and Dave is rough then Dave is quiet.\nQuery:\nNot(Quiet(Dave, True)) ::: Dave is not quiet.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is red. Anne is rough. Anne is white. Anne is young. Anne is kind. Anne is smart. Anne is blue. Anne is round. Anne is quiet. Anne is rough. Anne is white. Anne is young. Anne is kind. Anne is smart. Anne is blue. Anne is round. Anne is quiet. Anne"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1251_Q3",
    "context": "Erin is big. Erin is green. Erin is kind. Erin is quiet. Erin is red. Erin is smart. Fiona is big. Gary is rough. Harry is quiet. Harry is smart. All smart people are kind. If Harry is rough and Harry is red then Harry is quiet. If someone is green then they are smart. All kind people are quiet. If someone is rough and big then they are green. Rough people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Erin, True) ::: Erin is big.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::: Erin is kind.\nQuiet(Erin, True) ::: Erin is quiet.\nRed(Erin, True) ::: Erin is red.\nSmart(Erin, True) ::: Erin is smart.\nBig(Fiona, True) ::: Fiona is big.\nRough(Gary, True) ::: Gary is rough.\nQuiet(Harry, True) ::: Harry is quiet.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nSmart($x, True) >>> Kind($x, True) ::: All smart people are kind.\nHarry(Rough, True) && Harry(Red, True) >>> Harry(Quiet, True) ::: If Harry is rough and Harry is red then Harry is quiet.\nGreen($x, True) >>> Smart($x, True) ::: If someone is green then they are smart.\nKind($x, True) >>> Quiet($x, True) ::: All kind people are quiet.\nRough($x, True) >>> Big($x, True) ::: Rough people are big.\nBig($x, True) >>> Green($x, True) ::: If someone is rough and big then they are green.\nQuery:\nBig(Gary, True) ::: Gary is big.\n------\nProblem:\nErin is big. Erin is green. Erin is kind. Erin is quiet. Erin is red. Erin is smart. Fiona is big. Gary is rough. Harry is quiet. Harry is smart. All smart people are kind. If Harry is rough and Harry is red then Harry is quiet. If someone is green then they are smart. All kind people are quiet. If someone is rough and big then they are green. Rough people are big.\nQuestion"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1176_Q12",
    "context": "Bob is not round. Charlie is furry. Charlie is nice. Charlie is smart. Erin is red. Fiona is furry. Fiona is young. All red people are not round. Red people are not blue. All young people are furry. If Erin is red and Erin is not round then Erin is nice. If someone is round and nice then they are not young. All smart people are young. Nice people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotRound(Bob, True) ::: Bob is not round.\nFurry(Charlie, True) ::: Charlie is furry.\nNice(Charlie, True) ::: Charlie is nice.\nSmart(Charlie, True) ::: Charlie is smart.\nRed(Erin, True) ::: Erin is red.\nFurry(Fiona, True) ::: Fiona is furry.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nRed($x, True) >>> NotRound($x, True) ::: All red people are not round.\nRed($x, True) >>> NotBlue($x, True) ::: Red people are not blue.\nYoung($x, True) >>> Furry($x, True) ::: All young people are furry.\nRed($x, True) && NotRound($x, True) >>> Nice($x, True) ::: If Erin is red and Erin is not round then Erin is nice.\nRound($x, True) && Nice($x, True) >>> NotYoung($x, True) ::: If someone is round and nice then they are not young.\nSmart($x, True) >>> Young($x, True) ::: All smart people are young.\nNice($x, True) >>> Smart($x, True) ::: Nice people are smart.\nQuery:\nNotFurry(Erin, True) ::: Erin is not furry.\n------\nProblem:\nBob is not round. Charlie is furry. Charlie is nice. Charlie is smart. Erin is red. Fiona is furry. Fiona is young. All red people are not round. Red people are not blue. All young people are furry. If Erin is red and Erin is not round then Erin is nice. If someone is round and nice then they are not young. All smart people are young. Nice people are"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-151_Q4",
    "context": "The cat chases the tiger. The cat is red. The lion is nice. The lion is red. The lion sees the cat. The lion sees the rabbit. The lion sees the tiger. The rabbit chases the tiger. The rabbit sees the tiger. The tiger chases the cat. The tiger chases the rabbit. The tiger is nice. If someone is red and they eat the rabbit then they are blue. If the lion eats the cat and the lion chases the rabbit then the cat is kind. If the rabbit eats the tiger then the tiger is nice. If someone is rough then they see the cat. If someone is nice and they chase the rabbit then the rabbit is nice. If someone eats the cat and they are kind then they see the tiger. If someone is nice and they chase the tiger then they are blue. If someone is blue then they eat the cat. If someone eats the cat then the cat is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(Cat, Tiger, True) ::: The cat chases the tiger.\nRed(Cat, True) ::: The cat is red.\nNice(Lion, True) ::: The lion is nice.\nRed(Lion, True) ::: The lion is red.\nSees(Lion, Cat, True) ::: The lion sees the cat.\nSees(Lion, Rabbit, True) ::: The lion sees the rabbit.\nSees(Lion, Tiger, True) ::: The lion sees the tiger.\nChases(Rabbit, Tiger, True) ::: The rabbit chases the tiger.\nSees(Rabbit, Tiger, True) ::: The rabbit sees the tiger.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nNice(Tiger, True) ::: The tiger is nice.\nRed($x, True) >>> Blue($x, True) ::: If someone is red and they eat the rabbit then they are blue.\nKind(Lion, True) && Chases(Lion, Rabbit) >>> Cat(Lion, True) ::: If the lion eats the cat and the lion chases the rabbit then the cat is kind.\nEats(Rabbit, Tiger, True) >>> Nice(Tiger, True) ::: If the rabbit eats the tiger then the tiger is nice.\nRough($x, True) >>> Sees(Cat, $x, True) ::: If someone is rough then they see the cat.\nNice($x, True) && Chases($x, Rabbit, True) >>> Nice(Rabbit, True) ::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-789_Q9",
    "context": "The bald eagle eats the lion. The bald eagle is cold. The bald eagle sees the cat. The cat eats the lion. The cat is round. The cat sees the bald eagle. The lion chases the cat. The lion eats the cat. The lion eats the squirrel. The squirrel chases the bald eagle. The squirrel chases the lion. The squirrel eats the lion. The squirrel is cold. The squirrel is kind. If something is round then it sees the cat. If something chases the cat and the cat is cold then the cat eats the squirrel. If something chases the cat and it is kind then it is round. If the lion eats the squirrel and the lion sees the cat then the lion is young. If something is cold then it chases the cat. If the squirrel eats the bald eagle and the bald eagle is cold then the bald eagle is round. If something chases the bald eagle and it is young then it chases the squirrel. If something eats the squirrel and it eats the cat then the squirrel chases the cat. If something is round then it eats the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nSees($x, $y) ::: Does x see y?\nChases($x, $y) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(BaldEagle, Lion) ::: The bald eagle eats the lion.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nSees(BaldEagle, Cat) ::: The bald eagle sees the cat.\nEats(Cat, Lion) ::: The cat eats the lion.\nRound(Cat, True) ::: The cat is round.\nSees(Cat, BaldEagle) ::: The cat sees the bald eagle.\nChases(Cat, Lion) ::: The cat chases the lion.\nEats(Lion, Cat) ::: The lion eats the cat.\nEats(Lion, Squirrel) ::: The lion eats the squirrel.\nChases(Squirrel, BaldEagle) ::: The squirrel chases the bald eagle.\nChases(Squirrel, Lion) ::: The squirrel chases the lion.\nEats(Squirrel, Lion) ::: The squirrel eats the lion.\nCold(Squirrel, True) ::: The squirrel is cold.\nKind(Squirrel, True) ::: The squirrel is kind.\nRules:\nRound($x, True) >>> Sees($x, Cat) ::: If something is round then it sees the cat.\nChases($x, Cat) && Cold($x, True) >>> Eats($x, Squirrel) ::: If something chases the cat and the cat is cold then the cat eats the squirrel.\nChases($x, Cat) && Kind($x, True) >>> Round($x, True) ::: If something chases the cat and it is kind then it is round.\nEats($x, Squirrel) && Eats($x, Cat) >>> Chases($x, Cat) ::: If the lion eats the squirrel and the"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-90_Q13",
    "context": "The bear is kind. The mouse chases the bear. The mouse chases the rabbit. The mouse visits the rabbit. The rabbit is blue. The rabbit needs the mouse. The squirrel chases the mouse. The squirrel chases the rabbit. The squirrel is blue. The squirrel is green. The squirrel is young. If the squirrel is young and the squirrel needs the rabbit then the squirrel visits the rabbit. If something is cold then it needs the squirrel. If something visits the mouse and the mouse needs the squirrel then it needs the rabbit. If something chases the bear then it is cold. If something visits the bear and the bear visits the squirrel then the squirrel visits the rabbit. If something needs the squirrel then the squirrel visits the mouse. If the mouse visits the bear and the mouse visits the squirrel then the squirrel visits the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not need the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nKind(Bear, True) ::: The bear is kind.\nChases(Mouse, Bear, True) ::: The mouse chases the bear.\nChases(Mouse, Rabbit, True) ::: The mouse chases the rabbit.\nVisits(Mouse, Rabbit, True) ::: The mouse visits the rabbit.\nBlue(Rabbit, True) ::: The rabbit is blue.\nNeeds(Rabbit, Mouse, True) ::: The rabbit needs the mouse.\nChases(Squirrel, Mouse, True) ::: The squirrel chases the mouse.\nChases(Squirrel, Rabbit, True) ::: The squirrel chases the rabbit.\nBlue(Squirrel, True) ::: The squirrel is blue.\nGreen(Squirrel, True) ::: The squirrel is green.\nYoung(Squirrel, True) ::: The squirrel is young.\nRules:\nYoung($x, True) >>> Needs($x, Rabbit, True) ::: If the squirrel is young and the squirrel needs the rabbit then the squirrel visits the rabbit.\nCold($x, True) >>> Needs($x, Squirrel, True) ::: If something is cold then it needs the squirrel.\nVisits($x, Mouse, True) && Needs($x, Squirrel, True) >>> Needs($x, Rabbit, True) ::: If something visits the mouse and the mouse needs the squirrel then it needs the rabbit.\nChases($x, Bear, True) >>> Cold($x, True) ::: If something chases the bear then it is cold.\nVisits($x, Bear, True) && Visits($x, Squirrel, True) >>> Visits($x, Rabbit, True) ::: If something visits the bear and the bear visits the squirrel then the squirrel visits the rabbit.\nNeeds($x, Squirrel, True) >>> Visits($x, Mouse, True) ::: If the mouse visits the bear and the mouse visits the squirrel then the squirrel visits the bear.\nQuery:\nNeeds(Bear, Squirrel, False) ::: The bear does not need the squirrel.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-111_Q9",
    "context": "The bald eagle chases the mouse. The bald eagle chases the squirrel. The bald eagle is cold. The lion chases the bald eagle. The lion does not chase the mouse. The lion chases the squirrel. The lion is blue. The lion needs the squirrel. The lion visits the squirrel. The mouse does not visit the bald eagle. The mouse does not visit the squirrel. The squirrel is cold. The squirrel is red. The squirrel does not visit the lion. If something visits the mouse then the mouse is green. If the mouse does not chase the lion then the mouse needs the lion. If something visits the squirrel and the squirrel does not chase the lion then the lion is green. If something is young then it visits the bald eagle. If something visits the bald eagle then the bald eagle visits the squirrel. If something visits the squirrel and the squirrel is red then it is young. If something needs the squirrel and it is not cold then the squirrel chases the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nIs($x, $y, bool) ::: Is x y?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nFacts:\nChases(BaldEagle, Mouse, True) ::: The bald eagle chases the mouse.\nChases(BaldEagle, Squirrel, True) ::: The bald eagle chases the squirrel.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nChases(Lion, BaldEagle, True) ::: The lion chases the bald eagle.\nChases(Lion, Mouse, False) ::: The lion does not chase the mouse.\nChases(Lion, Squirrel, True) ::: The lion chases the squirrel.\nBlue(Lion, True) ::: The lion is blue.\nNeeds(Lion, Squirrel, True) ::: The lion needs the squirrel.\nVisits(Lion, Squirrel, True) ::: The lion visits the squirrel.\nChases(Mouse, BaldEagle, False) ::: The mouse does not visit the bald eagle.\nChases(Mouse, Squirrel, False) ::: The mouse does not visit the squirrel.\nCold(Squirrel, True) ::: The squirrel is cold.\nRed(Squirrel, True) ::: The squirrel is red.\nChases(Squirrel, Lion, False) ::: The squirrel does not visit the lion.\nRules:\nIf something visits the mouse then the mouse is green. ::: If something visits the mouse then the mouse is green.\nIf the mouse does not chase the lion then the mouse needs the lion. ::: If the mouse does not chase the lion then the mouse needs the lion.\nIf something visits the squirrel and the squirrel does not chase the lion then the lion is green. ::: If something visits the squirrel and the squirrel does not chase the lion then the lion is green.\nIf something is young then it visits the bald eagle. ::: If something is young then it visits the bald eagle.\nIf something visits the bald eagle then the bald eagle visits the squirrel. ::: If something visits the bald eagle then the bald eagle visits the squirrel.\nIf something visits the squirrel and the squirrel is red then it is young. ::: If something visits the squirrel and the squirrel is red then it is young.\nIf"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-469_Q24",
    "context": "The cat chases the cow. The cat chases the lion. The cat chases the mouse. The cat eats the mouse. The cat visits the lion. The cow chases the cat. The cow is green. The lion chases the cow. The lion eats the cow. The lion eats the mouse. The lion visits the cat. The mouse eats the cow. The mouse is rough. The mouse is round. If something is cold then it visits the mouse. If something is round and it eats the mouse then the mouse chases the cow. If something visits the lion then it is big. If the mouse chases the cat and the mouse chases the lion then the mouse visits the cat. If something is cold and it chases the cat then it eats the cow. If something eats the lion and the lion eats the cow then the lion is cold. If something is cold and it visits the mouse then the mouse eats the lion. Big things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nFacts:\nChases(Cat, Cow, True) ::: The cat chases the cow.\nChases(Cat, Lion, True) ::: The cat chases the lion.\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nEats(Cat, Mouse, True) ::: The cat eats the mouse.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nChases(Cow, Cat, True) ::: The cow chases the cat.\nIs(Cow, Green, True) ::: The cow is green.\nChases(Lion, Cow, True) ::: The lion chases the cow.\nEats(Lion, Cow, True) ::: The lion eats the cow.\nEats(Lion, Mouse, True) ::: The lion eats the mouse.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nEats(Mouse, Cow, True) ::: The mouse eats the cow.\nIs(Mouse, Rough, True) ::: The mouse is rough.\nIs(Mouse, Round, True) ::: The mouse is round.\nRules:\nCold($x, True) >>> Visits($x, Mouse, True) ::: If something is cold then it visits the mouse.\nRound($x, True) && Eats($x, Mouse, True) >>> Chases($x, Cow, True) ::: If something is round and it eats the mouse then the mouse chases the cow.\nVisits($x, Lion, True) >>> Big($x, True) ::: If something visits the lion then it is big.\nChases($x, Cat, True) && Chases($x, Lion, True) >>> Visits($x, Cat, True) ::: If something is cold and it chases the cat then it eats the cow.\nEats($x, Lion, True) && Eats($x, Cow, True) >>> Lion($x, True) ::: If something eats the lion and the lion eats the cow then the lion is cold.\nCold($x, True) && Visits($x, Mouse, True) >>> Eats($x, Lion, True) ::: If something is cold and it visits the mouse then the mouse eats the lion.\nBig($"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-317_Q2",
    "context": "The cow chases the squirrel. The cow is young. The cow sees the squirrel. The dog is round. The dog likes the rabbit. The dog likes the squirrel. The dog sees the rabbit. The rabbit chases the cow. The rabbit does not chase the dog. The squirrel chases the rabbit. The squirrel is young. The squirrel likes the cow. If someone chases the cow then the cow is big. If someone likes the rabbit and they do not see the squirrel then they are big. If someone is big then they like the rabbit. If someone is young then they do not see the dog. If someone is blue then they chase the cow. If someone likes the rabbit then they like the cow. If someone likes the cow then they see the cow. If someone sees the cow and they chase the squirrel then they see the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not chase the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nYoung(Cow, True) ::: The cow is young.\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nRound(Dog, True) ::: The dog is round.\nLikes(Dog, Rabbit, True) ::: The dog likes the rabbit.\nLikes(Dog, Squirrel, True) ::: The dog likes the squirrel.\nSees(Dog, Rabbit, True) ::: The dog sees the rabbit.\nChases(Rabbit, Cow, True) ::: The rabbit chases the cow.\nChases(Rabbit, Dog, False) ::: The rabbit does not chase the dog.\nChases(Squirrel, Rabbit, True) ::: The squirrel chases the rabbit.\nYoung(Squirrel, True) ::: The squirrel is young.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nRules:\nChases($x, $y, True) >>> Young($x, True) ::: If someone chases the cow then the cow is big.\nLikes($x, Rabbit, True) && Not(Sees($x, Squirrel, True)) >>> Big($x, True) ::: If someone likes the rabbit and they do not see the squirrel then they are big.\nBig($x, True) >>> Likes($x, Rabbit, True) ::: If someone is big then they like the rabbit.\nYoung($x, True) >>> Not(Sees($x, Dog, True)) ::: If someone is young then they do not see the dog.\nBlue($x, True) >>> Chases($x, Cow, True) ::: If someone is blue then they chase the cow.\nLikes($x, Rabbit, True) >>> Likes($x, Cow, True) ::: If someone likes the rabbit then they like the cow.\nLikes($x, Cow, True) >>> Sees($x, Cow, True) ::: If someone likes the cow then they see the cow.\nSees($x, Cow, True) && Chases($x, Squirrel, True) >>> Sees($x, Rab"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1066_Q6",
    "context": "Bob is quiet. Bob is white. Dave is kind. Dave is red. Dave is young. Fiona is red. Fiona is round. Gary is quiet. Gary is red. Gary is round. White things are round. If something is kind and white then it is green. All young things are kind. All round things are young. All quiet, kind things are white. Quiet, green things are red. Young, quiet things are kind. All quiet, red things are kind. If Gary is young then Gary is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nWhite(Bob, True) ::: Bob is white.\nKind(Dave, True) ::: Dave is kind.\nRed(Dave, True) ::: Dave is red.\nYoung(Dave, True) ::: Dave is young.\nRed(Fiona, True) ::: Fiona is red.\nRound(Fiona, True) ::: Fiona is round.\nQuite(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nRound(Gary, True) ::: Gary is round.\nRules:\nWhite($x, True) >>> Round($x, True) ::: White things are round.\nKind($x, True) && White($x, True) >>> Green($x, True) ::: If something is kind and white then it is green.\nYoung($x, True) >>> Kind($x, True) ::: All young things are kind.\nRound($x, True) >>> Young($x, True) ::: All round things are young.\nQuite($x, True) && Kind($x, True) >>> White($x, True) ::: All quiet, kind things are white.\nQuite($x, True) && Green($x, True) >>> Red($x, True) ::: Quiet, green things are red.\nYoung($x, True) && Quite($x, True) >>> Kind($x, True) ::: Young, quiet things are kind.\nQuite($x, True) && Red($x, True) >>> Kind($x, True) ::: All quiet, red things are kind.\nIf Gary is young then Gary is round ::: If Gary is young then Gary is round.\nQuery:\nNot(Young(Bob, True)) ::: Bob is not young.\n------\nProblem:\nBob is quiet. Bob is white. Dave is kind. Dave is red. Dave is young. Fiona is red. Fiona is round. Gary is quiet. Gary is red. Gary is round. White things are round. If something is kind and white then it is green. All young things are kind. All round things are young. All quiet, kind things are white. Quiet, green things are red. Young, quiet things are kind. All quiet, red things are kind. If Gary is young then Gary is round.\nQuestion:\nBased on the above information, is the following"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-116_Q3",
    "context": "The cow is young. The cow sees the lion. The dog likes the cow. The dog likes the rabbit. The dog sees the rabbit. The lion is young. The lion sees the cow. The lion sees the dog. The lion sees the rabbit. The rabbit is round. The rabbit likes the cow. If someone visits the rabbit then the rabbit likes the lion. If someone likes the rabbit and the rabbit is red then the rabbit is big. If someone likes the lion and they see the rabbit then the lion likes the rabbit. If someone is young then they like the rabbit. If someone is young then they see the lion. If the lion is big then the lion visits the dog. If the rabbit likes the lion then the rabbit is young. If someone is young and they like the rabbit then they visit the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion sees the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nFacts:\nYoung(Cow, True) ::: The cow is young.\nSees(Cow, Lion, True) ::: The cow sees the lion.\nLikes(Dog, Cow, True) ::: The dog likes the cow.\nLikes(Dog, Rabbit, True) ::: The dog likes the rabbit.\nSees(Dog, Rabbit, True) ::: The dog sees the rabbit.\nYoung(Lion, True) ::: The lion is young.\nSees(Lion, Cow, True) ::: The lion sees the cow.\nSees(Lion, Dog, True) ::: The lion sees the dog.\nSees(Lion, Rabbit, True) ::: The lion sees the rabbit.\nRound(Rabbit, True) ::: The rabbit is round.\nLikes(Rabbit, Cow, True) ::: The rabbit likes the cow.\nVisits(Rabbit, Lion, True) ::: If someone visits the rabbit then the rabbit likes the lion.\nRed($x, True) >>> Big($x, True) ::: If someone is red then they are big.\nLikes(Lion, $x, True) && Sees($x, Rabbit, True) >>> Likes(Lion, Rabbit, True) ::: If someone likes the lion and they see the rabbit then the lion likes the rabbit.\nYoung($x, True) >>> Likes($x, Rabbit, True) ::: If someone is young then they like the rabbit.\nYoung($x, True) >>> Sees($x, Lion, True) ::: If someone is young then they see the lion.\nBig($x, True) >>> Visits($x, Dog, True) ::: If the lion is big then the lion visits the dog.\nLikes(Rabbit, Lion, True) >>> Young(Rabbit, True) ::: If the rabbit likes the lion then the rabbit is young.\nYoung($x, True) && Likes($x, Rabbit, True) >>> Visits($x, Rabbit, True) ::: If someone is young and they like the rabbit then they visit the rabbit.\nQuery:\nSees(Lion, Lion, True) ::: The lion sees the lion.\n------\nProblem:\nThe cow is young. The cow sees the lion. The dog likes the cow. The dog likes the"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-975_Q4",
    "context": "The lion is kind. The mouse chases the lion. The rabbit is blue. The rabbit is round. The tiger is blue. The tiger is cold. The tiger is young. If something sees the rabbit then the rabbit is cold. If something sees the tiger then the tiger is kind. If something is round then it is kind. If the rabbit sees the lion and the rabbit sees the mouse then the mouse sees the tiger. If something is kind then it sees the mouse. If something is blue and kind then it sees the rabbit. If something chases the lion and the lion chases the rabbit then the rabbit chases the mouse. If something is kind and it sees the mouse then it sees the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nKind(Lion, True) ::: The lion is kind.\nChases(Mouse, Lion, True) ::: The mouse chases the lion.\nBlue(Rabbit, True) ::: The rabbit is blue.\nRound(Rabbit, True) ::: The rabbit is round.\nBlue(Tiger, True) ::: The tiger is blue.\nCold(Tiger, True) ::: The tiger is cold.\nYoung(Tiger, True) ::: The tiger is young.\nRules:\nSees($x, $y, True) >>> $x is Cold ::: If something sees the rabbit then the rabbit is cold.\nSees($x, $y, True) >>> $x is Kind ::: If something sees the tiger then the tiger is kind.\nRound($x, True) >>> $x is Kind ::: If something is round then it is kind.\nChases(Mouse, Lion, True) && Chases(Lion, Rabbit, True) >>> Chases(Rabbit, Mouse, True) ::: If something is kind and it sees the mouse then it sees the lion.\nChases(Mouse, Lion, True) && Chases(Lion, Rabbit, True) >>> Chases(Rabbit, Mouse, True) ::: If something is kind and it sees the mouse then it sees the lion.\nChases(Mouse, Lion, True) && Chases(Lion, Rabbit, True) >>> Chases(Rabbit, Mouse, True) ::: If something is kind and it sees the mouse then it sees the lion.\nKind(Lion, True) && Sees(Lion, Mouse, True) && Sees(Lion, Rabbit, True) >>> Sees(Mouse, Tiger, True) ::: If something is kind and it sees the mouse then it sees the lion.\nBlue($x, True) && Kind($x, True) >>> Sees($x, Rabbit, True) ::: If something is blue and kind then it sees the rabbit.\nChases(Lion, Rabbit, True) >>> Chases(Rabbit, Mouse, True) ::: If something chases the lion and the lion chases the rabbit then the rabbit chases the mouse.\nSees(Lion, Mouse, True) && Sees(Lion, Rabbit, True) >>> Sees(Mouse, Tiger"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-789_Q21",
    "context": "The bald eagle eats the lion. The bald eagle is cold. The bald eagle sees the cat. The cat eats the lion. The cat is round. The cat sees the bald eagle. The lion chases the cat. The lion eats the cat. The lion eats the squirrel. The squirrel chases the bald eagle. The squirrel chases the lion. The squirrel eats the lion. The squirrel is cold. The squirrel is kind. If something is round then it sees the cat. If something chases the cat and the cat is cold then the cat eats the squirrel. If something chases the cat and it is kind then it is round. If the lion eats the squirrel and the lion sees the cat then the lion is young. If something is cold then it chases the cat. If the squirrel eats the bald eagle and the bald eagle is cold then the bald eagle is round. If something chases the bald eagle and it is young then it chases the squirrel. If something eats the squirrel and it eats the cat then the squirrel chases the cat. If something is round then it eats the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nSees($x, $y) ::: Does x see y?\nChases($x, $y) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(BaldEagle, Lion) ::: The bald eagle eats the lion.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nSees(BaldEagle, Cat) ::: The bald eagle sees the cat.\nEats(Cat, Lion) ::: The cat eats the lion.\nRound(Cat, True) ::: The cat is round.\nSees(Cat, BaldEagle) ::: The cat sees the bald eagle.\nChases(Cat, Lion) ::: The cat chases the lion.\nEats(Lion, Cat) ::: The lion eats the cat.\nEats(Lion, Squirrel) ::: The lion eats the squirrel.\nChases(Squirrel, BaldEagle) ::: The squirrel chases the bald eagle.\nChases(Squirrel, Lion) ::: The squirrel chases the lion.\nEats(Squirrel, Lion) ::: The squirrel eats the lion.\nCold(Squirrel, True) ::: The squirrel is cold.\nKind(Squirrel, True) ::: The squirrel is kind.\nRules:\nRound($x, True) >>> Sees($x, Cat) ::: If something is round then it sees the cat.\nChases($x, Cat) && Cold($x, True) >>> Eats($x, Squirrel) ::: If something chases the cat and the cat is cold then the cat eats the squirrel.\nChases($x, Cat) && Kind($x, True) >>> Round($x, True) ::: If something chases the cat and it is kind then it is round.\nEats($x, Squirrel) && Eats($x, Cat) >>> Chases($x, Cat) ::: If the lion eats the squirrel and the lion sees the cat then the lion is young.\nCold($x, True) >>> Chases($x, Cat) ::: If something is cold then it chases the cat.\nEats(BaldEagle, Squirrel) && Cold($x, True) >>> Round($x, True) ::: If something eats the squirrel and it eats the cat then the squirrel chases the cat.\nChases($x, BaldEagle) && Young($x, True"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-131_Q1",
    "context": "The cat likes the cow. The cow is cold. The lion chases the tiger. The lion likes the cat. The lion needs the cow. The lion needs the tiger. The tiger likes the cow. If something likes the tiger then the tiger is cold. If something chases the lion and it needs the lion then it is green. If the cow chases the lion and the cow chases the cat then the lion needs the cow. If the tiger chases the cow then the tiger likes the cat. If something needs the lion then the lion needs the tiger. If something chases the cow then the cow likes the tiger. If something chases the cat then the cat chases the cow. If something is cold then it chases the cat. If something is cold and it chases the cat then it chases the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger likes the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nCold($x, bool) ::: Is x cold?\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nGreen($x, bool) ::: Is x green?\nFacts:\nLikes(Cat, Cow, True) ::: The cat likes the cow.\nCold(Cow, True) ::: The cow is cold.\nChases(Lion, Tiger, True) ::: The lion chases the tiger.\nLikes(Lion, Cat, True) ::: The lion likes the cat.\nNeeds(Lion, Cow, True) ::: The lion needs the cow.\nNeeds(Lion, Tiger, True) ::: The lion needs the tiger.\nLikes(Tiger, Cow, True) ::: The tiger likes the cow.\nRules:\nLikes($x, Tiger, True) >>> Cold($x, True) ::: If something likes the tiger then the tiger is cold.\nChases($x, Lion, True) && Needs($x, Lion, True) >>> Green($x, True) ::: If something chases the lion and it needs the lion then it is green.\nChases(Cow, Lion) && Chases(Cow, Cat) >>> Needs(Lion, Cow, True) ::: If the cow chases the lion and the cow chases the cat then the lion needs the cow.\nLikes(Tiger, Cow) >>> Chases(Tiger, Cat) ::: If the tiger chases the cow then the tiger likes the cat.\nNeeds(Lion, $x, True) >>> Needs(Lion, Tiger, True) ::: If something needs the lion then the lion needs the tiger.\nChases(Cow, Lion) >>> Likes(Cow, Tiger) ::: If something chases the cow then the cow likes the tiger.\nChases(Cat, $x) >>> Chases($x, Cow) ::: If something chases the cat then the cat chases the cow.\nCold($x, True) >>> Chases(Cat, $x) ::: If something is cold then it chases the cat.\nCold($x, True) && Chases(Cat, $x) >>> Chases($x, Cow) ::: If something is cold and it chases the cat then it chases the cow.\nQuery:\nLikes(Tiger, Cow, True) ::: The tiger likes the cow.\n------\nProblem:\nThe cat likes the cow. The cow is cold. The lion chases the tiger. The lion likes the cat. The lion needs the cow. The lion needs the tiger. The tiger likes the cow."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-372_Q4",
    "context": "Charlie is young. Erin is blue. Erin is green. Fiona is big. Fiona is green. Gary is blue. Gary is green. All red things are furry. All furry things are red. Young things are red. If something is smart and not red then it is not green. All furry things are green. If something is red and green then it is blue. If something is young and big then it is smart. If something is blue and green then it is smart. Blue, red things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Erin, True) ::: Erin is blue.\nGreen(Erin, True) ::: Erin is green.\nBig(Fiona, True) ::: Fiona is big.\nGreen(Fiona, True) ::: Fiona is green.\nBlue(Gary, True) ::: Gary is blue.\nGreen(Gary, True) ::: Gary is green.\nRules:\nRed($x, True) >>> Furry($x, True) ::: All red things are furry.\nFurry($x, True) >>> Red($x, True) ::: All furry things are red.\nYoung($x, True) >>> Red($x, True) ::: Young things are red.\nNot(Red($x, True)) && Not(Furry($x, True)) >>> Not(Green($x, True)) ::: If something is smart and not red then it is not green.\nFurry($x, True) >>> Green($x, True) ::: All furry things are green.\nRed($x, True) && Green($x, True) >>> Blue($x, True) ::: If something is red and green then it is blue.\nYoung($x, True) && Big($x, True) >>> Smart($x, True) ::: If something is young and big then it is smart.\nBlue($x, True) && Green($x, True) >>> Smart($x, True) ::: If something is blue and green then it is smart.\nBlue($x, True) && Red($x, True) >>> Smart($x, True) ::: Blue, red things are smart.\nQuery:\nNot(Smart(Gary, True)) ::: Gary is not smart.\n------\nProblem:\nCharlie is young. Erin is blue. Erin is green. Fiona is big. Fiona is green. Gary is blue. Gary is green. All red things are furry. All furry things are red. Young things are red. If something is smart and not red then it is not green. All furry things are green. If something is red and green then it is blue. If something is young and big then it is smart. If something is blue and green then it is smart. Blue, red things are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is not"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-527_Q22",
    "context": "The bald eagle is rough. The bald eagle does not like the lion. The bald eagle sees the mouse. The cat does not eat the lion. The cat sees the mouse. The lion sees the cat. The mouse eats the lion. The mouse likes the bald eagle. The mouse sees the bald eagle. The mouse sees the cat. If someone likes the bald eagle and the bald eagle does not like the cat then the cat does not like the lion. If someone eats the mouse then the mouse is kind. If the lion is not rough then the lion is cold. If someone likes the lion then the lion is green. If someone is kind then they like the lion. If someone eats the lion then the lion eats the mouse. If someone likes the cat then they do not like the bald eagle. If someone is green then they like the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nFacts:\nRough(BaldEagle, True) ::: The bald eagle is rough.\nLikes(BaldEagle, Lion, False) ::: The bald eagle does not like the lion.\nSees(BaldEagle, Mouse, True) ::: The bald eagle sees the mouse.\nEats(Cat, Lion, False) ::: The cat does not eat the lion.\nSees(Cat, Mouse, True) ::: The cat sees the mouse.\nSees(Lion, Cat, True) ::: The lion sees the cat.\nEats(Mouse, Lion, True) ::: The mouse eats the lion.\nLikes(Mouse, BaldEagle, True) ::: The mouse likes the bald eagle.\nSees(Mouse, BaldEagle, True) ::: The mouse sees the bald eagle.\nSees(Mouse, Cat, True) ::: The mouse sees the cat.\nRules:\nLikes(BaldEagle, $x, True) && Likes($x, Cat, False) >>> Likes($x, Lion, False) ::: If someone likes the bald eagle and the bald eagle does not like the cat then the cat does not like the lion.\nEats($x, Mouse, True) >>> Kind($x, True) ::: If someone eats the mouse then the mouse is kind.\nNot(Rough($x, True)) >>> Cold($x, True) ::: If someone is not rough then the lion is cold.\nLikes($x, Lion, True) >>> Green($x, True) ::: If someone likes the lion then the lion is green.\nKind($x, True) >>> Likes($x, Lion, True) ::: If someone is kind then they like the lion.\nEats($x, Lion, True) >>> Eats($x, Mouse, True) ::: If someone eats the lion then the lion eats the mouse.\nLikes($x, Cat, True) >>> Not(Likes($x, BaldEagle, True)) ::: If someone likes the cat then they do not like the bald eagle.\nLikes($x, BaldEagle, True) >>> Green($x, True) ::: If someone likes the bald eagle then the bald eagle is green.\nQuery:\nRough(Lion, True) ::: The lion is rough.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1164_Q9",
    "context": "Bob is big. Bob is blue. Bob is cold. Bob is quiet. Bob is rough. Bob is smart. Bob is white. Dave is rough. Fiona is blue. Harry is big. Harry is cold. If someone is blue then they are cold. If someone is big then they are white. If Bob is rough and Bob is blue then Bob is big. All blue, smart people are big. If someone is blue and rough then they are quiet. All smart people are blue. Cold people are rough. If someone is quiet then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nQuiet(Bob, True) ::: Bob is quiet.\nRough(Bob, True) ::: Bob is rough.\nSmart(Bob, True) ::: Bob is smart.\nWhite(Bob, True) ::: Bob is white.\nRough(Dave, True) ::: Dave is rough.\nBlue(Fiona, True) ::: Fiona is blue.\nBig(Harry, True) ::: Harry is big.\nCold(Harry, True) ::: Harry is cold.\nRules:\nBlue($x, True) >>> Cold($x, True) ::: If someone is blue then they are cold.\nBig($x, True) >>> White($x, True) ::: If someone is big then they are white.\nRough($x, True) && Blue($x, True) >>> Big($x, True) ::: If Bob is rough and Bob is blue then Bob is big.\nBlue($x, True) && Smart($x, True) >>> Big($x, True) ::: All blue, smart people are big.\nBlue($x, True) && Rough($x, True) >>> Quiet($x, True) ::: If someone is blue and rough then they are quiet.\nSmart($x, True) >>> Blue($x, True) ::: All smart people are blue.\nCold($x, True) >>> Rough($x, True) ::: Cold people are rough.\nQuiet($x, True) >>> Big($x, True) ::: If someone is quiet then they are big.\nQuery:\nBig(Fiona, True) ::: Fiona is big.\n------\nProblem:\nBob is big. Bob is blue. Bob is cold. Bob is quiet. Bob is rough. Bob is smart. Bob is white. Dave is rough. Fiona is blue. Harry is big. Harry is cold. If someone is blue then they are cold. If someone is big then they are white. If Bob is rough and Bob is blue then Bob is big. All blue, smart people are big. If someone is blue and rough then they are quiet. All smart people are blue. Cold people are rough. If someone is quiet then they are big.\nQuestion:\nBased on the"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-230_Q20",
    "context": "The bear is big. The bear is cold. The bear likes the cat. The bear visits the cat. The bear visits the cow. The cat is green. The cat needs the bear. The cow needs the dog. The dog is blue. The dog likes the bear. The dog visits the cow. If something is blue then it is red. If something likes the cow then the cow is big. If the cow needs the cat then the cow likes the cat. If something is blue then it is cold. If something is big and it likes the dog then the dog likes the cow. If something needs the bear and the bear needs the dog then the bear is red. If something likes the bear and it is big then it needs the dog. If something is big then it needs the cat. If the bear is big then the bear likes the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nBig(Bear, True) ::: The bear is big.\nCold(Bear, True) ::: The bear is cold.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nVisits(Bear, Cat, True) ::: The bear visits the cat.\nVisits(Bear, Cow, True) ::: The bear visits the cow.\nGreen(Cat, True) ::: The cat is green.\nNeeds(Cat, Bear, True) ::: The cat needs the bear.\nNeeds(Cow, Dog, True) ::: The cow needs the dog.\nBlue(Dog, True) ::: The dog is blue.\nLikes(Dog, Bear, True) ::: The dog likes the bear.\nVisits(Dog, Cow, True) ::: The dog visits the cow.\nRules:\nBlue($x, True) >>> Red($x, True) ::: If something is blue then it is red.\nLikes($x, Cow, True) >>> Big($x, True) ::: If something likes the cow then the cow is big.\nNeeds($x, Cat, True) >>> Likes($x, Cat, True) ::: If the cow needs the cat then the cow likes the cat.\nBlue($x, True) >>> Cold($x, True) ::: If something is blue then it is cold.\nBig($x, True) && Likes($x, Dog, True) >>> Likes($x, Cow, True) ::: If something is big and it likes the dog then the dog likes the cow.\nNeeds($x, Bear, True) && Needs($x, Dog, True) >>> Bear($x, True) ::: If something needs the bear and the bear needs the dog then the bear is red.\nLikes($x, Bear, True) && Big($x, True) >>> Needs($x, Dog, True) ::: If something likes the bear and it is big then it needs the dog.\nBig($x, True) >>> Needs($x, Cat, True) ::: If something is big then it needs the cat.\nBig($x, True) && Likes($x, Bear, True) >>> Likes($x, Dog, True) ::: If the bear is big then the bear likes the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-459_Q16",
    "context": "Bob is not cold. Bob is furry. Bob is round. Charlie is big. Charlie is furry. Charlie is quiet. Charlie is red. Charlie is not white. Erin is big. Gary is big. Gary is quiet. If someone is red and cold then they are furry. All furry people are round. If Charlie is furry then Charlie is round. Big people are red. Round people are quiet. If someone is red then they are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nFacts:\nNotCold(Bob, True) ::: Bob is not cold.\nFurry(Bob, True) ::: Bob is furry.\nRound(Bob, True) ::: Bob is round.\nBig(Charlie, True) ::: Charlie is big.\nFurry(Charlie, True) ::: Charlie is furry.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nNotWhite(Charlie, True) ::: Charlie is not white.\nBig(Erin, True) ::: Erin is big.\nBig(Gary, True) ::: Gary is big.\nQuiet(Gary, True) ::: Gary is quiet.\nRules:\nFurry($x, True) >>> Round($x, True) ::: All furry people are round.\nFurry($x, True) >>> Round($x, True) ::: If Charlie is furry then Charlie is round.\nBig($x, True) >>> Red($x, True) ::: Big people are red.\nRound($x, True) >>> Quiet($x, True) ::: Round people are quiet.\nRed($x, True) >>> Cold($x, True) ::: If someone is red then they are cold.\nFurry($x, True) && Cold($x, True) >>> Red($x, True) ::: If someone is red and cold then they are furry.\nQuery:\nWhite(Erin, True) ::: Erin is white.\n------\nProblem:\nBob is furry. Bob is not green. Bob is not red. Bob is not white. Bob is not yellow. Bob is not blue. Bob is not purple. Bob is not orange. Bob is not pink. Bob is not brown. Bob is not black. Bob is not grey. Bob is not silver. Bob is not gold. Bob is not platinum. Bob is not diamond. Bob is not ruby. Bob is not sapphire. Bob is not emerald. Bob is not topaz. Bob is not amethyst. Bob is not aquamarine. Bob is not garnet. Bob is not tourmaline. Bob is not opal. Bob is not onyx. Bob is not jade. Bob is not turquoise. Bob is not lapis lazuli. Bob is not malachite. Bob"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-285_Q9",
    "context": "Bob is big. Bob is cold. Bob is furry. Bob is smart. Fiona is cold. Fiona is not green. Fiona is white. Gary is smart. Harry is big. Harry is cold. Harry is smart. All green people are furry. If Gary is furry and Gary is not smart then Gary is white. Smart people are green. If Bob is not green and Bob is not white then Bob is furry. Big people are cold. If someone is smart and furry then they are big. If someone is white and not cold then they are not blue. All cold people are not blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(Bob, True) ::: Bob is big.\nCold(Bob, True) ::: Bob is cold.\nFurry(Bob, True) ::: Bob is furry.\nSmart(Bob, True) ::: Bob is smart.\nCold(Fiona, True) ::: Fiona is cold.\nNot(Green(Fiona, True)) ::: Fiona is not green.\nWhite(Fiona, True) ::: Fiona is white.\nSmart(Gary, True) ::: Gary is smart.\nBig(Harry, True) ::: Harry is big.\nCold(Harry, True) ::: Harry is cold.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nGreen($x, True) >>> Furry($x, True) ::: All green people are furry.\nNot(Furry($x, True)) && Not(Smart($x, True)) >>> Gary($x, True) ::: If Gary is furry and Gary is not smart then Gary is white.\nSmart($x, True) >>> Green($x, True) ::: Smart people are green.\nNot(Green($x, True)) && Not(White($x, True)) >>> Furry($x, True) ::: If Bob is not green and Bob is not white then Bob is furry.\nBig($x, True) >>> Cold($x, True) ::: Big people are cold.\nFurry($x, True) && Smart($x, True) >>> Big($x, True) ::: If someone is smart and furry then they are big.\nNot(White($x, True)) && Not(Cold($x, True)) >>> Not(Blue($x, True)) ::: If someone is white and not cold then they are not blue.\nNot(Cold($x, True)) >>> Not(Blue($x, True)) ::: All cold people are not blue.\nQuery:\nCold(Gary, True) ::: Gary is cold.\n------\nProblem:\nBob is big. Bob is cold. Bob is furry. Bob is smart. Fiona is cold. Fiona is not green. Fiona is white. Gary is smart. Harry is big. Harry is cold. Harry is smart. All green people are furry. If Gary is furry and Gary is not smart then Gary is white. Smart people are green"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-312_Q22",
    "context": "The dog chases the squirrel. The dog likes the tiger. The lion chases the squirrel. The lion is big. The lion is red. The lion likes the tiger. The lion visits the squirrel. The lion visits the tiger. The squirrel chases the lion. The squirrel is nice. The squirrel likes the lion. The tiger chases the dog. The tiger is kind. The tiger is red. The tiger likes the dog. The tiger likes the lion. If something chases the lion then the lion is blue. If something is kind then it chases the tiger. If something chases the tiger then it visits the dog. If something visits the lion then it likes the squirrel. If something is red and it chases the tiger then it likes the squirrel. If something chases the tiger and it visits the squirrel then the squirrel visits the tiger. If something visits the dog then the dog likes the lion. If something is kind and it visits the dog then the dog is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger chases the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Dog, Squirrel, True) ::: The dog chases the squirrel.\nLikes(Dog, Tiger, True) ::: The dog likes the tiger.\nChases(Lion, Squirrel, True) ::: The lion chases the squirrel.\nIs(Lion, Big, True) ::: The lion is big.\nIs(Lion, Red, True) ::: The lion is red.\nLikes(Lion, Tiger, True) ::: The lion likes the tiger.\nVisits(Lion, Squirrel, True) ::: The lion visits the squirrel.\nVisits(Lion, Tiger, True) ::: The lion visits the tiger.\nChases(Squirrel, Lion, True) ::: The squirrel chases the lion.\nIs(Squirrel, Nice, True) ::: The squirrel is nice.\nLikes(Squirrel, Lion, True) ::: The squirrel likes the lion.\nChases(Tiger, Dog, True) ::: The tiger chases the dog.\nIs(Tiger, Kind, True) ::: The tiger is kind.\nIs(Tiger, Red, True) ::: The tiger is red.\nLikes(Tiger, Dog, True) ::: The tiger likes the dog.\nLikes(Tiger, Lion, True) ::: The tiger likes the lion.\nRules:\nChases($x, $y, True) >>> Is($x, Lion, True) && Is($y, Lion, True) >>> Blue($x, True) ::: If something chases the lion then the lion is blue.\nKind($x, True) >>> Chases($x, Tiger, True) ::: If something is kind then it chases the tiger.\nChases($x, Tiger, True) >>> Visits($x, Dog, True) ::: If something chases the tiger then it visits the dog.\nVisits($x, Lion, True) >>> Likes($x, Squirrel, True) ::: If something visits the lion then it likes the squirrel.\nChases($x, Tiger, True) && Red($x, True) >>> Likes($x, Squirrel, True) ::: If something ch"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-618_Q4",
    "context": "Anne is kind. Bob is cold. Bob is rough. Bob is white. Dave is cold. Dave is green. Dave is white. Fiona is cold. Fiona is nice. Fiona is rough. Kind things are nice. White, round things are green. If something is nice and round then it is white. If something is rough then it is round. Cold things are rough. If Anne is kind and Anne is nice then Anne is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nCold(Bob, True) ::: Bob is cold.\nRough(Bob, True) ::: Bob is rough.\nWhite(Bob, True) ::: Bob is white.\nCold(Dave, True) ::: Dave is cold.\nGreen(Dave, True) ::: Dave is green.\nWhite(Dave, True) ::: Dave is white.\nCold(Fiona, True) ::: Fiona is cold.\nNice(Fiona, True) ::: Fiona is nice.\nRough(Fiona, True) ::: Fiona is rough.\nRules:\nKind($x, True) >>> Nice($x, True) ::: Kind things are nice.\nWhite($x, True) >>> Round($x, True) ::: White, round things are green.\nNice($x, True) && Round($x, True) >>> White($x, True) ::: If something is nice and round then it is white.\nRough($x, True) >>> Round($x, True) ::: If something is rough then it is round.\nCold($x, True) >>> Rough($x, True) ::: Cold things are rough.\nKind($x, True) && Nice($x, True) >>> Cold($x, True) ::: If Anne is kind and Anne is nice then Anne is cold.\nQuery:\nNice(Anne, False) ::: Anne is not nice.\n------\nProblem:\nAnne is kind. Bob is cold. Bob is rough. Bob is white. Dave is cold. Dave is green. Dave is white. Fiona is cold. Fiona is nice. Fiona is rough. Kind things are nice. White, round things are green. If something is nice and round then it is white. If something is rough then it is round. Cold things are rough. If Anne is kind and Anne is nice then Anne is cold.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Anne is not nice.\n###\nPredicates:\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nFacts"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-329_Q19",
    "context": "The bald eagle is cold. The bald eagle is rough. The bald eagle needs the tiger. The bald eagle visits the squirrel. The lion is cold. The lion is kind. The lion needs the tiger. The squirrel chases the bald eagle. The squirrel chases the tiger. The squirrel visits the tiger. The tiger is red. If someone needs the squirrel then they chase the tiger. If someone is rough and they chase the squirrel then the squirrel visits the lion. If someone visits the tiger and they visit the lion then the lion needs the bald eagle. If someone visits the bald eagle and the bald eagle visits the squirrel then the bald eagle chases the squirrel. If someone is red then they chase the lion. If someone chases the lion and they visit the bald eagle then they need the bald eagle. If someone visits the bald eagle then they need the bald eagle. If someone chases the lion then they visit the bald eagle. If someone chases the tiger then the tiger chases the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not visit the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nRed($x, bool) ::: Is x red?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nNeeds(BaldEagle, Tiger, True) ::: The bald eagle needs the tiger.\nVisits(BaldEagle, Squirrel, True) ::: The bald eagle visits the squirrel.\nCold(Lion, True) ::: The lion is cold.\nKind(Lion, True) ::: The lion is kind.\nNeeds(Lion, Tiger, True) ::: The lion needs the tiger.\nChases(Squirrel, BaldEagle, True) ::: The squirrel chases the bald eagle.\nChases(Squirrel, Tiger, True) ::: The squirrel chases the tiger.\nVisits(Squirrel, Tiger, True) ::: The squirrel visits the tiger.\nRed(Tiger, True) ::: The tiger is red.\nRules:\nNeeds($x, $y, True) >>> Chases($x, $y, True) ::: If someone needs the squirrel then they chase the tiger.\nRough($x, True) && Chases($x, Squirrel, True) >>> Visits($x, Lion, True) ::: If someone is rough and they chase the squirrel then the squirrel visits the lion.\nVisits($x, Tiger) && Visits($x, Lion) >>> Needs($x, BaldEagle, True) ::: If someone visits the tiger and they visit the lion then the lion needs the bald eagle.\nVisits($x, BaldEagle) && Visits($x, Squirrel) >>> Chases($x, Squirrel, True) ::: If someone visits the bald eagle and the bald eagle visits the squirrel then the bald eagle chases the squirrel.\nRed($x, True) >>> Chases($x, Lion, True) ::: If someone is red then they chase the lion.\nChases($x, Lion) && Visits($x, BaldEagle) >>> Needs($x, BaldEagle, True) ::: If someone chases the lion and they visit the bald eagle then they need the bald eagle."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-498_Q15",
    "context": "The cow eats the dog. The cow eats the mouse. The cow is blue. The cow is nice. The cow does not like the mouse. The cow sees the mouse. The dog eats the cow. The dog is blue. The dog is round. The dog sees the tiger. The mouse is kind. The mouse likes the cow. The mouse sees the cow. The tiger is not nice. The tiger does not like the mouse. The tiger sees the mouse. If someone is round then they are nice. If someone is green then they like the tiger. If someone likes the tiger then the tiger sees the cow. If someone sees the mouse and they do not like the mouse then the mouse is blue. If someone is nice then they eat the dog. If the tiger is nice then the tiger does not like the cow. If someone is round and they eat the dog then they are green. If someone eats the cow then they like the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nFacts:\nEats(Cow, Dog, True) ::: The cow eats the dog.\nEats(Cow, Mouse, True) ::: The cow eats the mouse.\nIs(Cow, Blue, True) ::: The cow is blue.\nIs(Cow, Nice, True) ::: The cow is nice.\nNot(Likes(Cow, Mouse, True)) ::: The cow does not like the mouse.\nSees(Cow, Mouse, True) ::: The cow sees the mouse.\nEats(Dog, Cow, True) ::: The dog eats the cow.\nIs(Dog, Blue, True) ::: The dog is blue.\nIs(Dog, Round, True) ::: The dog is round.\nSees(Dog, Tiger, True) ::: The dog sees the tiger.\nIs(Mouse, Kind, True) ::: The mouse is kind.\nLikes(Mouse, Cow, True) ::: The mouse likes the cow.\nSees(Mouse, Cow, True) ::: The mouse sees the cow.\nIs(Tiger, Nice, False) ::: The tiger is not nice.\nNot(Likes(Tiger, Mouse, True)) ::: The tiger does not like the mouse.\nSees(Tiger, Mouse, True) ::: The tiger sees the mouse.\nRules:\nRound($x, True) >>> Nice($x, True) ::: If someone is round then they are nice.\nIs($x, Green, True) >>> Likes($x, Tiger, True) ::: If someone is green then they like the tiger.\nLikes($x, Tiger, True) >>> Sees($x, Cow, True) ::: If someone likes the tiger then the tiger sees the cow.\nSees($x, Mouse, True) && Not(Likes($x, Mouse, True)) >>> Is($x, Blue, True) ::: If someone sees the mouse and they do not like the mouse then the mouse is blue.\nNice($x, True) >>> Eats($x, Dog, True) ::: If someone is nice then they eat the dog.\nNot(Nice($x, True)) >>> Not(Likes($x, Tiger, True)) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1057_Q11",
    "context": "Bob is kind. Bob is quiet. Bob is white. Charlie is quiet. Erin is furry. Erin is quiet. Erin is white. Fiona is blue. Fiona is furry. Fiona is kind. Fiona is quiet. All kind, rough people are furry. Green, furry people are quiet. If someone is rough then they are kind. If someone is quiet and kind then they are rough. If someone is white then they are quiet. If someone is blue and white then they are kind. If someone is white then they are blue. If Charlie is quiet then Charlie is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nQuiet(Bob, True) ::: Bob is quiet.\nWhite(Bob, True) ::: Bob is white.\nQuiet(Charlie, True) ::: Charlie is quiet.\nFurry(Erin, True) ::: Erin is furry.\nQuiet(Erin, True) ::: Erin is quiet.\nWhite(Erin, True) ::: Erin is white.\nFurry(Fiona, True) ::: Fiona is furry.\nQuiet(Fiona, True) ::: Fiona is quiet.\nWhite(Fiona, True) ::: Fiona is white.\nBlue(Fiona, True) ::: Fiona is blue.\nKind(Fiona, True) ::: Fiona is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nKind($x, True) >>> Rough($x, True) ::: All kind, rough people are furry.\nGreen($x, True) >>> Furry($x, True) ::: Green, furry people are quiet.\nRough($x, True) >>> Kind($x, True) ::: If someone is rough then they are kind.\nQuiet($x, True) && Kind($x, True) >>> Rough($x, True) ::: If someone is quiet and kind then they are rough.\nWhite($x, True) >>> Quiet($x, True) ::: If someone is white then they are quiet.\nBlue($x, True) >>> White($x, True) ::: If someone is blue and white then they are kind.\nWhite($x, True) >>> Blue($x, True) ::: If someone is white then they are blue.\nCharlie(Quiet($x, True)) >>> White($x, True) ::: If Charlie is quiet then Charlie is white.\nQuery:\nFurry(Charlie, True) ::: Charlie is furry.\n------\nProblem:\nBob is kind. Bob is quiet. Bob is white. Charlie is quiet. Erin is furry. Erin is quiet. Erin is white. Fiona is blue. Fiona is furry. Fiona is kind. Fiona is quiet. All kind, rough people are furry. Green, furry people are quiet. If someone is rough then they are kind. If someone is quiet and kind then they are rough. If someone is white"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-922_Q10",
    "context": "The cow is cold. The cow is not round. The cow sees the squirrel. The cow sees the tiger. The mouse needs the cow. The mouse needs the tiger. The squirrel needs the cow. The tiger is blue. The tiger is red. The tiger is round. The tiger sees the mouse. If something needs the squirrel then the squirrel sees the tiger. If the cow sees the squirrel then the cow eats the mouse. If the squirrel eats the mouse and the squirrel is not green then the mouse is not red. If the mouse needs the tiger and the mouse is red then the tiger does not see the squirrel. If something needs the mouse and the mouse eats the cow then the cow eats the squirrel. If something is blue then it needs the squirrel. If something needs the cow and the cow is blue then it eats the mouse. If something eats the mouse then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nFacts:\nCold(Cow, True) ::: The cow is cold.\nRound(Cow, False) ::: The cow is not round.\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nSees(Cow, Tiger, True) ::: The cow sees the tiger.\nNeeds(Mouse, Cow, True) ::: The mouse needs the cow.\nNeeds(Mouse, Tiger, True) ::: The mouse needs the tiger.\nNeeds(Squirrel, Cow, True) ::: The squirrel needs the cow.\nBlue(Tiger, True) ::: The tiger is blue.\nRed(Tiger, True) ::: The tiger is red.\nRound(Tiger, True) ::: The tiger is round.\nSees(Tiger, Mouse, True) ::: The tiger sees the mouse.\nRules:\nNeeds($x, Squirrel, True) >>> Sees($x, Tiger, True) ::: If something needs the squirrel then the squirrel sees the tiger.\nSees(Cow, Squirrel, True) >>> Eats(Cow, Mouse, True) ::: If the cow sees the squirrel then the cow eats the mouse.\nNot(Green($x, True)) && Eats(Squirrel, Mouse, True) >>> Not(Red($x, True)) ::: If the squirrel eats the mouse and the squirrel is not green then the mouse is not red.\nNeeds(Mouse, Tiger, True) && Red($x, True) >>> Not(Sees($x, Squirrel, True)) ::: If the mouse needs the tiger and the mouse is red then the tiger does not see the squirrel.\nNeeds($x, Mouse, True) && Eats(Mouse, Cow, True) >>> Eats($x, Squirrel, True) ::: If something needs the mouse and the mouse eats the cow then the cow eats the squirrel.\nBlue($x, True) >>> Needs($x, Squirrel, True) ::: If something is blue then it needs the squirrel.\nNeeds(Cow, $x, True) && Blue($x, True) >>> Eats(Cow, Mouse, True) ::: If something needs the cow and the cow is blue then it eats the mouse.\nEats($x, Mouse, True) >>> Blue($x, True) ::: If something eats the mouse then it is blue.\nQuery:\nBlue(Squirrel, False) ::: The squirrel is not blue.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-897_Q4",
    "context": "Anne is nice. Bob is big. Bob is blue. Bob is cold. Charlie is big. Charlie is cold. Charlie is nice. Charlie is young. Fiona is furry. Fiona is young. If someone is furry and nice then they are cold. If Bob is blue and Bob is big then Bob is cold. All blue, cold people are big. If someone is nice then they are smart. All smart, big people are nice. All smart people are blue. Blue, smart people are furry. Furry, cold people are smart. Cold people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nBig(Charlie, True) ::: Charlie is big.\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nYoung(Charlie, True) ::: Charlie is young.\nFurry(Fiona, True) ::: Fiona is furry.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nFurry($x, True) && Nice($x, True) >>> Cold($x, True) ::: If someone is furry and nice then they are cold.\nBlue($x, True) && Big($x, True) >>> Cold($x, True) ::: If Bob is blue and Bob is big then Bob is cold.\nBlue($x, True) && Cold($x, True) >>> Big($x, True) ::: All blue, cold people are big.\nNice($x, True) >>> Smart($x, True) ::: If someone is nice then they are smart.\nBig($x, True) && Smart($x, True) >>> Nice($x, True) ::: All smart, big people are nice.\nSmart($x, True) >>> Blue($x, True) ::: All smart people are blue.\nBlue($x, True) && Smart($x, True) >>> Furry($x, True) ::: Blue, smart people are furry.\nCold($x, True) && Furry($x, True) >>> Smart($x, True) ::: Cold people are furry.\nFurry($x, True) >>> Smart($x, True) ::: Furry, cold people are smart.\nSmart($x, True) >>> Big($x, True) ::: Smart people are big.\nQuery:\nNot(Smart(Charlie, True)) ::: Charlie is not smart.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is red. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is quiet. Bob is red. Bob is rough. Bob is white. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is red. Charlie is rough. Charlie is white. Erin is furry. Erin is green. Erin is quiet. Erin is red. Erin is rough. Erin is white. Fiona is furry"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-370_Q4",
    "context": "Anne is kind. Anne is nice. Anne is quiet. Anne is round. Erin is cold. Erin is nice. Erin is rough. Erin is smart. Fiona is kind. Fiona is nice. Harry is kind. Harry is nice. Harry is quiet. Harry is rough. Harry is round. Harry is smart. If someone is rough then they are cold. If someone is quiet and nice then they are round. If Harry is cold then Harry is rough. Rough people are quiet. Quiet people are round. Kind, nice people are quiet. If someone is round then they are rough. All cold people are nice. All kind, cold people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nNice(Anne, True) ::: Anne is nice.\nQuiet(Anne, True) ::: Anne is quiet.\nRound(Anne, True) ::: Anne is round.\nCold(Erin, True) ::: Erin is cold.\nNice(Erin, True) ::: Erin is nice.\nRough(Erin, True) ::: Erin is rough.\nSmart(Erin, True) ::: Erin is smart.\nKind(Fiona, True) ::: Fiona is kind.\nNice(Fiona, True) ::: Fiona is nice.\nKind(Harry, True) ::: Harry is kind.\nNice(Harry, True) ::: Harry is nice.\nQuiet(Harry, True) ::: Harry is quiet.\nRough(Harry, True) ::: Harry is rough.\nRound(Harry, True) ::: Harry is round.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nRough($x, True) >>> Cold($x, True) ::: If someone is rough then they are cold.\nQuiet($x, True) && Nice($x, True) >>> Round($x, True) ::: If someone is quiet and nice then they are round.\nHarry(Cold, True) >>> Rough($x, True) ::: If Harry is cold then Harry is rough.\nRough($x, True) >>> Quiet($x, True) ::: Rough people are quiet.\nQuiet($x, True) >>> Round($x, True) ::: Quiet people are round.\nKind($x, True) && Nice($x, True) >>> Quiet($x, True) ::: Kind, nice people are quiet.\nRound($x, True) >>> Rough($x, True) ::: If someone is round then they are rough.\nCold($x, True) >>> Nice($x, True) ::: All cold people are nice.\nKind($x, True) && Cold($x, True) >>> Smart($x, True) ::: All kind, cold people are smart.\nQuery:\nNot(Rough(Anne, True)) ::: Anne is not rough.\n------\nProblem:\nAnne is kind. Anne is nice. Anne is quiet. Anne is round. Erin is cold. Erin is nice. Erin is rough. Erin is smart. Fiona is kind. Fiona is nice. Harry is kind. Harry is nice. Harry is quiet. Harry is rough."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-120_Q11",
    "context": "Dave is nice. Dave is red. Erin is red. Fiona is rough. Fiona is round. Gary is cold. Gary is green. Gary is red. Gary is rough. Gary is not smart. Smart, round things are nice. Red things are nice. Rough, nice things are round. Cold things are rough. If something is red and nice then it is cold. All round things are green. If something is nice and not cold then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Dave, True) ::: Dave is nice.\nRed(Dave, True) ::: Dave is red.\nRed(Erin, True) ::: Erin is red.\nRound(Fiona, True) ::: Fiona is round.\nRound(Gary, True) ::: Gary is round.\nCold(Gary, True) ::: Gary is cold.\nGreen(Gary, True) ::: Gary is green.\nRound(Gary, True) ::: Gary is round.\nNot(Smart(Gary, True)) ::: Gary is not smart.\nRules:\nSmart($x, True) >>> Round($x, True) ::: Smart, round things are nice.\nRed($x, True) >>> Nice($x, True) ::: Red things are nice.\nRound($x, True) && Nice($x, True) >>> Rough($x, True) ::: Rough, nice things are round.\nCold($x, True) >>> Rough($x, True) ::: Cold things are rough.\nRed($x, True) && Nice($x, True) >>> Cold($x, True) ::: If something is red and nice then it is cold.\nAll($x, Round($x, True)) >>> Green($x, True) ::: All round things are green.\nNice($x, True) && Not(Cold($x, True)) >>> Green($x, True) ::: If something is nice and not cold then it is green.\nQuery:\nGreen(Erin, True) ::: Erin is green.\n------\nProblem:\nDave is nice. Dave is red. Erin is red. Fiona is rough. Fiona is round. Gary is cold. Gary is green. Gary is red. Gary is rough. Gary is not smart. Smart, round things are nice. Red things are nice. Rough, nice things are round. Cold things are rough. If something is red and nice then it is cold. All round things are green. If something is nice and not cold then it is green.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is green.\n###\nPredicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Dave, True) ::: Dave is nice.\nRed(Dave, True) ::: Dave is red.\nRed(Erin, True) ::: Erin is red.\nRound"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-685_Q8",
    "context": "The bear chases the cow. The bear eats the cow. The bear is young. The cow is red. The cow is round. The cow visits the squirrel. The rabbit is round. The rabbit visits the bear. The squirrel eats the cow. The squirrel visits the rabbit. If someone visits the squirrel and the squirrel chases the cow then the cow is round. If someone is big and red then they chase the rabbit. If someone visits the rabbit then the rabbit visits the bear. If the squirrel chases the cow and the cow is round then the cow is young. If someone chases the squirrel then the squirrel eats the rabbit. If someone eats the cow and the cow eats the rabbit then the cow chases the rabbit. If someone chases the rabbit then the rabbit is red. All red people are big. If someone eats the bear then they chase the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nFacts:\nChases(Bear, Cow, True) ::: The bear chases the cow.\nEats(Bear, Cow, True) ::: The bear eats the cow.\nYoung(Bear, True) ::: The bear is young.\nRed(Cow, True) ::: The cow is red.\nRound(Cow, True) ::: The cow is round.\nVisits(Cow, Squirrel, True) ::: The cow visits the squirrel.\nRound(Rabbit, True) ::: The rabbit is round.\nVisits(Rabbit, Bear, True) ::: The rabbit visits the bear.\nEats(Squirrel, Cow, True) ::: The squirrel eats the cow.\nVisits(Squirrel, Rabbit, True) ::: The squirrel visits the rabbit.\nRules:\nChases($x, $y, True) && Visits($y, $z, True) >>> Visits($x, $z, True) ::: If someone visits the squirrel and the squirrel chases the cow then the cow is round.\nBig($x, True) && Red($x, True) >>> Chases($x, Rabbit, True) ::: If someone is big and red then they chase the rabbit.\nVisits($x, $y, True) >>> Visits($y, $x, True) ::: If someone visits the rabbit then the rabbit visits the bear.\nChases($x, $y, True) && Round($y, True) >>> Chases($y, $x, True) ::: If the squirrel chases the cow and the cow is round then the cow is young.\nEats($x, $y, True) && Eats($y, $z, True) >>> Chases($x, $z, True) ::: If someone eats the cow and the cow eats the rabbit then the cow chases the rabbit.\nChases($x, $y, True) >>> Eats($y, $x, True) ::: If someone chases the squirrel then the squirrel eats the rabbit.\nVisits($x, $y, True) >>> Eats($y, $x, True) ::: If someone eats the bear then they chase the cow.\nQuery:\nRed(Rabbit, False) ::: The rabbit is not red.\n------\nProblem:\nThe bear chases the cow. The bear eats the cow. The bear is young. The cow is red"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-230_Q19",
    "context": "The bear is big. The bear is cold. The bear likes the cat. The bear visits the cat. The bear visits the cow. The cat is green. The cat needs the bear. The cow needs the dog. The dog is blue. The dog likes the bear. The dog visits the cow. If something is blue then it is red. If something likes the cow then the cow is big. If the cow needs the cat then the cow likes the cat. If something is blue then it is cold. If something is big and it likes the dog then the dog likes the cow. If something needs the bear and the bear needs the dog then the bear is red. If something likes the bear and it is big then it needs the dog. If something is big then it needs the cat. If the bear is big then the bear likes the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not like the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nBig(Bear, True) ::: The bear is big.\nCold(Bear, True) ::: The bear is cold.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nVisits(Bear, Cat, True) ::: The bear visits the cat.\nVisits(Bear, Cow, True) ::: The bear visits the cow.\nGreen(Cat, True) ::: The cat is green.\nNeeds(Cat, Bear, True) ::: The cat needs the bear.\nNeeds(Cow, Dog, True) ::: The cow needs the dog.\nBlue(Dog, True) ::: The dog is blue.\nLikes(Dog, Bear, True) ::: The dog likes the bear.\nVisits(Dog, Cow, True) ::: The dog visits the cow.\nRules:\nBlue($x, True) >>> Red($x, True) ::: If something is blue then it is red.\nLikes($x, Cow, True) >>> Big($x, True) ::: If something likes the cow then the cow is big.\nNeeds(Cat, Bear, True) >>> Likes(Cat, Bear, True) ::: If the cow needs the cat then the cow likes the cat.\nBlue($x, True) >>> Cold($x, True) ::: If something is blue then it is cold.\nBig($x, True) && Likes($x, Dog, True) >>> Likes(Dog, Cow, True) ::: If something is big and it likes the dog then the dog likes the cow.\nNeeds(Bear, Dog, True) && Needs(Dog, Bear, True) >>> Bear is Red($x, True) ::: If something needs the bear and the bear needs the dog then the bear is red.\nLikes($x, Bear, True) && Big($x, True) >>> Needs($x, Dog, True) ::: If something likes the bear and it is big then it needs the dog.\nBig($x, True) >>> Needs($x, Cat, True) ::: If something is big then it needs the cat.\nBig(Bear, True) >>> Likes(Bear, Dog, True) ::: If the bear is big then the bear likes the dog.\nQuery:\nLikes(Cat, Dog, True) ::: The cat does not like the dog.\n------\nProblem:\nThe bear is big. The bear is cold. The bear likes the cat."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-489_Q11",
    "context": "Bob is green. Bob is not nice. Dave is furry. Erin is furry. Erin is nice. Fiona is big. Fiona is not furry. Kind things are young. Young, big things are green. If something is young then it is green. If something is big and rough then it is not nice. If something is big then it is nice. If Bob is furry then Bob is young. If something is furry then it is big. If something is nice then it is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, False) ::: Bob is not nice.\nFurry(Dave, True) ::: Dave is furry.\nFurry(Erin, True) ::: Erin is furry.\nNice(Erin, True) ::: Erin is nice.\nBig(Fiona, True) ::: Fiona is big.\nNotFurry(Fiona, True) ::: Fiona is not furry.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nKind($x, True) >>> Young($x, True) ::: Kind things are young.\nYoung($x, True) && Big($x, True) >>> Green($x, True) ::: Young, big things are green.\nYoung($x, True) >>> Green($x, True) ::: If something is young then it is green.\nBig($x, True) && Rough($x, True) >>> NotNice($x, True) ::: If something is big and rough then it is not nice.\nBig($x, True) >>> Nice($x, True) ::: If something is big then it is nice.\nFurry($x, True) >>> Young($x, True) ::: If Bob is furry then Bob is young.\nFurry($x, True) >>> Big($x, True) ::: If something is furry then it is big.\nNice($x, True) >>> Kind($x, True) ::: If something is nice then it is kind.\nQuery:\nGreen(Dave, True) ::: Dave is green.\n------\nProblem:\nBob is green. Bob is not nice. Dave is furry. Erin is furry. Erin is nice. Fiona is big. Fiona is not furry. Kind things are young. Young, big things are green. If something is young then it is green. If something is big and rough then it is not nice. If something is big then it is nice. If Bob is furry then Bob is young. If something is furry then it is big. If something is nice then it is kind.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is green.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nKind"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-423_Q21",
    "context": "Anne is cold. Anne is furry. Anne is not quiet. Charlie is kind. Fiona is not quiet. Fiona is young. Harry is cold. Kind things are furry. Nice things are big. Furry things are nice. If something is young and furry then it is quiet. If Anne is quiet then Anne is cold. Kind, big things are young. If something is kind and not furry then it is not young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nQuite(Anne, False) ::: Anne is not quiet.\nKind(Charlie, True) ::: Charlie is kind.\nQuite(Fiona, False) ::: Fiona is not quiet.\nYoung(Fiona, True) ::: Fiona is young.\nCold(Harry, True) ::: Harry is cold.\nRules:\nFurry($x, True) >>> Nice($x, True) ::: Furry things are nice.\nNice($x, True) >>> Big($x, True) ::: Nice things are big.\nFurry($x, True) >>> Kind($x, True) ::: Furry things are kind.\nYoung($x, True) && Furry($x, True) >>> Quite($x, True) ::: If something is young and furry then it is quiet.\nQuite(Anne, True) >>> Cold($x, True) ::: If Anne is quiet then Anne is cold.\nKind($x, True) && Not(Furry($x, True)) >>> Not(Young($x, True)) ::: If something is kind and not furry then it is not young.\nKind($x, True) && Big($x, True) >>> Young($x, True) ::: Kind, big things are young.\nQuery:\nNot(Kind(Harry, True)) ::: Harry is not kind.\n------\nProblem:\nAnne is furry. Anne is not quiet. Anne is not red. Anne is not white. Anne is not young. Anne is not green. Anne is not rough. Anne is not blue. Anne is not big. Anne is not kind. Anne is not cold. Anne is not nice. Anne is not small. Anne is not black. Anne is not brown. Anne is not purple. Anne is not yellow. Anne is not orange. Anne is not pink. Anne is not grey. Anne is not silver. Anne is not gold. Anne is not platinum. Anne is not diamond. Anne is not ruby. Anne is not emerald. Anne is not sapphire. Anne is not topaz. Anne is not amethyst. Anne is not aquamarine. Anne is not garnet. Anne is not tourmaline. Anne is not opal. Anne is not onyx. Anne is not jade. Anne is not turquoise. Anne is not lapis lazuli. Anne is not malachite. Anne is not azurite. Anne is not chrysoc"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-983_Q3",
    "context": "The bald eagle chases the tiger. The bald eagle is cold. The bald eagle is rough. The dog chases the rabbit. The dog eats the rabbit. The rabbit chases the dog. The rabbit is round. The tiger chases the dog. The tiger eats the rabbit. The tiger is cold. If someone visits the dog and the dog eats the bald eagle then the bald eagle is green. If someone is red then they chase the rabbit. If someone eats the dog then they eat the rabbit. If someone chases the rabbit and the rabbit is green then they are green. If someone is green then they eat the dog. If someone visits the bald eagle and they are round then the bald eagle is green. If someone visits the rabbit and they eat the bald eagle then they eat the dog. If someone chases the dog then they visit the bald eagle. If someone is rough and they eat the rabbit then they eat the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger visits the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nRules:\nChases(BaldEagle, Tiger, True) ::: The bald eagle chases the tiger.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nChases(Dog, Rabbit, True) ::: The dog chases the rabbit.\nEats(Dog, Rabbit, True) ::: The dog eats the rabbit.\nChases(Rabbit, Dog, True) ::: The rabbit chases the dog.\nRound(Rabbit, True) ::: The rabbit is round.\nChases(Tiger, Dog, True) ::: The tiger chases the dog.\nEats(Tiger, Rabbit, True) ::: The tiger eats the rabbit.\nCold(Tiger, True) ::: The tiger is cold.\nVisits(Dog, BaldEagle, True) >>> Green(BaldEagle, True) ::: If someone visits the dog and the dog eats the bald eagle then the bald eagle is green.\nRed($x, True) >>> Chases($x, Rabbit, True) ::: If someone is red then they chase the rabbit.\nEats($x, Dog) >>> Eats($x, Rabbit) ::: If someone eats the dog then they eat the rabbit.\nChases($x, Rabbit) && Green(Rabbit, True) >>> Green($x, True) ::: If someone chases the rabbit and the rabbit is green then they are green.\nGreen($x, True) >>> Eats($x, Dog) ::: If someone is green then they eat the dog.\nVisits($x, BaldEagle) && Round($x, True) >>> Green(BaldEagle, True) ::: If someone visits the bald eagle and they are round then the bald eagle is green.\nVisits($x, Rabbit) && Eats($x, BaldEagle) >>> Eats($x, Dog) ::: If someone visits the rabbit and they eat the bald eagle then they eat the dog.\nChases($x, Dog) >>> Visits($x, BaldEagle) ::: If someone chases the dog then they visit the bald eagle.\nEats($x, Rabbit) && Rough($x, True) >>> Eats($x, Tiger) ::: If someone eats the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1187_Q7",
    "context": "Anne is kind. Anne is young. Bob is rough. Charlie is cold. Charlie is kind. Charlie is rough. Charlie is smart. Fiona is kind. Fiona is rough. Fiona is smart. Rough, cold things are smart. All young things are kind. All kind things are blue. Young things are cold. If something is rough then it is cold. All young, blue things are kind. If something is cold and smart then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nYoung(Anne, True) ::: Anne is young.\nRough(Bob, True) ::: Bob is rough.\nCold(Charlie, True) ::: Charlie is cold.\nKind(Charlie, True) ::: Charlie is kind.\nRough(Charlie, True) ::: Charlie is rough.\nSmart(Charlie, True) ::: Charlie is smart.\nKind(Fiona, True) ::: Fiona is kind.\nRough(Fiona, True) ::: Fiona is rough.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nYoung($x, True) >>> Kind($x, True) ::: All young things are kind.\nKind($x, True) >>> Blue($x, True) ::: All kind things are blue.\nRough($x, True) >>> Cold($x, True) ::: If something is rough then it is cold.\nYoung($x, True) >>> Cold($x, True) ::: Young things are cold.\nCold($x, True) && Smart($x, True) >>> Young($x, True) ::: If something is cold and smart then it is young.\nRough($x, True) && Cold($x, True) >>> Smart($x, True) ::: Rough, cold things are smart.\nYoung($x, True) && Blue($x, True) >>> Kind($x, True) ::: All young, blue things are kind.\nQuery:\nYoung(Bob, True) ::: Bob is young.\n------\nProblem:\nAnne is kind. Anne is young. Bob is rough. Charlie is cold. Charlie is kind. Charlie is rough. Charlie is smart. Fiona is kind. Fiona is rough. Fiona is smart. Rough, cold things are smart. All young things are kind. All kind things are blue. Young things are cold. If something is rough then it is cold. All young, blue things are kind. If something is cold and smart then it is young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is young.\n###\nPredicates:\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nFacts:\nKind(Anne, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-365_Q1",
    "context": "The cat likes the squirrel. The mouse visits the squirrel. The mouse visits the tiger. The squirrel likes the tiger. The squirrel needs the tiger. The squirrel visits the tiger. The tiger needs the cat. If something is red and it visits the squirrel then the squirrel is big. If something is red then it needs the squirrel. If the mouse needs the cat then the mouse is blue. If something is cold and it visits the tiger then it needs the mouse. If something needs the tiger and it visits the tiger then the tiger likes the mouse. If something needs the squirrel then the squirrel needs the cat. If something likes the mouse then it needs the cat. If something needs the cat then it is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel needs the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nFacts:\nLikes(Cat, Squirrel, True) ::: The cat likes the squirrel.\nVisits(Mouse, Squirrel, True) ::: The mouse visits the squirrel.\nVisits(Mouse, Tiger, True) ::: The mouse visits the tiger.\nLikes(Squirrel, Tiger, True) ::: The squirrel likes the tiger.\nNeeds(Squirrel, Tiger, True) ::: The squirrel needs the tiger.\nVisits(Squirrel, Tiger, True) ::: The squirrel visits the tiger.\nNeeds(Tiger, Cat, True) ::: The tiger needs the cat.\nRules:\nRed($x, True) && Visits($x, Squirrel, True) >>> Squirrel($x, True) ::: If something is red and it visits the squirrel then the squirrel is big.\nRed($x, True) >>> Needs($x, Squirrel, True) ::: If something is red then it needs the squirrel.\nMouse($x, True) && Needs($x, Cat, True) >>> Blue($x, True) ::: If the mouse needs the cat then the mouse is blue.\nCold($x, True) && Visits($x, Tiger, True) >>> Needs($x, Mouse, True) ::: If something is cold and it visits the tiger then it needs the mouse.\nNeeds($x, Tiger, True) && Visits($x, Tiger, True) >>> Likes($x, Mouse, True) ::: If something needs the tiger and it visits the tiger then the tiger likes the mouse.\nNeeds($x, Squirrel, True) >>> Squirrel($x, True) ::: If something needs the squirrel then the squirrel needs the cat.\nLikes($x, Mouse, True) >>> Needs($x, Cat, True) ::: If something likes the mouse then it needs the cat.\nNeeds($x, Cat, True) >>> Red($x, True) ::: If something needs the cat then it is red.\nQuery:\nNeeds(Squirrel, Tiger, True) ::: The squirrel needs the tiger.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-478_Q5",
    "context": "The cow is kind. The cow sees the mouse. The mouse eats the cow. The mouse is kind. The mouse needs the squirrel. The rabbit eats the mouse. The rabbit is not blue. The squirrel is not blue. The squirrel is green. The squirrel is rough. The squirrel needs the mouse. The squirrel sees the rabbit. If something sees the cow then it sees the squirrel. If something sees the rabbit then it eats the cow. If something needs the cow then the cow eats the mouse. If something needs the squirrel and the squirrel needs the cow then the cow does not need the rabbit. If the mouse eats the rabbit and the rabbit does not see the mouse then the rabbit is green. If the cow needs the rabbit then the rabbit does not eat the mouse. If something eats the squirrel and the squirrel eats the cow then it needs the cow. If something eats the mouse then it eats the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit needs the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nFacts:\nKind(Cow, True) ::: The cow is kind.\nSees(Cow, Mouse, True) ::: The cow sees the mouse.\nEats(Mouse, Cow, True) ::: The mouse eats the cow.\nKind(Mouse, True) ::: The mouse is kind.\nNeeds(Mouse, Squirrel, True) ::: The mouse needs the squirrel.\nEats(Rabbit, Mouse, True) ::: The rabbit eats the mouse.\nBlue(Rabbit, False) ::: The rabbit is not blue.\nBlue(Squirrel, False) ::: The squirrel is not blue.\nGreen(Squirrel, True) ::: The squirrel is green.\nRough(Squirrel, True) ::: The squirrel is rough.\nNeeds(Squirrel, Mouse, True) ::: The squirrel needs the mouse.\nSees(Squirrel, Rabbit, True) ::: The squirrel sees the rabbit.\nSees(Cow, Squirrel, True) ::: If something sees the cow then it sees the squirrel.\nSees(Rabbit, Cow, True) ::: If something sees the rabbit then it eats the cow.\nEats(Cow, Mouse, True) ::: If something needs the cow then the cow eats the mouse.\nNeeds(Squirrel, Cow, True) ::: If something needs the squirrel and the squirrel needs the cow then the cow does not need the rabbit.\nEats(Mouse, Rabbit, True) ::: If the mouse eats the rabbit and the rabbit does not see the mouse then the rabbit is green.\nNeeds(Cow, Rabbit, True) ::: If the cow needs the rabbit then the rabbit does not eat the mouse.\nEats(Squirrel, Cow, True) ::: If something eats the squirrel and the squirrel eats the cow then it needs the cow.\nEats(Mouse, Squirrel, True) ::: If something eats the mouse then it eats the squirrel.\nQuery:\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-336_Q8",
    "context": "The bald eagle eats the bear. The bald eagle eats the cat. The bald eagle eats the rabbit. The bald eagle is young. The bald eagle likes the bear. The bald eagle sees the cat. The bald eagle sees the rabbit. The bear eats the bald eagle. The cat eats the bald eagle. The cat likes the rabbit. The rabbit is round. The rabbit sees the bald eagle. If someone eats the bald eagle and they see the rabbit then they are round. If someone eats the bald eagle and they eat the rabbit then the rabbit likes the cat. If someone is young and they eat the rabbit then the rabbit sees the cat. If someone eats the rabbit and the rabbit is cold then they are blue. If the rabbit sees the cat and the rabbit is round then the cat eats the rabbit. If the bald eagle sees the bear and the bald eagle likes the bear then the bald eagle is red. If someone eats the rabbit and they are blue then they eat the bald eagle. If someone likes the cat then the cat is round. If the rabbit likes the cat and the cat is round then the rabbit is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not like the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nFacts:\nEats(BaldEagle, Bear, True) ::: The bald eagle eats the bear.\nEats(BaldEagle, Cat, True) ::: The bald eagle eats the cat.\nEats(BaldEagle, Rabbit, True) ::: The bald eagle eats the rabbit.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nLikes(BaldEagle, Bear, True) ::: The bald eagle likes the bear.\nSees(BaldEagle, Cat, True) ::: The bald eagle sees the cat.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nEats(Bear, BaldEagle, True) ::: The bear eats the bald eagle.\nEats(Cat, BaldEagle, True) ::: The cat eats the bald eagle.\nLikes(Cat, Rabbit, True) ::: The cat likes the rabbit.\nRound(Rabbit, True) ::: The rabbit is round.\nSees(Rabbit, BaldEagle, True) ::: The rabbit sees the bald eagle.\nRules:\nEats($x, $y, True) && Sees($x, $z, True) >>> Round($z, True) ::: If someone eats the bald eagle and they see the rabbit then they are round.\nEats($x, $y, True) && Eats($x, $z, True) >>> $y Likes $z ::: If someone eats the bald eagle and they eat the rabbit then the rabbit likes the cat.\nEats($x, $y, True) && Young($x, True) >>> Round($y, True) ::: If someone eats the rabbit and they are young then the rabbit sees the cat.\nEats($x, $y, True) && Blue($x, True) >>> Blue($y, True) ::: If the rabbit eats the bald eagle and they are blue then they eat the bald eagle.\nLikes($x, $y, True) && Round($y, True) >>> $x Eats $y ::: If someone likes the cat then the cat"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-818_Q11",
    "context": "Charlie is young. Erin is blue. Erin is not kind. Fiona is blue. Fiona is white. Gary is blue. Gary is kind. Furry, nice things are white. If something is young and blue then it is smart. All blue, smart things are furry. All smart, white things are furry. Young things are nice. If Fiona is smart and Fiona is young then Fiona is not furry. If Erin is kind then Erin is furry. If Gary is smart and Gary is white then Gary is not kind. If something is nice then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nSmart($x, bool) ::: Is x smart?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Erin, True) ::: Erin is blue.\nNot(Kind(Erin, True)) ::: Erin is not kind.\nBlue(Fiona, True) ::: Fiona is blue.\nWhite(Fiona, True) ::: Fiona is white.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nFurry(Furry, Nice, White) ::: Furry, nice things are white.\nYoung(Blue, Smart) ::: If something is young and blue then it is smart.\nBlue(Smart, Furry) ::: All blue, smart things are furry.\nSmart(White, Furry) ::: All smart, white things are furry.\nYoung(Nice) ::: Young things are nice.\nNot(Furry(Fiona, Smart, Young)) ::: If Fiona is smart and Fiona is young then Fiona is not furry.\nKind(Erin, Furry) ::: If Erin is kind then Erin is furry.\nNot(Kind(Gary, Smart, White)) ::: If Gary is smart and Gary is white then Gary is not kind.\nBlue(Nice) ::: If something is nice then it is blue.\nQuery:\nWhite(Charlie, True) ::: Charlie is white.\n------\nProblem:\nCharlie is young. Erin is blue. Erin is not kind. Fiona is blue. Fiona is white. Gary is blue. Gary is kind. Furry, nice things are white. If something is young and blue then it is smart. All blue, smart things are furry. All smart, white things are furry. Young things are nice. If Fiona is smart and Fiona is young then Fiona is not furry. If Erin is kind then Erin is furry. If Gary is smart and Gary is white then Gary is not kind. If something is nice then it is blue.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is white.\n###\nPredicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-455_Q9",
    "context": "The bald eagle chases the squirrel. The bald eagle does not eat the lion. The bald eagle eats the squirrel. The bald eagle does not see the rabbit. The lion does not chase the rabbit. The lion is kind. The rabbit chases the bald eagle. The rabbit eats the bald eagle. The rabbit is big. The rabbit is cold. The rabbit sees the squirrel. The squirrel is blue. The squirrel is cold. The squirrel is kind. If something chases the rabbit then it is kind. If something sees the lion then it chases the rabbit. If the rabbit sees the squirrel and the squirrel eats the rabbit then the rabbit is green. If something eats the lion then the lion chases the squirrel. If something eats the rabbit then the rabbit sees the lion. If something is kind then it eats the rabbit. If something sees the lion and it does not eat the lion then it eats the bald eagle. If something eats the squirrel and the squirrel eats the bald eagle then the squirrel is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(BaldEagle, Squirrel, True) ::: The bald eagle chases the squirrel.\nEats(BaldEagle, Lion, False) ::: The bald eagle does not eat the lion.\nEats(BaldEagle, Squirrel, True) ::: The bald eagle eats the squirrel.\nSees(BaldEagle, Rabbit, False) ::: The bald eagle does not see the rabbit.\nChases(Lion, Rabbit, False) ::: The lion does not chase the rabbit.\nKind(Lion, True) ::: The lion is kind.\nChases(Rabbit, BaldEagle, True) ::: The rabbit chases the bald eagle.\nEats(Rabbit, BaldEagle, True) ::: The rabbit eats the bald eagle.\nBig(Rabbit, True) ::: The rabbit is big.\nCold(Rabbit, True) ::: The rabbit is cold.\nSees(Rabbit, Squirrel, True) ::: The rabbit sees the squirrel.\nBlue(Squirrel, True) ::: The squirrel is blue.\nCold(Squirrel, True) ::: The squirrel is cold.\nKind(Squirrel, True) ::: The squirrel is kind.\nRules:\nChases($x, $y, True) >>> Kind($x, True) ::: If something chases the rabbit then it is kind.\nSees($x, $y, True) >>> Chases($x, Rabbit, True) ::: If something sees the lion then it chases the rabbit.\nSees($x, $y, True) && Eats($x, $y, True) && Eats($y, $z, True) >>> Kind($x, True) ::: If the rabbit sees the squirrel and the squirrel eats the rabbit then the rabbit is green.\nEats($x, $y, True) >>> Chases($y, $x, True) ::: If something eats the lion then the lion chases the squirrel.\nEats($x, $y, True) >>> Sees($x, $y, True) ::: If something eats the rab"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-294_Q2",
    "context": "The cat eats the squirrel. The cat is round. The cat needs the dog. The cat needs the squirrel. The dog likes the cat. The dog likes the tiger. The squirrel is blue. The squirrel is not round. The tiger is blue. The tiger is kind. The tiger is round. The tiger needs the squirrel. If something likes the tiger and the tiger needs the dog then it is round. If something eats the cat then it needs the dog. If something is big then it needs the dog. If the dog likes the tiger and the tiger likes the dog then the dog does not like the squirrel. If something is round then it eats the cat. If something needs the cat and it eats the tiger then the tiger needs the dog. If something needs the dog and it does not eat the tiger then it is blue. If the dog is round then the dog eats the squirrel. If something likes the tiger and it is kind then the tiger likes the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nLikes($x, $y) ::: Does x like y?\nNeeds($x, $y) ::: Does x need y?\nIs($x, $y) ::: Is x y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nFacts:\nEats(Cat, Squirrel) ::: The cat eats the squirrel.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Dog) ::: The cat needs the dog.\nNeeds(Cat, Squirrel) ::: The cat needs the squirrel.\nLikes(Cat, Dog) ::: The cat likes the dog.\nLikes(Cat, Tiger) ::: The cat likes the tiger.\nBlue(Squirrel, True) ::: The squirrel is blue.\nNot(Round(Squirrel, True)) ::: The squirrel is not round.\nBlue(Tiger, True) ::: The tiger is blue.\nKind(Tiger, True) ::: The tiger is kind.\nRound(Tiger, True) ::: The tiger is round.\nNeeds(Tiger, Squirrel) ::: The tiger needs the squirrel.\nIf(Likes(Tiger, Dog) && Likes(Dog, Tiger), Round(Dog, True)) ::: If something likes the tiger and the tiger likes the dog then it is round.\nIf(Eats(Cat, Tiger), Needs(Tiger, Dog)) ::: If something eats the cat then it needs the dog.\nIf(Big(x), Needs(x, Dog)) ::: If something is big then it needs the dog.\nIf(Likes(Tiger, Dog) && Likes(Dog, Tiger), Not(Likes(Dog, Squirrel))) ::: If something likes the tiger and the tiger likes the dog then the dog does not like the squirrel.\nIf(Eats(Cat, Tiger), Needs(Tiger, Dog)) ::: If something eats the cat then it needs the dog.\nIf(Round(x), Eats(x, Cat)) ::: If something is round then it eats the cat.\nIf(Needs(Cat, Tiger) && Eats(Tiger, Dog), Needs(Tiger, Dog)) ::: If something needs the cat and it eats the tiger then the tiger needs the dog.\nIf(Needs(Dog, x) && Not(Eats(Dog, Tiger)), Is(x"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-947_Q2",
    "context": "The bear does not eat the lion. The bear likes the lion. The lion is big. The lion visits the mouse. The lion visits the squirrel. The mouse eats the squirrel. The mouse likes the bear. The mouse likes the lion. The mouse visits the squirrel. The squirrel is not cold. The squirrel is nice. If something eats the squirrel then the squirrel eats the mouse. If something visits the bear and it is green then it is nice. If something is green and blue then it visits the bear. If something likes the lion and it is blue then the lion is nice. If something eats the mouse then it likes the lion. If the bear is not green then the bear likes the lion. If something visits the bear then the bear likes the lion. If something likes the lion and the lion is blue then the lion likes the mouse. If something is nice then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nIsGreen($x, bool) ::: Is x green?\nIsBlue($x, bool) ::: Is x blue?\nIsNice($x, bool) ::: Is x nice?\nIsCold($x, bool) ::: Is x cold?\nFacts:\nEats(Bear, Lion, False) ::: The bear does not eat the lion.\nLikes(Bear, Lion, True) ::: The bear likes the lion.\nIsBig(Lion, True) ::: The lion is big.\nVisits(Lion, Mouse, True) ::: The lion visits the mouse.\nVisits(Lion, Squirrel, True) ::: The lion visits the squirrel.\nEats(Mouse, Squirrel, True) ::: The mouse eats the squirrel.\nLikes(Mouse, Bear, True) ::: The mouse likes the bear.\nLikes(Mouse, Lion, True) ::: The mouse likes the lion.\nVisits(Mouse, Squirrel, True) ::: The mouse visits the squirrel.\nIsNotCold(Squirrel, True) ::: The squirrel is not cold.\nIsNice(Squirrel, True) ::: The squirrel is nice.\nIfEats($x, $y, True) >>> Eats($y, $x, True) ::: If something eats the squirrel then the squirrel eats the mouse.\nIfVisits($x, Bear, True) >>> IsGreen($x, True) ::: If something visits the bear and it is green then it is nice.\nIfIsGreen($x, True) && IsBlue($x, True) >>> Visits($x, Bear, True) ::: If something is green and blue then it visits the bear.\nIfLikes($x, Lion, True) && IsBlue($x, True) >>> IsNice(Lion, True) ::: If something likes the lion and it is blue then the lion is nice.\nIfEats($x, Mouse, True) >>> Likes($x, Lion, True) ::: If something eats the mouse then it likes the lion.\nIfNotIsGreen(Bear, True) >>> Likes(Bear, Lion, True) ::: If the bear is not green then the bear likes the lion.\nIfVisits($x, Bear, True) >>> Likes(Bear, Lion, True) ::: If something visits the bear then the"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-1009_Q18",
    "context": "The cat is red. The cat likes the squirrel. The lion eats the squirrel. The mouse is cold. The mouse visits the lion. The squirrel is red. The squirrel visits the cat. If someone is cold and they like the squirrel then the squirrel is cold. If someone is cold then they visit the squirrel. If someone visits the lion and they like the cat then they visit the squirrel. If someone visits the mouse then the mouse is red. If someone is cold then they like the mouse. If someone likes the mouse and the mouse visits the lion then they like the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion likes the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nCold($x, bool) ::: Is x cold?\nFacts:\nRed(Cat, True) ::: The cat is red.\nLikes(Cat, Squirrel, True) ::: The cat likes the squirrel.\nEats(Lion, Squirrel, True) ::: The lion eats the squirrel.\nCold(Mouse, True) ::: The mouse is cold.\nVisits(Mouse, Lion, True) ::: The mouse visits the lion.\nRed(Squirrel, True) ::: The squirrel is red.\nVisits(Squirrel, Cat, True) ::: The squirrel visits the cat.\nRules:\nCold($x, True) && Likes($x, Squirrel, True) >>> Red($x, True) ::: If someone is cold and they like the squirrel then the squirrel is cold.\nCold($x, True) >>> Visits($x, Squirrel, True) ::: If someone is cold then they visit the squirrel.\nVisits($x, Lion, True) && Likes($x, Cat, True) >>> Visits($x, Squirrel, True) ::: If someone visits the lion and they like the cat then they visit the squirrel.\nVisits($x, Mouse, True) >>> Red($x, True) ::: If someone visits the mouse then the mouse is red.\nCold($x, True) >>> Likes($x, Mouse, True) ::: If someone is cold then they like the mouse.\nLikes($x, Mouse, True) && Visits($x, Lion, True) >>> Likes($x, Squirrel, True) ::: If someone likes the mouse and the mouse visits the lion then they like the squirrel.\nQuery:\nLikes(Lion, Mouse, True) ::: The lion likes the mouse.\n------\nProblem:\nThe cat is red. The cat likes the squirrel. The lion eats the squirrel. The mouse is cold. The mouse visits the lion. The squirrel is red. The squirrel visits the cat. If someone is cold and they like the squirrel then the squirrel is cold. If someone is cold then they visit the squirrel. If someone visits the lion and they like the cat then they visit the squirrel. If someone visits the mouse then the mouse is red. If someone is cold then they like the mouse. If someone likes the mouse and"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-960_Q6",
    "context": "Anne is quiet. Anne is not round. Anne is young. Charlie is not quiet. Charlie is young. Dave is blue. Dave is not smart. Harry is blue. Harry is kind. Harry is young. All blue, kind things are rough. Rough, kind things are quiet. Round things are kind. If Anne is round then Anne is kind. If Anne is smart and Anne is quiet then Anne is not round. All blue things are round. If something is kind and not round then it is young. If something is quiet and not blue then it is young. Quiet things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nRound(Anne, False) ::: Anne is not round.\nYoung(Anne, True) ::: Anne is young.\nQuite(Charlie, False) ::: Charlie is not quiet.\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Dave, True) ::: Dave is blue.\nSmart(Dave, False) ::: Dave is not smart.\nBlue(Harry, True) ::: Harry is blue.\nKind(Harry, True) ::: Harry is kind.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBlue($x, True) >>> Kind($x, True) ::: All blue, kind things are rough.\nKind($x, True) >>> Rough($x, True) ::: Rough, kind things are quiet.\nRound($x, True) >>> Kind($x, True) ::: Round things are kind.\nRound(Anne, True) >>> Kind(Anne, True) ::: If Anne is round then Anne is kind.\nSmart($x, True) && Quite($x, True) >>> Round($x, False) ::: If Anne is smart and Anne is quiet then Anne is not round.\nBlue($x, True) >>> Round($x, True) ::: All blue things are round.\nKind($x, True) && Round($x, False) >>> Young($x, True) ::: If something is kind and not round then it is young.\nQuite($x, True) && Not(Blue($x, True)) >>> Young($x, True) ::: If something is quiet and not blue then it is young.\nQuite($x, True) >>> Young($x, True) ::: Quiet things are young.\nQuery:\nNot(Quite(Harry, True)) ::: Harry is not quiet.\n------\nProblem:\nAnne is quiet. Anne is not round. Anne is young. Charlie is not quiet. Charlie is young. Dave is blue. Dave is not smart. Harry is blue. Harry is kind. Harry is young. All blue, kind things are rough. Rough, kind things are quiet. Round things are kind. If Anne is round then Anne is kind. If Anne is smart and Anne is quiet then Anne is not"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-677_Q2",
    "context": "Bob is furry. Bob is green. Charlie is furry. Charlie is kind. Charlie is young. Erin is green. Erin is kind. Fiona is blue. Fiona is furry. Fiona is smart. All young people are kind. Furry, cold people are young. Furry, blue people are smart. If someone is kind and furry then they are blue. If Bob is smart then Bob is furry. All furry, blue people are kind. If someone is furry then they are cold. If someone is young and furry then they are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Bob, True) ::: Bob is furry.\nGreen(Bob, True) ::: Bob is green.\nFurry(Charlie, True) ::: Charlie is furry.\nKind(Charlie, True) ::: Charlie is kind.\nYoung(Charlie, True) ::: Charlie is young.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::: Erin is kind.\nBlue(Fiona, True) ::: Fiona is blue.\nFurry(Fiona, True) ::: Fiona is furry.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nYoung($x, True) >>> Kind($x, True) ::: All young people are kind.\nFurry($x, True) && Cold($x, True) >>> Young($x, True) ::: Furry, cold people are young.\nFurry($x, True) && Blue($x, True) >>> Smart($x, True) ::: Furry, blue people are smart.\nKind($x, True) && Furry($x, True) >>> Blue($x, True) ::: If someone is kind and furry then they are blue.\nFurry(Bob, True) >>> Smart(Bob, True) ::: If Bob is smart then Bob is furry.\nFurry($x, True) && Blue($x, True) >>> Kind($x, True) ::: All furry, blue people are kind.\nFurry($x, True) >>> Cold($x, True) ::: If someone is furry then they are cold.\nYoung($x, True) && Furry($x, True) >>> Green($x, True) ::: If someone is young and furry then they are green.\nQuery:\nNot(Kind(Erin, True)) ::: Erin is not kind.\n------\nProblem:\nBob is furry. Bob is green. Charlie is furry. Charlie is kind. Charlie is young. Erin is green. Erin is kind. Fiona is blue. Fiona is furry. Fiona is smart. All young people are kind. Furry, cold people are young. Furry, blue people are smart. If someone is kind and"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-960_Q12",
    "context": "The dog is round. The dog needs the tiger. The lion chases the dog. The lion chases the mouse. The lion needs the dog. The lion sees the dog. The mouse is red. The mouse sees the tiger. The tiger is blue. The tiger is red. The tiger is round. The tiger sees the lion. If something chases the mouse and it is round then the mouse is kind. If the mouse sees the tiger and the tiger is red then the tiger is kind. If something chases the mouse then it sees the mouse. If something chases the lion and the lion sees the tiger then the tiger chases the lion. If something is round then it needs the tiger. If something chases the dog then it is round. If something is round then it sees the lion. If something is kind then it chases the dog. If something needs the lion then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not see the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nFacts:\nRound(Dog, True) ::: The dog is round.\nNeeds(Dog, Tiger, True) ::: The dog needs the tiger.\nChases(Lion, Dog, True) ::: The lion chases the dog.\nChases(Lion, Mouse, True) ::: The lion chases the mouse.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nSees(Lion, Dog, True) ::: The lion sees the dog.\nRed(Mouse, True) ::: The mouse is red.\nSees(Mouse, Tiger, True) ::: The mouse sees the tiger.\nBlue(Tiger, True) ::: The tiger is blue.\nRed(Tiger, True) ::: The tiger is red.\nRound(Tiger, True) ::: The tiger is round.\nSees(Tiger, Lion, True) ::: The tiger sees the lion.\nRules:\nRound($x, True) >>> Kind($x, True) ::: If something chases the mouse and it is round then the mouse is kind.\nSees($x, Tiger) && Red($x, True) >>> Kind($x, True) ::: If the mouse sees the tiger and the tiger is red then the tiger is kind.\nChases($x, Mouse) >>> Sees($x, Mouse) ::: If something chases the mouse then it sees the mouse.\nChases($x, Lion) && Sees($x, Tiger) >>> Chases($x, Tiger) ::: If something chases the lion and the lion sees the tiger then the tiger chases the lion.\nRound($x, True) >>> Needs($x, Tiger, True) ::: If something is round then it needs the tiger.\nChases($x, Dog) >>> Round($x, True) ::: If something chases the dog then it is round.\nRound($x, True) >>> Sees($x, Lion) ::: If something is round then it sees the lion.\nKind($x, True) >>> Chases($x, Dog) ::: If something is kind then it chases the dog.\nNeeds($x, Lion, True) >>> Round($x, True) ::: If something needs the lion then it is round.\nQuery:\nSees(Mouse, Lion, True) ::: The mouse does not see the lion.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-521_Q16",
    "context": "The cow eats the lion. The lion eats the mouse. The lion needs the mouse. The mouse sees the lion. The tiger eats the lion. The tiger is green. The tiger is red. The tiger needs the lion. The tiger needs the mouse. The tiger sees the cow. If someone sees the lion then they are cold. If someone needs the tiger and they need the mouse then they are cold. If someone needs the tiger and the tiger eats the cow then the tiger needs the lion. All round people are green. All young, green people are round. If someone eats the mouse and the mouse sees the lion then they are green. If someone needs the tiger then the tiger sees the lion. If someone is cold and they see the lion then they need the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow needs the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nNeeds($x, $y) ::: Does x need y?\nSees($x, $y) ::: Does x see y?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nEats(Cow, Lion) ::: The cow eats the lion.\nEats(Lion, Mouse) ::: The lion eats the mouse.\nNeeds(Lion, Mouse) ::: The lion needs the mouse.\nSees(Lion, Mouse) ::: The lion sees the mouse.\nNeeds(Tiger, Lion) ::: The tiger needs the lion.\nGreen(Tiger) ::: The tiger is green.\nRed(Tiger) ::: The tiger is red.\nNeeds(Tiger, Mouse) ::: The tiger needs the mouse.\nSees(Tiger, Cow) ::: The tiger sees the cow.\nCold(Lion, True) ::: If someone sees the lion then they are cold.\nNeeds(Tiger, Lion) && Needs(Tiger, Mouse) >>> Cold($x, True) ::: If someone needs the tiger and they need the mouse then they are cold.\nNeeds(Tiger, Lion) && Eats(Tiger, Cow) >>> Needs(Tiger, Lion) ::: If someone needs the tiger and the tiger eats the cow then the tiger needs the lion.\nAll(Round($x, True)) >>> Green($x, True) ::: All round people are green.\nAll(Young($x, True) && Green($x, True)) >>> Round($x, True) ::: All young, green people are round.\nEats(Mouse, Lion) && Sees(Mouse, Lion) >>> Green($x, True) ::: If someone eats the mouse and the mouse sees the lion then they are green.\nNeeds(Tiger, Lion) >>> Sees(Tiger, Lion) ::: If someone needs the tiger then the tiger sees the lion.\nSees(Lion, Mouse) && Cold($x, True) >>> Needs(Tiger, $x) ::: If someone is cold and they see the lion then they need the tiger.\nQuery:\nNeeds(Cow, Tiger) ::: The cow needs the tiger.\n------\nProblem:\nThe cow eats the lion. The lion eats the mouse. The lion needs the mouse. The mouse sees the lion. The tiger eats the lion. The tiger is green. The tiger is red. The tiger"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-568_Q9",
    "context": "The bald eagle is kind. The bald eagle likes the rabbit. The cat is not kind. The cat is not nice. The cat visits the lion. The lion is green. The lion is kind. The lion likes the bald eagle. The lion likes the cat. The lion does not visit the cat. The lion visits the rabbit. The rabbit is cold. The rabbit likes the bald eagle. The rabbit needs the bald eagle. If the rabbit needs the bald eagle and the bald eagle visits the cat then the rabbit likes the cat. If the cat needs the rabbit then the cat does not visit the bald eagle. If someone visits the cat and they do not visit the bald eagle then they are kind. If someone is cold and not kind then they like the lion. If someone needs the rabbit then they visit the lion. If someone needs the rabbit and the rabbit does not need the lion then the rabbit is green. If someone likes the lion then the lion needs the rabbit. If someone visits the lion then they are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion visits the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nFacts:\nKind(BaldEagle, True) ::: The bald eagle is kind.\nLikes(BaldEagle, Rabbit, True) ::: The bald eagle likes the rabbit.\nNotKind(Cat, True) ::: The cat is not kind.\nNotNice(Cat, True) ::: The cat is not nice.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nGreen(Lion, True) ::: The lion is green.\nKind(Lion, True) ::: The lion is kind.\nLikes(Lion, BaldEagle, True) ::: The lion likes the bald eagle.\nLikes(Lion, Cat, True) ::: The lion likes the cat.\nNotVisits(Lion, Cat, True) ::: The lion does not visit the cat.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nCold(Rabbit, True) ::: The rabbit is cold.\nLikes(Rabbit, BaldEagle, True) ::: The rabbit likes the bald eagle.\nNeeds(Rabbit, BaldEagle, True) ::: The rabbit needs the bald eagle.\nIf(RabbitNeedsBaldEagle, RabbitVisitsCat, RabbitLikesCat) ::: If the rabbit needs the bald eagle and the bald eagle visits the cat then the rabbit likes the cat.\nIf(CatNeedsRabbit, CatVisitsBaldEagle, NotCatVisitsBaldEagle) ::: If the cat needs the rabbit then the cat does not visit the bald eagle.\nIf(CatVisitsCat, NotCatVisitsBaldEagle, Kind) ::: If someone visits the cat and they do not visit the bald eagle then they are kind.\nIf(Cold, NotKind, LikesLion) ::: If someone is cold and not kind then they like the lion.\nIf(RabbitNeedsRabbit, RabbitVisitsLion, RabbitIsGreen) ::: If someone needs the rabbit then they visit the lion.\nIf(RabbitNeedsLion, RabbitIsGreen, RabbitIsGreen) ::: If someone needs the rabbit and the rab"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-691_Q10",
    "context": "The bald eagle sees the cat. The cat eats the dog. The cat is big. The cat is kind. The dog eats the bald eagle. The dog eats the cat. The dog is kind. The dog sees the lion. The lion eats the bald eagle. The lion is green. The lion is nice. The lion sees the dog. Cold things are green. If something sees the lion then it needs the dog. If something needs the bald eagle then it sees the lion. If something is nice then it sees the lion. If something is big then it sees the cat. If something is green and it needs the dog then it eats the cat. If something is green and it eats the cat then the cat needs the bald eagle. If something eats the bald eagle then the bald eagle is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not need the bald eagle.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nNeeds($x, $y, bool) ::: Does x need y?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFacts:\nSees(BaldEagle, Cat, True) ::: The bald eagle sees the cat.\nEats(Cat, Dog, True) ::: The cat eats the dog.\nBig(Cat, True) ::: The cat is big.\nKind(Cat, True) ::: The cat is kind.\nEats(Cat, BaldEagle, True) ::: The cat eats the bald eagle.\nEats(Cat, Cat, True) ::: The cat eats the cat.\nKind(Cat, True) ::: The cat is kind.\nSees(Cat, Lion, True) ::: The cat sees the lion.\nGreen(Lion, True) ::: The lion is green.\nNice(Lion, True) ::: The lion is nice.\nSees(Dog, Lion, True) ::: The dog sees the lion.\nRules:\nCold($x, True) >>> Green($x, True) ::: Cold things are green.\nSees($x, Lion) >>> Needs($x, BaldEagle) ::: If something sees the lion then it needs the bald eagle.\nNeeds($x, BaldEagle) >>> Sees($x, Lion) ::: If something needs the bald eagle then it sees the lion.\nKind($x, True) >>> Sees($x, Lion) ::: If something is kind then it sees the lion.\nBig($x, True) >>> Sees($x, Cat) ::: If something is big then it sees the cat.\nGreen($x, True) && Needs($x, Dog) >>> Eats($x, Cat) ::: If something is green and it needs the dog then it eats the cat.\nGreen($x, True) && Eats($x, Cat) >>> Cat($x, True) ::: If something is green and it eats the cat then the cat needs the bald eagle.\nEats($x, BaldEagle) >>> Nice($x, True) ::: If something eats the bald eagle then the bald eagle is nice.\nQuery:\nNeeds(Cat, BaldEagle, False) ::: The cat does not need the bald eagle.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is kind. The cat is quiet. The cat is rough"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-602_Q13",
    "context": "The cat is red. The cat is not rough. The cat does not like the squirrel. The cat does not see the squirrel. The dog is not young. The dog needs the cat. The mouse is round. The mouse likes the cat. The mouse needs the cat. The mouse sees the cat. The squirrel is young. The squirrel needs the mouse. If something sees the dog then it is red. If something is red and it needs the squirrel then the squirrel likes the mouse. If something is young and it sees the dog then the dog needs the mouse. If something needs the mouse then it is rough. If the cat likes the mouse then the mouse sees the squirrel. If something needs the cat and it needs the mouse then it likes the cat. If something is rough then it sees the dog. If something is rough and not red then it likes the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not see the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nRed(Cat, True) ::: The cat is red.\nNot(Rough(Cat, True)) ::: The cat is not rough.\nNot(Likes(Cat, Squirrel, True)) ::: The cat does not like the squirrel.\nNot(Sees(Cat, Squirrel, True)) ::: The cat does not see the squirrel.\nNot(Young(Dog, True)) ::: The dog is not young.\nNeeds(Dog, Cat, True) ::: The dog needs the cat.\nRound(Mouse, True) ::: The mouse is round.\nLikes(Mouse, Cat, True) ::: The mouse likes the cat.\nNeeds(Mouse, Cat, True) ::: The mouse needs the cat.\nSees(Mouse, Cat, True) ::: The mouse sees the cat.\nYoung(Squirrel, True) ::: The squirrel is young.\nNeeds(Squirrel, Mouse, True) ::: The squirrel needs the mouse.\nRules:\nRed($x, True) >>> Needs($x, Squirrel, True) ::: If something sees the dog then it is red.\nRed($x, True) && Needs($x, Squirrel, True) >>> Likes(Squirrel, Mouse, True) ::: If something is red and it needs the squirrel then the squirrel likes the mouse.\nYoung($x, True) && Sees($x, Dog, True) >>> Needs(Dog, Mouse, True) ::: If something needs the mouse then it is rough.\nLikes(Cat, Mouse, True) >>> Sees(Mouse, Squirrel, True) ::: If the cat likes the mouse then the mouse sees the squirrel.\nNeeds($x, Cat) && Needs($x, Mouse) >>> Likes($x, Cat, True) ::: If something needs the cat and it needs the mouse then it likes the cat.\nRough($x, True) >>> Sees($x, Dog, True) ::: If something is rough then it sees the dog.\nRough($x, True) && Not(Red($x, True)) >>> Likes(Squirrel, $x, True) ::: If something is rough and not red then it likes the squirrel.\nQuery:\nNot(Sees(Mouse"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-658_Q14",
    "context": "Anne is rough. Charlie is quiet. Charlie is smart. Charlie is white. Erin is quiet. Erin is red. Fiona is quiet. Fiona is red. Fiona is round. Fiona is smart. Fiona is white. If someone is furry and round then they are smart. All round, red people are furry. All smart, furry people are rough. If Erin is red then Erin is white. All smart, rough people are furry. All furry, rough people are round. If someone is white then they are rough. If someone is red and rough then they are smart. All red, rough people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nRough($x, bool) ::: Is x rough?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nQuite(Charlie, True) ::: Charlie is quiet.\nSmart(Charlie, True) ::: Charlie is smart.\nWhite(Charlie, True) ::: Charlie is white.\nQuite(Erin, True) ::: Erin is quiet.\nRed(Erin, True) ::: Erin is red.\nQuite(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nRound(Fiona, True) ::: Fiona is round.\nSmart(Fiona, True) ::: Fiona is smart.\nWhite(Fiona, True) ::: Fiona is white.\nRules:\nFurry($x, True) >>> Round($x, True) ::: If someone is furry and round then they are smart.\nRed($x, True) >>> Furry($x, True) ::: All round, red people are furry.\nFurry($x, True) >>> Rough($x, True) ::: All smart, furry people are rough.\nRed($x, True) >>> White($x, True) ::: If Erin is red then Erin is white.\nSmart($x, True) >>> Furry($x, True) ::: All smart, rough people are furry.\nFurry($x, True) >>> Round($x, True) ::: All furry, rough people are round.\nWhite($x, True) >>> Rough($x, True) ::: If someone is white then they are rough.\nRed($x, True) >>> Smart($x, True) ::: If someone is red and rough then they are smart.\nRed($x, True) >>> White($x, True) ::: All red, rough people are white.\nQuery:\nWhite(Anne, True) ::: Anne is white.\n------\nProblem:\nAnne is furry. Anne is green. Anne is rough. Anne is white. Charlie is furry. Charlie is green. Charlie is rough. Charlie is white. Erin is furry. Erin is green. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1118_Q22",
    "context": "Bob is kind. Charlie is green. Charlie is kind. Charlie is young. Dave is young. Erin is big. Erin is young. All white, green people are young. All rough, kind people are big. If someone is green then they are young. Young people are rough. Big, rough people are furry. Kind people are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nWhite($x, bool) ::: Is x white?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nGreen(Charlie, True) ::: Charlie is green.\nKind(Charlie, True) ::: Charlie is kind.\nYoung(Charlie, True) ::: Charlie is young.\nYoung(Dave, True) ::: Dave is young.\nBig(Erin, True) ::: Erin is big.\nYoung(Erin, True) ::: Erin is young.\nRules:\nWhite($x, True) >>> Young($x, True) ::: All white, green people are young.\nRough($x, True) >>> Kind($x, True) ::: All rough, kind people are big.\nGreen($x, True) >>> Young($x, True) ::: If someone is green then they are young.\nYoung($x, True) >>> Rough($x, True) ::: Young people are rough.\nBig($x, True) >>> Rough($x, True) ::: Big, rough people are furry.\nKind($x, True) >>> Green($x, True) ::: Kind people are green.\nQuery:\nKind(Dave, True) ::: Dave is kind.\n------\nProblem:\nBob is kind. Charlie is green. Charlie is kind. Charlie is young. Dave is young. Erin is big. Erin is young. All white, green people are young. All rough, kind people are big. If someone is green then they are young. Young people are rough. Big, rough people are furry. Kind people are green.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is kind.\n###\nPredicates:\nKind($x, bool) ::: Is x kind?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nWhite($x, bool) ::: Is x white?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nGreen(Charlie, True) ::: Charlie is green.\nKind(Charlie, True) ::: Charlie is kind.\nYou"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1220_Q6",
    "context": "Anne is blue. Bob is blue. Bob is green. Bob is smart. Dave is big. Dave is nice. Fiona is smart. If something is nice then it is not green. Quiet, blue things are big. If something is blue then it is young. If something is nice then it is quiet. Young things are blue. If Anne is young then Anne is quiet. If Dave is young then Dave is green. All big, quiet things are nice. If Fiona is blue then Fiona is not green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nBlue(Bob, True) ::: Bob is blue.\nGreen(Bob, True) ::: Bob is green.\nSmart(Bob, True) ::: Bob is smart.\nBig(Dave, True) ::: Dave is big.\nNice(Dave, True) ::: Dave is nice.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nQuiet(Blue($x, True), True) >>> Big($x, True) ::: Quiet, blue things are big.\nBlue($x, True) >>> Young($x, True) ::: If something is blue then it is young.\nNice($x, True) >>> Quiet($x, True) ::: If something is nice then it is quiet.\nYoung($x, True) >>> Blue($x, True) ::: Young things are blue.\nYoung(Anne, True) >>> Quiet(Anne, True) ::: If Anne is young then Anne is quiet.\nYoung(Dave, True) >>> Green(Dave, True) ::: If Dave is young then Dave is green.\nBig($x, True) && Quiet($x, True) >>> Nice($x, True) ::: All big, quiet things are nice.\nBlue($x, True) >>> Fiona(x, True) ::: If Fiona is blue then Fiona is not green.\nQuery:\nQuiet(Anne, False) ::: Anne is not quiet.\n------\nProblem:\nAnne is blue. Bob is blue. Bob is green. Bob is smart. Dave is big. Dave is nice. Fiona is smart. If something is nice then it is not green. Quiet, blue things are big. If something is blue then it is young. If something is nice then it is quiet. Young things are blue. If Anne is young then Anne is quiet. If Dave is young then Dave is green. All big, quiet things are nice. If Fiona is blue then Fiona is not green.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Anne is not quiet.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-226_Q3",
    "context": "The bear is not big. The bear needs the squirrel. The dog is nice. The dog sees the tiger. The squirrel sees the bear. The squirrel sees the tiger. The tiger eats the dog. The tiger is green. The tiger needs the bear. The tiger sees the squirrel. If someone eats the dog then the dog needs the bear. If someone eats the bear then they eat the tiger. If someone needs the tiger and they see the dog then they eat the tiger. If someone is nice and they need the bear then they eat the bear. If someone sees the dog then they eat the squirrel. If someone needs the tiger and the tiger eats the bear then they eat the squirrel. If someone eats the tiger then the tiger eats the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog needs the bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNeeds($x, $y, bool) ::: Does x need y?\nNice($x, bool) ::: Is x nice?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nGreen($x, bool) ::: Is x green?\nFacts:\nNotBig(Bear, True) ::: The bear is not big.\nNeeds(Bear, Squirrel, True) ::: The bear needs the squirrel.\nNice(Dog, True) ::: The dog is nice.\nSees(Dog, Tiger, True) ::: The dog sees the tiger.\nSees(Squirrel, Bear, True) ::: The squirrel sees the bear.\nSees(Squirrel, Tiger, True) ::: The squirrel sees the tiger.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nGreen(Tiger, True) ::: The tiger is green.\nNeeds(Tiger, Bear, True) ::: The tiger needs the bear.\nSees(Tiger, Squirrel, True) ::: The tiger sees the squirrel.\nRules:\nNotBig(Bear, True) >>> Needs(Bear, Squirrel, True) ::: The bear is not big.\nEats(Dog, Bear, True) >>> Needs(Dog, Bear, True) ::: If someone eats the dog then the dog needs the bear.\nNeeds(Bear, Tiger, True) >>> Eats(Bear, Tiger, True) ::: If someone needs the tiger and they see the dog then they eat the tiger.\nNeeds(Bear, Tiger, True) >>> Eats(Tiger, Bear, True) ::: If someone needs the tiger and the tiger eats the bear then they eat the squirrel.\nEats(Tiger, Bear, True) >>> Eats(Tiger, Squirrel, True) ::: If someone eats the tiger then the tiger eats the bear.\nEats(Tiger, Bear, True) >>> Eats(Tiger, Squirrel, True) ::: If someone eats the tiger then the tiger eats the bear.\nEats(Tiger, Bear, True) >>> Eats(Tiger, Squirrel, True) ::: If someone eats the tiger then the tiger eats the bear.\nEats(Tiger, Bear, True) >>> Eats(Tiger, Squirrel, True) ::: If someone eats the tiger then the tiger eats"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-861_Q16",
    "context": "The cat needs the dog. The dog is kind. The dog needs the rabbit. The rabbit eats the dog. The rabbit is green. The tiger chases the rabbit. The tiger is big. If something is nice and it eats the tiger then it needs the dog. If something chases the cat then it eats the cat. If the dog chases the tiger then the tiger needs the rabbit. If the rabbit chases the tiger then the rabbit chases the cat. If something chases the cat then the cat is kind. If something eats the dog then it chases the cat. If something is rough then it eats the dog. If something is kind then it is rough. If something eats the rabbit and the rabbit is big then it is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog needs the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nKind($x, bool) ::: Is x kind?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nFacts:\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nKind(Dog, True) ::: The dog is kind.\nNeeds(Dog, Rabbit, True) ::: The dog needs the rabbit.\nEats(Rabbit, Dog, True) ::: The rabbit eats the dog.\nGreen(Rabbit, True) ::: The rabbit is green.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nBig(Tiger, True) ::: The tiger is big.\nRules:\nNice($x, True) && Eats($x, Tiger, True) >>> Needs($x, Dog, True) ::: If something is nice and it eats the tiger then it needs the dog.\nChases($x, Cat) >>> Eats($x, Cat, True) ::: If the dog chases the tiger then the tiger needs the rabbit.\nChases($x, Rabbit) >>> Chases($x, Cat, True) ::: If the rabbit chases the tiger then the rabbit chases the cat.\nChases($x, Cat) >>> Kind($x, True) ::: If something chases the cat then it eats the cat.\nEats($x, Dog, True) >>> Chases($x, Cat, True) ::: If something eats the dog then it chases the cat.\nRough($x, True) >>> Eats($x, Dog, True) ::: If something is rough then it eats the dog.\nKind($x, True) >>> Rough($x, True) ::: If something is kind then it is rough.\nEats($x, Rabbit, True) && Big($x, True) >>> Kind($x, True) ::: If something eats the rabbit and the rabbit is big then it is kind.\nQuery:\nNeeds(Dog, Dog, True) ::: The dog needs the dog.\n------\nProblem:\nThe cat needs the dog. The dog is kind. The dog needs the rabbit. The rabbit eats the dog. The rabbit is green. The tiger chases the rabbit. The tiger is big. If something is nice and it eats the tiger then it needs"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-630_Q10",
    "context": "Bob is big. Bob is nice. Bob is quiet. Dave is green. Dave is quiet. Gary is green. Gary is red. Gary is round. Harry is green. Harry is red. Harry is round. Nice, quiet people are big. If someone is red and round then they are smart. All quiet people are round. If someone is big and nice then they are quiet. If someone is big and red then they are nice. If someone is quiet and round then they are red. If someone is red and round then they are smart. If Bob is green then Bob is big. All quiet, smart people are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFacts:\nBig(Bob, True) ::: Bob is big.\nNice(Bob, True) ::: Bob is nice.\nQuiet(Bob, True) ::: Bob is quiet.\nGreen(Dave, True) ::: Dave is green.\nQuiet(Dave, True) ::: Dave is quiet.\nGreen(Gary, True) ::: Gary is green.\nRed(Gary, True) ::: Gary is red.\nRound(Gary, True) ::: Gary is round.\nGreen(Harry, True) ::: Harry is green.\nRed(Harry, True) ::: Harry is red.\nRound(Harry, True) ::: Harry is round.\nRules:\nQuiet($x, True) >>> Big($x, True) ::: Nice, quiet people are big.\nRed($x, True) && Round($x, True) >>> Smart($x, True) ::: If someone is red and round then they are smart.\nQuiet($x, True) >>> Round($x, True) ::: All quiet people are round.\nBig($x, True) && Nice($x, True) >>> Quiet($x, True) ::: If someone is big and nice then they are quiet.\nBig($x, True) && Red($x, True) >>> Nice($x, True) ::: If someone is big and red then they are nice.\nQuiet($x, True) && Round($x, True) >>> Red($x, True) ::: If someone is quiet and round then they are red.\nRed($x, True) && Round($x, True) >>> Smart($x, True) ::: If someone is red and round then they are smart.\nGreen($x, True) >>> Big($x, True) ::: If Bob is green then Bob is big.\nQuiet($x, True) && Smart($x, True) >>> Nice($x, True) ::: All quiet, smart people are nice.\nQuery:\nNice(Dave, False) ::: Dave is not nice.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-129_Q8",
    "context": "The lion is cold. The lion does not need the mouse. The lion visits the squirrel. The mouse is cold. The mouse does not visit the squirrel. The rabbit is cold. The rabbit is rough. The rabbit does not need the lion. The rabbit does not visit the squirrel. The squirrel is kind. The squirrel needs the mouse. The squirrel needs the rabbit. The squirrel does not see the lion. The squirrel does not see the rabbit. If something needs the rabbit and the rabbit sees the mouse then the mouse does not see the lion. If something is rough then it visits the mouse. If something needs the rabbit and it visits the mouse then the mouse needs the rabbit. If something needs the rabbit and the rabbit is cold then it is rough. If something needs the rabbit then the rabbit needs the squirrel. If the squirrel sees the lion and the squirrel is not green then the lion needs the squirrel. If something is big then it visits the lion. If something visits the squirrel and the squirrel sees the lion then the lion is not kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not need the rabbit.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Lion, True) ::: The lion is cold.\nNeeds(Lion, Mouse, False) ::: The lion does not need the mouse.\nVisits(Lion, Squirrel, True) ::: The lion visits the squirrel.\nCold(Mouse, True) ::: The mouse is cold.\nNeeds(Mouse, Squirrel, False) ::: The mouse does not visit the squirrel.\nCold(Rabbit, True) ::: The rabbit is cold.\nRough(Rabbit, True) ::: The rabbit is rough.\nNeeds(Rabbit, Lion, False) ::: The rabbit does not need the lion.\nNeeds(Rabbit, Squirrel, False) ::: The rabbit does not visit the squirrel.\nKind(Squirrel, True) ::: The squirrel is kind.\nNeeds(Squirrel, Mouse, True) ::: The squirrel needs the mouse.\nNeeds(Squirrel, Rabbit, True) ::: The squirrel needs the rabbit.\nSees(Squirrel, Lion, False) ::: The squirrel does not see the lion.\nSees(Squirrel, Rabbit, False) ::: The squirrel does not see the rabbit.\nIf(Needs(Rabbit, Mouse, True) && Sees(Mouse, Lion), Sees(Mouse, Lion), False) ::: If something needs the rabbit and the rabbit sees the mouse then the mouse does not see the lion.\nVisits(Rabbit, Mouse, True) ::: If something is rough then it visits the mouse.\nNeeds(Rabbit, Mouse, True) && Visits(Rabbit, Mouse, True) >>> Needs(Mouse, Rabbit, True) ::: If something needs the rabbit and it visits the mouse then the mouse needs the rabbit.\nNeeds(Rabbit, Mouse"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-293_Q1",
    "context": "Bob is blue. Bob is round. Bob is not smart. Charlie is not smart. Dave is round. Harry is big. Harry is smart. Round, blue things are not red. If something is furry and round then it is cold. Smart things are furry. Cold, round things are smart. All cold things are blue. Furry, big things are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nRound(Bob, True) ::: Bob is round.\nNot(Smart(Bob, True)) ::: Bob is not smart.\nNot(Smart(Charlie, True)) ::: Charlie is not smart.\nRound(Dave, True) ::: Dave is round.\nBig(Harry, True) ::: Harry is big.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nRound($x, True) >>> Not(Red($x, True)) ::: Round, blue things are not red.\nFurry($x, True) && Round($x, True) >>> Cold($x, True) ::: If something is furry and round then it is cold.\nSmart($x, True) >>> Furry($x, True) ::: Smart things are furry.\nCold($x, True) && Round($x, True) >>> Smart($x, True) ::: Cold, round things are smart.\nAll(Blue($x, True), Cold($x, True)) ::: All cold things are blue.\nFurry($x, True) && Big($x, True) >>> Round($x, True) ::: Furry, big things are round.\nQuery:\nRound(Dave, True) ::: Dave is round.\n------\nProblem:\nBob is blue. Bob is round. Bob is not smart. Charlie is not smart. Dave is round. Harry is big. Harry is smart. Round, blue things are not red. If something is furry and round then it is cold. Smart things are furry. Cold, round things are smart. All cold things are blue. Furry, big things are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Dave is round.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-595_Q8",
    "context": "The bald eagle sees the lion. The bald eagle sees the rabbit. The dog chases the lion. The lion chases the rabbit. The lion is kind. The lion is rough. The lion needs the rabbit. The rabbit chases the dog. The rabbit is blue. The rabbit is nice. The rabbit sees the lion. If something sees the bald eagle then the bald eagle sees the rabbit. If something needs the dog then the dog sees the rabbit. If something needs the dog and the dog is kind then the dog chases the rabbit. If something needs the rabbit and the rabbit is blue then the rabbit sees the bald eagle. If something sees the rabbit and the rabbit sees the lion then it is kind. If the lion is rough and the lion needs the rabbit then the lion is kind. If something sees the bald eagle then the bald eagle needs the dog. If something sees the rabbit then the rabbit sees the dog. If the bald eagle chases the rabbit and the bald eagle is nice then the rabbit chases the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not see the rabbit.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees($x, $y, bool) ::: Does x see y?\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nNeeds($x, $y, bool) ::: Does x need y?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nSees(BaldEagle, Lion, True) ::: The bald eagle sees the lion.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nChases(Dog, Lion, True) ::: The dog chases the lion.\nChases(Lion, Rabbit, True) ::: The lion chases the rabbit.\nKind(Lion, True) ::: The lion is kind.\nRough(Lion, True) ::: The lion is rough.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nChases(Rabbit, Dog, True) ::: The rabbit chases the dog.\nBlue(Rabbit, True) ::: The rabbit is blue.\nNice(Rabbit, True) ::: The rabbit is nice.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nRules:\nSees(BaldEagle, $x, True) >>> Sees($x, Rabbit, True) ::: If something sees the bald eagle then the bald eagle sees the rabbit.\nNeeds(Dog, $x, True) >>> Sees($x, Rabbit, True) ::: If something needs the dog then the dog sees the rabbit.\nNeeds(Dog, $x, True) && Kind($x, True) >>> Chases($x, Rabbit, True) ::: If something needs the dog and the dog is kind then the dog chases the rabbit.\nNeeds(Rabbit, $x, True) && Blue($x, True) >>> Sees($x, BaldEagle, True) ::: If something needs the rabbit and the rabbit is blue then the rabbit sees the bald eagle.\nSees($x, Rabbit, True) && Sees(Rabbit, $y, True) >>> Kind($y, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-527_Q10",
    "context": "The bald eagle is rough. The bald eagle does not like the lion. The bald eagle sees the mouse. The cat does not eat the lion. The cat sees the mouse. The lion sees the cat. The mouse eats the lion. The mouse likes the bald eagle. The mouse sees the bald eagle. The mouse sees the cat. If someone likes the bald eagle and the bald eagle does not like the cat then the cat does not like the lion. If someone eats the mouse then the mouse is kind. If the lion is not rough then the lion is cold. If someone likes the lion then the lion is green. If someone is kind then they like the lion. If someone eats the lion then the lion eats the mouse. If someone likes the cat then they do not like the bald eagle. If someone is green then they like the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nFacts:\nRough(BaldEagle, True) ::: The bald eagle is rough.\nLikes(BaldEagle, Lion, False) ::: The bald eagle does not like the lion.\nSees(BaldEagle, Mouse, True) ::: The bald eagle sees the mouse.\nEats(Cat, Lion, False) ::: The cat does not eat the lion.\nSees(Cat, Mouse, True) ::: The cat sees the mouse.\nSees(Lion, Cat, True) ::: The lion sees the cat.\nEats(Mouse, Lion, True) ::: The mouse eats the lion.\nLikes(Mouse, BaldEagle, True) ::: The mouse likes the bald eagle.\nSees(Mouse, BaldEagle, True) ::: The mouse sees the bald eagle.\nSees(Mouse, Cat, True) ::: The mouse sees the cat.\nRules:\nLikes(BaldEagle, $x, True) && Likes($x, Cat, False) >>> Likes(Cat, Lion, False) ::: If someone likes the bald eagle and the bald eagle does not like the cat then the cat does not like the lion.\nEats($x, Mouse, True) >>> Kind($x, True) ::: If someone eats the mouse then the mouse is kind.\nNot(Rough($x, True)) >>> Cold($x, True) ::: If someone is not rough then the lion is cold.\nLikes($x, Lion, True) >>> Green($x, True) ::: If someone likes the lion then the lion is green.\nKind($x, True) >>> Likes($x, Lion, True) ::: If someone is kind then they like the lion.\nEats($x, Lion) >>> Eats(Lion, Mouse) ::: If someone eats the lion then the lion eats the mouse.\nLikes($x, Cat) >>> Not(Likes($x, BaldEagle"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-702_Q1",
    "context": "Charlie is big. Charlie is cold. Charlie is nice. Charlie is young. Dave is big. Dave is nice. Fiona is big. Fiona is nice. Gary is cold. Gary is nice. All rough, young things are red. All rough, cold things are young. All nice, red things are round. If Charlie is cold and Charlie is rough then Charlie is young. All round, red things are rough. All cold, big things are red. Cold things are big. If Dave is rough then Dave is cold. If Fiona is cold then Fiona is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Charlie, True) ::: Charlie is big.\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nYoung(Charlie, True) ::: Charlie is young.\nBig(Dave, True) ::: Dave is big.\nNice(Dave, True) ::: Dave is nice.\nBig(Fiona, True) ::: Fiona is big.\nNice(Fiona, True) ::: Fiona is nice.\nCold(Gary, True) ::: Gary is cold.\nNice(Gary, True) ::: Gary is nice.\nRules:\nYoung($x, True) >>> Rough($x, True) ::: All rough, young things are red.\nYoung($x, True) >>> Cold($x, True) ::: All rough, cold things are young.\nNice($x, True) >>> Red($x, True) ::: All nice, red things are round.\nCold($x, True) && Rough($x, True) >>> Young($x, True) ::: If Charlie is cold and Charlie is rough then Charlie is young.\nRound($x, True) >>> Rough($x, True) ::: All round, red things are rough.\nRed($x, True) >>> Cold($x, True) ::: All cold, big things are red.\nCold($x, True) >>> Big($x, True) ::: Cold things are big.\nNice($x, True) >>> Rough($x, True) ::: If Dave is rough then Dave is cold.\nCold($x, True) >>> Red($x, True) ::: If Fiona is cold then Fiona is red.\nQuery:\nCold(Gary, True) ::: Gary is cold.\n------\nProblem:\nCharlie is big. Charlie is cold. Charlie is nice. Charlie is young. Dave is big. Dave is nice. Fiona is big. Fiona is nice"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-620_Q20",
    "context": "Anne is red. Bob is big. Bob is green. Bob is red. Charlie is furry. Dave is big. Dave is blue. If something is big then it is smart. If something is blue then it is green. All furry things are big. Smart things are blue. If something is green then it is furry. Green things are smart. All green things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nFurry($x, bool) ::: Is x furry?\nBlue($x, bool) ::: Is x blue?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nRed(Anne, True) ::: Anne is red.\nBig(Bob, True) ::: Bob is big.\nGreen(Bob, True) ::: Bob is green.\nRed(Bob, True) ::: Bob is red.\nFurry(Charlie, True) ::: Charlie is furry.\nBig(Dave, True) ::: Dave is big.\nBlue(Dave, True) ::: Dave is blue.\nRules:\nBig($x, True) >>> Smart($x, True) ::: If something is big then it is smart.\nBlue($x, True) >>> Green($x, True) ::: If something is blue then it is green.\nFurry($x, True) >>> Big($x, True) ::: All furry things are big.\nSmart($x, True) >>> Blue($x, True) ::: Smart things are blue.\nGreen($x, True) >>> Furry($x, True) ::: If something is green then it is furry.\nGreen($x, True) >>> Smart($x, True) ::: Green things are smart.\nGreen($x, True) >>> Quiet($x, True) ::: All green things are quiet.\nQuery:\nFurry(Charlie, True) ::: Charlie is furry.\n------\nProblem:\nAnne is red. Bob is big. Bob is green. Bob is red. Charlie is furry. Dave is big. Dave is blue. If something is big then it is smart. If something is blue then it is green. All furry things are big. Smart things are blue. If something is green then it is furry. Green things are smart. All green things are quiet.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is red.\n###\nPredicates:\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nFur"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-203_Q13",
    "context": "Bob is nice. Bob is round. Bob is young. Dave is round. Erin is big. Erin is red. Gary is young. All round things are nice. All nice, big things are white. If something is big and white then it is round. Young things are nice. Big, red things are young. All nice things are quiet. All quiet things are big. Young, quiet things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nWhite($x, bool) ::: Is x white?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nFacts:\nNice(Bob, True) ::: Bob is nice.\nRound(Bob, True) ::: Bob is round.\nYoung(Bob, True) ::: Bob is young.\nRound(Dave, True) ::: Dave is round.\nBig(Erin, True) ::: Erin is big.\nRed(Erin, True) ::: Erin is red.\nYoung(Gary, True) ::: Gary is young.\nRules:\nRound($x, True) >>> Nice($x, True) ::: All round things are nice.\nNice($x, True) && Big($x, True) >>> White($x, True) ::: All nice, big things are white.\nBig($x, True) && White($x, True) >>> Round($x, True) ::: If something is big and white then it is round.\nYoung($x, True) >>> Nice($x, True) ::: Young things are nice.\nBig($x, True) && Red($x, True) >>> Young($x, True) ::: Big, red things are young.\nNice($x, True) >>> Quiet($x, True) ::: All nice things are quiet.\nQuiet($x, True) >>> Big($x, True) ::: All quiet things are big.\nYoung($x, True) && Quiet($x, True) >>> Red($x, True) ::: Young, quiet things are red.\nQuery:\nNot(Red(Dave, True)) ::: Dave is not red.\n------\nProblem:\nBob is nice. Bob is round. Bob is young. Dave is round. Erin is big. Erin is red. Gary is young. All round things are nice. All nice, big things are white. If something is big and white then it is round. Young things are nice. Big, red things are young. All nice things are quiet. All quiet things are big. Young, quiet things are red.\nQuestion:\nBased on the above information, is the following statement true, false,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1110_Q3",
    "context": "Bob is blue. Bob is cold. Bob is nice. Bob is round. Bob is smart. Bob is white. Dave is cold. Dave is white. Erin is blue. Erin is cold. Erin is nice. Erin is round. Erin is smart. Fiona is blue. Fiona is nice. Fiona is smart. White people are nice. All rough people are smart. If someone is blue and rough then they are smart. All nice, rough people are smart. If someone is nice and round then they are rough. White, smart people are blue. All blue people are nice. Nice people are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nNice(Bob, True) ::: Bob is nice.\nRound(Bob, True) ::: Bob is round.\nSmart(Bob, True) ::: Bob is smart.\nWhite(Bob, True) ::: Bob is white.\nCold(Dave, True) ::: Dave is cold.\nWhite(Dave, True) ::: Dave is white.\nBlue(Erin, True) ::: Erin is blue.\nCold(Erin, True) ::: Erin is cold.\nNice(Erin, True) ::: Erin is nice.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nBlue(Fiona, True) ::: Fiona is blue.\nNice(Fiona, True) ::: Fiona is nice.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nWhite($x, True) >>> Nice($x, True) ::: White people are nice.\nAll($x, rough) >>> Smart($x, True) ::: All rough people are smart.\nBlue($x, True) && Rough($x, True) >>> Smart($x, True) ::: If someone is blue and rough then they are smart.\nNice($x, True) && Rough($x, True) >>> Smart($x, True) ::: All nice, rough people are smart.\nNice($x, True) >>> Round($x, True) ::: If someone is nice and round then they are rough.\nWhite($x, True) && Smart($x, True) >>> Blue($x, True) ::: White, smart people are blue.\nBlue($x, True) >>> Nice($x, True) ::: All blue people are nice.\nNice($x, True) >>> Round($x, True) ::: Nice people are round.\nQuery:\nRough(Erin, True) ::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-979_Q9",
    "context": "Charlie is red. Dave is red. Dave is rough. Dave is round. Dave is young. Fiona is quiet. Fiona is red. Harry is furry. Harry is kind. Harry is young. All rough things are round. All rough things are round. All round, rough things are young. All red things are young. If Fiona is young and Fiona is not furry then Fiona is kind. If something is furry then it is rough. Quiet, kind things are rough. All quiet, young things are kind. Young things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nRed(Charlie, True) ::: Charlie is red.\nRed(Dave, True) ::: Dave is red.\nRough(Dave, True) ::: Dave is rough.\nRound(Dave, True) ::: Dave is round.\nYoung(Dave, True) ::: Dave is young.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nFurry(Harry, True) ::: Harry is furry.\nKind(Harry, True) ::: Harry is kind.\nYoung(Harry, True) ::: Harry is young.\nRules:\nRough($x, True) >>> Round($x, True) ::: All rough things are round.\nRough($x, True) >>> Round($x, True) ::: All rough things are round.\nRough($x, True) && Round($x, True) >>> Young($x, True) ::: All round, rough things are young.\nRed($x, True) >>> Young($x, True) ::: All red things are young.\nFurry($x, True) >>> Rough($x, True) ::: If something is furry then it is rough.\nQuiet($x, True) && Kind($x, True) >>> Rough($x, True) ::: Quiet, kind things are rough.\nYoung($x, True) && ~Furry($x, True) >>> Kind($x, True) ::: If Fiona is young and Fiona is not furry then Fiona is kind.\nYoung($x, True) >>> Quiet($x, True) ::: Young things are quiet.\nQuery:\nRound(Fiona, True) ::: Fiona is round.\n------\nProblem:\nCharlie is red. Dave is red. Dave is rough. Dave is round. Dave is young. Fiona is quiet. Fiona is red. Harry is furry. Harry is kind. Harry is young. All"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1203_Q17",
    "context": "Anne is nice. Erin is red. Erin is not round. Fiona is not nice. Harry is not blue. Harry is red. Harry is young. If Harry is blue and Harry is nice then Harry is red. If something is young and round then it is rough. All young, nice things are rough. Round, quiet things are young. If Erin is young and Erin is round then Erin is blue. Nice things are quiet. All quiet things are round. Rough things are not red. If something is round and red then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nRed(Erin, True) ::: Erin is red.\nRound(Erin, False) ::: Erin is not round.\nNice(Fiona, False) ::: Fiona is not nice.\nBlue(Harry, False) ::: Harry is not blue.\nRed(Harry, True) ::: Harry is red.\nYoung(Harry, True) ::: Harry is young.\nRules:\nHarry is blue and Harry is nice then Harry is red ::: If Harry is blue and Harry is nice then Harry is red.\nYoung($x, True) && Round($x, True) >>> Rough($x, True) ::: If something is young and round then it is rough.\nYoung($x, True) && Nice($x, True) >>> Rough($x, True) ::: All young, nice things are rough.\nRound($x, True) && Quiet($x, True) >>> Young($x, True) ::: Round, quiet things are young.\nQuiet($x, True) >>> Nice($x, True) ::: Nice things are quiet.\nQuiet($x, True) >>> Round($x, True) ::: All quiet things are round.\nRough($x, True) >>> Not Red($x, True) ::: Rough things are not red.\nRound($x, True) && Red($x, True) >>> Blue($x, True) ::: If something is round and red then it is blue.\nErin is young and Erin is round then Erin is blue ::: If Erin is young and Erin is round then Erin is blue.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-770_Q3",
    "context": "The bald eagle chases the cat. The bald eagle does not chase the mouse. The bald eagle is young. The cat does not chase the bald eagle. The cat does not eat the bald eagle. The cat is rough. The cat is young. The cat sees the bald eagle. The lion chases the bald eagle. The lion chases the cat. The lion eats the bald eagle. The lion eats the cat. The mouse chases the bald eagle. The mouse chases the lion. The mouse eats the bald eagle. The mouse is young. If something is kind then it is round. If something chases the bald eagle then it is round. If something is round then it sees the bald eagle. If something chases the cat and the cat chases the bald eagle then it eats the bald eagle. If something chases the cat then the cat sees the lion. If something sees the cat then it chases the bald eagle. If the bald eagle is young and the bald eagle chases the lion then the bald eagle sees the lion. If the mouse eats the cat and the mouse eats the bald eagle then the bald eagle eats the cat. If something sees the bald eagle and it chases the cat then the bald eagle sees the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat sees the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nChases(BaldEagle, Cat, True) ::: The bald eagle chases the cat.\nChases(BaldEagle, Mouse, True) ::: The bald eagle chases the mouse.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nChases(Cat, BaldEagle, True) ::: The cat does not chase the bald eagle.\nChases(Cat, BaldEagle, False) ::: The cat does not chase the bald eagle.\nEats(Cat, BaldEagle, False) ::: The cat does not eat the bald eagle.\nRound(Cat, True) ::: The cat is rough.\nYoung(Cat, True) ::: The cat is young.\nSees(Cat, BaldEagle, True) ::: The cat sees the bald eagle.\nChases(Lion, BaldEagle, True) ::: The lion chases the bald eagle.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nEats(Lion, BaldEagle, True) ::: The lion eats the bald eagle.\nEats(Lion, Cat, True) ::: The lion eats the cat.\nChases(Mouse, BaldEagle, True) ::: The mouse chases the bald eagle.\nChases(Mouse, Lion, True) ::: The mouse chases the lion.\nEats(Mouse, BaldEagle, True) ::: The mouse eats the bald eagle.\nYoung(Mouse, True) ::: The mouse is young.\nKind(Round, True) ::: If something is kind then it is round."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-808_Q5",
    "context": "Charlie is cold. Charlie is rough. Erin is not big. Erin is blue. Erin is cold. Erin is furry. Erin is red. Erin is rough. Erin is smart. Fiona is big. Fiona is cold. Harry is blue. Harry is red. Harry is smart. If someone is blue then they are rough. Smart people are furry. All big people are blue. All furry people are red. All rough people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nRough(Charlie, True) ::: Charlie is rough.\nNot(Big(Erin, True)) ::: Erin is not big.\nBlue(Erin, True) ::: Erin is blue.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nRed(Erin, True) ::: Erin is red.\nRough(Erin, True) ::: Erin is rough.\nSmart(Erin, True) ::: Erin is smart.\nBig(Fiona, True) ::: Fiona is big.\nCold(Fiona, True) ::: Fiona is cold.\nBlue(Harry, True) ::: Harry is blue.\nRed(Harry, True) ::: Harry is red.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBlue($x, True) >>> Rough($x, True) ::: If someone is blue then they are rough.\nFurry($x, True) >>> Red($x, True) ::: Smart people are furry.\nBig($x, True) >>> Blue($x, True) ::: All big people are blue.\nFurry($x, True) >>> Red($x, True) ::: All furry people are red.\nRough($x, True) >>> Smart($x, True) ::: All rough people are smart.\nQuery:\nRough(Fiona, True) ::: Fiona is rough.\n------\nProblem:\nCharlie is cold."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-345_Q12",
    "context": "The cat is big. The cat is cold. The cat likes the cow. The cat visits the lion. The cow is blue. The cow likes the lion. The cow does not visit the lion. The lion chases the cat. The lion is not big. The lion is rough. The lion visits the cat. The squirrel likes the cow. If something visits the squirrel then it likes the cat. If something visits the cat then it likes the cat. If something likes the squirrel and it is big then the squirrel likes the lion. If something likes the cow and it visits the cow then the cow visits the cat. If something likes the cat then it chases the squirrel. If something chases the lion and the lion is not cold then it visits the cow. If something chases the lion then the lion chases the cow. If something chases the squirrel then the squirrel visits the cat. If the cow is rough then the cow chases the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not chase the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Cat, True) ::: The cat is big.\nCold(Cat, True) ::: The cat is cold.\nLikes(Cat, Cow, True) ::: The cat likes the cow.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nBlue(Cow, True) ::: The cow is blue.\nLikes(Cow, Lion, True) ::: The cow likes the lion.\nVisits(Cow, Lion, False) ::: The cow does not visit the lion.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nNot(Big(Lion, True)) ::: The lion is not big.\nRough(Lion, True) ::: The lion is rough.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nIf(Visits(Squirrel, $x, True), Likes($x, Cat, True)) ::: If something visits the squirrel then it likes the cat.\nIf(Visits($x, Cat, True), Likes($x, Cat, True)) ::: If something visits the cat then it likes the cat.\nIf(Likes(Squirrel, $x, True), Big($x, True), Likes(Squirrel, Lion, True)) ::: If something likes the squirrel and it is big then the squirrel likes the lion.\nIf(Likes(Cow, $x, True), Visits($x, Cow, True"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-804_Q1",
    "context": "Anne is kind. Charlie is not big. Charlie is not green. Charlie is white. Erin is big. Erin is green. Erin is white. Fiona is green. Fiona is kind. Fiona is quiet. Fiona is red. Fiona is white. If Erin is big and Erin is red then Erin is kind. All rough things are green. If something is kind then it is green. Quiet, green things are big. If something is rough and green then it is red. If something is green then it is rough. If Erin is red then Erin is green. All red, rough things are quiet. If something is quiet and not red then it is not white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nRough($x, bool) ::: Is x rough?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nNot(Big(Charlie, True)) ::: Charlie is not big.\nNot(Green(Charlie, True)) ::: Charlie is not green.\nWhite(Charlie, True) ::: Charlie is white.\nBig(Erin, True) ::: Erin is big.\nGreen(Erin, True) ::: Erin is green.\nWhite(Erin, True) ::: Erin is white.\nGreen(Fiona, True) ::: Fiona is green.\nKind(Fiona, True) ::: Fiona is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nWhite(Fiona, True) ::: Fiona is white.\nRules:\nIf Erin is big and Erin is red then Erin is kind ::: Erin is big and Erin is red\nAll rough things are green ::: Rough($x, True) >>> Green($x, True)\nIf something is kind then it is green ::: Kind($x, True) >>> Green($x, True)\nQuiet, green things are big ::: Quiet($x, True) && Green($x, True) >>> Big($x, True)\nIf something is rough and green then it is red ::: Rough($x, True) && Green($x, True) >>> Red($x, True)\nIf something is green then it is rough ::: Green($x, True) >>> Rough($x, True)\nIf Erin is red then Erin is green ::: Red($x, True) >>> Green($x, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-187_Q7",
    "context": "Anne is big. Anne is rough. Dave is blue. Dave is cold. Dave is red. Dave is rough. Dave is round. Gary is round. Harry is cold. Harry is rough. All round things are blue. If something is cold then it is blue. Blue, red things are round. If something is rough then it is red. All big, red things are cold. All round things are green. Round, cold things are big. If something is green then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nBig(Anne, True) ::: Anne is big.\nRound(Anne, True) ::: Anne is round.\nBlue(Dave, True) ::: Dave is blue.\nCold(Dave, True) ::: Dave is cold.\nRed(Dave, True) ::: Dave is red.\nRound(Dave, True) ::: Dave is round.\nRound(Gary, True) ::: Gary is round.\nCold(Harry, True) ::: Harry is cold.\nRound(Harry, True) ::: Harry is round.\nRules:\nRound($x, True) >>> Blue($x, True) ::: All round things are blue.\nCold($x, True) >>> Blue($x, True) ::: If something is cold then it is blue.\nBlue($x, True) && Red($x, True) >>> Round($x, True) ::: Blue, red things are round.\nRough($x, True) >>> Red($x, True) ::: If something is rough then it is red.\nBig($x, True) && Red($x, True) >>> Cold($x, True) ::: All big, red things are cold.\nRound($x, True) && Cold($x, True) >>> Big($x, True) ::: Round, cold things are big.\nGreen($x, True) >>> Blue($x, True) ::: If something is green then it is blue.\nQuery:\nBlue(Anne, True) ::: Anne is blue.\n------\nProblem:\nAnne is big. Anne is rough. Dave is blue. Dave is cold. Dave is red. Dave is rough. Dave is round. Gary is round. Harry is cold. Harry is rough. All round things are blue."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-346_Q6",
    "context": "The bald eagle is nice. The bald eagle needs the cow. The bald eagle needs the squirrel. The cow is blue. The cow likes the bald eagle. The cow sees the squirrel. The lion is kind. The lion is nice. The lion likes the bald eagle. The lion needs the squirrel. The lion sees the squirrel. The squirrel likes the lion. If something sees the lion then the lion likes the squirrel. If something is kind and it sees the bald eagle then it needs the cow. If something sees the squirrel and it sees the bald eagle then the bald eagle likes the cow. If something sees the lion and the lion likes the squirrel then the lion needs the squirrel. If something likes the squirrel and it needs the squirrel then the squirrel sees the cow. If something sees the cow then it sees the lion. If something needs the cow and it needs the squirrel then it likes the squirrel. If something sees the lion then the lion sees the bald eagle. If something sees the cow and it likes the cow then the cow sees the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not see the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nNice(BaldEagle, True) ::: The bald eagle is nice.\nNeeds(BaldEagle, Cow, True) ::: The bald eagle needs the cow.\nNeeds(BaldEagle, Squirrel, True) ::: The bald eagle needs the squirrel.\nBlue(Cow, True) ::: The cow is blue.\nLikes(Cow, BaldEagle, True) ::: The cow likes the bald eagle.\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nKind(Lion, True) ::: The lion is kind.\nNice(Lion, True) ::: The lion is nice.\nLikes(Lion, BaldEagle, True) ::: The lion likes the bald eagle.\nNeeds(Lion, Squirrel, True) ::: The lion needs the squirrel.\nSees(Lion, Squirrel, True) ::: The lion sees the squirrel.\nLikes(Squirrel, Lion, True) ::: The squirrel likes the lion.\nIf($x, $y, $z, bool) ::: If $x then $y.\nIf($x, $y, $z, True) ::: If something sees the lion then the lion likes the squirrel.\nIf($x, $y, $z, True) ::: If something is kind and it sees the bald eagle then it needs the cow.\nIf($x, $y, $z, True) ::: If something sees the squirrel and it sees the bald eagle then the bald eagle likes the cow.\nIf($x, $y, $z, True) ::: If something sees the lion and the lion likes the squirrel then the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-658_Q4",
    "context": "Anne is rough. Charlie is quiet. Charlie is smart. Charlie is white. Erin is quiet. Erin is red. Fiona is quiet. Fiona is red. Fiona is round. Fiona is smart. Fiona is white. If someone is furry and round then they are smart. All round, red people are furry. All smart, furry people are rough. If Erin is red then Erin is white. All smart, rough people are furry. All furry, rough people are round. If someone is white then they are rough. If someone is red and rough then they are smart. All red, rough people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nRough($x, bool) ::: Is x rough?\nFacts:\nQuite(Anne, True) ::: Anne is rough.\nQuite(Charlie, True) ::: Charlie is quiet.\nSmart(Charlie, True) ::: Charlie is smart.\nWhite(Charlie, True) ::: Charlie is white.\nQuite(Erin, True) ::: Erin is quiet.\nRed(Erin, True) ::: Erin is red.\nQuite(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nRound(Fiona, True) ::: Fiona is round.\nSmart(Fiona, True) ::: Fiona is smart.\nWhite(Fiona, True) ::: Fiona is white.\nRules:\nFurry($x, True) >>> Round($x, True) ::: If someone is furry and round then they are smart.\nRed($x, True) >>> Furry($x, True) ::: All round, red people are furry.\nFurry($x, True) >>> Rough($x, True) ::: All smart, furry people are rough.\nRed($x, True) >>> White($x, True) ::: If Erin is red then Erin is white.\nSmart($x, True) >>> Furry($x, True) ::: All smart, rough people are furry.\nFurry($x, True) >>> Round($x, True) ::: All furry, rough people are round.\nWhite($x, True) >>> Rough($x, True) ::: If someone is white then they are rough.\nRed($x, True) >>> Smart($x"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-109_Q11",
    "context": "Anne is green. Anne is rough. Bob is green. Bob is round. Dave is green. Dave is rough. Fiona is cold. All kind things are furry. Green things are round. If something is cold then it is kind. If something is furry then it is green. If Dave is quiet then Dave is not furry. Round things are not quiet. If something is quiet and not kind then it is not rough. All round, cold things are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nRound(Anne, True) ::: Anne is round.\nGreen(Bob, True) ::: Bob is green.\nRound(Bob, True) ::: Bob is round.\nGreen(Dave, True) ::: Dave is green.\nRound(Dave, True) ::: Dave is round.\nCold(Fiona, True) ::: Fiona is cold.\nRules:\nKind($x, True) >>> Furry($x, True) ::: All kind things are furry.\nGreen($x, True) >>> Round($x, True) ::: Green things are round.\nCold($x, True) >>> Kind($x, True) ::: If something is cold then it is kind.\nFurry($x, True) >>> Green($x, True) ::: If something is furry then it is green.\nQuiet($x, True) >>> Furry($x, False) ::: If Dave is quiet then Dave is not furry.\nRound($x, True) >>> Quiet($x, False) ::: Round things are not quiet.\nQuiet($x, True) && Kind($x, False) >>> Rough($x, False) ::: If something is quiet and not kind then it is not rough.\nGreen($x, True) && Cold($x, True) >>> Rough($x, True) ::: All round, cold things are rough.\nQuery:\nRough(Fiona, True) ::: Fiona is rough.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is rough. Anne is white. Bob is fur"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-927_Q19",
    "context": "Anne is cold. Anne is not furry. Anne is red. Anne is round. Bob is red. Fiona is not round. Gary is furry. If someone is red then they are round. Red people are round. Furry, blue people are round. If someone is cold and not blue then they are not red. If someone is round and red then they are quiet. If someone is cold then they are smart. If someone is blue and smart then they are not cold. If someone is quiet and round then they are cold. Round, smart people are not furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, False) ::: Anne is not furry.\nRed(Anne, True) ::: Anne is red.\nRound(Anne, True) ::: Anne is round.\nRed(Bob, True) ::: Bob is red.\nRound(Bob, False) ::: Bob is not round.\nFurry(Gary, True) ::: Gary is furry.\nRules:\nRed($x, True) >>> Round($x, True) ::: Red people are round.\nFurry($x, True) && Blue($x, True) >>> Round($x, True) ::: Furry, blue people are round.\nCold($x, True) && Not(Blue($x, True)) >>> Not(Red($x, True)) ::: If someone is cold and not blue then they are not red.\nRed($x, True) >>> Round($x, True) ::: Red people are round.\nRound($x, True) && Red($x, True) >>> Quiet($x, True) ::: If someone is round and red then they are quiet.\nCold($x, True) >>> Smart($x, True) ::: If someone is cold then they are smart.\nBlue($x, True) && Smart($x, True) >>> Not(Cold($x, True)) ::: If someone is blue and smart then they are not cold.\nRound($x, True) && Smart($x, True) >>> Not(Furry($x, True)) ::: Round, smart people are not furry.\nQuery:\nNot(Red(Fiona, True)) ::: Fiona is not red.\n------\nProblem:\nAnne is furry. Anne is green. Anne is not"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-187_Q3",
    "context": "Anne is big. Anne is rough. Dave is blue. Dave is cold. Dave is red. Dave is rough. Dave is round. Gary is round. Harry is cold. Harry is rough. All round things are blue. If something is cold then it is blue. Blue, red things are round. If something is rough then it is red. All big, red things are cold. All round things are green. Round, cold things are big. If something is green then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nFacts:\nBig(Anne, True) ::: Anne is big.\nRough(Anne, True) ::: Anne is rough.\nBlue(Dave, True) ::: Dave is blue.\nCold(Dave, True) ::: Dave is cold.\nRed(Dave, True) ::: Dave is red.\nRough(Dave, True) ::: Dave is rough.\nRound(Dave, True) ::: Dave is round.\nRound(Gary, True) ::: Gary is round.\nCold(Harry, True) ::: Harry is cold.\nRough(Harry, True) ::: Harry is rough.\nRules:\nRound($x, True) >>> Blue($x, True) ::: All round things are blue.\nCold($x, True) >>> Blue($x, True) ::: If something is cold then it is blue.\nBlue($x, True) && Red($x, True) >>> Round($x, True) ::: Blue, red things are round.\nRough($x, True) >>> Red($x, True) ::: If something is rough then it is red.\nBig($x, True) && Red($x, True) >>> Cold($x, True) ::: All big, red things are cold.\nRound($x, True) >>> Green($x, True) ::: All round things are green.\nCold($x, True) && Round($x, True) >>> Big($x, True) ::: Round, cold things are big.\nGreen($x, True) >>> Blue($x, True) ::: If something is green then it is blue.\nQuery:\nBig(Dave, True) ::: Dave is big.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1170_Q10",
    "context": "Bob is kind. Charlie is quiet. Charlie is rough. Fiona is kind. Fiona is rough. Fiona is white. Gary is nice. If Gary is red and Gary is white then Gary is quiet. All white things are rough. If something is rough then it is red. If something is nice then it is white. All smart things are white. Rough, quiet things are not kind. If something is quiet and not smart then it is kind. Smart things are quiet. If something is smart and not rough then it is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRough(Charlie, True) ::: Charlie is rough.\nKind(Fiona, True) ::: Fiona is kind.\nRough(Fiona, True) ::: Fiona is rough.\nWhite(Fiona, True) ::: Fiona is white.\nNice(Gary, True) ::: Gary is nice.\nRules:\nIf Gary is red and Gary is white then Gary is quiet ::: If Gary is red and Gary is white then Gary is quiet.\nAll white things are rough ::: All white things are rough.\nIf something is rough then it is red ::: If something is rough then it is red.\nIf something is nice then it is white ::: If something is nice then it is white.\nAll smart things are white ::: All smart things are white.\nRough, quiet things are not kind ::: Rough, quiet things are not kind.\nIf something is quiet and not smart then it is kind ::: If something is quiet and not smart then it is kind.\nSmart things are quiet ::: Smart things are quiet.\nIf something is smart and not rough then it is quiet ::: If something is smart and not rough then it is quiet.\nQuery:\nNot(Quiet(Gary, True)) ::: Gary is not quiet.\n------\nProblem:\nBob is kind. Charlie is quiet. Charlie is rough. Fiona is kind. Fiona is rough. Fiona is white. Gary is nice. If Gary is red and Gary is white then Gary is quiet. All white things are rough. If something is rough then it is red"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-68_Q2",
    "context": "The cat chases the rabbit. The cat likes the mouse. The dog is blue. The dog is not cold. The dog likes the cat. The dog likes the mouse. The mouse is cold. The mouse does not like the cat. The rabbit chases the mouse. The rabbit is nice. If someone chases the dog then the dog likes the cat. If someone is nice and they eat the mouse then the mouse chases the dog. If someone likes the mouse then they are blue. If someone eats the cat and they chase the rabbit then the rabbit likes the mouse. If the dog eats the rabbit and the rabbit likes the mouse then the dog likes the mouse. If the cat chases the rabbit then the cat chases the dog. If someone eats the rabbit then they like the rabbit. If someone is blue then they eat the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(Cat, Rabbit, True) ::: The cat chases the rabbit.\nLikes(Cat, Mouse, True) ::: The cat likes the mouse.\nIs(Dog, Blue, True) ::: The dog is blue.\nNot(Cold, Dog, True) ::: The dog is not cold.\nLikes(Dog, Cat, True) ::: The dog likes the cat.\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nCold(Mouse, True) ::: The mouse is cold.\nNot(Likes, Mouse, Cat, True) ::: The mouse does not like the cat.\nChases(Rabbit, Mouse, True) ::: The rabbit chases the mouse.\nNice(Rabbit, True) ::: The rabbit is nice.\nRules:\nChases(x, y, True) >>> Likes(x, Cat, True) ::: If someone chases the dog then the dog likes the cat.\nNice(x, True) && Eats(x, Mouse, True) >>> Chases(Mouse, Dog, True) ::: If someone is nice and they eat the mouse then the mouse chases the dog.\nLikes(x, Mouse, True) >>> Is(x, Blue, True) ::: If someone likes the mouse then they are blue.\nEats(x, Rabbit, True) && Likes(x, Mouse, True) >>> Chases(Rabbit, Mouse, True) ::: If someone eats the cat and they chase"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-620_Q19",
    "context": "Anne is red. Bob is big. Bob is green. Bob is red. Charlie is furry. Dave is big. Dave is blue. If something is big then it is smart. If something is blue then it is green. All furry things are big. Smart things are blue. If something is green then it is furry. Green things are smart. All green things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nRed(Anne, True) ::: Anne is red.\nBig(Bob, True) ::: Bob is big.\nGreen(Bob, True) ::: Bob is green.\nRed(Bob, True) ::: Bob is red.\nFurry(Charlie, True) ::: Charlie is furry.\nBig(Dave, True) ::: Dave is big.\nBlue(Dave, True) ::: Dave is blue.\nRules:\nBig($x, True) >>> Smart($x, True) ::: If something is big then it is smart.\nBlue($x, True) >>> Green($x, True) ::: If something is blue then it is green.\nFurry($x, True) >>> Big($x, True) ::: All furry things are big.\nSmart($x, True) >>> Blue($x, True) ::: Smart things are blue.\nGreen($x, True) >>> Furry($x, True) ::: If something is green then it is furry.\nGreen($x, True) >>> Smart($x, True) ::: Green things are smart.\nAll($x, Green($x, True)) >>> Quiet($x, True) ::: All green things are quiet.\nQuery:\nNot(Red(Dave, True)) ::: Dave is not red.\n------\nProblem:\nAnne is red. Bob is big. Bob is green. Bob is red. Charlie is furry. Dave is big. Dave is blue. If something is big then it is smart. If something is blue then it is green. All furry things are big. Smart things are blue."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-523_Q13",
    "context": "Anne is green. Anne is young. Charlie is blue. Charlie is green. Charlie is white. Dave is white. Erin is white. If Dave is kind and Dave is white then Dave is blue. If someone is white then they are nice. If someone is white then they are nice. All nice, green people are young. If someone is green then they are quiet. Nice people are kind. If Dave is blue then Dave is white. If Anne is nice and Anne is not white then Anne is green. If Dave is white and Dave is blue then Dave is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nYoung(Anne, True) ::: Anne is young.\nBlue(Charlie, True) ::: Charlie is blue.\nGreen(Charlie, True) ::: Charlie is green.\nWhite(Charlie, True) ::: Charlie is white.\nWhite(Dave, True) ::: Dave is white.\nWhite(Erin, True) ::: Erin is white.\nRules:\nDave(Kind($x, True), White($x, True)) >>> Dave(Blue($x, True), True) ::: If Dave is kind and Dave is white then Dave is blue.\nWhite($x, True) >>> Nice($x, True) ::: If someone is white then they are nice.\nWhite($x, True) >>> Nice($x, True) ::: If someone is white then they are nice.\nNice($x, True) && Green($x, True) >>> Young($x, True) ::: All nice, green people are young.\nGreen($x, True) >>> Quiet($x, True) ::: If someone is green then they are quiet.\nNice($x, True) >>> Kind($x, True) ::: Nice people are kind.\nDave(Blue($x, True), True) >>> Dave(White($x, True), True) ::: If Dave is blue then Dave is white.\nDave(White($x, True), True) && Dave(Blue($x, True), True) >>> Dave(Green($x, True), True) ::: If Dave is white and Dave is blue then Dave is green.\nAnne(N"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-278_Q22",
    "context": "The bald eagle eats the lion. The bald eagle is young. The cow sees the dog. The cow sees the lion. The cow does not visit the bald eagle. The cow visits the dog. The dog does not eat the cow. The dog is round. The dog does not visit the bald eagle. The dog visits the cow. The lion is round. The lion is young. If someone visits the dog and they see the cow then they do not see the bald eagle. If someone visits the dog then they eat the bald eagle. If someone eats the bald eagle then the bald eagle is rough. If someone is rough then they visit the dog. If someone visits the lion and they are not nice then the lion eats the bald eagle. If someone sees the lion and the lion eats the dog then they eat the cow. If someone visits the dog then they see the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nEats(BaldEagle, Lion, True) ::: The bald eagle eats the lion.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nSees(Cow, Dog, True) ::: The cow sees the dog.\nSees(Cow, Lion, True) ::: The cow sees the lion.\nVisits(Cow, BaldEagle, False) ::: The cow does not visit the bald eagle.\nVisits(Cow, Dog, True) ::: The cow visits the dog.\nDoesNotEat(Dog, Cow, True) ::: The dog does not eat the cow.\nRound(Dog, True) ::: The dog is round.\nVisits(Dog, BaldEagle, False) ::: The dog does not visit the bald eagle.\nVisits(Dog, Cow, True) ::: The dog visits the cow.\nRound(Lion, True) ::: The lion is round.\nYoung(Lion, True) ::: The lion is young.\nIfVisitsDogAndSeesCowThenDoesNotSeeBaldEagle($x, $y, $z, True) ::: If someone visits the dog and they see the cow then they do not see the bald eagle.\nIfVisitsDogThenEatsBaldEagle($x, $y, True) ::: If someone visits the dog then they eat the bald eagle.\nIfEatsBaldEagleThenRough($x, $y, True) ::: If someone e"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-498_Q14",
    "context": "The cow eats the dog. The cow eats the mouse. The cow is blue. The cow is nice. The cow does not like the mouse. The cow sees the mouse. The dog eats the cow. The dog is blue. The dog is round. The dog sees the tiger. The mouse is kind. The mouse likes the cow. The mouse sees the cow. The tiger is not nice. The tiger does not like the mouse. The tiger sees the mouse. If someone is round then they are nice. If someone is green then they like the tiger. If someone likes the tiger then the tiger sees the cow. If someone sees the mouse and they do not like the mouse then the mouse is blue. If someone is nice then they eat the dog. If the tiger is nice then the tiger does not like the cow. If someone is round and they eat the dog then they are green. If someone eats the cow then they like the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse eats the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nFacts:\nEats(Cow, Dog, True) ::: The cow eats the dog.\nEats(Cow, Mouse, True) ::: The cow eats the mouse.\nIs(Cow, Blue, True) ::: The cow is blue.\nIs(Cow, Nice, True) ::: The cow is nice.\nNot(Likes(Cow, Mouse, True)) ::: The cow does not like the mouse.\nSees(Cow, Mouse, True) ::: The cow sees the mouse.\nEats(Dog, Cow, True) ::: The dog eats the cow.\nIs(Dog, Blue, True) ::: The dog is blue.\nIs(Dog, Round, True) ::: The dog is round.\nSees(Dog, Tiger, True) ::: The dog sees the tiger.\nIs(Mouse, Kind, True) ::: The mouse is kind.\nLikes(Mouse, Cow, True) ::: The mouse likes the cow.\nSees(Mouse, Cow, True) ::: The mouse sees the cow.\nIs(Tiger, Nice, False) ::: The tiger is not nice.\nNot(Likes(Tiger, Mouse, True)) ::: The tiger does not like the mouse.\nSees(Tiger, Mouse, True) ::: The tiger sees the mouse.\nRules:\nRound($x, True) >>> Nice($x, True) ::: If someone is round then they are nice.\nIs($"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-863_Q11",
    "context": "Anne is furry. Anne is kind. Anne is nice. Anne is young. Bob is big. Bob is furry. Charlie is nice. Charlie is young. Dave is cold. Dave is kind. Dave is young. All cold, big people are furry. All big people are rough. All kind, big people are rough. If someone is nice and rough then they are kind. If Charlie is kind then Charlie is big. If someone is rough and kind then they are cold. Nice people are big. All rough, furry people are cold. Cold, nice people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nKind(Anne, True) ::: Anne is kind.\nNice(Anne, True) ::: Anne is nice.\nYoung(Anne, True) ::: Anne is young.\nBig(Bob, True) ::: Bob is big.\nFurry(Bob, True) ::: Bob is furry.\nNice(Charlie, True) ::: Charlie is nice.\nYoung(Charlie, True) ::: Charlie is young.\nCold(Dave, True) ::: Dave is cold.\nKind(Dave, True) ::: Dave is kind.\nYoung(Dave, True) ::: Dave is young.\nRules:\nCold($x, True) >>> Big($x, True) ::: All cold, big people are furry.\nBig($x, True) >>> Rough($x, True) ::: All big people are rough.\nKind($x, True) >>> Rough($x, True) ::: All kind, big people are rough.\nNice($x, True) && Rough($x, True) >>> Kind($x, True) ::: If someone is nice and rough then they are kind.\nKind(Charlie, True) >>> Big(Charlie, True) ::: If Charlie is kind then Charlie is big.\nRough($x, True) && Kind($x, True) >>> Cold($x, True) ::: If someone is rough and kind then they are cold.\nNice($x, True) >>> Big($x, True) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-998_Q6",
    "context": "Anne is kind. Anne is nice. Charlie is not big. Charlie is cold. Charlie is kind. Charlie is smart. Charlie is young. Erin is cold. Erin is kind. Erin is nice. Erin is young. Fiona is big. If Fiona is young then Fiona is nice. If something is nice and kind then it is smart. Big, kind things are young. All big things are round. If something is round then it is kind. If Charlie is big then Charlie is young. If something is smart and not round then it is not cold. All round, smart things are cold. Nice things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nNice(Anne, True) ::: Anne is nice.\nNot(Big(Charlie, True)) ::: Charlie is not big.\nCold(Charlie, True) ::: Charlie is cold.\nKind(Charlie, True) ::: Charlie is kind.\nSmart(Charlie, True) ::: Charlie is smart.\nYoung(Charlie, True) ::: Charlie is young.\nRound(Fiona, True) ::: Fiona is round.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nIf Fiona is young then Fiona is nice ::: If Fiona is young then Fiona is nice.\nIf something is nice and kind then it is smart ::: If something is nice and kind then it is smart.\nBig, kind things are young ::: Big, kind things are young.\nAll big things are round ::: All big things are round.\nIf something is round then it is kind ::: If something is round then it is kind.\nIf Charlie is big then Charlie is young ::: If Charlie is big then Charlie is young.\nIf something is smart and not round then it is not cold ::: If something is smart and not round then it is not cold.\nAll round, smart things are cold ::: All round, smart things are cold.\nNice things are cold ::: Nice things are cold.\nQuery:\nNot(Kind(Fiona, True)) ::: Fiona is not kind.\n------\nProblem:\nAnne is big. Anne is kind. Anne is nice. Anne is young"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-310_Q16",
    "context": "Anne is big. Anne is nice. Anne is round. Bob is nice. Bob is round. Dave is blue. Dave is red. Dave is smart. Erin is red. Erin is round. If someone is big and round then they are smart. All rough people are blue. Nice people are big. If someone is nice then they are round. Round, red people are rough. All round, smart people are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Anne, True) ::: Anne is big.\nNice(Anne, True) ::: Anne is nice.\nRound(Anne, True) ::: Anne is round.\nBig(Bob, True) ::: Bob is big.\nNice(Bob, True) ::: Bob is nice.\nRound(Bob, True) ::: Bob is round.\nBlue(Dave, True) ::: Dave is blue.\nRed(Dave, True) ::: Dave is red.\nSmart(Dave, True) ::: Dave is smart.\nRed(Erin, True) ::: Erin is red.\nRound(Erin, True) ::: Erin is round.\nRules:\nBig($x, True) >>> Round($x, True) ::: If someone is big and round then they are smart.\nBlue($x, True) >>> Rough($x, True) ::: All rough people are blue.\nNice($x, True) >>> Round($x, True) ::: Nice people are big.\nRound($x, True) >>> Nice($x, True) ::: If someone is nice then they are round.\nRound($x, True) >>> Red($x, True) ::: Round, red people are rough.\nRound($x, True) && Smart($x, True) >>> Red($x, True) ::: All round, smart people are red.\nQuery:\nRough(Dave, True) ::: Dave is rough.\n------\nProblem:\nAnne is big. Anne is nice. Anne is round. Bob is nice. Bob is round. Dave is blue. Dave is red"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-483_Q6",
    "context": "The bear does not need the lion. The bear needs the mouse. The bear visits the cat. The bear does not visit the lion. The bear visits the mouse. The cat likes the lion. The lion is green. The lion visits the bear. The lion visits the cat. The lion visits the mouse. The mouse needs the lion. The mouse visits the bear. If something visits the lion and the lion is not blue then the lion is not green. If something is green then it likes the mouse. If something likes the mouse then the mouse needs the lion. If something visits the bear then it is not nice. If something likes the cat then it needs the bear. If something is young and it visits the mouse then it likes the cat. If something visits the cat and it is not nice then it is young. If something needs the bear then it needs the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nFacts:\nNeeds(Bear, Lion, True) ::: The bear needs the lion.\nNeeds(Bear, Mouse, True) ::: The bear needs the mouse.\nVisits(Bear, Cat, True) ::: The bear visits the cat.\nVisits(Bear, Lion, False) ::: The bear does not visit the lion.\nVisits(Bear, Mouse, True) ::: The bear visits the mouse.\nLikes(Cat, Lion, True) ::: The cat likes the lion.\nIs(Lion, Green, True) ::: The lion is green.\nVisits(Lion, Bear, True) ::: The lion visits the bear.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nVisits(Lion, Mouse, True) ::: The lion visits the mouse.\nNeeds(Mouse, Lion, True) ::: The mouse needs the lion.\nVisits(Mouse, Bear, True) ::: The mouse visits the bear.\nNot(Is(Lion, Blue, True), True) ::: If something visits the lion and the lion is not blue then the lion is not green.\nLikes(Mouse, Lion, True) ::: If something is green then it likes the mouse.\nNeeds(Mouse, Lion, True) ::: If something likes the mouse then the mouse needs the lion.\nNot(Is(Lion, Green, True), True) ::: If something visits the bear then it is not nice.\nLikes(Cat, Bear, True) ::: If something likes the cat then it needs the bear.\nYoung(Mouse, True) ::: If something visits the mouse and it is not nice then it is young.\nNot(Is(Mouse, Young, True), True) ::: If something needs the bear then it needs the mouse.\nRules:\nYoung($x, True) >>> Nice($x, False) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True) >>> Not(Is($x, Nice, True), True) ::: If something is young then it is not nice.\nYoung($x, True"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-1036_Q2",
    "context": "The bear eats the squirrel. The bear is cold. The bear is rough. The bear visits the lion. The cat eats the lion. The lion likes the cat. The lion visits the bear. The squirrel eats the lion. The squirrel is cold. The squirrel is rough. The squirrel likes the bear. The squirrel visits the lion. Red people are green. If someone eats the lion then the lion is red. If someone is green and they like the lion then they eat the bear. If someone visits the bear then the bear likes the lion. If someone likes the squirrel and they like the lion then they visit the lion. If someone is green then they eat the squirrel. If someone likes the lion then they visit the bear. If someone visits the lion and the lion is green then they are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nVisits($x, $y) ::: Does x visit y?\nLikes($x, $y) ::: Does x like y?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nFacts:\nEats(Bear, Squirrel) ::: The bear eats the squirrel.\nCold(Bear, True) ::: The bear is cold.\nRough(Bear, True) ::: The bear is rough.\nVisits(Bear, Lion) ::: The bear visits the lion.\nEats(Cat, Lion) ::: The cat eats the lion.\nLikes(Lion, Cat) ::: The lion likes the cat.\nVisits(Lion, Bear) ::: The lion visits the bear.\nEats(Squirrel, Lion) ::: The squirrel eats the lion.\nCold(Squirrel, True) ::: The squirrel is cold.\nRough(Squirrel, True) ::: The squirrel is rough.\nLikes(Squirrel, Bear) ::: The squirrel likes the bear.\nVisits(Squirrel, Lion) ::: The squirrel visits the lion.\nRules:\nRed($x, True) >>> Green($x, True) ::: Red people are green.\nEats($x, Lion) >>> Red($x, True) ::: If someone eats the lion then the lion is red.\nGreen($x, True) && Likes($x, Lion) >>> Eats($x, Bear) ::: If someone is green and they like the lion then they eat the bear.\nVisits($x, Bear) >>> Likes($x, Lion) ::: If someone visits the bear then the bear likes the lion.\nLikes($x, Squirrel) && Likes($x, Lion) >>> Visits($x, Lion) ::: If someone likes the squirrel and they like the lion then they visit the lion.\nGreen($x, True) >>> Eats($x, Squirrel) ::: If someone is green then they eat the squirrel.\nLikes($x, Lion) >>> Visits($x, Bear) ::: If someone likes the lion then they visit the bear.\nVisits($x, Lion) && Green($x, True) >>> Red($x, True) ::: If someone visits the lion and the lion is green then they are red.\nQuery:\nNot(Rough(Squirrel, True)) ::: The squirrel is not rough.\n------\nProblem:\nThe bear eats the squirrel. The bear is cold. The bear is rough. The bear visits the lion. The cat eats the lion. The lion likes the cat. The lion visits the bear. The squirrel eats the lion. The squirrel is cold. The squirrel is rough. The squirrel likes the bear. The squirrel visits the lion. Red people are green. If someone eats the lion then the lion is red. If someone is green and they like the lion then they eat the bear. If someone visits the bear then the bear likes the lion. If someone likes the squirrel and they like the lion then they visit the lion. If someone is green then they eat the squirrel. If someone likes the lion then they visit the bear. If someone visits the lion and the lion is green then they are red.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The squirrel is not rough.\n###\nPredicates:\nEats($x, $y) ::: Does x eat y?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nVisits($x, $y) ::: Does x visit y?\nLikes($x, $y) ::: Does x like y?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nFacts:\nEats(Bear, Squirrel) ::: The bear eats the squirrel.\nCold(Bear, True) ::: The bear is cold.\nRough(Bear, True) ::: The bear is rough.\nVisits(Bear, Lion) ::: The bear visits the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-178_Q3",
    "context": "Bob is big. Bob is quiet. Erin is white. Gary is big. Gary is red. Harry is green. Harry is smart. If someone is smart and big then they are white. All quiet, red people are smart. If someone is smart and white then they are green. Red, round people are quiet. If someone is big then they are round. If Erin is round and Erin is quiet then Erin is smart. If someone is red and green then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(Bob, True) ::: Bob is big.\nQuiet(Bob, True) ::: Bob is quiet.\nWhite(Erin, True) ::: Erin is white.\nBig(Gary, True) ::: Gary is big.\nRed(Gary, True) ::: Gary is red.\nGreen(Harry, True) ::: Harry is green.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBig($x, True) >>> Round($x, True) ::: If someone is big then they are round.\nQuiet($x, True) && Red($x, True) >>> Smart($x, True) ::: All quiet, red people are smart.\nSmart($x, True) && White($x, True) >>> Green($x, True) ::: If someone is smart and white then they are green.\nSmart($x, True) && White($x, True) >>> Green($x, True) ::: If someone is smart and white then they are green.\nRed($x, True) && Round($x, True) >>> Quiet($x, True) ::: Red, round people are quiet.\nBig($x, True) >>> Round($x, True) ::: If someone is big then they are round.\nQuiet(Erin, True) && Round(Erin, True) >>> Smart(Erin, True) ::: If Erin is round and Erin is quiet then Erin is smart.\nRed($x, True) && Green($x, True) >>> Big($x, True) ::: If someone is red and green then they are big.\nQuery:\nRound(Bob, True) ::: Bob is round.\n------\nProblem:\nBob is big. Bob is quiet. Erin is white. Gary is big. Gary is red. Harry is green. Harry is smart. If someone is smart and big then they are white. All quiet, red people are smart. If someone is smart and white then they are green. Red, round people are quiet. If someone is big then they are round. If Erin is round and Erin is quiet then Erin is smart. If someone is red and green then they are big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is white.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(Bob, True) ::: Bob is big.\nQuiet(Bob, True) ::: Bob is quiet.\nWhite(Erin, True) ::: Erin is white.\nBig(Gary, True) ::: Gary is big.\nRed(Gary, True) ::: Gary is red.\nGreen(Harry, True) ::: Harry is green.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBig($x, True) >>> Round($x, True) ::: If someone is big then they are round.\nQuiet($x, True) && Red($x, True) >>> Smart($x, True) ::: All quiet, red people are smart.\nSmart($x, True) && White($x, True) >>> Green($x, True) ::: If someone is smart and white then they are green.\nSmart($x, True) && White($x, True) >>> Green($x, True) ::: If someone is smart and white then they are green.\nRed($x, True) && Round($x, True) >>> Quiet($x, True) ::: Red, round people are quiet.\nBig($x, True) >>> Round($x, True) ::: If someone is big then they are round.\nQuiet(Erin, True) && Round(Erin, True"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-702_Q7",
    "context": "Charlie is big. Charlie is cold. Charlie is nice. Charlie is young. Dave is big. Dave is nice. Fiona is big. Fiona is nice. Gary is cold. Gary is nice. All rough, young things are red. All rough, cold things are young. All nice, red things are round. If Charlie is cold and Charlie is rough then Charlie is young. All round, red things are rough. All cold, big things are red. Cold things are big. If Dave is rough then Dave is cold. If Fiona is cold then Fiona is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nFacts:\nBig(Charlie, True) ::: Charlie is big.\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nYoung(Charlie, True) ::: Charlie is young.\nBig(Dave, True) ::: Dave is big.\nNice(Dave, True) ::: Dave is nice.\nBig(Fiona, True) ::: Fiona is big.\nNice(Fiona, True) ::: Fiona is nice.\nCold(Gary, True) ::: Gary is cold.\nNice(Gary, True) ::: Gary is nice.\nRules:\nYoung($x, True) >>> Round($x, True) ::: All rough, young things are red.\nYoung($x, True) >>> Cold($x, True) ::: All rough, cold things are young.\nNice($x, True) >>> Red($x, True) ::: All nice, red things are round.\nCold($x, True) && Rough($x, True) >>> Young($x, True) ::: If Charlie is cold and Charlie is rough then Charlie is young.\nRound($x, True) >>> Rough($x, True) ::: All round, red things are rough.\nRed($x, True) >>> Cold($x, True) ::: All cold, big things are red.\nCold($x, True) >>> Big($x, True) ::: Cold things are big.\nNice($x, True) >>> Rough($x, True) ::: If Dave is rough then Dave is cold.\nCold($x, True) >>> Red($x, True) ::: If Fiona is cold then Fiona is red.\nQuery:\nRound(Gary, True) ::: Gary is round.\n------\nProblem:\nBob is big. Bob is cold. Bob is nice. Bob is young. Charlie is big. Charlie is nice. Charlie is young. Dave is big. Dave is cold. Dave is nice. Dave is young. Erin is big. Erin is cold. Erin is nice. Erin is young. Fiona is big. Fiona is cold. Fiona is nice. Fiona is young. Gary is big. Gary is cold. Gary is nice. Gary is young. Harry is big. Harry is cold. Harry is nice. Harry is young. If Bob is cold then Bob is young. If Charlie is cold then Charlie is young. If Dave is cold then Dave is young. If Erin is cold then Erin is young. If Fiona is cold then Fiona is young. If Gary is cold then Gary is young. If Harry is cold then Harry is young. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young things are big. All cold, young things are nice. All cold, young"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-249_Q9",
    "context": "The cat chases the rabbit. The cat chases the tiger. The cat sees the mouse. The cat does not see the rabbit. The mouse chases the cat. The mouse does not like the cat. The rabbit likes the tiger. The tiger is nice. The tiger is young. The tiger likes the cat. All big things are blue. If the cat sees the tiger then the cat chases the tiger. If something likes the rabbit then the rabbit does not like the mouse. All blue things are young. If something is blue then it is young. If something chases the cat then it likes the mouse. If something is young then it likes the tiger. If something likes the mouse then the mouse is big. If something sees the mouse and the mouse is not blue then the mouse likes the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nLikes($x, $y, bool) ::: Does x like y?\nIsBlue($x, bool) ::: Is x blue?\nIsYoung($x, bool) ::: Is x young?\nIsBig($x, bool) ::: Is x big?\nFacts:\nChases(Cat, Rabbit, True) ::: The cat chases the rabbit.\nChases(Cat, Tiger, True) ::: The cat chases the tiger.\nSees(Cat, Mouse, True) ::: The cat sees the mouse.\nNot(Sees(Cat, Rabbit, True)) ::: The cat does not see the rabbit.\nChases(Mouse, Cat, True) ::: The mouse chases the cat.\nNot(Likes(Mouse, Cat, True)) ::: The mouse does not like the cat.\nLikes(Rabbit, Tiger, True) ::: The rabbit likes the tiger.\nIsNice(Tiger, True) ::: The tiger is nice.\nIsYoung(Tiger, True) ::: The tiger is young.\nLikes(Tiger, Cat, True) ::: The tiger likes the cat.\nAll(Big, Blue, True) ::: All big things are blue.\nIf(Sees(Cat, Tiger, True), Chases(Cat, Tiger, True)) ::: If the cat sees the tiger then the cat chases the tiger.\nIf(Likes(Rabbit, $x, True), Not(Likes($x, Mouse, True))) ::: If something likes the rabbit then the rabbit does not like the mouse.\nAll(Blue, Young, True) ::: All blue things are young.\nIf(Blue($x, True), Young($x, True)) ::: If something is blue then it is young.\nIf(Chases($x, Cat, True), Likes($x, Mouse, True)) ::: If something chases the cat then it likes the mouse.\nIf(Young($x, True), Likes($x, Tiger, True)) ::: If something is young then it likes the tiger.\nIf(Likes(Mouse, $x, True), Big($x, True)) ::: If something likes the mouse then the mouse is big.\nIf(Sees(Mouse, $x, True), Not(Blue($x, True)), Likes(Mouse, Cat, True)) ::: If something sees the mouse and the mouse is not blue then the mouse likes the cat.\nQuery:\nYoung(Mouse, True) ::: The mouse is young.\n------\nProblem:\nThe cat chases the rabbit. The cat chases the tiger. The cat sees the mouse. The cat does not see the rabbit. The mouse chases the cat. The mouse does not like the cat. The rabbit likes the tiger. The tiger is nice. The tiger is young. The tiger likes the cat. All big things are blue. If the cat sees the tiger then the cat chases the tiger. If something likes the rabbit then the rabbit does not like the mouse. All blue things are young. If something is blue then it is young. If something chases the cat then it likes the mouse. If something is young then it likes the tiger. If something likes the mouse then the mouse is big. If something sees the mouse and the mouse is not blue then the mouse likes the cat.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The mouse is young.\n###\nPredicates:\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nLikes($x, $y, bool) ::: Does x like y?\nIsBlue($x, bool) ::: Is x blue?\nIsYoung($x, bool) ::: Is x young?\nIsBig($x, bool) ::: Is x big?\nFacts:\nChases(Cat, Rabbit, True) ::: The cat chases the rabbit.\nChases(Cat, Tiger, True) ::: The cat chases the tiger.\nSees(Cat, Mouse, True) ::: The cat sees the mouse.\nNot(Sees(Cat, Rabbit, True)) ::: The cat does not see the rabbit."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1039_Q10",
    "context": "Charlie is big. Charlie is kind. Charlie is nice. Charlie is round. Erin is round. Fiona is cold. Fiona is kind. Fiona is round. Harry is round. Harry is smart. If something is blue then it is cold. Blue, cold things are nice. Blue things are big. All round things are blue. Smart things are blue. Round, smart things are kind. All nice, round things are smart. Nice, round things are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nFacts:\nBig(Charlie, True) ::: Charlie is big.\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nRound(Charlie, True) ::: Charlie is round.\nRound(Erin, True) ::: Erin is round.\nCold(Fiona, True) ::: Fiona is cold.\nKind(Fiona, True) ::: Fiona is kind.\nRound(Fiona, True) ::: Fiona is round.\nRound(Harry, True) ::: Harry is round.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBlue($x, True) >>> Cold($x, True) ::: If something is blue then it is cold.\nBlue($x, True) && Cold($x, True) >>> Nice($x, True) ::: Blue, cold things are nice.\nBlue($x, True) >>> Big($x, True) ::: Blue things are big.\nRound($x, True) >>> Blue($x, True) ::: All round things are blue.\nSmart($x, True) >>> Blue($x, True) ::: Smart things are blue.\nRound($x, True) && Smart($x, True) >>> Kind($x, True) ::: Round, smart things are kind.\nNice($x, True) && Round($x, True) >>> Smart($x, True) ::: All nice, round things are smart.\nNice($x, True) && Round($x, True) >>> Big($x, True) ::: Nice, round things are big.\nQuery:\nNot(Smart(Erin, True)) ::: Erin is not smart.\n------\nProblem:\nCharlie is big. Charlie is kind. Charlie is nice. Charlie is round. Erin is round. Fiona is cold. Fiona is kind. Fiona is round. Harry is round. Harry is smart. If something is blue then it is cold. Blue, cold things are nice. Blue things are big. All round things are blue. Smart things are blue. Round, smart things are kind. All nice, round things are smart. Nice, round things are big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not smart.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nFacts:\nBig(Charlie, True) ::: Charlie is big.\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nRound(Charlie, True) ::: Charlie is round.\nRound(Erin, True) ::: Erin is round.\nCold(Fiona, True) ::: Fiona is cold.\nKind(Fiona, True) ::: Fiona is kind.\nRound(Fiona, True) ::: Fiona is round.\nRound(Harry, True) ::: Harry is round.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBlue($x, True) >>> Cold($x, True) ::: If something is blue then it is cold.\nBlue($x, True) && Cold($x, True) >>> Nice($x, True) ::: Blue, cold things are nice.\nBlue($x, True) >>> Big($x, True) ::: Blue things are big.\nRound($x, True) >>> Blue($x, True) ::: All round things are blue.\nSmart($x, True) >>> Blue($x, True) ::: Smart things are blue.\nRound($x, True) && Smart($x, True) >>> Kind($x, True) ::: Round, smart things are kind.\nNice($x, True) && Round($x, True) >>> Smart"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-269_Q5",
    "context": "Charlie is blue. Charlie is round. Fiona is big. Fiona is cold. Gary is nice. Harry is nice. Harry is round. All rough, blue things are red. All nice things are cold. Big, cold things are rough. If something is red and blue then it is rough. All blue, cold things are nice. All red things are blue. If something is round and cold then it is blue. Blue things are big. If Charlie is big then Charlie is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nFacts:\nBlue(Charlie, True) ::: Charlie is blue.\nRound(Charlie, True) ::: Charlie is round.\nBig(Fiona, True) ::: Fiona is big.\nCold(Fiona, True) ::: Fiona is cold.\nNice(Gary, True) ::: Gary is nice.\nRound(Harry, True) ::: Harry is round.\nRules:\nRough($x, True) >>> Blue($x, True) ::: All rough, blue things are red.\nNice($x, True) >>> Cold($x, True) ::: All nice things are cold.\nBig($x, True) && Cold($x, True) >>> Rough($x, True) ::: Big, cold things are rough.\nBlue($x, True) && Red($x, True) >>> Rough($x, True) ::: If something is red and blue then it is rough.\nBlue($x, True) && Cold($x, True) >>> Nice($x, True) ::: All blue, cold things are nice.\nBlue($x, True) >>> Red($x, True) ::: All blue things are red.\nRound($x, True) && Cold($x, True) >>> Blue($x, True) ::: If something is round and cold then it is blue.\nBig($x, True) >>> Blue($x, True) ::: Blue things are big.\nCharlie(Big($x, True)) >>> Charlie(Blue($x, True)) ::: If Charlie is big then Charlie is blue.\nQuery:\nBlue(Harry, True) ::: Harry is blue.\n------\nProblem:\nCharlie is blue. Charlie is round. Fiona is big. Fiona is cold. Gary is nice. Harry is nice. Harry is round. All rough, blue things are red. All nice things are cold. Big, cold things are rough. If something is red and blue then it is rough. All blue, cold things are nice. All red things are blue. If something is round and cold then it is blue. Blue things are big. If Charlie is big then Charlie is blue.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is blue.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nFacts:\nBlue(Charlie, True) ::: Charlie is blue.\nRound(Charlie, True) ::: Charlie is round.\nBig(Fiona, True) ::: Fiona is big.\nCold(Fiona, True) ::: Fiona is cold.\nNice(Gary, True) ::: Gary is nice.\nRound(Harry, True) ::: Harry is round.\nRules:\nRough($x, True) >>> Blue($x, True) ::: All rough, blue things are red.\nNice($x, True) >>> Cold($x, True) ::: All nice things are cold.\nBig($x, True) && Cold($x, True) >>> Rough($x, True) ::: Big, cold things are rough.\nBlue($x, True) && Red($x, True) >>> Rough($x, True) ::: If something is red and blue then it is rough.\nBlue($x, True) && Cold($x, True) >>> Nice($x, True) ::: All blue, cold things are nice.\nBlue($x, True) >>> Red($x, True) ::: All blue things are red.\nRound($x, True) && Cold($x, True) >>> Blue($x, True) ::: If something is round and cold then it is blue.\nBig($x, True) >>> Blue($x, True) ::: Blue things are big.\nCharlie(Big($x, True)) >>> Charlie(Blue($x, True)) ::: If Charlie is big then Charlie is blue."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-974_Q16",
    "context": "Dave is cold. Dave is kind. Dave is quiet. Erin is green. Fiona is cold. Fiona is green. Fiona is quiet. Fiona is round. Gary is cold. Gary is kind. Gary is young. If someone is kind then they are cold. All green people are quiet. If Erin is green and Erin is cold then Erin is round. All cold, smart people are round. All quiet, kind people are green. Quiet people are kind. If Erin is round then Erin is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFacts:\nCold(Dave, True) ::: Dave is cold.\nKind(Dave, True) ::: Dave is kind.\nQuiet(Dave, True) ::: Dave is quiet.\nGreen(Erin, True) ::: Erin is green.\nCold(Fiona, True) ::: Fiona is cold.\nGreen(Fiona, True) ::: Fiona is green.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRound(Fiona, True) ::: Fiona is round.\nCold(Gary, True) ::: Gary is cold.\nKind(Gary, True) ::: Gary is kind.\nYoung(Gary, True) ::: Gary is young.\nRules:\nKind($x, True) >>> Cold($x, True) ::: If someone is kind then they are cold.\nGreen($x, True) >>> Quiet($x, True) ::: All green people are quiet.\nGreen($x, True) && Cold($x, True) >>> Round($x, True) ::: If Erin is green and Erin is cold then Erin is round.\nCold($x, True) && Smart($x, True) >>> Round($x, True) ::: All cold, smart people are round.\nQuiet($x, True) && Kind($x, True) >>> Green($x, True) ::: All quiet, kind people are green.\nQuiet($x, True) >>> Kind($x, True) ::: Quiet people are kind.\nIf Erin is round then Erin is young.\nQuery:\nQuiet(Gary, True) ::: Gary is quiet.\n------\nProblem:\nDave is cold. Dave is kind. Dave is quiet. Erin is green. Fiona is cold. Fiona is green. Fiona is quiet. Fiona is round. Gary is cold. Gary is kind. Gary is young. If someone is kind then they are cold. All green people are quiet. If Erin is green and Erin is cold then Erin is round. All cold, smart people are round. All quiet, kind people are green. Quiet people are kind. If Erin is round then Erin is young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is quiet.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFacts:\nCold(Dave, True) ::: Dave is cold.\nKind(Dave, True) ::: Dave is kind.\nQuiet(Dave, True) ::: Dave is quiet.\nGreen(Erin, True) ::: Erin is green.\nCold(Fiona, True) ::: Fiona is cold.\nGreen(Fiona, True) ::: Fiona is green.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRound(Fiona, True) ::: Fiona is round.\nCold(Gary, True) ::: Gary is cold.\nKind(Gary, True) ::: Gary is kind.\nYoung(Gary, True) ::: Gary is young.\nRules:\nKind($x, True) >>> Cold($x, True) ::: If someone is kind then they are cold.\nGreen($x, True) >>> Quiet($x, True) ::: All green people are quiet.\nGreen($x, True) && Cold($x, True) >>> Round($x, True) ::: If Erin is green and Erin is cold then Erin is round.\nCold($x, True) && Smart($x, True) >>> Round($x, True) ::: All cold, smart people are round.\nQuiet($x, True) && Kind($x, True) >>> Green($x, True) ::: All quiet, kind people are green.\nQuiet($x, True"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-595_Q3",
    "context": "The bald eagle sees the lion. The bald eagle sees the rabbit. The dog chases the lion. The lion chases the rabbit. The lion is kind. The lion is rough. The lion needs the rabbit. The rabbit chases the dog. The rabbit is blue. The rabbit is nice. The rabbit sees the lion. If something sees the bald eagle then the bald eagle sees the rabbit. If something needs the dog then the dog sees the rabbit. If something needs the dog and the dog is kind then the dog chases the rabbit. If something needs the rabbit and the rabbit is blue then the rabbit sees the bald eagle. If something sees the rabbit and the rabbit sees the lion then it is kind. If the lion is rough and the lion needs the rabbit then the lion is kind. If something sees the bald eagle then the bald eagle needs the dog. If something sees the rabbit then the rabbit sees the dog. If the bald eagle chases the rabbit and the bald eagle is nice then the rabbit chases the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees($x, $y, bool) ::: Does x see y?\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nNeeds($x, $y, bool) ::: Does x need y?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nSees(BaldEagle, Lion, True) ::: The bald eagle sees the lion.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nChases(Dog, Lion, True) ::: The dog chases the lion.\nChases(Lion, Rabbit, True) ::: The lion chases the rabbit.\nKind(Lion, True) ::: The lion is kind.\nRough(Lion, True) ::: The lion is rough.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nChases(Rabbit, Dog, True) ::: The rabbit chases the dog.\nBlue(Rabbit, True) ::: The rabbit is blue.\nNice(Rabbit, True) ::: The rabbit is nice.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nRules:\nSees(BaldEagle, $x, True) >>> Sees($x, Rabbit, True) ::: If something sees the bald eagle then the bald eagle sees the rabbit.\nNeeds(Dog, $x, True) >>> Sees($x, Rabbit, True) ::: If something needs the dog then the dog sees the rabbit.\nNeeds(Dog, $x, True) && Kind($x, True) >>> Chases($x, Rabbit, True) ::: If something needs the dog and the dog is kind then the dog chases the rabbit.\nNeeds(Rabbit, $x, True) && Blue($x, True) >>> Sees($x, BaldEagle, True) ::: If something needs the rabbit and the rabbit is blue then the rabbit sees the bald eagle.\nSees($x, Rabbit, True) && Sees(Rabbit, $y, True) >>> Kind($y, True) ::: If something sees the rabbit and the rabbit sees the lion then it is kind.\nRough($x, True) && Needs(Lion, Rabbit, True) >>> Kind($x, True) ::: If the lion is rough and the lion needs the rabbit then the lion is kind.\nSees(BaldEagle, $x, True) >>> Needs(BaldEagle, Dog, True) ::: If something sees the bald eagle then the bald eagle needs the dog.\nSees(Rabbit, $x, True) >>> Sees($x, Dog, True) ::: If something sees the rabbit then the rabbit sees the dog.\nKind(BaldEagle, True) && Chases(Rabbit, Dog, True) >>> Chases(Dog, Rabbit, True) ::: If the bald eagle chases the rabbit and the bald eagle is nice then the rabbit chases the dog.\nQuery:\nKind(BaldEagle, True) ::: The bald eagle is kind.\n------\nProblem:\nThe dog is furry. The dog is green. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is red. The dog is blue. The dog is nice. The dog is kind. The dog is furry. The dog is green. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is red. The dog is blue. The dog is nice. The dog is kind. The dog is furry. The dog is green. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is red. The dog is blue. The dog is nice. The dog is kind. The dog is furry. The dog is green. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is red. The dog is blue. The dog is nice. The dog is kind. The dog is furry. The dog is green. The dog is rough. The dog is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-294_Q3",
    "context": "The cat eats the squirrel. The cat is round. The cat needs the dog. The cat needs the squirrel. The dog likes the cat. The dog likes the tiger. The squirrel is blue. The squirrel is not round. The tiger is blue. The tiger is kind. The tiger is round. The tiger needs the squirrel. If something likes the tiger and the tiger needs the dog then it is round. If something eats the cat then it needs the dog. If something is big then it needs the dog. If the dog likes the tiger and the tiger likes the dog then the dog does not like the squirrel. If something is round then it eats the cat. If something needs the cat and it eats the tiger then the tiger needs the dog. If something needs the dog and it does not eat the tiger then it is blue. If the dog is round then the dog eats the squirrel. If something likes the tiger and it is kind then the tiger likes the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat eats the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(Cat, Squirrel, True) ::: The cat eats the squirrel.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nNeeds(Cat, Squirrel, True) ::: The cat needs the squirrel.\nLikes(Cat, Dog, True) ::: The cat likes the dog.\nLikes(Cat, Tiger, True) ::: The cat likes the tiger.\nBlue(Squirrel, True) ::: The squirrel is blue.\nNot(Round(Squirrel, True)) ::: The squirrel is not round.\nBlue(Tiger, True) ::: The tiger is blue.\nKind(Tiger, True) ::: The tiger is kind.\nRound(Tiger, True) ::: The tiger is round.\nNeeds(Tiger, Squirrel, True) ::: The tiger needs the squirrel.\nIf(Likes(Tiger, Dog) && Needs(Tiger, Dog), Round(Tiger, True)) ::: If something likes the tiger and the tiger needs the dog then it is round.\nIf(Eats(Cat, Tiger), Needs(Tiger, Dog), True) ::: If something eats the cat then it needs the dog.\nIf(Big(x), Needs(x, Dog), True) ::: If something is big then it needs the dog.\nIf(Likes(Tiger, Dog) && Likes(Dog, Tiger), Not(Likes(Dog, Squirrel)), True) ::: If the dog likes the tiger and the tiger likes the dog then the dog does not like the squirrel.\nIf(Eats(Cat, Tiger), Needs(Tiger, Dog), True) ::: If something eats the cat then it needs the dog.\nIf(Round(x), Eats(x, Cat), True) ::: If something is round then it eats the cat.\nIf(Needs(Cat, Tiger) && Eats(Tiger, x), Needs(Tiger, Dog), True) ::: If something needs the cat and it eats the tiger then the tiger needs the dog.\nIf(Needs(Dog, x) && Not(Eats(Dog, Tiger)), Blue(x), True) ::: If something needs the dog and it does not eat the tiger then it is blue.\nIf(Round(Dog), Eats(Dog, Squirrel), True) ::: If the dog is round then the dog eats the squirrel.\nIf(Likes(Tiger, x) && Kind(x), Likes(x, Cat), True) ::: If the tiger likes the tiger and it is kind then the tiger likes the cat.\nQuery:\nEats(Cat, Cat, True) ::: The cat eats the cat.\n------\nProblem:\nThe cat eats the squirrel. The cat is round. The cat needs the dog. The cat needs the squirrel. The dog likes the cat. The dog likes the tiger. The squirrel is blue. The squirrel is not round. The tiger is blue. The tiger is kind. The tiger is round. The tiger needs the squirrel. If something likes the tiger and the tiger needs the dog then it is round. If something eats the cat then it needs the dog. If something is big then it needs the dog. If the dog likes the tiger and the tiger likes the dog then the dog does not like the squirrel. If something eats the cat then it needs the dog. If something is big then it needs the dog. If the dog likes the tiger and the tiger likes the dog then the dog does not like the squirrel. If something eats the cat then it needs the dog. If something is big then it needs the dog. If"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-410_Q8",
    "context": "The bald eagle is green. The bald eagle needs the lion. The bald eagle sees the cat. The bald eagle sees the lion. The cat sees the bald eagle. The cow sees the bald eagle. The lion needs the bald eagle. If someone sees the cat and the cat is green then they visit the cat. If someone needs the cat and the cat needs the bald eagle then they are blue. If someone is blue and they need the lion then they see the lion. If someone sees the cow then the cow needs the bald eagle. If someone needs the bald eagle then they see the lion. If someone needs the cat then the cat is blue. If someone visits the lion and they are nice then the lion visits the cat. If someone needs the bald eagle and they see the lion then they see the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not need the bald eagle.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nNeeds(BaldEagle, Lion, True) ::: The bald eagle needs the lion.\nSees(BaldEagle, Cat, True) ::: The bald eagle sees the cat.\nSees(BaldEagle, Lion, True) ::: The bald eagle sees the lion.\nSees(Cat, BaldEagle, True) ::: The cat sees the bald eagle.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nNeeds(Lion, BaldEagle, True) ::: The lion needs the bald eagle.\nRules:\nGreen($x, True) && Sees($x, Cat) >>> Visits($x, Cat) ::: If someone sees the cat and the cat is green then they visit the cat.\nNeeds($x, Cat) && Needs(Cat, BaldEagle) >>> Blue($x, True) ::: If someone needs the cat and the cat needs the bald eagle then they are blue.\nBlue($x, True) && Needs($x, Lion) >>> Sees($x, Lion) ::: If someone is blue and they need the lion then they see the lion.\nSees($x, Cow) >>> Needs(Cow, BaldEagle) ::: If someone sees the cow then the cow needs the bald eagle.\nNeeds($x, BaldEagle) >>> Sees($x, Lion) ::: If someone needs the bald eagle then they see the lion.\nNeeds($x, Cat) >>> Blue($x, True) ::: If someone needs the cat then the cat is blue.\nVisits($x, Lion) && Nice($x, True) >>> LionVisits($x, Cat) ::: If someone visits the lion and they are nice then the lion visits the cat.\nNeeds($x, BaldEagle) && Sees($x, Lion) >>> Sees($x, Cow) ::: If someone needs the bald eagle and they see the lion then they see the cow.\nQuery:\nNeeds(Cow, BaldEagle, False) ::: The cow does not need the bald eagle.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-14_Q6",
    "context": "The cat needs the mouse. The cat visits the lion. The lion is cold. The lion is red. The lion is round. The lion likes the squirrel. The lion needs the squirrel. The lion visits the squirrel. The mouse is cold. The mouse needs the lion. The mouse visits the lion. The squirrel likes the lion. If something needs the mouse and it needs the lion then the lion needs the mouse. If something visits the lion then it needs the cat. If the mouse visits the squirrel then the squirrel likes the cat. If something is rough then it is cold. If the squirrel is cold then the squirrel visits the cat. If something visits the cat then the cat likes the mouse. If something visits the squirrel then the squirrel is rough. If something likes the mouse then it does not need the squirrel. If something is red and it does not need the squirrel then it visits the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nIs($x, $y, bool) ::: Is x y?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nFacts:\nNeeds(Cat, Mouse, True) ::: The cat needs the mouse.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nCold(Lion, True) ::: The lion is cold.\nRed(Lion, True) ::: The lion is red.\nRound(Lion, True) ::: The lion is round.\nLikes(Lion, Squirrel, True) ::: The lion likes the squirrel.\nNeeds(Lion, Squirrel, True) ::: The lion needs the squirrel.\nVisits(Lion, Squirrel, True) ::: The lion visits the squirrel.\nLikes(Squirrel, Lion, True) ::: The squirrel likes the lion.\nNeeds(Mouse, Lion, True) ::: The mouse needs the lion.\nVisits(Mouse, Lion, True) ::: The mouse visits the lion.\nRules:\nNeeds(x, Mouse) && Needs(x, Lion) >>> Needs(Lion, Mouse) ::: If something needs the mouse and it needs the lion then the lion needs the mouse.\nVisits(x, Lion) >>> Needs(x, Cat) ::: If something visits the lion then it needs the cat.\nVisits(Mouse, Squirrel) >>> Likes(Squirrel, Cat) ::: If the mouse visits the squirrel then the squirrel likes the cat.\nRough(x) >>> Cold(x) ::: If something is rough then it is cold.\nCold(Squirrel) >>> Visits(Squirrel, Cat) ::: If the squirrel is cold then the squirrel visits the cat.\nVisits(x, Cat) >>> Likes(x, Mouse) ::: If something visits the cat then the cat likes the mouse.\nVisits(x, Squirrel) >>> Rough(x) ::: If something visits the squirrel then the squirrel is rough.\nLikes(x, Mouse) >>> Not(Needs(x, Squirrel)) ::: If something"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-709_Q12",
    "context": "The bald eagle is green. The bald eagle is rough. The bald eagle is young. The bald eagle needs the squirrel. The bald eagle sees the squirrel. The cat is round. The cat needs the bald eagle. The cat needs the dog. The cat visits the bald eagle. The dog needs the bald eagle. The dog sees the bald eagle. The dog visits the cat. The squirrel needs the cat. The squirrel visits the bald eagle. If something sees the dog then it sees the cat. If something needs the dog and it is round then it needs the cat. If something visits the squirrel then the squirrel visits the dog. If something is nice then it sees the dog. If something needs the cat then it is nice. If something sees the cat then it is green. If something needs the cat then it is rough. If something visits the squirrel and the squirrel visits the dog then the squirrel visits the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nNeeds(BaldEagle, Squirrel, True) ::: The bald eagle needs the squirrel.\nSees(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, BaldEagle, True) ::: The cat needs the bald eagle.\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nVisits(Cat, BaldEagle, True) ::: The cat visits the bald eagle.\nNeeds(Dog, BaldEagle, True) ::: The dog needs the bald eagle.\nSees(Dog, BaldEagle, True) ::: The dog sees the bald eagle.\nVisits(Dog, Cat, True) ::: The dog visits the cat.\nNeeds(Squirrel, Cat, True) ::: The squirrel needs the cat.\nVisits(Squirrel, BaldEagle, True) ::: The squirrel visits the bald eagle.\nRules:\nSees($x, $y, True) >>> Sees($y, $x, True) ::: If something sees the dog then it sees the cat.\nNeeds($x, $y, True) && Round($x, True) >>> Needs($x, Cat, True) ::: If something needs the dog and it is round then it needs the cat.\nVisits($x, $y, True) >>> Visits($y, $x, True) ::: If something visits the squirrel then the squirrel visits the dog.\nNice($x, True) >>> Sees($x, Dog, True) ::: If something is nice then it sees the dog.\nNeeds($x, Cat, True) >>> Nice($x, True"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-975_Q15",
    "context": "The lion is kind. The mouse chases the lion. The rabbit is blue. The rabbit is round. The tiger is blue. The tiger is cold. The tiger is young. If something sees the rabbit then the rabbit is cold. If something sees the tiger then the tiger is kind. If something is round then it is kind. If the rabbit sees the lion and the rabbit sees the mouse then the mouse sees the tiger. If something is kind then it sees the mouse. If something is blue and kind then it sees the rabbit. If something chases the lion and the lion chases the rabbit then the rabbit chases the mouse. If something is kind and it sees the mouse then it sees the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not see the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nKind(Lion, True) ::: The lion is kind.\nChases(Mouse, Lion, True) ::: The mouse chases the lion.\nBlue(Rabbit, True) ::: The rabbit is blue.\nRound(Rabbit, True) ::: The rabbit is round.\nBlue(Tiger, True) ::: The tiger is blue.\nCold(Tiger, True) ::: The tiger is cold.\nYoung(Tiger, True) ::: The tiger is young.\nRules:\nSees($x, $y, True) >>> $x is Cold ::: If something sees the rabbit then the rabbit is cold.\nSees($x, $y, True) >>> $x is Kind ::: If something sees the tiger then the tiger is kind.\nRound($x, True) >>> $x is Kind ::: If something is round then it is kind.\nChases(Mouse, Lion, True) && Chases(Lion, Rabbit, True) >>> Chases(Rabbit, Mouse, True) ::: If something is kind and it sees the mouse then it sees the lion.\nChases(Mouse, Lion, True) && Chases(Lion, Rabbit, True) >>> Chases(Rabbit, Mouse, True) ::: If something is kind and it sees the mouse then it sees the lion.\nChases(Mouse, Lion, True) && Chases(Lion, Rabbit, True) >>> Chases(Rabbit, Mouse, True) ::: If something is kind and it sees the mouse then it sees the lion.\nSees($x, $y, True) && Kind($x, True) >>> Sees($x, Lion, True) ::: If something is kind and it sees the mouse then it sees the lion.\nBlue($x, True) && Kind($x, True) >>> Sees($x, Rabbit, True) ::: If something is blue and kind then it sees the rabbit.\nChases(Mouse, Lion, True) && Chases(Lion, Rabbit, True) >>> Chases(Rabbit, Mouse, True) ::: If something is kind and it sees the mouse then"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1186_Q13",
    "context": "Erin is blue. Erin is cold. Erin is smart. Fiona is round. Gary is cold. Gary is green. Gary is quiet. Gary is round. Gary is smart. Harry is smart. Nice, green people are round. Green people are nice. If someone is blue then they are green. If someone is blue then they are smart. Nice, round people are blue. Smart people are green. If Harry is blue and Harry is smart then Harry is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nNice($x, bool) ::: Is x nice?\nFacts:\nBlue(Erin, True) ::: Erin is blue.\nCold(Erin, True) ::: Erin is cold.\nSmart(Erin, True) ::: Erin is smart.\nRound(Fiona, True) ::: Fiona is round.\nCold(Gary, True) ::: Gary is cold.\nGreen(Gary, True) ::: Gary is green.\nQuite(Gary, True) ::: Gary is quiet.\nRound(Gary, True) ::: Gary is round.\nSmart(Gary, True) ::: Gary is smart.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nNice($x, True) >>> Green($x, True) ::: Nice, green people are round.\nGreen($x, True) >>> Nice($x, True) ::: Green people are nice.\nBlue($x, True) >>> Green($x, True) ::: If someone is blue then they are green.\nBlue($x, True) >>> Smart($x, True) ::: If someone is blue then they are smart.\nNice($x, True) >>> Blue($x, True) ::: Nice, round people are blue.\nSmart($x, True) >>> Green($x, True) ::: Smart people are green.\nBlue($x, True) && Smart($x, True) >>> Quite($x, True) ::: If Harry is blue and Harry is smart then Harry is quiet.\nQuery:\nSmart(Fiona, False) ::: Fiona is not smart.\n------\nProblem:\nErin is blue. Erin is cold. Erin is smart. Fiona is round. Gary is cold. Gary is green. Gary is quiet. Gary is round. Gary is smart. Harry is smart. Nice, green people are round. Green people are nice. If someone is blue then they are green. If someone is blue then they are smart. Nice, round people are blue. Smart people are green. If Harry is blue and Harry is smart then Harry is quiet.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is not smart.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1220_Q4",
    "context": "Anne is blue. Bob is blue. Bob is green. Bob is smart. Dave is big. Dave is nice. Fiona is smart. If something is nice then it is not green. Quiet, blue things are big. If something is blue then it is young. If something is nice then it is quiet. Young things are blue. If Anne is young then Anne is quiet. If Dave is young then Dave is green. All big, quiet things are nice. If Fiona is blue then Fiona is not green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nBlue(Bob, True) ::: Bob is blue.\nGreen(Bob, True) ::: Bob is green.\nSmart(Bob, True) ::: Bob is smart.\nBig(Dave, True) ::: Dave is big.\nNice(Dave, True) ::: Dave is nice.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nYoung($x, True) >>> Blue($x, True) ::: If something is young then it is blue.\nBlue($x, True) >>> Young($x, True) ::: If something is blue then it is young.\nNice($x, True) >>> Quiet($x, True) ::: If something is nice then it is quiet.\nQuiet($x, True) >>> Blue($x, True) ::: Quiet, blue things are big.\nBlue($x, True) >>> Big($x, True) ::: Quiet, blue things are big.\nBig($x, True) >>> Nice($x, True) ::: All big, quiet things are nice.\nNice($x, True) >>> Not(Green($x, True)) ::: If something is nice then it is not green.\nYoung($x, True) >>> Not(Green($x, True)) ::: If something is nice then it is not green.\nYoung($x, True) >>> Not(Green($x, True)) ::: If something is nice then it is not green.\nYoung($x, True) >>> Not(Green($x, True)) ::: If something is nice then it is not green.\nYoung($x, True) >>> Not(Green($x, True)) ::: If something is nice then it is not green.\nYoung($x, True) >>> Not(Green($x, True)) ::: If something is nice then it is not green.\nYoung($x, True) >>> Not(Green($x, True)) ::: If something is nice then it is not green.\nYoung($x, True) >>> Not(Green($x, True)) ::: If something is nice then it is not green.\nYoung($x, True) >>> Not"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-369_Q10",
    "context": "The cow chases the lion. The cow chases the squirrel. The cow eats the rabbit. The cow is nice. The cow likes the rabbit. The cow likes the squirrel. The lion chases the rabbit. The lion eats the rabbit. The lion likes the squirrel. The rabbit chases the squirrel. The rabbit is blue. The rabbit is nice. The rabbit likes the lion. The squirrel eats the cow. The squirrel eats the lion. The squirrel is rough. If something is nice and it eats the cow then it is kind. If something chases the squirrel then it eats the lion. If something likes the lion and it likes the rabbit then the lion chases the squirrel. If something chases the squirrel and the squirrel is nice then the squirrel is kind. If something likes the squirrel and the squirrel likes the cow then the cow likes the squirrel. If something eats the lion then it likes the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not eat the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nIs($x, $y, bool) ::: Is x y?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nRules:\nChases(Cow, Lion, True) ::: The cow chases the lion.\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nEats(Cow, Rabbit, True) ::: The cow eats the rabbit.\nNice(Cow, True) ::: The cow is nice.\nLikes(Cow, Rabbit, True) ::: The cow likes the rabbit.\nLikes(Cow, Squirrel, True) ::: The cow likes the squirrel.\nChases(Lion, Rabbit, True) ::: The lion chases the rabbit.\nEats(Lion, Rabbit, True) ::: The lion eats the rabbit.\nLikes(Lion, Squirrel, True) ::: The lion likes the squirrel.\nChases(Rabbit, Squirrel, True) ::: The rabbit chases the squirrel.\nIs(Rabbit, Blue, True) ::: The rabbit is blue.\nNice(Rabbit, True) ::: The rabbit is nice.\nLikes(Rabbit, Lion, True) ::: The rabbit likes the lion.\nEats(Squirrel, Cow, True) ::: The squirrel eats the cow.\nEats(Squirrel, Lion, True) ::: The squirrel eats the lion.\nRough(Squirrel, True) ::: The squirrel is rough.\nNice(x, True) && Eats(x, Cow) >>> Kind(x, True) ::: If something is nice and it eats the cow then it is kind.\nChases(x, Squirrel) >>> Eats(x, Lion) ::: If something chases the squirrel then it eats the lion.\nLikes(x, Lion) && Likes(x, Rabbit) >>> Chases(Lion, Squirrel) ::: If something likes the lion and it likes the rabbit then the lion chases the squirrel.\nChases(x, Squirrel) && Nice(Squirrel) >>> Kind(Squirrel, True) ::: If"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-779_Q20",
    "context": "Bob is green. Charlie is nice. Charlie is smart. Charlie is white. Erin is nice. Harry is nice. Harry is white. If Charlie is green then Charlie is blue. All nice people are cold. All cold people are blue. Rough people are green. If someone is blue then they are green. Blue, green people are white. If Bob is smart and Bob is blue then Bob is not green. If Charlie is white then Charlie is nice. All white people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nNice(Charlie, True) ::: Charlie is nice.\nSmart(Charlie, True) ::: Charlie is smart.\nWhite(Charlie, True) ::: Charlie is white.\nRough(Erin, True) ::: Erin is rough.\nNice(Harry, True) ::: Harry is nice.\nWhite(Harry, True) ::: Harry is white.\nRules:\nNice($x, True) >>> Cold($x, True) ::: All nice people are cold.\nCold($x, True) >>> Blue($x, True) ::: All cold people are blue.\nRough($x, True) >>> Green($x, True) ::: Rough people are green.\nGreen($x, True) >>> Blue($x, True) ::: If someone is blue then they are green.\nBlue($x, True) >>> Green($x, True) ::: Blue, green people are white.\nSmart($x, True) && Blue($x, True) >>> ~Green($x, True) ::: If Bob is smart and Bob is blue then Bob is not green.\nCharlie(White, True) >>> Nice($x, True) ::: If Charlie is white then Charlie is nice.\nWhite($x, True) >>> Smart($x, True) ::: All white people are smart.\nQuery:\nNice(Bob, True) ::: Bob is nice.\n------\nProblem:\nBob is green. Charlie is nice. Charlie is smart. Charlie is white. Erin is nice. Harry is nice. Harry is white. If Charlie is green then Charlie is blue. All nice people are cold. All cold people are blue. Rough people are green. If someone is blue then they are green. Blue, green people are white. If Bob is smart and Bob is blue then Bob is not green. If Charlie is white then Charlie is nice. All white people are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is nice.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1022_Q3",
    "context": "Dave is green. Dave is kind. Erin is cold. Erin is furry. Fiona is big. Fiona is furry. Gary is big. All kind people are cold. Green, smart people are rough. If Fiona is cold and Fiona is kind then Fiona is green. If someone is furry then they are smart. All furry, green people are smart. If someone is green and cold then they are big. If someone is furry and rough then they are big. All furry people are smart. Big, cold people are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nFacts:\nKind(Dave, True) ::: Dave is kind.\nGreen(Dave, True) ::: Dave is green.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nBig(Fiona, True) ::: Fiona is big.\nFurry(Fiona, True) ::: Fiona is furry.\nBig(Gary, True) ::: Gary is big.\nRules:\nKind($x, True) >>> Cold($x, True) ::: All kind people are cold.\nGreen($x, True) >>> Rough($x, True) ::: Green, smart people are rough.\nFurry($x, True) && Cold($x, True) >>> Fiona($x, True) ::: If Fiona is cold and Fiona is kind then Fiona is green.\nFurry($x, True) >>> Smart($x, True) ::: If someone is furry then they are smart.\nGreen($x, True) && Furry($x, True) >>> Smart($x, True) ::: All furry, green people are smart.\nGreen($x, True) && Cold($x, True) >>> Big($x, True) ::: If someone is green and cold then they are big.\nFurry($x, True) && Rough($x, True) >>> Big($x, True) ::: If someone is furry and rough then they are big.\nFurry($x, True) >>> Smart($x, True) ::: All furry people are smart.\nBig($x, True) && Cold($x, True) >>> Furry($x, True) ::: Big, cold people are furry.\nQuery:\nSmart(Erin, True) ::: Erin is smart.\n------\nProblem:\nDave is green. Dave is kind. Erin is cold. Erin is furry. Fiona is big. Fiona is furry. Gary is big. All kind people are cold. Green, smart people are rough. If Fiona is cold and Fiona is kind then Fiona is green. If someone is furry then they are smart. All furry, green people"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-532_Q19",
    "context": "Anne is furry. Anne is rough. Bob is cold. Bob is green. Bob is red. Gary is cold. Gary is quiet. Gary is red. Harry is not cold. Harry is red. Red things are not kind. If something is cold and not furry then it is not kind. Green, rough things are quiet. If something is furry and cold then it is quiet. If Bob is furry then Bob is green. Rough things are green. If something is kind and not furry then it is green. All quiet things are cold. Cold things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nCold(Bob, True) ::: Bob is cold.\nGreen(Bob, True) ::: Bob is green.\nRed(Bob, True) ::: Bob is red.\nCold(Gary, True) ::: Gary is cold.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nNot(Cold(Harry, True)) ::: Harry is not cold.\nRed(Harry, True) ::: Harry is red.\nNot(Kind(Bob, True)) ::: Bob is not kind.\nNot(Furry(Bob, True)) ::: Bob is not furry.\nGreen(Gary, True) ::: Gary is green.\nGreen(Rough($x, True)) ::: Rough things are green.\nNot(Kind(Bob, True)) && Not(Furry(Bob, True)) >>> Green($x, True) ::: If something is kind and not furry then it is green.\nAll(Quiet($x, True)) >>> Cold($x, True) ::: All quiet things are cold.\nCold($x, True) >>> Red($x, True) ::: Cold things are red.\nNot(Furry($x, True)) && Cold($x, True) >>> Quiet($x, True) ::: If something is furry and cold then it is quiet.\nNot(Furry($x, True)) && Cold($x, True) >>> Rough($x, True) ::: If something is furry and cold then it is rough.\nNot(Furry($x, True)) && Cold($x, True) >>> Green($x, True) ::: If something is furry and cold then it is green.\nNot(Furry($x, True)) && Cold($x, True) >>> Kind($x, True) ::: If something is furry and cold then it is kind.\nNot(Furry($x, True)) && Cold($x, True) >>> Red($x, True) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1236_Q20",
    "context": "Anne is blue. Anne is smart. Bob is green. Bob is round. Erin is rough. Harry is cold. Harry is kind. All kind things are round. If something is rough then it is round. All cold things are round. Round things are cold. All kind things are green. If something is smart then it is rough. If something is cold and not blue then it is rough. If Bob is smart then Bob is not green. All smart, cold things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nSmart($x, bool) ::: Is x smart?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nSmart(Anne, True) ::: Anne is smart.\nGreen(Bob, True) ::: Bob is green.\nRound(Bob, True) ::: Bob is round.\nRough(Erin, True) ::: Erin is rough.\nCold(Harry, True) ::: Harry is cold.\nKind(Harry, True) ::: Harry is kind.\nRules:\nKind($x, True) >>> Round($x, True) ::: All kind things are round.\nRough($x, True) >>> Round($x, True) ::: If something is rough then it is round.\nCold($x, True) >>> Round($x, True) ::: All cold things are round.\nRound($x, True) >>> Cold($x, True) ::: Round things are cold.\nKind($x, True) >>> Green($x, True) ::: All kind things are green.\nSmart($x, True) >>> Rough($x, True) ::: If something is smart then it is rough.\nCold($x, True) && Not(Blue($x, True)) >>> Rough($x, True) ::: If something is cold and not blue then it is rough.\nIf(Bob, Smart($x, True)) >>> Not(Green($x, True)) ::: If Bob is smart then Bob is not green.\nSmart($x, True) && Cold($x, True) >>> Kind($x, True) ::: All smart, cold things are kind.\nQuery:\nSmart(Erin, True) ::: Erin is smart.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-498_Q8",
    "context": "The cow eats the dog. The cow eats the mouse. The cow is blue. The cow is nice. The cow does not like the mouse. The cow sees the mouse. The dog eats the cow. The dog is blue. The dog is round. The dog sees the tiger. The mouse is kind. The mouse likes the cow. The mouse sees the cow. The tiger is not nice. The tiger does not like the mouse. The tiger sees the mouse. If someone is round then they are nice. If someone is green then they like the tiger. If someone likes the tiger then the tiger sees the cow. If someone sees the mouse and they do not like the mouse then the mouse is blue. If someone is nice then they eat the dog. If the tiger is nice then the tiger does not like the cow. If someone is round and they eat the dog then they are green. If someone eats the cow then they like the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nIs($x, $y) ::: Is x y?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nLikes($x, $y) ::: Does x like y?\nSees($x, $y) ::: Does x see y?\nFacts:\nEats(Cow, Dog) ::: The cow eats the dog.\nEats(Cow, Mouse) ::: The cow eats the mouse.\nIs(Cow, Blue) ::: The cow is blue.\nIs(Cow, Nice) ::: The cow is nice.\nNot(Likes(Cow, Mouse)) ::: The cow does not like the mouse.\nSees(Cow, Mouse) ::: The cow sees the mouse.\nEats(Dog, Cow) ::: The dog eats the cow.\nIs(Dog, Blue) ::: The dog is blue.\nIs(Dog, Round) ::: The dog is round.\nSees(Dog, Tiger) ::: The dog sees the tiger.\nIs(Mouse, Kind) ::: The mouse is kind.\nLikes(Mouse, Cow) ::: The mouse likes the cow.\nSees(Mouse, Cow) ::: The mouse sees the cow.\nNot(Is(Tiger, Nice)) ::: The tiger is not nice.\nNot(Likes(Tiger, Mouse)) ::: The tiger does not like the mouse.\nSees(Tiger, Mouse) ::: The tiger sees the mouse.\nRules:\nRound($x, True) >>> Nice($x, True) ::: If someone is round then they are nice.\nIs($x, Green) >>> Likes($x, Tiger) ::: If someone is green then they like the tiger.\nLikes($x, Tiger) >>> Sees($x, Cow) ::: If someone likes the tiger then the tiger sees"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-70_Q21",
    "context": "The bald eagle chases the rabbit. The bald eagle chases the tiger. The lion needs the rabbit. The rabbit does not chase the lion. The rabbit needs the bald eagle. The rabbit needs the lion. The tiger visits the rabbit. If something chases the rabbit then it is big. If something needs the tiger then it is big. If something needs the lion and it visits the rabbit then it chases the lion. If something is big then it chases the lion. If something chases the tiger then the tiger needs the rabbit. If something visits the tiger then the tiger is not green. If something chases the lion then the lion chases the rabbit. If something chases the tiger then it visits the bald eagle. If something chases the rabbit and it does not visit the lion then the lion does not need the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not chase the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nFacts:\nChases(BaldEagle, Rabbit, True) ::: The bald eagle chases the rabbit.\nChases(BaldEagle, Tiger, True) ::: The bald eagle chases the tiger.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nRabbit(Rabbit, True) ::: The rabbit is a rabbit.\nNot(Rabbit(Lion, True)) ::: The rabbit is not a lion.\nNeeds(Rabbit, BaldEagle, True) ::: The rabbit needs the bald eagle.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nRules:\nChases($x, $y, True) >>> Big($x, True) ::: If something chases the rabbit then it is big.\nNeeds($x, Tiger, True) >>> Big($x, True) ::: If something needs the tiger then it is big.\nNeeds($x, Lion, True) && Visits($x, Rabbit, True) >>> Chases($x, Lion, True) ::: If something needs the lion and it visits the rabbit then it chases the lion.\nBig($x, True) >>> Chases($x, Lion, True) ::: If something is big then it chases the lion.\nChases($x, Tiger, True) >>> Needs(Tiger, Rabbit, True) ::: If something chases the tiger then the tiger needs the rabbit.\nNot(Visits(Tiger, Green, True"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-785_Q16",
    "context": "The bald eagle is round. The bear needs the bald eagle. The cat eats the bear. The cat does not eat the lion. The cat is round. The lion needs the bear. The lion sees the bald eagle. If something is round then it sees the bald eagle. If something is red and not young then it needs the lion. If something sees the bald eagle then it needs the lion. If something needs the lion and it needs the bear then the bear is round. If the lion is round and the lion does not eat the cat then the cat eats the bald eagle. If something needs the lion and the lion sees the bald eagle then it is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle needs the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nFacts:\nRound(BaldEagle, True) ::: The bald eagle is round.\nNeeds(Bear, BaldEagle, True) ::: The bear needs the bald eagle.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nEats(Cat, Lion, False) ::: The cat does not eat the lion.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nSees(Cat, BaldEagle, True) ::: The cat sees the bald eagle.\nSees(Lion, BaldEagle, True) ::: The lion sees the bald eagle.\nRules:\nRound($x, True) >>> Sees($x, BaldEagle, True) ::: If something is round then it sees the bald eagle.\nRed($x, True) && Not(Young($x, True)) >>> Needs($x, Lion, True) ::: If something is red and not young then it needs the lion.\nNeeds($x, Lion, True) && Needs($x, Bear, True) >>> Bear(Round, True) ::: If something needs the lion and it needs the bear then the bear is round.\nNeeds($x, Lion, True) && Sees($x, BaldEagle, True) >>> Red($x, True) ::: If something needs the lion and the lion sees the bald eagle then it is red.\nNot(Eats($x, Cat, True)) && Round($x, True) >>> Eats(Cat, BaldEagle, True) ::: If the lion is round and the lion"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-272_Q16",
    "context": "The bald eagle likes the dog. The bald eagle sees the dog. The bear likes the dog. The dog is green. The dog sees the bald eagle. The dog sees the bear. The squirrel sees the bear. If someone is kind then they visit the bald eagle. If the dog is nice and the dog is cold then the dog sees the squirrel. If someone visits the bald eagle and they are kind then the bald eagle is green. If someone likes the bald eagle and the bald eagle is green then they like the dog. If someone is rough and they like the bear then they visit the bald eagle. Green people are kind. If someone visits the bald eagle then the bald eagle sees the dog. If the dog sees the squirrel and the squirrel is rough then the squirrel likes the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nVisit($x, $y, bool) ::: Does x visit y?\nLike($x, $y, bool) ::: Does x like y?\nSee($x, $y, bool) ::: Does x see y?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nFacts:\nKind(BaldEagle, True) ::: The bald eagle is kind.\nVisit(BaldEagle, Dog, True) ::: The bald eagle visits the dog.\nSee(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nLike(BaldEagle, Dog, True) ::: The bald eagle likes the dog.\nSee(BaldEagle, Bear, True) ::: The bald eagle sees the bear.\nSee(Dog, BaldEagle, True) ::: The dog sees the bald eagle.\nSee(Dog, Bear, True) ::: The dog sees the bear.\nSee(Squirrel, Bear, True) ::: The squirrel sees the bear.\nRules:\nKind($x, True) >>> Green($x, True) ::: Green people are kind.\nLike(Dog, BaldEagle, True) >>> Kind(Dog, True) ::: If someone likes the bald eagle and the bald eagle is green then they like the dog.\nLike(Dog, BaldEagle, True) >>> Visit(BaldEagle, Dog, True) ::: If someone likes the bald eagle and the bald eagle is green then they like the dog.\nLike(Dog, BaldEagle, True) >>> Visit(BaldEagle, Dog, True) ::: If someone likes the bald eagle and the bald eagle is green then they like the dog.\nLike(Dog, BaldEagle, True) >>> Visit(BaldEagle, Dog, True) ::: If someone likes the bald eagle and the bald eagle is green then they like the dog."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-147_Q5",
    "context": "Charlie is nice. Charlie is rough. Charlie is smart. Charlie is young. Fiona is cold. Fiona is kind. Fiona is rough. Gary is cold. Gary is young. Harry is nice. If something is young then it is smart. If something is cold and round then it is kind. If Gary is kind and Gary is cold then Gary is rough. If Harry is round then Harry is smart. If Fiona is round and Fiona is kind then Fiona is young. If Charlie is cold then Charlie is round. All smart, young things are nice. If something is nice and smart then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nFacts:\nNice(Charlie, True) ::: Charlie is nice.\nRough(Charlie, True) ::: Charlie is rough.\nSmart(Charlie, True) ::: Charlie is smart.\nYoung(Charlie, True) ::: Charlie is young.\nKind(Fiona, True) ::: Fiona is kind.\nCold(Fiona, True) ::: Fiona is cold.\nRough(Fiona, True) ::: Fiona is rough.\nCold(Gary, True) ::: Gary is cold.\nYoung(Gary, True) ::: Gary is young.\nNice(Harry, True) ::: Harry is nice.\nRules:\nYoung($x, True) >>> Smart($x, True) ::: If something is young then it is smart.\nCold($x, True) && Round($x, True) >>> Kind($x, True) ::: If something is cold and round then it is kind.\nGary(Kind($x, True) && Cold($x, True)) >>> Rough($x, True) ::: If Gary is kind and Gary is cold then Gary is rough.\nHarry(Round($x, True)) >>> Smart($x, True) ::: If Harry is round then Harry is smart.\nFiona(Round($x, True) && Kind($x, True)) >>> Young($x, True) ::: If Fiona is round and Fiona is kind then Fiona is young.\nCharlie(Cold($x, True)) >>> Round($x, True) ::: If Charlie is cold then Charlie is round.\nAll(Smart($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-908_Q16",
    "context": "Anne is quiet. Anne is red. Bob is kind. Bob is nice. Bob is quiet. Bob is not red. Bob is round. Charlie is big. Charlie is kind. Fiona is quiet. All round things are nice. All kind, red things are rough. If something is big then it is quiet. If something is rough then it is round. If Charlie is nice and Charlie is big then Charlie is not kind. If something is red then it is kind. If something is round and nice then it is not big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nRed(Anne, True) ::: Anne is red.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, True) ::: Bob is nice.\nQuite(Bob, True) ::: Bob is quiet.\nNot(Red(Bob, True)) ::: Bob is not red.\nRound(Bob, True) ::: Bob is round.\nBig(Charlie, True) ::: Charlie is big.\nKind(Charlie, True) ::: Charlie is kind.\nFiona(Quite, True) ::: Fiona is quiet.\nRules:\nRound($x, True) >>> Nice($x, True) ::: All round things are nice.\nKind($x, True) && Red($x, True) >>> Rough($x, True) ::: All kind, red things are rough.\nBig($x, True) >>> Quite($x, True) ::: If something is big then it is quiet.\nRough($x, True) >>> Round($x, True) ::: If something is rough then it is round.\nNot(Kind(Charlie, True)) && Big(Charlie, True) >>> Not(Kind(Charlie, True)) ::: If Charlie is nice and Charlie is big then Charlie is not kind.\nRed($x, True) >>> Kind($x, True) ::: If something is red then it is kind.\nRound($x, True) && Nice($x, True) >>> Not(Big($x, True)) ::: If something is round and nice then it is not big.\nQuery:"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-948_Q21",
    "context": "The bear is big. The bear likes the cat. The cat eats the bear. The cat likes the squirrel. The mouse does not chase the bear. The squirrel is blue. The squirrel is green. If something likes the cat then the cat eats the mouse. If something chases the squirrel then it eats the cat. If the mouse eats the cat then the cat chases the squirrel. If something eats the mouse then the mouse chases the squirrel. If something chases the squirrel then the squirrel eats the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not like the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nBig(Bear, True) ::: The bear is big.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nLikes(Cat, Squirrel, True) ::: The cat likes the squirrel.\nDoesNotChase(Mouse, Bear, True) ::: The mouse does not chase the bear.\nBlue(Squirrel, True) ::: The squirrel is blue.\nGreen(Squirrel, True) ::: The squirrel is green.\nRules:\nLikes($x, Cat, True) >>> Eats($x, Mouse, True) ::: If something likes the cat then the cat eats the mouse.\nChases($x, Squirrel, True) >>> Eats($x, Cat, True) ::: If something chases the squirrel then it eats the cat.\nEats(Cat, Bear, True) >>> Chases(Cat, Squirrel, True) ::: If the mouse eats the cat then the cat chases the squirrel.\nEats($x, Mouse, True) >>> Chases($x, Squirrel, True) ::: If something eats the mouse then the mouse chases the squirrel.\nChases($x, Squirrel, True) >>> Eats($x, Cat, True) ::: If something chases the squirrel then the squirrel eats the cat.\nQuery:\nDoesNotLike(Bear, Bear, True) ::: The bear does not like the bear.\n------\nProblem:\nThe bear is big. The bear"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-971_Q20",
    "context": "Anne is cold. Anne is red. Anne is rough. Anne is not white. Dave is quiet. Dave is white. Fiona is not quiet. Gary is cold. Gary is quiet. Gary is red. Gary is rough. Gary is white. If Fiona is white and Fiona is green then Fiona is not quiet. All rough things are young. If something is cold then it is red. Young things are cold. If something is quiet and green then it is rough. All quiet things are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nRed(Anne, True) ::: Anne is red.\nRough(Anne, True) ::: Anne is rough.\nNot(White(Anne, True)) ::: Anne is not white.\nQuiet(Dave, True) ::: Dave is quiet.\nWhite(Dave, True) ::: Dave is white.\nNot(Quiet(Fiona, True)) ::: Fiona is not quiet.\nCold(Gary, True) ::: Gary is cold.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nRough(Gary, True) ::: Gary is rough.\nWhite(Gary, True) ::: Gary is white.\nRules:\nYoung($x, True) >>> Rough($x, True) ::: All rough things are young.\nCold($x, True) >>> Red($x, True) ::: If something is cold then it is red.\nYoung($x, True) >>> Cold($x, True) ::: Young things are cold.\nQuiet($x, True) && Green($x, True) >>> Rough($x, True) ::: If something is quiet and green then it is rough.\nAll($x, True) >>> Green($x, True) ::: All quiet things are green.\nQuery:\nWhite(Fiona, True) ::: Fiona is white.\n------\nProblem:\nAnne is cold. Anne is red. Anne is rough. Anne is not white. Dave is quiet. Dave is white. Fiona is not quiet. Gary is cold. Gary is quiet. Gary is red"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-224_Q6",
    "context": "The dog chases the lion. The dog is nice. The lion does not eat the tiger. The lion is not big. The lion visits the tiger. The mouse does not chase the tiger. The mouse is nice. The tiger chases the lion. The tiger eats the dog. The tiger does not eat the mouse. The tiger visits the lion. If something visits the dog and it is kind then it visits the mouse. If something chases the dog then it is not red. If something chases the lion and it visits the dog then it chases the dog. If something chases the lion then it is big. If something eats the lion then it is not cold. If something is big then it visits the dog. If something visits the mouse then the mouse is red. If the tiger visits the dog and the dog is not big then the dog chases the mouse. If something visits the tiger and the tiger is not red then it is not nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not visit the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nIsKind($x, bool) ::: Is x kind?\nIsBig($x, bool) ::: Is x big?\nIsRed($x, bool) ::: Is x red?\nIsCold($x, bool) ::: Is x cold?\nFacts:\nChases(Dog, Lion, True) ::: The dog chases the lion.\nIsKind(Dog, True) ::: The dog is nice.\nNotEats(Lion, Tiger, True) ::: The lion does not eat the tiger.\nNotBig(Lion, True) ::: The lion is not big.\nVisits(Lion, Tiger, True) ::: The lion visits the tiger.\nNotChases(Mouse, Tiger, True) ::: The mouse does not chase the tiger.\nIsKind(Mouse, True) ::: The mouse is nice.\nChases(Tiger, Lion, True) ::: The tiger chases the lion.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nNotEats(Tiger, Mouse, True) ::: The tiger does not eat the mouse.\nVisits(Tiger, Lion, True) ::: The tiger visits the lion.\nRules:\nIf something visits the dog and it is kind then it visits the mouse. ::: If something visits the dog and it is kind then it visits the mouse.\nIf something chases the dog then it is not red. ::: If something chases the dog then it is not red.\nIf something chases the lion and it visits the dog then it chases the dog. ::: If something chases the lion and it visits the dog then it chases the dog.\nIf something chases the lion then it is big. ::: If something chases the lion then it is big.\nIf something eats the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-233_Q11",
    "context": "Dave is furry. Dave is green. Dave is kind. Dave is smart. Erin is rough. Gary is furry. Gary is green. Gary is kind. Harry is not furry. Harry is kind. Harry is white. All furry, big things are green. If something is big and furry then it is green. If something is white and rough then it is furry. If something is smart then it is white. All big, rough things are white. If something is big and furry then it is white. Rough things are big. If something is big then it is rough. All green, furry things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nFacts:\nFurry(Dave, True) ::: Dave is furry.\nGreen(Dave, True) ::: Dave is green.\nKind(Dave, True) ::: Dave is kind.\nSmart(Dave, True) ::: Dave is smart.\nRough(Erin, True) ::: Erin is rough.\nFurry(Gary, True) ::: Gary is furry.\nGreen(Gary, True) ::: Gary is green.\nKind(Gary, True) ::: Gary is kind.\nNot(Furry(Harry, True)) ::: Harry is not furry.\nKind(Harry, True) ::: Harry is kind.\nWhite(Harry, True) ::: Harry is white.\nRules:\nFurry($x, True) && Big($x, True) >>> Green($x, True) ::: All furry, big things are green.\nFurry($x, True) && Big($x, True) >>> White($x, True) ::: If something is big and furry then it is green.\nWhite($x, True) && Rough($x, True) >>> Furry($x, True) ::: If something is white and rough then it is furry.\nSmart($x, True) >>> White($x, True) ::: If something is smart then it is white.\nBig($x, True) && Rough($x, True) >>> White($x, True) ::: All big, rough things are white.\nFurry($x, True) && Big($x, True) >>> White($x, True) ::: If something is big and furry then it is white.\nRough($x, True) >>> Big($x, True) ::: Rough things are big.\nBig($x, True) >>> Rough($x, True) ::: If something is big then it is rough.\nGreen($x, True) && Furry($x, True) >>> Kind($x, True) ::: All green, furry things are kind.\nQuery:\nKind(Erin, True) ::: Erin is kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-878_Q10",
    "context": "Anne is smart. Bob is big. Bob is blue. Bob is rough. Bob is smart. Charlie is smart. Dave is quiet. Blue, round people are rough. If someone is smart and quiet then they are young. Smart people are quiet. If someone is round then they are blue. If Dave is big then Dave is quiet. If someone is blue then they are young. All rough, young people are round. Smart people are rough. Blue, round people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nRough($x, bool) ::: Is x rough?\nFacts:\nSmart(Anne, True) ::: Anne is smart.\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nRound(Bob, True) ::: Bob is round.\nSmart(Bob, True) ::: Bob is smart.\nSmart(Charlie, True) ::: Charlie is smart.\nQuiet(Dave, True) ::: Dave is quiet.\nRound($x, True) >>> Rough($x, True) ::: Blue, round people are rough.\nSmart($x, True) && Quiet($x, True) >>> Young($x, True) ::: If someone is smart and quiet then they are young.\nSmart($x, True) >>> Quiet($x, True) ::: Smart people are quiet.\nBlue($x, True) >>> Young($x, True) ::: If someone is blue then they are young.\nBig($x, True) >>> Quiet($x, True) ::: If Dave is big then Dave is quiet.\nRound($x, True) >>> Blue($x, True) ::: If someone is round then they are blue.\nSmart($x, True) >>> Rough($x, True) ::: Smart people are rough.\nBlue($x, True) >>> Round($x, True) ::: Blue, round people are big.\nQuery:\nNot(Blue(Charlie, True)) ::: Charlie is not blue.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is quiet. Bob is rough. Bob is white. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is rough. Charlie is white. Dave is furry. Dave is green. Dave is quiet. Dave is rough. Dave is white. Erin is furry. Erin is green. Erin is quiet. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is rough. Fiona is white. Harry is furry."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-483_Q10",
    "context": "The bear does not need the lion. The bear needs the mouse. The bear visits the cat. The bear does not visit the lion. The bear visits the mouse. The cat likes the lion. The lion is green. The lion visits the bear. The lion visits the cat. The lion visits the mouse. The mouse needs the lion. The mouse visits the bear. If something visits the lion and the lion is not blue then the lion is not green. If something is green then it likes the mouse. If something likes the mouse then the mouse needs the lion. If something visits the bear then it is not nice. If something likes the cat then it needs the bear. If something is young and it visits the mouse then it likes the cat. If something visits the cat and it is not nice then it is young. If something needs the bear then it needs the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not need the bear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nIs($x, $y, bool) ::: Is x y?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nFacts:\nNeeds(Bear, Lion, True) ::: The bear needs the lion.\nNeeds(Bear, Mouse, True) ::: The bear needs the mouse.\nVisits(Bear, Cat, True) ::: The bear visits the cat.\nVisits(Bear, Lion, False) ::: The bear does not visit the lion.\nVisits(Bear, Mouse, True) ::: The bear visits the mouse.\nLikes(Cat, Lion, True) ::: The cat likes the lion.\nIs(Lion, Green, True) ::: The lion is green.\nVisits(Lion, Bear, True) ::: The lion visits the bear.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nVisits(Lion, Mouse, True) ::: The lion visits the mouse.\nNeeds(Mouse, Lion, True) ::: The mouse needs the lion.\nVisits(Mouse, Bear, True) ::: The mouse visits the bear.\nNot(Is(Lion, Blue, True), True) ::: If something visits the lion and the lion is not blue then the lion is not green.\nLikes(Mouse, Lion, True) ::: If something is green then it likes the mouse.\nNeeds(Mouse, Lion, True) ::: If something likes the mouse then the mouse needs the lion.\nNot(Is(Lion, Green, True), True) ::: If something visits the bear then it is not nice.\nLikes(Cat, Bear, True) ::: If something likes the cat then it needs the bear.\nYoung(Mouse, True) ::: If something visits the mouse and it is not nice then it is young.\nNot(Is(Mouse, Nice, True), True) ::: If something needs the bear then it needs the mouse.\nRules:\nNot(Is(Lion, Green, True), True) >>> Is(Lion, Blue, True) ::: If something visits the lion and the lion is not blue then the lion is not green.\nLikes(Mouse, Lion, True"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-242_Q7",
    "context": "The bald eagle chases the cow. The bald eagle is not kind. The bald eagle is round. The bear chases the tiger. The cow is red. The cow is round. The tiger sees the cow. If someone is young and they see the bald eagle then they see the bear. If someone chases the bear then the bear is young. If someone chases the tiger then they are rough. If someone chases the tiger then the tiger eats the bear. If the tiger is round and the tiger is kind then the tiger chases the bear. If someone is young then they see the bald eagle. If someone chases the cow then they chase the bear. If someone sees the bear then the bear chases the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear sees the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nFacts:\nChases(BaldEagle, Cow, True) ::: The bald eagle chases the cow.\nKind(BaldEagle, False) ::: The bald eagle is not kind.\nRound(BaldEagle, True) ::: The bald eagle is round.\nChases(Bear, Tiger, True) ::: The bear chases the tiger.\nRed(Cow, True) ::: The cow is red.\nRound(Cow, True) ::: The cow is round.\nSees(Bear, Cow, True) ::: The bear sees the cow.\nRules:\nYoung($x, True) >>> Sees($x, BaldEagle, True) ::: If someone is young then they see the bald eagle.\nChases($x, Bear, True) >>> Young($x, True) ::: If someone chases the bear then the bear is young.\nChases($x, Tiger, True) >>> Rough($x, True) ::: If someone chases the tiger then they are rough.\nChases($x, Tiger, True) >>> Eats($x, Bear, True) ::: If someone chases the tiger then the tiger eats the bear.\nRound($x, True) && Kind($x, True) >>> Chases($x, Bear, True) ::: If someone is round and kind then the tiger chases the bear.\nChases($x, Cow, True) >>> Chases($x, Bear, True) ::: If someone chases the cow then they chase the bear.\nSees($x, Bear, True) >>> Chases($x, Cow, True) ::: If someone sees the bear then the bear chases the cow.\nQuery:\nSees(Bear, BaldEagle, True) ::: The bear sees the bald eagle.\n------\nProblem:\nThe bear is furry. The bear is green. The bear is red. The bear is rough. The bear is white. The bear is young. The bear is quiet. The bear is kind. The bear is round. The bear is not furry. The bear is not green. The bear is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-523_Q7",
    "context": "Anne is green. Anne is young. Charlie is blue. Charlie is green. Charlie is white. Dave is white. Erin is white. If Dave is kind and Dave is white then Dave is blue. If someone is white then they are nice. If someone is white then they are nice. All nice, green people are young. If someone is green then they are quiet. Nice people are kind. If Dave is blue then Dave is white. If Anne is nice and Anne is not white then Anne is green. If Dave is white and Dave is blue then Dave is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nYoung(Anne, True) ::: Anne is young.\nBlue(Charlie, True) ::: Charlie is blue.\nGreen(Charlie, True) ::: Charlie is green.\nWhite(Charlie, True) ::: Charlie is white.\nWhite(Dave, True) ::: Dave is white.\nWhite(Erin, True) ::: Erin is white.\nRules:\nKind($x, True) >>> White($x, True) ::: If Dave is kind and Dave is white then Dave is blue.\nWhite($x, True) >>> Nice($x, True) ::: If someone is white then they are nice.\nWhite($x, True) >>> Nice($x, True) ::: If someone is white then they are nice.\nNice($x, True) >>> Young($x, True) ::: All nice, green people are young.\nGreen($x, True) >>> Quiet($x, True) ::: If someone is green then they are quiet.\nNice($x, True) >>> Kind($x, True) ::: Nice people are kind.\nBlue($x, True) >>> White($x, True) ::: If Dave is blue then Dave is white.\nWhite($x, True) && Green($x, True) >>> Nice($x, True) ::: If Anne is nice and Anne is not white then Anne is green.\nWhite($x, True) && Blue($x, True) >>> Green($x, True) ::: If Dave is white and Dave is blue then Dave is green.\nQuery:\nBlue(Dave, True) ::: Dave is blue.\n------\nProblem:\nAnne is green. Anne is young. Charlie is blue. Charlie is green. Charlie is white. Dave is white. Erin is white. If Dave is kind and Dave is white then Dave is blue. If someone is white then they are nice. If someone is white then they are nice. All nice, green people are young. If someone is green then they are quiet. Nice people are kind. If Dave is blue then Dave is white. If Anne is nice and Anne is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-423_Q6",
    "context": "Anne is cold. Anne is furry. Anne is not quiet. Charlie is kind. Fiona is not quiet. Fiona is young. Harry is cold. Kind things are furry. Nice things are big. Furry things are nice. If something is young and furry then it is quiet. If Anne is quiet then Anne is cold. Kind, big things are young. If something is kind and not furry then it is not young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nQuite(Anne, False) ::: Anne is not quiet.\nKind(Charlie, True) ::: Charlie is kind.\nQuite(Fiona, False) ::: Fiona is not quiet.\nYoung(Fiona, True) ::: Fiona is young.\nCold(Harry, True) ::: Harry is cold.\nRules:\nKind($x, True) >>> Furry($x, True) ::: Kind things are furry.\nNice($x, True) >>> Big($x, True) ::: Nice things are big.\nFurry($x, True) >>> Nice($x, True) ::: Furry things are nice.\nYoung($x, True) && Furry($x, True) >>> Quite($x, True) ::: If something is young and furry then it is quiet.\nQuite(Anne, True) >>> Cold($x, True) ::: If Anne is quiet then Anne is cold.\nKind($x, True) && Big($x, True) >>> Young($x, True) ::: Kind, big things are young.\nKind($x, True) && Not(Furry($x, True)) >>> Not(Young($x, True)) ::: If something is kind and not furry then it is not young.\nQuery:\nNot(Big(Anne, True)) ::: Anne is not big.\n------\nProblem:\nAnne is furry. Anne is not quiet. Anne is not red. Anne is not white. Anne is not young. Anne is not green. Anne is not rough. Anne is not blue. Anne is not cold. Anne is not kind. Anne is not big. Anne is not nice. Anne is not black. Anne is not brown. Anne is not yellow. Anne is not purple. Anne is not orange. Anne is not pink. Anne is not grey. Anne is not silver. Anne is not gold. Anne is not platinum. Anne is not diamond. Anne is not ruby. Anne is not emerald. Anne is not sapphire. Anne is not top"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-76_Q8",
    "context": "The bear eats the cow. The bear is blue. The cow eats the squirrel. The cow is young. The cow visits the lion. The lion is red. The lion is young. The lion visits the cow. The squirrel sees the bear. The squirrel visits the bear. If something sees the cow and the cow eats the squirrel then the cow is red. If the cow eats the bear and the bear sees the cow then the bear is blue. If something is blue and it sees the squirrel then the squirrel is round. If something sees the squirrel then the squirrel eats the cow. If the lion sees the cow and the cow visits the squirrel then the cow eats the squirrel. If something is red then it eats the lion. If the bear visits the squirrel and the bear is round then the bear sees the cow. If something eats the lion then it sees the cow. If something is young and cold then it eats the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(Bear, Cow, True) ::: The bear eats the cow.\nIs(Bear, Blue, True) ::: The bear is blue.\nEats(Cow, Squirrel, True) ::: The cow eats the squirrel.\nIs(Cow, Young, True) ::: The cow is young.\nVisits(Cow, Lion, True) ::: The cow visits the lion.\nIs(Lion, Red, True) ::: The lion is red.\nIs(Lion, Young, True) ::: The lion is young.\nVisits(Lion, Cow, True) ::: The lion visits the cow.\nSees(Squirrel, Bear, True) ::: The squirrel sees the bear.\nVisits(Squirrel, Bear, True) ::: The squirrel visits the bear.\nEats(Cow, Squirrel, True) >>> Is(Cow, Red, True) ::: If something sees the cow and the cow eats the squirrel then the cow is red.\nEats(Bear, Cow) && Sees(Cow, Bear) >>> Is(Bear, Blue, True) ::: If the bear eats the cow and the bear sees the cow then the bear is blue.\nIs(Squirrel, Round, True) >>> Sees(Squirrel, Bear) ::: If something is round and it sees the squirrel then the squirrel is round.\nSees(Squirrel, Bear) >>> Eats(Squirrel, Cow) ::: If something sees the squirrel then the squirrel eats the cow.\nVisits(Cow, Squirrel) && Visits(Cow, Lion) >>> Eats(Cow, Squirrel) ::: If the cow visits the squirrel and the cow visits the lion then the cow eats the squirrel.\nIs(Lion, Red) >>> E"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-604_Q14",
    "context": "The cat chases the dog. The cat chases the mouse. The cat chases the tiger. The cat eats the dog. The dog is big. The dog sees the cat. The mouse does not eat the cat. The mouse eats the tiger. The mouse does not see the tiger. The tiger eats the dog. The tiger is nice. If something is young and it eats the tiger then it eats the dog. If something sees the mouse and it eats the mouse then the mouse sees the tiger. If something sees the mouse then it is big. If something chases the dog then the dog chases the cat. If something chases the dog then it chases the cat. If something chases the tiger and the tiger eats the cat then the cat sees the mouse. If something sees the dog and it chases the tiger then the tiger chases the dog. If the tiger is green and the tiger is big then the tiger sees the dog. If something chases the cat then it sees the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse eats the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Cat, Dog, True) ::: The cat chases the dog.\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nChases(Cat, Tiger, True) ::: The cat chases the tiger.\nEats(Cat, Dog, True) ::: The cat eats the dog.\nBig(Dog, True) ::: The dog is big.\nSees(Cat, Dog, True) ::: The cat sees the dog.\nDoesNotEat(Mouse, Cat, True) ::: The mouse does not eat the cat.\nEats(Mouse, Tiger, True) ::: The mouse eats the tiger.\nDoesNotSee(Mouse, Tiger, True) ::: The mouse does not see the tiger.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nNice(Tiger, True) ::: The tiger is nice.\nYoung($x, True) >>> Eats($x, Tiger, True) ::: If something is young and it eats the tiger then it eats the dog.\nSees($x, Mouse) >>> Eats($x, Mouse, True) ::: If something sees the mouse and it eats the mouse then the mouse sees the tiger.\nSees($x, Mouse) >>> Big($x, True) ::: If something sees the mouse then it is big.\nChases($x, Dog) >>> Chases($x, Cat, True) ::: If something chases the dog then the dog chases the cat.\nChases($x, Dog) >>> Chases($x, Cat, True) ::: If something chases the dog then it chases the cat.\nChases($x, Tiger) >>> Eats($Tiger, Cat, True) ::: If something chases the tiger and the tiger eats the cat then the cat sees the mouse.\nSees($x, Dog) >>> Chases($x, Tiger, True) ::: If the tiger is green and the tiger is big then"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1210_Q8",
    "context": "Bob is not kind. Bob is smart. Dave is not blue. Dave is cold. Dave is kind. Dave is not red. Dave is smart. Dave is white. Fiona is kind. Fiona is smart. Fiona is white. Harry is red. If someone is red then they are kind. If Harry is kind then Harry is blue. If Harry is kind and Harry is not red then Harry is not blue. If Fiona is not kind then Fiona is blue. All young people are smart. All red, blue people are smart. If Harry is young and Harry is smart then Harry is white. If someone is smart and blue then they are young. If someone is blue and not red then they are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotKind(Bob, True) ::: Bob is not kind.\nSmart(Bob, True) ::: Bob is smart.\nNotBlue(Dave, True) ::: Dave is not blue.\nCold(Dave, True) ::: Dave is cold.\nKind(Dave, True) ::: Dave is kind.\nNotRed(Dave, True) ::: Dave is not red.\nSmart(Dave, True) ::: Dave is smart.\nWhite(Dave, True) ::: Dave is white.\nKind(Fiona, True) ::: Fiona is kind.\nSmart(Fiona, True) ::: Fiona is smart.\nWhite(Fiona, True) ::: Fiona is white.\nRed(Harry, True) ::: Harry is red.\nRules:\nIf Harry is kind then Harry is blue ::: If Harry is kind then Harry is blue.\nIf Harry is kind and Harry is not red then Harry is not blue ::: If Harry is kind and Harry is not red then Harry is not blue.\nIf Fiona is not kind then Fiona is blue ::: If Fiona is not kind then Fiona is blue.\nAll young people are smart ::: All young people are smart.\nAll red, blue people are smart ::: All red, blue people are smart.\nIf Harry is young and Harry is smart then Harry is white ::: If Harry is young and Harry is smart then Harry is white.\nIf someone is smart and blue then they are young ::: If someone is smart and blue then they are young.\nIf someone is blue and not red then they are young ::: If someone is blue and not red then they are young.\nQuery:\nNotSmart(Harry, True) ::: Harry is not smart.\n------\nProblem:\nBob is not kind. Bob is smart. Dave is not blue. Dave is cold. Dave is kind. Dave is not red. Dave is smart. Dave is white. Fiona is kind. Fiona is smart. Fiona is white. Harry is red. If someone is red then they are kind. If Harry is kind then Harry is blue. If Harry is kind and Harry is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-878_Q5",
    "context": "Anne is smart. Bob is big. Bob is blue. Bob is rough. Bob is smart. Charlie is smart. Dave is quiet. Blue, round people are rough. If someone is smart and quiet then they are young. Smart people are quiet. If someone is round then they are blue. If Dave is big then Dave is quiet. If someone is blue then they are young. All rough, young people are round. Smart people are rough. Blue, round people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nRough($x, bool) ::: Is x rough?\nFacts:\nSmart(Anne, True) ::: Anne is smart.\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nRound(Bob, True) ::: Bob is round.\nSmart(Bob, True) ::: Bob is smart.\nSmart(Charlie, True) ::: Charlie is smart.\nQuiet(Dave, True) ::: Dave is quiet.\nRound($x, True) >>> Rough($x, True) ::: Blue, round people are rough.\nSmart($x, True) && Quiet($x, True) >>> Young($x, True) ::: If someone is smart and quiet then they are young.\nSmart($x, True) >>> Quiet($x, True) ::: Smart people are quiet.\nBlue($x, True) >>> Young($x, True) ::: If someone is blue then they are young.\nBig($x, True) >>> Quiet($x, True) ::: If Dave is big then Dave is quiet.\nRound($x, True) >>> Blue($x, True) ::: If someone is round then they are blue.\nSmart($x, True) >>> Rough($x, True) ::: Smart people are rough.\nBlue($x, True) >>> Round($x, True) ::: Blue, round people are big.\nQuery:\nYoung(Charlie, True) ::: Charlie is young.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is red. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is quiet. Bob is red. Bob is rough. Bob is white. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is red. Charlie is rough. Charlie is white. Dave is furry. Dave is green. Dave is quiet. Dave is red. Dave is rough. Dave is white. Erin is furry. Erin is green. Erin is quiet. Erin is red. Erin is rough. Erin is white. Fiona is furry. Fiona is green. F"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-877_Q16",
    "context": "Anne is cold. Bob is cold. Bob is young. Fiona is big. Fiona is young. Harry is big. Harry is blue. Harry is cold. Harry is furry. Harry is quiet. Harry is red. Harry is young. Cold, young people are red. Furry people are young. Young, big people are blue. Red, big people are quiet. Quiet people are furry. Blue people are red. Young people are big. All quiet, big people are furry. If someone is blue and furry then they are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nQuiet($x, bool) ::: Is x quiet?\nFurry($x, bool) ::: Is x furry?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nCold(Bob, True) ::: Bob is cold.\nYoung(Bob, True) ::: Bob is young.\nBig(Fiona, True) ::: Fiona is big.\nYoung(Fiona, True) ::: Fiona is young.\nBig(Harry, True) ::: Harry is big.\nBlue(Harry, True) ::: Harry is blue.\nCold(Harry, True) ::: Harry is cold.\nFurry(Harry, True) ::: Harry is furry.\nQuiet(Harry, True) ::: Harry is quiet.\nRed(Harry, True) ::: Harry is red.\nYoung(Harry, True) ::: Harry is young.\nRules:\nYoung($x, True) >>> Red($x, True) ::: Cold, young people are red.\nFurry($x, True) >>> Young($x, True) ::: Furry people are young.\nYoung($x, True) >>> Big($x, True) ::: Young, big people are blue.\nRed($x, True) >>> Big($x, True) ::: Red, big people are quiet.\nQuiet($x, True) >>> Furry($x, True) ::: Quiet people are furry.\nBlue($x, True) && Furry($x, True) >>> Cold($x, True) ::: If someone is blue and furry then they are cold.\nAll($x, True) >>> Young($x, True) ::: Young people are big.\nQuiet($x, True) && Big($x, True) >>> Furry($x, True) ::: All quiet, big people are furry.\nQuery:\nQuiet(Anne, True) ::: Anne is quiet.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-861_Q3",
    "context": "The cat needs the dog. The dog is kind. The dog needs the rabbit. The rabbit eats the dog. The rabbit is green. The tiger chases the rabbit. The tiger is big. If something is nice and it eats the tiger then it needs the dog. If something chases the cat then it eats the cat. If the dog chases the tiger then the tiger needs the rabbit. If the rabbit chases the tiger then the rabbit chases the cat. If something chases the cat then the cat is kind. If something eats the dog then it chases the cat. If something is rough then it eats the dog. If something is kind then it is rough. If something eats the rabbit and the rabbit is big then it is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit chases the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nKind($x, bool) ::: Is x kind?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nFacts:\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nKind(Dog, True) ::: The dog is kind.\nNeeds(Dog, Rabbit, True) ::: The dog needs the rabbit.\nEats(Rabbit, Dog, True) ::: The rabbit eats the dog.\nGreen(Rabbit, True) ::: The rabbit is green.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nBig(Tiger, True) ::: The tiger is big.\nRules:\nNice($x, True) && Eats($x, Tiger, True) >>> Needs($x, Dog, True) ::: If something is nice and it eats the tiger then it needs the dog.\nChases($x, Cat, True) >>> Eats($x, Cat, True) ::: If something chases the cat then it eats the cat.\nDog($x, True) && Chases($x, Tiger, True) >>> Rabbit($y, True) && Needs($y, Rabbit, True) ::: If the dog chases the tiger then the tiger needs the rabbit.\nChases($x, Rabbit, True) >>> Chases($x, Cat, True) ::: If the rabbit chases the tiger then the rabbit chases the cat.\nChases($x, Cat, True) >>> Kind($x, True) ::: If something chases the cat then the cat is kind.\nEats($x, Dog, True) >>> Chases($x, Cat, True) ::: If something eats the dog then it chases the cat.\nRough($x, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-977_Q5",
    "context": "The cat is young. The cat visits the mouse. The cow is cold. The cow likes the lion. The lion is cold. The lion likes the cat. The lion needs the mouse. The lion visits the mouse. The mouse is cold. The mouse is red. The mouse is young. The mouse likes the cat. The mouse needs the cat. The mouse needs the cow. If something needs the cat and the cat is red then it is blue. Blue things are red. If something likes the mouse and the mouse likes the cat then the cat is blue. If something is cold and red then it likes the mouse. If something needs the cow and it is cold then it is young. If something is nice then it visits the lion. If something needs the lion then it likes the cat. If something visits the cat and it likes the lion then the cat is blue. If something is cold and blue then it needs the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nCold($x, bool) ::: Is x cold?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nFacts:\nYoung(Cat, True) ::: The cat is young.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nCold(Cow, True) ::: The cow is cold.\nLikes(Cow, Lion, True) ::: The cow likes the lion.\nCold(Lion, True) ::: The lion is cold.\nLikes(Lion, Cat, True) ::: The lion likes the cat.\nNeeds(Lion, Mouse, True) ::: The lion needs the mouse.\nVisits(Lion, Mouse, True) ::: The lion visits the mouse.\nCold(Mouse, True) ::: The mouse is cold.\nRed(Mouse, True) ::: The mouse is red.\nYoung(Mouse, True) ::: The mouse is young.\nLikes(Mouse, Cat, True) ::: The mouse likes the cat.\nNeeds(Mouse, Cat, True) ::: The mouse needs the cat.\nNeeds(Mouse, Cow, True) ::: The mouse needs the cow.\nIfSomethingNeedsCatAndCatIsRedThenItIsBlue($x, $y, $z) ::: If something needs the cat and the cat is red then it is blue.\nBlueThingsAreRed($x, $y, $z) ::: Blue things are red.\nIfSomethingLikesMouseAndMouseLikesCatThenCatIsBlue($x, $y, $z) ::: If something likes the mouse and the mouse likes the cat then the cat is blue.\nIfSomethingIsColdAndRedThenItLikesMouse($x, $y, $z) ::: If something is cold and red then it likes the mouse.\nIfSomethingNeedsCowAndIt"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-195_Q8",
    "context": "The bald eagle chases the cat. The bald eagle is not green. The cat eats the lion. The cat is not cold. The cat is not green. The cat is red. The dog does not chase the lion. The dog is red. The lion chases the dog. The lion is not red. If someone is blue then they like the lion. If someone likes the bald eagle then they like the cat. If someone chases the dog then they eat the dog. If someone eats the dog then they like the bald eagle. If someone chases the cat then they eat the bald eagle. If someone is green and rough then they chase the lion. If someone eats the lion then they do not eat the cat. If someone likes the cat and the cat is not green then the cat is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not like the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nIs($x, $y, bool) ::: Is x y?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nIsGreen($x, bool) ::: Is x green?\nIsRed($x, bool) ::: Is x red?\nIsBlue($x, bool) ::: Is x blue?\nIsCold($x, bool) ::: Is x cold?\nIsRough($x, bool) ::: Is x rough?\nFacts:\nChases(BaldEagle, Cat, True) ::: The bald eagle chases the cat.\nIsNotGreen(BaldEagle, True) ::: The bald eagle is not green.\nEats(Cat, Lion, True) ::: The cat eats the lion.\nIsNotCold(Cat, True) ::: The cat is not cold.\nIsNotGreen(Cat, True) ::: The cat is not green.\nIsRed(Cat, True) ::: The cat is red.\nDoesNotChase(Dog, Lion, True) ::: The dog does not chase the lion.\nIsRed(Dog, True) ::: The dog is red.\nChases(Dog, Lion, True) ::: The lion chases the dog.\nIsNotRed(Lion, True) ::: The lion is not red.\nLikes(BaldEagle, Cat, True) ::: If someone is blue then they like the lion.\nLikes(BaldEagle, Cat, True) ::: If someone likes the bald eagle then they like the cat.\nEats(Dog, Lion, True) ::: If someone chases the dog then they eat the dog.\nEats(Dog, Lion, True) ::: If someone eats the dog then they like the bald eagle.\nChases(Cat, BaldEagle, True) ::: If someone chases the cat then they eat the bald eagle.\nIsGreenAndRough(Lion, True) ::: If someone is green and rough then they chase the lion.\nDoesNotEat(Lion, Cat, True) ::: If someone e"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-455_Q24",
    "context": "The bald eagle chases the squirrel. The bald eagle does not eat the lion. The bald eagle eats the squirrel. The bald eagle does not see the rabbit. The lion does not chase the rabbit. The lion is kind. The rabbit chases the bald eagle. The rabbit eats the bald eagle. The rabbit is big. The rabbit is cold. The rabbit sees the squirrel. The squirrel is blue. The squirrel is cold. The squirrel is kind. If something chases the rabbit then it is kind. If something sees the lion then it chases the rabbit. If the rabbit sees the squirrel and the squirrel eats the rabbit then the rabbit is green. If something eats the lion then the lion chases the squirrel. If something eats the rabbit then the rabbit sees the lion. If something is kind then it eats the rabbit. If something sees the lion and it does not eat the lion then it eats the bald eagle. If something eats the squirrel and the squirrel eats the bald eagle then the squirrel is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion sees the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(BaldEagle, Squirrel, True) ::: The bald eagle chases the squirrel.\nEats(BaldEagle, Lion, False) ::: The bald eagle does not eat the lion.\nEats(BaldEagle, Squirrel, True) ::: The bald eagle eats the squirrel.\nSees(BaldEagle, Rabbit, False) ::: The bald eagle does not see the rabbit.\nChases(Lion, Rabbit, False) ::: The lion does not chase the rabbit.\nKind(Lion, True) ::: The lion is kind.\nChases(Rabbit, BaldEagle, True) ::: The rabbit chases the bald eagle.\nEats(Rabbit, BaldEagle, True) ::: The rabbit eats the bald eagle.\nBig(Rabbit, True) ::: The rabbit is big.\nCold(Rabbit, True) ::: The rabbit is cold.\nSees(Rabbit, Squirrel, True) ::: The rabbit sees the squirrel.\nBlue(Squirrel, True) ::: The squirrel is blue.\nCold(Squirrel, True) ::: The squirrel is cold.\nKind(Squirrel, True) ::: The squirrel is kind.\nRules:\nChases($x, $y, True) >>> Kind($x, True) ::: If something chases the rabbit then it is kind.\nSees($x, $y, True) >>> Chases($x, Rabbit, True) ::: If something sees the lion then it chases the rabbit.\nSees($x, $y, True) && Eats($x, $y, True) && Eats($y, $z, True"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-54_Q5",
    "context": "Anne is kind. Anne is nice. Anne is quiet. Anne is round. Bob is not round. Dave is furry. Erin is nice. If something is nice then it is quiet. All nice, kind things are not young. If something is furry then it is cold. Quiet, nice things are cold. If Erin is young then Erin is not kind. Furry, quiet things are kind. All cold things are kind. If Erin is young then Erin is not quiet. If something is kind and not young then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nNice(Anne, True) ::: Anne is nice.\nQuiet(Anne, True) ::: Anne is quiet.\nRound(Anne, True) ::: Anne is round.\nNot(Round(Bob, True)) ::: Bob is not round.\nFurry(Dave, True) ::: Dave is furry.\nNice(Erin, True) ::: Erin is nice.\nRules:\nNice($x, True) >>> Quiet($x, True) ::: If something is nice then it is quiet.\nAll(Nice($x, True), Kind($x, True)) >>> Not(Young($x, True)) ::: All nice, kind things are not young.\nFurry($x, True) >>> Cold($x, True) ::: If something is furry then it is cold.\nQuiet($x, True) && Nice($x, True) >>> Cold($x, True) ::: Quiet, nice things are cold.\nIf(Erin, Young($x, True)) >>> Not(Kind($x, True)) ::: If Erin is young then Erin is not kind.\nFurry($x, True) && Quiet($x, True) >>> Kind($x, True) ::: Furry, quiet things are kind.\nAll(Cold($x, True), Kind($x, True)) ::: All cold things are kind.\nIf(Erin, Young($x, True)) >>> Not(Quiet($x, True)) ::: If Erin is young then Erin is not quiet.\nKind($x, True) && Not(Young($x, True)) >>> Round($x, True) ::: If something is kind and not young then it is round.\nQuery:\nCold(Erin, True) ::: Erin is cold.\n------\nProblem:"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-949_Q22",
    "context": "The bear is green. The bear likes the cat. The bear likes the dog. The bear visits the dog. The cat is young. The cat sees the bear. The cat sees the dog. The cat visits the bear. The cat visits the mouse. The dog is round. The dog likes the bear. The dog likes the mouse. The dog visits the mouse. The mouse is big. The mouse is cold. The mouse is round. If something visits the mouse and the mouse visits the dog then it is cold. If something likes the cat then it visits the dog. If something is cold then it likes the cat. If something is green then it sees the dog. If something likes the mouse then it sees the cat. If something is green and cold then it likes the cat. If something is big and it visits the bear then the bear is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear sees the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nGreen(Bear, True) ::: The bear is green.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nLikes(Bear, Dog, True) ::: The bear likes the dog.\nVisits(Bear, Dog, True) ::: The bear visits the dog.\nYoung(Cat, True) ::: The cat is young.\nSees(Cat, Bear, True) ::: The cat sees the bear.\nSees(Cat, Dog, True) ::: The cat sees the dog.\nVisits(Cat, Bear, True) ::: The cat visits the bear.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nRound(Dog, True) ::: The dog is round.\nLikes(Dog, Bear, True) ::: The dog likes the bear.\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nVisits(Dog, Mouse, True) ::: The dog visits the mouse.\nBig(Mouse, True) ::: The mouse is big.\nCold(Mouse, True) ::: The mouse is cold.\nRound(Mouse, True) ::: The mouse is round.\nRules:\nVisits($x, $y, True) && Visits($y, $z, True) >>> $x sees $z ::: If something visits the mouse and the mouse visits the dog then it is cold.\nLikes($x, Cat, True) >>> Visits($x, Dog, True) ::: If something likes the cat then it visits the dog.\nCold($x, True) >>> Likes($x, Cat, True) ::: If something is cold then it likes the cat.\nGreen($x"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-587_Q8",
    "context": "The bald eagle chases the squirrel. The bald eagle eats the bear. The bear does not eat the lion. The bear visits the lion. The lion does not eat the bald eagle. The squirrel is red. The squirrel visits the bald eagle. If something is round then it eats the squirrel. If something is blue and green then it chases the bald eagle. If something eats the squirrel then the squirrel is green. If the bald eagle is round then the bald eagle chases the lion. If something is blue then it chases the squirrel. All red things are blue. If something chases the lion then it is blue. Blue, red things are round. If something visits the bald eagle and it is not round then it visits the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not eat the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nChases(BaldEagle, Squirrel, True) ::: The bald eagle chases the squirrel.\nEats(BaldEagle, Bear, True) ::: The bald eagle eats the bear.\nNot(Eats(Bear, Lion, True)) ::: The bear does not eat the lion.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nNot(Eats(Lion, BaldEagle, True)) ::: The lion does not eat the bald eagle.\nRed(Squirrel, True) ::: The squirrel is red.\nVisits(Squirrel, BaldEagle, True) ::: The squirrel visits the bald eagle.\nIf(SomethingIsRound, SomethingEatsSquirrel, True) ::: If something is round then it eats the squirrel.\nIf(SomethingIsBlueAndGreen, SomethingChasesBaldEagle, True) ::: If something is blue and green then it chases the bald eagle.\nIf(SomethingEatsSquirrel, SquirrelIsGreen, True) ::: If something eats the squirrel then the squirrel is green.\nIf(BaldEagleIsRound, BaldEagleChasesLion, True) ::: If the bald eagle is round then the bald eagle chases the lion.\nIf(SomethingIsBlue, SomethingChasesSquirrel, True) ::: If something chases the lion then it is blue.\nBlueAndRed(Something, True) >>> Round(Something, True) ::: Blue, red things are round.\nIf(SomethingVisitsBaldEagleAndNotRound, SomethingVisitsLion, True) ::: If something visits the bald eagle and it is not round then it visits the lion.\nQuery"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1208_Q1",
    "context": "Anne is cold. Anne is not green. Anne is not kind. Anne is quiet. Anne is round. Bob is kind. Bob is round. Charlie is cold. Charlie is quiet. Charlie is round. Erin is furry. If something is quiet then it is rough. Cold things are round. If something is green then it is quiet. All cold things are quiet. Green things are quiet. If something is kind and green then it is furry. Furry things are green. If Bob is kind then Bob is not rough. If something is rough and green then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nGreen(Anne, False) ::: Anne is not green.\nKind(Anne, False) ::: Anne is not kind.\nQuiet(Anne, True) ::: Anne is quiet.\nRound(Anne, True) ::: Anne is round.\nFurry(Erin, False) ::: Erin is not furry.\nKind(Bob, True) ::: Bob is kind.\nRound(Bob, True) ::: Bob is round.\nCold(Charlie, True) ::: Charlie is cold.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRound(Charlie, True) ::: Charlie is round.\nRules:\nQuiet($x, True) >>> Rough($x, True) ::: If something is quiet then it is rough.\nCold($x, True) >>> Round($x, True) ::: Cold things are round.\nGreen($x, True) >>> Quiet($x, True) ::: If something is green then it is quiet.\nQuiet($x, True) >>> Cold($x, True) ::: All cold things are quiet.\nGreen($x, True) >>> Quiet($x, True) ::: Green things are quiet.\nKind($x, True) && Green($x, True) >>> Furry($x, True) ::: If Bob is kind then Bob is not rough.\nFurry($x, True) >>> Green($x, True) ::: If something is furry and green then it is kind.\nGreen($x, True) >>> Furry($x, True) ::: Furry things are green.\nRough($x, True) && Green($x, True) >>> Cold($x, True) ::: If something is rough and green then it is cold."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1028_Q10",
    "context": "Bob is blue. Bob is round. Erin is nice. Erin is round. Erin is smart. Gary is not young. Harry is blue. Harry is furry. Harry is nice. Harry is round. All smart things are furry. Young, nice things are furry. If something is furry then it is young. Round, nice things are not quiet. All round things are smart. If Bob is young then Bob is nice. If something is smart and not young then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nRound(Bob, True) ::: Bob is round.\nNice(Erin, True) ::: Erin is nice.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nNot(Young(Gary, True)) ::: Gary is not young.\nBlue(Harry, True) ::: Harry is blue.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nRound(Harry, True) ::: Harry is round.\nRules:\nSmart($x, True) >>> Furry($x, True) ::: All smart things are furry.\nYoung($x, True) && Nice($x, True) >>> Furry($x, True) ::: Young, nice things are furry.\nFurry($x, True) >>> Young($x, True) ::: If something is furry then it is young.\nRound($x, True) && Nice($x, True) >>> Not(Quiet($x, True)) ::: Round, nice things are not quiet.\nAll($x, Round($x, True)) >>> Smart($x, True) ::: All round things are smart.\nYoung($x, True) && Nice($x, True) >>> Not(Blue($x, True)) ::: If Bob is young then Bob is nice.\nSmart($x, True) && Not(Young($x, True)) >>> Blue($x, True) ::: If something is smart and not young then it is blue.\nQuery:\nNot(Nice(Bob, True)) ::: Bob is not nice.\n------\nProblem:\nBob is blue. Bob is round."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-856_Q6",
    "context": "The bald eagle needs the lion. The bald eagle visits the lion. The lion is not cold. The lion does not like the tiger. The lion visits the tiger. The squirrel is kind. The squirrel is young. The squirrel likes the tiger. The squirrel does not need the lion. The squirrel visits the bald eagle. The tiger is cold. The tiger visits the bald eagle. If something visits the bald eagle then it is big. If something is big then it needs the squirrel. If something visits the squirrel and it visits the lion then it needs the squirrel. If something needs the squirrel then it is green. If something is young then it needs the tiger. Green things are young. If something is big and it visits the lion then the lion needs the squirrel. If the squirrel is big and the squirrel does not like the tiger then the tiger is not big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not need the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nIsKind($x, bool) ::: Is x kind?\nIsYoung($x, bool) ::: Is x young?\nIsBig($x, bool) ::: Is x big?\nIsGreen($x, bool) ::: Is x green?\nIsCold($x, bool) ::: Is x cold?\nFacts:\nVisits(BaldEagle, Lion, True) ::: The bald eagle visits the lion.\nVisits(Lion, Tiger, True) ::: The lion visits the tiger.\nIsNotCold(Lion, True) ::: The lion is not cold.\nDoesNotLike(Lion, Tiger, True) ::: The lion does not like the tiger.\nIsKind(Squirrel, True) ::: The squirrel is kind.\nIsYoung(Squirrel, True) ::: The squirrel is young.\nLikes(Squirrel, Tiger, True) ::: The squirrel likes the tiger.\nDoesNotNeed(Squirrel, Lion, True) ::: The squirrel does not need the lion.\nVisits(Squirrel, BaldEagle, True) ::: The squirrel visits the bald eagle.\nIsCold(Tiger, True) ::: The tiger is cold.\nVisits(Tiger, BaldEagle, True) ::: The tiger visits the bald eagle.\nIfSomethingVisitsBaldEagle($x, True) >>> IsBig($x, True) ::: If something visits the bald eagle then it is big.\nIfSomethingIsBig($x, True) >>> Needs($x, Squirrel, True) ::: If something is big then it needs the squirrel.\nIfSomethingVisitsSquirrelAndVisitsLion($x, True) >>> Needs($x, Squirrel, True) ::: If something visits the squirrel and it visits the lion then it needs the squirrel.\nIfSomethingNeedsSquirrel($x, True) >>> IsGreen($x, True) ::: If something needs the squirrel then it is green.\nIfSomethingIsYoung($x, True) >>> Needs($x, Tiger, True) ::: If something is young then it needs the tiger.\nIsGreen($x, True) >>> IsYoung($x, True) ::: Green things are young.\nIfSomethingIsBigAndVisitsLion($x, True) >>> LionNeedsSquirrel($x, True) ::: If the squirrel is big and the squirrel does not like the tiger then the tiger is not big.\nQuery:\nDoesNotNeed(Squirrel, Squirrel, True) ::: The squirrel does not need the squirrel.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-439_Q20",
    "context": "The bald eagle is cold. The bald eagle is green. The bald eagle needs the lion. The bald eagle visits the rabbit. The dog sees the lion. The lion is cold. The lion is green. The lion needs the dog. The lion needs the rabbit. The lion visits the bald eagle. The lion visits the dog. The rabbit is round. The rabbit visits the dog. The rabbit visits the lion. If something is round then it is rough. If something visits the rabbit and it needs the bald eagle then the rabbit visits the bald eagle. If something is rough then it visits the lion. If the dog needs the rabbit and the rabbit sees the bald eagle then the bald eagle sees the dog. If the rabbit visits the lion and the rabbit needs the dog then the dog is round. If something visits the rabbit then the rabbit needs the bald eagle. If something visits the lion and the lion needs the dog then it needs the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit visits the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nNeeds(BaldEagle, Lion, True) ::: The bald eagle needs the lion.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nSees(Dog, Lion, True) ::: The dog sees the lion.\nCold(Lion, True) ::: The lion is cold.\nGreen(Lion, True) ::: The lion is green.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nVisits(Lion, BaldEagle, True) ::: The lion visits the bald eagle.\nVisits(Lion, Dog, True) ::: The lion visits the dog.\nRound(Rabbit, True) ::: The rabbit is round.\nVisits(Rabbit, Dog, True) ::: The rabbit visits the dog.\nVisits(Rabbit, Lion, True) ::: The rabbit visits the lion.\nRules:\nRound($x, True) >>> Visits($x, Lion, True) ::: If something is round then it visits the lion.\nNeeds($x, BaldEagle, True) >>> Visits($x, Rabbit, True) ::: If something visits the rabbit and it needs the bald eagle then the rabbit visits the bald eagle.\nSees($x, BaldEagle, True) >>> Needs($x, Rabbit, True) ::: If the dog needs the rabbit and the rabbit sees the bald eagle then the bald eagle sees the dog.\nVisits($x, Rabbit, True) >>> Needs($x, Dog, True) ::: If the rabbit visits the lion and the rabbit needs the dog then the dog is round.\nVisits($x, Rabbit, True) >>> Needs($x, BaldEagle, True) ::: If something visits the rabbit then the rabbit needs the bald eagle.\nNeeds($x, Dog, True) >>> Needs($x, Lion, True) ::: If something visits the lion and the lion needs the dog then it needs the dog.\nQuery:\nVisits(Rabbit, Rabbit, True) ::: The rabbit visits the rabbit.\n------\nProblem:\nThe dog is furry. The dog is green. The dog is quiet. The dog"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-999_Q5",
    "context": "Anne is big. Anne is furry. Bob is blue. Bob is green. Bob is young. Charlie is furry. Charlie is green. Charlie is red. Gary is furry. Gary is green. Gary is young. Furry, green things are blue. All big things are green. Red, furry things are blue. All big, blue things are nice. If Bob is nice and Bob is big then Bob is red. If Gary is furry then Gary is blue. All nice, big things are young. All nice things are young. Blue, young things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nFurry(Anne, True) ::: Anne is furry.\nBlue(Bob, True) ::: Bob is blue.\nGreen(Bob, True) ::: Bob is green.\nYoung(Bob, True) ::: Bob is young.\nFurry(Charlie, True) ::: Charlie is furry.\nGreen(Charlie, True) ::: Charlie is green.\nRed(Charlie, True) ::: Charlie is red.\nFurry(Gary, True) ::: Gary is furry.\nGreen(Gary, True) ::: Gary is green.\nYoung(Gary, True) ::: Gary is young.\nRules:\nFurry($x, True) && Green($x, True) >>> Blue($x, True) ::: Furry, green things are blue.\nBig($x, True) >>> Green($x, True) ::: All big things are green.\nFurry($x, True) && Red($x, True) >>> Blue($x, True) ::: Red, furry things are blue.\nBig($x, True) && Blue($x, True) >>> Nice($x, True) ::: All big, blue things are nice.\nBlue($x, True) && Young($x, True) >>> Red($x, True) ::: Blue, young things are red.\nNice($x, True) && Big($x, True) && Blue($x, True) >>> Young($x, True) ::: If Bob is nice and Bob is big then Bob is red.\nFurry($x, True) >>> Blue($x, True) ::: If Gary is furry then Gary is blue.\nNice($x, True) && Big($x, True) >>> Young($x, True) ::: All nice, big things are young.\nNice($x, True) >>> Young($x, True) ::: All nice things are young.\nBlue($x, True) && Young($x, True) >>> Red($x, True) ::: Blue, young things are red.\nQuery:\nRed(Gary, True) ::: Gary is red.\n------\nProblem:\nAnne is big. Anne is furry. Anne is green. Anne is red. Anne is rough. Anne is white. Bob is big. Bob is furry. Bob is green. Bob is red. Bob is rough. Bob is white. Charlie is big. Charlie is furry. Charlie is green. Charlie is red. Charlie is rough. Charlie is white. Erin is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-308_Q8",
    "context": "Anne is cold. Anne is young. Charlie is cold. Erin is big. Fiona is blue. Fiona is red. Fiona is smart. If something is big and young then it is smart. If something is big and red then it is young. All cold things are red. If something is green then it is cold. If Anne is blue and Anne is smart then Anne is young. All smart, young things are green. If something is red and big then it is young. If something is big then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nGreen($x, bool) ::: Is x green?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nYoung(Anne, True) ::: Anne is young.\nCold(Charlie, True) ::: Charlie is cold.\nBig(Erin, True) ::: Erin is big.\nBlue(Fiona, True) ::: Fiona is blue.\nRed(Fiona, True) ::: Fiona is red.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nBig($x, True) && Young($x, True) >>> Smart($x, True) ::: If something is big and young then it is smart.\nBig($x, True) && Red($x, True) >>> Young($x, True) ::: If something is big and red then it is young.\nRed($x, True) >>> Young($x, True) ::: All cold things are red.\nGreen($x, True) >>> Cold($x, True) ::: If something is green then it is cold.\nBlue($x, True) && Smart($x, True) >>> Young($x, True) ::: If Anne is blue and Anne is smart then Anne is young.\nAll($x, True) >>> Green($x, True) ::: All smart, young things are green.\nBig($x, True) >>> Young($x, True) ::: If something is red and big then it is young.\nBig($x, True) >>> Young($x, True) ::: If something is big then it is young.\nQuery:\nNot(Green(Erin, True)) ::: Erin is not green.\n------\nProblem:\nAnne is cold. Anne is young. Charlie is cold. Erin is big. Fiona is blue. Fiona is red. Fiona is smart. If something is big and young then it is smart. If something is big and red then it is young. All cold things are red. If something is green then it is cold. If Anne is blue and Anne is smart then Anne is young. All smart, young things are green. If something is red and big then it is young. If something is big then it is young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not green.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nSmart($x,"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-372_Q11",
    "context": "Charlie is young. Erin is blue. Erin is green. Fiona is big. Fiona is green. Gary is blue. Gary is green. All red things are furry. All furry things are red. Young things are red. If something is smart and not red then it is not green. All furry things are green. If something is red and green then it is blue. If something is young and big then it is smart. If something is blue and green then it is smart. Blue, red things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Erin, True) ::: Erin is blue.\nGreen(Erin, True) ::: Erin is green.\nBig(Fiona, True) ::: Fiona is big.\nGreen(Fiona, True) ::: Fiona is green.\nBlue(Gary, True) ::: Gary is blue.\nGreen(Gary, True) ::: Gary is green.\nRed($x, True) >>> Furry($x, True) ::: All red things are furry.\nFurry($x, True) >>> Red($x, True) ::: All furry things are red.\nYoung($x, True) >>> Red($x, True) ::: Young things are red.\nNot(Red($x, True)) && Not(Furry($x, True)) >>> Not(Green($x, True)) ::: If something is smart and not red then it is not green.\nFurry($x, True) >>> Green($x, True) ::: All furry things are green.\nRed($x, True) && Green($x, True) >>> Blue($x, True) ::: If something is red and green then it is blue.\nYoung($x, True) && Big($x, True) >>> Smart($x, True) ::: If something is young and big then it is smart.\nBlue($x, True) && Green($x, True) >>> Smart($x, True) ::: If something is blue and green then it is smart.\nBlue($x, True) && Red($x, True) >>> Smart($x, True) ::: Blue, red things are smart.\nQuery:\nSmart(Charlie, True) ::: Charlie is smart.\n------\nProblem:\nCharlie is young. Erin is blue. Erin is green. Fiona is big. Fiona is green. Gary is blue. Gary is green. All red things are furry. All furry things are red. Young things are red. If something is smart and not red then it is not green. All furry things are green. If something is red and green then it is blue. If something is young and big then it is smart. If something is blue and green then it is smart. Blue, red things are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is smart.\n###\nPredicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-488_Q22",
    "context": "Anne is big. Bob is big. Bob is furry. Bob is nice. Bob is rough. Bob is white. Bob is young. Erin is blue. Harry is nice. Harry is rough. Harry is white. Harry is young. If something is big then it is furry. If Erin is furry and Erin is white then Erin is blue. If something is furry and big then it is nice. If something is big then it is furry. If something is white and nice then it is rough. Furry, nice things are young. Furry, young things are white. All big, blue things are white. Young, blue things are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(Anne, True) ::: Anne is big.\nBig(Bob, True) ::: Bob is big.\nFurry(Bob, True) ::: Bob is furry.\nNice(Bob, True) ::: Bob is nice.\nRough(Bob, True) ::: Bob is rough.\nWhite(Bob, True) ::: Bob is white.\nYoung(Bob, True) ::: Bob is young.\nBlue(Erin, True) ::: Erin is blue.\nNice(Harry, True) ::: Harry is nice.\nRough(Harry, True) ::: Harry is rough.\nWhite(Harry, True) ::: Harry is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBig($x, True) >>> Furry($x, True) ::: If something is big then it is furry.\nFurry($x, True) && Erin($x, True) >>> Blue($x, True) ::: If Erin is furry and Erin is white then Erin is blue.\nFurry($x, True) && Big($x, True) >>> Nice($x, True) ::: If something is furry and big then it is nice.\nBig($x, True) >>> Furry($x, True) ::: If something is big then it is furry.\nWhite($x, True) && Nice($x, True) >>> Rough($x, True) ::: If something is white and nice then it is rough.\nFurry($x, True) && Young($x, True) >>> White($x, True) ::: Furry, young things are white.\nFurry($x, True) && Young($x, True) >>> White($x, True) ::: Furry, young things are white.\nBig($x, True) && Blue($x, True) >>> White($x, True) ::: All big, blue things are white.\nYoung($x, True) && Blue($x, True) >>> Nice($x, True) ::: Young, blue things are nice.\nQuery:\nBig(Harry, True) ::: Harry is big.\n------\nProblem:\nAnne is big. Anne is furry. Anne is nice. Anne is rough. Anne is white. Anne is young. Bob is big. Bob is furry. Bob is nice. Bob is rough. Bob is white. Bob is young. Erin is blue. Erin is furry. Erin is nice. Erin is rough. Erin is white."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1205_Q16",
    "context": "Anne is blue. Anne is furry. Anne is red. Charlie is white. Gary is nice. Gary is rough. Harry is nice. Kind, white people are furry. All blue people are furry. Red people are blue. If someone is kind then they are furry. If Harry is nice and Harry is rough then Harry is red. White, rough people are kind. Blue, red people are white. Nice people are rough. If someone is kind and furry then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nFurry(Anne, True) ::: Anne is furry.\nRed(Anne, True) ::: Anne is red.\nWhite(Charlie, True) ::: Charlie is white.\nNice(Gary, True) ::: Gary is nice.\nRough(Gary, True) ::: Gary is rough.\nNice(Harry, True) ::: Harry is nice.\nRules:\nKind($x, True) >>> Furry($x, True) ::: Kind, white people are furry.\nBlue($x, True) >>> Furry($x, True) ::: All blue people are furry.\nRed($x, True) >>> Blue($x, True) ::: Red people are blue.\nKind($x, True) >>> Furry($x, True) ::: If someone is kind then they are furry.\nNice($x, True) && Rough($x, True) >>> Red($x, True) ::: If Harry is nice and Harry is rough then Harry is red.\nWhite($x, True) && Rough($x, True) >>> Kind($x, True) ::: White, rough people are kind.\nBlue($x, True) && Red($x, True) >>> White($x, True) ::: Blue, red people are white.\nNice($x, True) >>> Rough($x, True) ::: Nice people are rough.\nKind($x, True) && Furry($x, True) >>> Rough($x, True) ::: If someone is kind and furry then they are rough.\nQuery:\nRough(Charlie, True) ::: Charlie is rough.\n------\nProblem:\nAnne is blue. Anne is furry. Anne is red. Charlie is white. Gary is nice. Gary is rough. Harry is nice. Kind, white people are furry. All blue people are furry. Red people are blue. If someone is kind then they are furry. If Harry is nice and Harry is rough then Harry is red. White, rough people are kind. Blue, red people are white. Nice people are rough. If someone is kind and furry then they are rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is rough.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-844_Q7",
    "context": "Anne is big. Anne is cold. Anne is furry. Anne is white. Erin is cold. Fiona is round. Gary is smart. All smart things are furry. Big, blue things are round. If Gary is cold then Gary is smart. All blue, furry things are big. If Gary is furry then Gary is blue. Round things are cold. Cold, white things are furry. Round things are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFacts:\nBig(Anne, True) ::: Anne is big.\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nWhite(Anne, True) ::: Anne is white.\nCold(Erin, True) ::: Erin is cold.\nRound(Fiona, True) ::: Fiona is round.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nBig($x, True) >>> Blue($x, True) ::: Big, blue things are round.\nBlue($x, True) >>> Furry($x, True) ::: All blue, furry things are big.\nFurry($x, True) >>> Blue($x, True) ::: If Gary is furry then Gary is blue.\nRound($x, True) >>> Cold($x, True) ::: Round things are cold.\nCold($x, True) >>> Smart($x, True) ::: If Gary is cold then Gary is smart.\nSmart($x, True) >>> Furry($x, True) ::: All smart things are furry.\nFurry($x, True) >>> White($x, True) ::: Cold, white things are furry.\nRound($x, True) >>> White($x, True) ::: Round things are white.\nQuery:\nBig(Gary, True) ::: Gary is big.\n------\nProblem:\nAnne is big. Anne is cold. Anne is furry. Anne is white. Erin is cold. Fiona is round. Gary is smart. All smart things are furry. Big, blue things are round. If Gary is cold then Gary is smart. All blue, furry things are big. If Gary is furry then Gary is blue. Round things are cold. Cold, white things are furry. Round things are blue.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is big.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFacts:\nBig(Anne, True) ::: Anne is big.\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nWhite(Anne, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-948_Q14",
    "context": "The bear is big. The bear likes the cat. The cat eats the bear. The cat likes the squirrel. The mouse does not chase the bear. The squirrel is blue. The squirrel is green. If something likes the cat then the cat eats the mouse. If something chases the squirrel then it eats the cat. If the mouse eats the cat then the cat chases the squirrel. If something eats the mouse then the mouse chases the squirrel. If something chases the squirrel then the squirrel eats the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel chases the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nBig(Bear, True) ::: The bear is big.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nLikes(Cat, Squirrel, True) ::: The cat likes the squirrel.\nDoesNotChase(Mouse, Bear, True) ::: The mouse does not chase the bear.\nBlue(Squirrel, True) ::: The squirrel is blue.\nGreen(Squirrel, True) ::: The squirrel is green.\nRules:\nLikes($x, Cat, True) >>> Eats($x, Mouse, True) ::: If something likes the cat then the cat eats the mouse.\nChases($x, Squirrel, True) >>> Eats($x, Cat, True) ::: If something chases the squirrel then it eats the cat.\nEats(Mouse, Cat, True) >>> Chases(Cat, Squirrel, True) ::: If the mouse eats the cat then the cat chases the squirrel.\nEats($x, Mouse, True) >>> Chases(Mouse, Squirrel, True) ::: If something eats the mouse then the mouse chases the squirrel.\nChases($x, Squirrel, True) >>> Eats(Squirrel, Cat, True) ::: If something chases the squirrel then the squirrel eats the cat.\nQuery:\nChases(Squirrel, Bear, True) ::: The squirrel chases the bear.\n------\nProblem:\nThe bear is big. The bear likes the cat. The cat eats the bear. The cat likes the squirrel. The mouse does not chase the bear. The squirrel is blue. The squirrel is green. If something likes the cat then the cat eats the mouse. If something chases the squirrel then it eats the cat. If the mouse eats the cat then the cat chases the squirrel. If something eats the mouse then the mouse chases the squirrel. If something chases the squirrel then the squirrel eats the cat.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The squirrel chases the bear.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nChases"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-430_Q21",
    "context": "The bear sees the squirrel. The bear visits the rabbit. The lion is not round. The lion does not like the rabbit. The lion visits the bear. The rabbit is not big. The rabbit is kind. The rabbit likes the squirrel. The rabbit sees the bear. The rabbit does not visit the bear. The squirrel visits the lion. If something is big and it visits the lion then the lion visits the rabbit. If something sees the lion then it does not like the lion. If something likes the squirrel then the squirrel visits the rabbit. If something sees the squirrel and it visits the squirrel then the squirrel does not see the lion. If something visits the lion then the lion is not round. If something sees the lion and it does not see the bear then it sees the squirrel. If something visits the rabbit then it sees the lion. If something sees the lion then it is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not see the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nLikes($x, $y, bool) ::: Does x like y?\nIsRound($x, bool) ::: Is x round?\nIsBig($x, bool) ::: Is x big?\nFacts:\nVisits(Bear, Squirrel, True) ::: The bear sees the squirrel.\nVisits(Bear, Rabbit, True) ::: The bear visits the rabbit.\nNotRound(Lion, True) ::: The lion is not round.\nNotLikes(Lion, Rabbit, True) ::: The lion does not like the rabbit.\nVisits(Lion, Bear, True) ::: The lion visits the bear.\nNotBig(Rabbit, True) ::: The rabbit is not big.\nKind(Rabbit, True) ::: The rabbit is kind.\nLikes(Rabbit, Squirrel, True) ::: The rabbit likes the squirrel.\nSees(Rabbit, Bear, True) ::: The rabbit sees the bear.\nNotVisits(Rabbit, Bear, True) ::: The rabbit does not visit the bear.\nVisits(Squirrel, Lion, True) ::: The squirrel visits the lion.\nRules:\nIf something is big and it visits the lion then the lion visits the rabbit. ::: If something is big and it visits the lion then the lion visits the rabbit.\nIf something sees the lion then it does not like the lion. ::: If something sees the lion then it does not like the lion.\nIf something likes the squirrel then the squirrel visits the rabbit. ::: If something likes the squirrel then the squirrel visits the rabbit.\nIf something sees the squirrel and it visits the squirrel then the squirrel does not see the lion. ::: If something sees the squirrel and it visits the squirrel then the squirrel does not see the lion.\nIf something visits the lion then the lion is not round. ::: If something visits the lion then the lion is not round.\nIf something sees the lion and it does not see the bear then it sees the squirrel. ::: If something sees the lion and it does not see the bear then it sees the squirrel.\nIf something visits the rabbit then it sees the lion. ::: If something visits the rabbit then it sees the lion.\nIf something sees the lion then it is big. ::: If something sees the lion then it is big.\nQuery:\nNotSees(Squirrel, Bear, True) ::: The squirrel does not see the bear.\n------\nProblem:\nThe bear sees the squirrel. The bear visits the rabbit. The lion is not round. The lion does not like the rabbit. The lion visits the bear. The rabbit is not big. The rabbit is kind"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1057_Q2",
    "context": "Bob is kind. Bob is quiet. Bob is white. Charlie is quiet. Erin is furry. Erin is quiet. Erin is white. Fiona is blue. Fiona is furry. Fiona is kind. Fiona is quiet. All kind, rough people are furry. Green, furry people are quiet. If someone is rough then they are kind. If someone is quiet and kind then they are rough. If someone is white then they are quiet. If someone is blue and white then they are kind. If someone is white then they are blue. If Charlie is quiet then Charlie is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nQuiet(Bob, True) ::: Bob is quiet.\nWhite(Bob, True) ::: Bob is white.\nQuiet(Charlie, True) ::: Charlie is quiet.\nFurry(Erin, True) ::: Erin is furry.\nQuiet(Erin, True) ::: Erin is quiet.\nWhite(Erin, True) ::: Erin is white.\nFurry(Fiona, True) ::: Fiona is furry.\nQuiet(Fiona, True) ::: Fiona is quiet.\nWhite(Fiona, True) ::: Fiona is white.\nBlue(Fiona, True) ::: Fiona is blue.\nKind(Fiona, True) ::: Fiona is kind.\nRules:\nKind($x, True) >>> Rough($x, True) ::: All kind, rough people are furry.\nGreen($x, True) >>> Furry($x, True) ::: Green, furry people are quiet.\nRough($x, True) >>> Kind($x, True) ::: If someone is rough then they are kind.\nQuiet($x, True) && Kind($x, True) >>> Rough($x, True) ::: If someone is quiet and kind then they are rough.\nWhite($x, True) >>> Quiet($x, True) ::: If someone is white then they are quiet.\nBlue($x, True) >>> White($x, True) ::: If someone is blue and white then they are kind.\nWhite($x, True) >>> Blue($x, True) ::: If someone is white then they are blue.\nCharlie(Quiet($x, True)) >>> White($x, True) ::: If Charlie is quiet then Charlie is white.\nQuery:\nNot(Kind(Fiona, True)) ::: Fiona is not kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1205_Q12",
    "context": "Anne is blue. Anne is furry. Anne is red. Charlie is white. Gary is nice. Gary is rough. Harry is nice. Kind, white people are furry. All blue people are furry. Red people are blue. If someone is kind then they are furry. If Harry is nice and Harry is rough then Harry is red. White, rough people are kind. Blue, red people are white. Nice people are rough. If someone is kind and furry then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nFurry(Anne, True) ::: Anne is furry.\nRed(Anne, True) ::: Anne is red.\nWhite(Charlie, True) ::: Charlie is white.\nNice(Gary, True) ::: Gary is nice.\nRough(Gary, True) ::: Gary is rough.\nNice(Harry, True) ::: Harry is nice.\nRules:\nKind($x, True) >>> Furry($x, True) ::: Kind, white people are furry.\nBlue($x, True) >>> Furry($x, True) ::: All blue people are furry.\nRed($x, True) >>> Blue($x, True) ::: Red people are blue.\nKind($x, True) >>> Furry($x, True) ::: If someone is kind then they are furry.\nNice($x, True) && Rough($x, True) >>> Red($x, True) ::: If Harry is nice and Harry is rough then Harry is red.\nWhite($x, True) && Rough($x, True) >>> Kind($x, True) ::: White, rough people are kind.\nBlue($x, True) && Red($x, True) >>> White($x, True) ::: Blue, red people are white.\nNice($x, True) >>> Rough($x, True) ::: Nice people are rough.\nKind($x, True) && Furry($x, True) >>> Rough($x, True) ::: If someone is kind and furry then they are rough.\nQuery:\nNot(Kind(Harry, True)) ::: Harry is not kind.\n------\nProblem:\nAnne is blue. Anne is furry. Anne is red. Charlie is white. Gary is nice. Gary is rough. Harry is nice."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-829_Q7",
    "context": "The dog does not eat the rabbit. The mouse eats the tiger. The mouse is green. The rabbit does not chase the tiger. The rabbit eats the dog. The rabbit is young. The tiger is green. If something visits the mouse then the mouse is big. If something eats the tiger then the tiger visits the mouse. If the dog is young and the dog does not visit the mouse then the mouse does not visit the rabbit. If something is green and it chases the rabbit then the rabbit does not eat the mouse. If something is green then it visits the dog. If something visits the rabbit and the rabbit is young then it is round. If something is round and it visits the dog then it chases the tiger. If something is big then it visits the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse visits the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(Dog, Rabbit, False) ::: The dog does not eat the rabbit.\nEats(Mouse, Tiger, True) ::: The mouse eats the tiger.\nIs(Mouse, Green, True) ::: The mouse is green.\nChases(Rabbit, Tiger, False) ::: The rabbit does not chase the tiger.\nEats(Rabbit, Dog, True) ::: The rabbit eats the dog.\nIs(Rabbit, Young, True) ::: The rabbit is young.\nIs(Tiger, Green, True) ::: The tiger is green.\nRules:\nVisits(Mouse, $x, True) >>> Is($x, Big, True) ::: If something visits the mouse then the mouse is big.\nEats($x, Tiger) >>> Visits($x, Mouse) ::: If something eats the tiger then the tiger visits the mouse.\nYoung($x, True) && Not(Visits(Dog, Mouse)) >>> Not(Visits(Mouse, Rabbit)) ::: If the dog is young and the dog does not visit the mouse then the mouse does not visit the rabbit.\nChases($x, Rabbit) && Is($x, Green, True) >>> Not(Eats($x, Mouse)) ::: If something is green and it chases the rabbit then the rabbit does not eat the mouse.\nIs($x, Green, True) >>> Visits($x, Dog) ::: If something is green then it visits the dog.\nVisits(Rabbit, $x) && Young($x, True) >>> Is($x, Round, True) ::: If something is young and it visits the rabbit then it is round.\nIs($x, Round, True) && Visits($x"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-746_Q8",
    "context": "Bob is white. Charlie is furry. Charlie is kind. Dave is cold. Dave is smart. Gary is red. Gary is white. Green, furry things are smart. If Charlie is white then Charlie is green. White things are kind. Cold, smart things are red. All furry things are cold. If Bob is kind and Bob is furry then Bob is smart. If something is cold and kind then it is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nFacts:\nWhite(Bob, True) ::: Bob is white.\nFurry(Charlie, True) ::: Charlie is furry.\nKind(Charlie, True) ::: Charlie is kind.\nCold(Dave, True) ::: Dave is cold.\nSmart(Dave, True) ::: Dave is smart.\nRed(Gary, True) ::: Gary is red.\nWhite(Gary, True) ::: Gary is white.\nRules:\nGreen($x, True) >>> Furry($x, True) ::: Green, furry things are smart.\nWhite($x, True) >>> Kind($x, True) ::: White things are kind.\nCold($x, True) && Smart($x, True) >>> Red($x, True) ::: Cold, smart things are red.\nFurry($x, True) >>> Cold($x, True) ::: All furry things are cold.\nFurry($x, True) && Kind($x, True) >>> Smart($x, True) ::: If Bob is kind and Bob is furry then Bob is smart.\nKind($x, True) && Cold($x, True) >>> White($x, True) ::: If something is cold and kind then it is white.\nQuery:\nNot(Green(Charlie, True)) ::: Charlie is not green.\n------\nProblem:\nBob is white. Charlie is furry. Charlie is kind. Dave is cold. Dave is smart. Gary is red. Gary is white. Green, furry things are smart. If Charlie is white then Charlie is green. White things are kind. Cold, smart things are red. All furry things are cold. If Bob is kind and Bob is furry then Bob is smart. If something is cold and kind then it is white.\nQuestion:\nBased on the above information, is the following statement true, false, or"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-613_Q10",
    "context": "Anne is blue. Anne is nice. Anne is quiet. Anne is rough. Fiona is big. Fiona is blue. Fiona is quiet. Gary is blue. Gary is quiet. Gary is rough. Gary is white. Harry is white. All big people are rough. All blue, nice people are big. If someone is rough then they are green. All nice people are big. Green people are blue. Rough, white people are nice. White people are nice. Green people are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nWhite($x, bool) ::: Is x white?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nNice(Anne, True) ::: Anne is nice.\nQuiet(Anne, True) ::: Anne is quiet.\nRough(Anne, True) ::: Anne is rough.\nBig(Fiona, True) ::: Fiona is big.\nBlue(Fiona, True) ::: Fiona is blue.\nQuiet(Fiona, True) ::: Fiona is quiet.\nBlue(Gary, True) ::: Gary is blue.\nQuiet(Gary, True) ::: Gary is quiet.\nRough(Gary, True) ::: Gary is rough.\nWhite(Gary, True) ::: Gary is white.\nWhite(Harry, True) ::: Harry is white.\nRules:\nBig($x, True) >>> Rough($x, True) ::: All big people are rough.\nBlue($x, True) && Nice($x, True) >>> Big($x, True) ::: All blue, nice people are big.\nRough($x, True) >>> Green($x, True) ::: If someone is rough then they are green.\nNice($x, True) >>> Big($x, True) ::: All nice people are big.\nGreen($x, True) >>> Blue($x, True) ::: Green people are blue.\nRough($x, True) && White($x, True) >>> Nice($x, True) ::: Rough, white people are nice.\nWhite($x, True) >>> Nice($x, True) ::: White people are nice.\nGreen($x, True) >>> Nice($x, True) ::: Green people are nice.\nQuery:\nNot(Green(Harry, True)) ::: Harry is not green.\n------\nProblem:\nAnne is blue. Anne is nice. Anne is quiet. Anne is rough. Fiona is big. Fiona is blue. Fiona is quiet"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-76_Q13",
    "context": "The bear eats the cow. The bear is blue. The cow eats the squirrel. The cow is young. The cow visits the lion. The lion is red. The lion is young. The lion visits the cow. The squirrel sees the bear. The squirrel visits the bear. If something sees the cow and the cow eats the squirrel then the cow is red. If the cow eats the bear and the bear sees the cow then the bear is blue. If something is blue and it sees the squirrel then the squirrel is round. If something sees the squirrel then the squirrel eats the cow. If the lion sees the cow and the cow visits the squirrel then the cow eats the squirrel. If something is red then it eats the lion. If the bear visits the squirrel and the bear is round then the bear sees the cow. If something eats the lion then it sees the cow. If something is young and cold then it eats the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not eat the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(Bear, Cow, True) ::: The bear eats the cow.\nIs(Bear, Blue, True) ::: The bear is blue.\nEats(Cow, Squirrel, True) ::: The cow eats the squirrel.\nIs(Cow, Young, True) ::: The cow is young.\nVisits(Cow, Lion, True) ::: The cow visits the lion.\nIs(Lion, Red, True) ::: The lion is red.\nIs(Lion, Young, True) ::: The lion is young.\nVisits(Lion, Cow, True) ::: The lion visits the cow.\nSees(Squirrel, Bear, True) ::: The squirrel sees the bear.\nVisits(Squirrel, Bear, True) ::: The squirrel visits the bear.\nEats(Cow, Squirrel, True) >>> Is(Cow, Red, True) ::: If something sees the cow and the cow eats the squirrel then the cow is red.\nEats(Bear, Cow) && Sees(Cow, Bear) >>> Is(Bear, Blue, True) ::: If the bear eats the cow and the bear sees the cow then the bear is blue.\nSees(Squirrel, Bear) >>> Is(Bear, Round, True) ::: If something is blue and it sees the squirrel then the squirrel is round.\nSees(Squirrel, $x) >>> Eats(Squirrel, Cow) ::: If something sees the squirrel then the squirrel eats the cow.\nEats(Cow, Lion) && Vis"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-713_Q9",
    "context": "The cat needs the cow. The cow eats the cat. The cow is blue. The mouse eats the rabbit. The mouse is cold. The mouse is young. The mouse needs the cow. The rabbit is cold. The rabbit is young. The rabbit needs the cat. If someone is cold and they see the rabbit then the rabbit is young. If the mouse sees the cat and the cow does not need the mouse then the cat eats the rabbit. If someone eats the cow then they eat the mouse. If someone is nice and young then they see the rabbit. If someone eats the rabbit then they need the cat. If someone sees the rabbit then they are not green. If someone sees the cat and they are cold then they are nice. If someone needs the cat and they are young then they see the cat. If the cow is not young then the cow is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse sees the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nNeeds(Cat, Cow, True) ::: The cat needs the cow.\nEats(Cow, Cat, True) ::: The cow eats the cat.\nBlue(Cow, True) ::: The cow is blue.\nEats(Mouse, Rabbit, True) ::: The mouse eats the rabbit.\nCold(Mouse, True) ::: The mouse is cold.\nYoung(Mouse, True) ::: The mouse is young.\nNeeds(Mouse, Cow, True) ::: The mouse needs the cow.\nCold(Rabbit, True) ::: The rabbit is cold.\nYoung(Rabbit, True) ::: The rabbit is young.\nNeeds(Rabbit, Cat, True) ::: The rabbit needs the cat.\nYoung($x, True) >>> Cold($x, True) ::: If someone is cold and they see the rabbit then the rabbit is young.\nEats(Mouse, Cow) && Not(Needs(Cow, Mouse, True)) >>> Eats(Cat, Rabbit) ::: If the mouse sees the cat and the cow does not need the mouse then the cat eats the rabbit.\nEats($x, $y) >>> Eats($x, $z) ::: If someone eats the cow then they eat the mouse.\nYoung($x, True) >>> Nice($x, True) ::: If someone is nice and young then they see the rabbit.\nEats($x, $y) >>> Needs($x, $y, True) ::: If someone eats the rabbit then they need the cat.\nNot(Sees($x, $y)) >>> Not(Green($x, True)) ::: If someone sees the rabbit then they"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-500_Q8",
    "context": "Anne is blue. Anne is cold. Anne is furry. Anne is red. Anne is round. Anne is white. Bob is big. Dave is round. Dave is white. Harry is big. Harry is red. Harry is white. All blue things are white. If something is cold then it is red. Furry, blue things are red. If something is round and big then it is blue. If Anne is cold and Anne is red then Anne is big. All red things are round. If something is big then it is cold. If something is cold and furry then it is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nRed(Anne, True) ::: Anne is red.\nRound(Anne, True) ::: Anne is round.\nWhite(Anne, True) ::: Anne is white.\nBig(Bob, True) ::: Bob is big.\nRound(Dave, True) ::: Dave is round.\nWhite(Dave, True) ::: Dave is white.\nBig(Harry, True) ::: Harry is big.\nRed(Harry, True) ::: Harry is red.\nWhite(Harry, True) ::: Harry is white.\nRules:\nBlue($x, True) >>> White($x, True) ::: All blue things are white.\nCold($x, True) >>> Red($x, True) ::: If something is cold then it is red.\nFurry($x, True) && Blue($x, True) >>> Red($x, True) ::: Furry, blue things are red.\nRound($x, True) && Big($x, True) >>> Blue($x, True) ::: If something is round and big then it is blue.\nCold($x, True) && Red($x, True) >>> Big($x, True) ::: If Anne is cold and Anne is red then Anne is big.\nRed($x, True) >>> Round($x, True) ::: All red things are round.\nBig($x, True) >>> Cold($x, True) ::: If something is big then it is cold.\nCold($x, True) && Furry($x, True) >>> White($x, True) ::: If something is cold and furry then it is white.\nQuery:\nNot(Round(Bob,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1250_Q15",
    "context": "Anne is white. Erin is round. Erin is white. Gary is cold. Gary is round. Harry is furry. Harry is green. Furry, white people are green. Nice people are round. All round, furry people are green. All cold people are white. All cold, rough people are round. All white people are cold. If someone is cold then they are furry. All furry, green people are rough. All round, green people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nFacts:\nWhite(Anne, True) ::: Anne is white.\nRound(Erin, True) ::: Erin is round.\nWhite(Erin, True) ::: Erin is white.\nCold(Gary, True) ::: Gary is cold.\nRound(Gary, True) ::: Gary is round.\nFurry(Harry, True) ::: Harry is furry.\nGreen(Harry, True) ::: Harry is green.\nRules:\nFurry($x, True) && White($x, True) >>> Green($x, True) ::: Furry, white people are green.\nNice($x, True) >>> Round($x, True) ::: Nice people are round.\nFurry($x, True) && White($x, True) >>> Green($x, True) ::: Furry, white people are green.\nCold($x, True) >>> White($x, True) ::: All cold people are white.\nCold($x, True) && Rough($x, True) >>> Round($x, True) ::: All cold, rough people are round.\nWhite($x, True) >>> Cold($x, True) ::: All white people are cold.\nCold($x, True) >>> Furry($x, True) ::: If someone is cold then they are furry.\nFurry($x, True) && Green($x, True) >>> Rough($x, True) ::: All furry, green people are rough.\nRound($x, True) && Green($x, True) >>> Cold($x, True) ::: All round, green people are cold.\nQuery:\nNot(White(Harry, True)) ::: Harry is not white.\n------\nProblem:\nAnne is white. Erin is round. Erin is white. Gary is cold. Gary is round. Harry is fur"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-630_Q4",
    "context": "Anne is green. Anne is quiet. Dave is round. Erin is nice. Fiona is not nice. Fiona is quiet. Fiona is rough. If something is rough and green then it is round. All smart things are round. If something is round and blue then it is rough. All blue things are rough. Quiet things are green. Round things are green. All nice things are blue. All rough, nice things are blue. Rough, nice things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRules:\nGreen($x, True) >>> Round($x, True) ::: If something is rough and green then it is round.\nSmart($x, True) >>> Round($x, True) ::: All smart things are round.\nRound($x, True) >>> Rough($x, True) ::: If something is round and blue then it is rough.\nRound($x, True) >>> Blue($x, True) ::: All blue things are rough.\nQuiet($x, True) >>> Green($x, True) ::: Quiet things are green.\nGreen($x, True) >>> Round($x, True) ::: Round things are green.\nNice($x, True) >>> Blue($x, True) ::: All nice things are blue.\nNice($x, True) && Rough($x, True) >>> Blue($x, True) ::: All rough, nice things are blue.\nRough($x, True) && Nice($x, True) >>> Quiet($x, True) ::: Rough, nice things are quiet.\nFacts:\nGreen(Anne, True) ::: Anne is green.\nQuiet(Anne, True) ::: Anne is quiet.\nRound(Dave, True) ::: Dave is round.\nNice(Erin, True) ::: Erin is nice.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nQuery:\nNot(Green(Fiona, True)) ::: Fiona is not green.\n------\nProblem:\nAnne is green. Anne is quiet. Dave is round. Erin is nice. Fiona is not nice. Fiona is quiet. Fiona is rough. If something is rough and green then it is round. All smart things are round. If something is round and blue then it is rough. All blue things are rough. Quiet things are green. Round things are green. All nice things are blue. All rough, nice things are blue. R"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-20_Q10",
    "context": "Bob is green. Bob is young. Charlie is big. Charlie is blue. Charlie is nice. Gary is green. Gary is nice. Gary is quiet. Gary is smart. Harry is blue. Harry is smart. All big things are smart. All green things are big. If something is nice then it is young. If something is green and blue then it is nice. If Bob is smart and Bob is green then Bob is quiet. If Charlie is blue then Charlie is nice. If something is quiet and smart then it is blue. Nice, blue things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nYoung(Bob, True) ::: Bob is young.\nBig(Charlie, True) ::: Charlie is big.\nBlue(Charlie, True) ::: Charlie is blue.\nNice(Charlie, True) ::: Charlie is nice.\nGreen(Gary, True) ::: Gary is green.\nNice(Gary, True) ::: Gary is nice.\nQuiet(Gary, True) ::: Gary is quiet.\nSmart(Gary, True) ::: Gary is smart.\nBlue(Harry, True) ::: Harry is blue.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBig($x, True) >>> Smart($x, True) ::: All big things are smart.\nGreen($x, True) >>> Big($x, True) ::: All green things are big.\nNice($x, True) >>> Young($x, True) ::: If something is nice then it is young.\nGreen($x, True) && Blue($x, True) >>> Nice($x, True) ::: If something is green and blue then it is nice.\nGreen($x, True) && Smart($x, True) >>> Quiet($x, True) ::: If Bob is smart and Bob is green then Bob is quiet.\nBlue($x, True) >>> Nice($x, True) ::: If Charlie is blue then Charlie is nice.\nQuiet($x, True) && Smart($x, True) >>> Blue($x, True) ::: If something is quiet and smart then it is blue.\nNice($x, True) && Blue($x, True) >>> Quiet($x, True) ::: Nice, blue things are quiet.\nQuery:\nNot(Blue(Bob, True)) ::: Bob is not blue.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-861_Q14",
    "context": "The cat needs the dog. The dog is kind. The dog needs the rabbit. The rabbit eats the dog. The rabbit is green. The tiger chases the rabbit. The tiger is big. If something is nice and it eats the tiger then it needs the dog. If something chases the cat then it eats the cat. If the dog chases the tiger then the tiger needs the rabbit. If the rabbit chases the tiger then the rabbit chases the cat. If something chases the cat then the cat is kind. If something eats the dog then it chases the cat. If something is rough then it eats the dog. If something is kind then it is rough. If something eats the rabbit and the rabbit is big then it is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nKind($x, bool) ::: Is x kind?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nFacts:\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nKind(Dog, True) ::: The dog is kind.\nNeeds(Dog, Rabbit, True) ::: The dog needs the rabbit.\nEats(Rabbit, Dog, True) ::: The rabbit eats the dog.\nGreen(Rabbit, True) ::: The rabbit is green.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nBig(Tiger, True) ::: The tiger is big.\nRules:\nNice($x, True) && Eats($x, Tiger, True) >>> Needs($x, Dog, True) ::: If something is nice and it eats the tiger then it needs the dog.\nChases($x, Cat, True) >>> Eats($x, Cat, True) ::: If something chases the cat then it eats the cat.\nDog($x, True) && Chases($x, Tiger, True) >>> Rabbit($x, True) >>> Needs($x, Rabbit, True) ::: If the dog chases the tiger then the tiger needs the rabbit.\nChases($x, Rabbit, True) >>> Chases($x, Cat, True) ::: If the rabbit chases the tiger then the rabbit chases the cat.\nChases($x, Cat, True) >>> Kind($x, True) ::: If something chases the cat then the cat is kind.\nEats($x, Dog, True) >>> Chases($x, Cat, True) ::: If something eats the dog then it chases the cat.\nRough($x, True) >>> Eats($x"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1233_Q11",
    "context": "Anne is smart. Bob is quiet. Bob is young. Fiona is not quiet. Gary is kind. Gary is rough. Gary is smart. Rough, kind people are blue. Young, kind people are rough. If someone is furry then they are quiet. Furry, young people are quiet. All quiet people are young. If someone is blue and kind then they are young. If someone is smart then they are furry. If Fiona is blue then Fiona is not kind. Young people are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nFacts:\nSmart(Anne, True) ::: Anne is smart.\nQuiet(Bob, True) ::: Bob is quiet.\nYoung(Bob, True) ::: Bob is young.\nNotQuiet(Fiona, True) ::: Fiona is not quiet.\nKind(Gary, True) ::: Gary is kind.\nRough(Gary, True) ::: Gary is rough.\nSmart(Gary, True) ::: Gary is smart.\nRough($x, True) && Kind($x, True) >>> Blue($x, True) ::: Rough, kind people are blue.\nYoung($x, True) && Kind($x, True) >>> Rough($x, True) ::: Young, kind people are rough.\nFurry($x, True) >>> Quiet($x, True) ::: If someone is furry then they are quiet.\nFurry($x, True) && Young($x, True) >>> Quiet($x, True) ::: Furry, young people are quiet.\nAll($x, True) >>> Young($x, True) ::: All quiet people are young.\nBlue($x, True) && Kind($x, True) >>> Young($x, True) ::: If someone is blue and kind then they are young.\nSmart($x, True) >>> Furry($x, True) ::: If someone is smart then they are furry.\nNotKind(Fiona, True) >>> Blue(Fiona, True) ::: If Fiona is blue then Fiona is not kind.\nYoung($x, True) >>> Kind($x, True) ::: Young people are kind.\nQuery:\nRough(Anne, True) ::: Anne is rough.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is rough. Anne is white."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1247_Q5",
    "context": "Bob is blue. Bob is furry. Dave is white. Erin is green. Erin is white. Gary is green. Gary is red. If Erin is furry and Erin is blue then Erin is big. Red things are round. If something is blue and big then it is white. Red, furry things are white. If something is round then it is furry. If something is furry and green then it is blue. Blue, white things are furry. If something is green then it is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nWhite($x, bool) ::: Is x white?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nFurry(Bob, True) ::: Bob is furry.\nWhite(Dave, True) ::: Dave is white.\nGreen(Erin, True) ::: Erin is green.\nWhite(Erin, True) ::: Erin is white.\nGreen(Gary, True) ::: Gary is green.\nRed(Gary, True) ::: Gary is red.\nRules:\nErin(Furry($x, True) && Blue($x, True)) >>> Erin(Big($x, True)) ::: If Erin is furry and Erin is blue then Erin is big.\nRed($x, True) >>> Round($x, True) ::: Red things are round.\nBlue($x, True) && Big($x, True) >>> White($x, True) ::: If something is blue and big then it is white.\nFurry($x, True) && Green($x, True) >>> Blue($x, True) ::: If something is furry and green then it is blue.\nBlue($x, True) && White($x, True) >>> Furry($x, True) ::: Blue, white things are furry.\nGreen($x, True) >>> Red($x, True) ::: If something is green then it is red.\nQuery:\nFurry(Gary, True) ::: Gary is furry.\n------\nProblem:\nBob is blue. Bob is furry. Dave is white. Erin is green. Erin is white. Gary is green. Gary is red. If Erin is furry and Erin is blue then Erin is big. Red things are round. If something is blue and big then it is white. Red, furry things are white. If something is round then it is furry. If something is furry and green then it"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1208_Q15",
    "context": "Anne is cold. Anne is not green. Anne is not kind. Anne is quiet. Anne is round. Bob is kind. Bob is round. Charlie is cold. Charlie is quiet. Charlie is round. Erin is furry. If something is quiet then it is rough. Cold things are round. If something is green then it is quiet. All cold things are quiet. Green things are quiet. If something is kind and green then it is furry. Furry things are green. If Bob is kind then Bob is not rough. If something is rough and green then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nRules:\nQuiet($x, True) >>> Rough($x, True) ::: If something is quiet then it is rough.\nCold($x, True) >>> Round($x, True) ::: Cold things are round.\nGreen($x, True) >>> Quiet($x, True) ::: If something is green then it is quiet.\nCold($x, True) >>> Quiet($x, True) ::: All cold things are quiet.\nGreen($x, True) >>> Quiet($x, True) ::: Green things are quiet.\nKind($x, True) && Green($x, True) >>> Furry($x, True) ::: If something is kind and green then it is furry.\nFurry($x, True) >>> Green($x, True) ::: Furry things are green.\nKind($x, True) >>> ~Rough($x, True) ::: If Bob is kind then Bob is not rough.\nRough($x, True) && Green($x, True) >>> Cold($x, True) ::: If something is rough and green then it is cold.\nFacts:\nCold(Anne, True) ::: Anne is cold.\n~Green(Anne, True) ::: Anne is not green.\n~Kind(Anne, True) ::: Anne is not kind.\nQuiet(Anne, True) ::: Anne is quiet.\nRound(Anne, True) ::: Anne is round.\nKind(Bob, True) ::: Bob is kind.\nRound(Bob, True) ::: Bob is round.\nCold(Charlie, True) ::: Charlie is cold.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRound(Charlie, True) ::: Charlie is round.\nFurry(Erin, True) ::: Erin is furry.\nQuery:\n~Quiet(Bob, True) ::: Bob is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-83_Q10",
    "context": "Dave is cold. Dave is rough. Erin is cold. Erin is rough. Fiona is blue. Fiona is smart. Gary is blue. All smart, rough people are young. If someone is cold and white then they are quiet. All cold people are white. If someone is quiet and young then they are blue. White, quiet people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nCold(Dave, True) ::: Dave is cold.\nRough(Dave, True) ::: Dave is rough.\nCold(Erin, True) ::: Erin is cold.\nRough(Erin, True) ::: Erin is rough.\nBlue(Fiona, True) ::: Fiona is blue.\nSmart(Fiona, True) ::: Fiona is smart.\nBlue(Gary, True) ::: Gary is blue.\nRules:\nYoung($x, True) >>> Rough($x, True) ::: All smart, rough people are young.\nCold($x, True) && White($x, True) >>> Quite($x, True) ::: If someone is cold and white then they are quiet.\nCold($x, True) >>> White($x, True) ::: All cold people are white.\nQuite($x, True) && Young($x, True) >>> Blue($x, True) ::: If someone is quiet and young then they are blue.\nWhite($x, True) && Quite($x, True) >>> Smart($x, True) ::: White, quiet people are smart.\nQuery:\nNot(Young(Erin, True)) ::: Erin is not young.\n------\nProblem:\nDave is cold. Dave is rough. Erin is cold. Erin is rough. Fiona is blue. Fiona is smart. Gary is blue. All smart, rough people are young. If someone is cold and white then they are quiet. All cold people are white. If someone is quiet and young then they are blue. White, quiet people are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not young.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-439_Q21",
    "context": "The bald eagle is cold. The bald eagle is green. The bald eagle needs the lion. The bald eagle visits the rabbit. The dog sees the lion. The lion is cold. The lion is green. The lion needs the dog. The lion needs the rabbit. The lion visits the bald eagle. The lion visits the dog. The rabbit is round. The rabbit visits the dog. The rabbit visits the lion. If something is round then it is rough. If something visits the rabbit and it needs the bald eagle then the rabbit visits the bald eagle. If something is rough then it visits the lion. If the dog needs the rabbit and the rabbit sees the bald eagle then the bald eagle sees the dog. If the rabbit visits the lion and the rabbit needs the dog then the dog is round. If something visits the rabbit then the rabbit needs the bald eagle. If something visits the lion and the lion needs the dog then it needs the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not see the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nNeeds(BaldEagle, Lion, True) ::: The bald eagle needs the lion.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nSees(Dog, Lion, True) ::: The dog sees the lion.\nCold(Lion, True) ::: The lion is cold.\nGreen(Lion, True) ::: The lion is green.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nVisits(Lion, BaldEagle, True) ::: The lion visits the bald eagle.\nVisits(Lion, Dog, True) ::: The lion visits the dog.\nRound(Rabbit, True) ::: The rabbit is round.\nVisits(Rabbit, Dog, True) ::: The rabbit visits the dog.\nVisits(Rabbit, Lion, True) ::: The rabbit visits the lion.\nRules:\nRound($x, True) >>> Visits($x, Lion, True) ::: If something is round then it visits the lion.\nNeeds($x, Rabbit, True) && Visits($x, BaldEagle, True) >>> Visits($x, BaldEagle, True) ::: If something visits the rabbit and it needs the bald eagle then the rabbit visits the bald eagle.\nSees($x, BaldEagle, True) && Needs($x, Rabbit, True) >>> Visits($x, Rabbit, True) ::: If the dog needs the rabbit and the rabbit sees the bald eagle"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-401_Q4",
    "context": "Anne is cold. Anne is kind. Charlie is blue. Charlie is round. Dave is blue. Fiona is not green. Fiona is kind. If Charlie is cold then Charlie is quiet. If Charlie is big then Charlie is not green. If Anne is kind then Anne is big. All big people are blue. Blue people are quiet. If Dave is kind then Dave is cold. If someone is round then they are green. Quiet people are round. If someone is kind and not blue then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nKind(Anne, True) ::: Anne is kind.\nBlue(Charlie, True) ::: Charlie is blue.\nRound(Charlie, True) ::: Charlie is round.\nBlue(Dave, True) ::: Dave is blue.\nNot(Green(Fiona, True)) ::: Fiona is not green.\nKind(Fiona, True) ::: Fiona is kind.\nRules:\nIf Charlie is cold then Charlie is quiet ::: If Charlie is cold then Charlie is quiet.\nIf Charlie is big then Charlie is not green ::: If Charlie is big then Charlie is not green.\nIf Anne is kind then Anne is big ::: If Anne is kind then Anne is big.\nAll big people are blue ::: All big people are blue.\nBlue people are quiet ::: Blue people are quiet.\nIf Dave is kind then Dave is cold ::: If Dave is kind then Dave is cold.\nIf someone is round then they are green ::: If someone is round then they are green.\nQuiet people are round ::: Quiet people are round.\nIf someone is kind and not blue then they are round ::: If someone is kind and not blue then they are round.\nQuery:\nNot(Green(Charlie, True)) ::: Charlie is not green.\n------\nProblem:\nAnne is cold. Anne is kind. Charlie is blue. Charlie is round. Dave is blue. Fiona is not green. Fiona is kind. If Charlie is cold then Charlie is quiet. If Charlie is big then Charlie is not green. If Anne is kind then Anne is big. All big people are blue. Blue people are quiet. If Dave is kind then Dave is cold. If someone is round then they are green. Quiet people are round. If someone is kind and not blue then they are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is not"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-334_Q15",
    "context": "The bear is round. The bear is young. The bear needs the dog. The bear sees the cat. The cat eats the bear. The cat is green. The cat needs the mouse. The dog eats the cat. The dog is cold. The dog is green. The dog needs the cat. The dog sees the bear. The mouse eats the dog. The mouse is cold. The mouse needs the bear. The mouse needs the dog. If something eats the mouse then it needs the dog. If the mouse sees the bear then the bear needs the mouse. If something eats the dog and the dog eats the bear then it needs the bear. If something is round and it eats the bear then it sees the bear. If something eats the bear then it is round. If something eats the dog and it needs the cat then it eats the bear. If something needs the mouse then the mouse needs the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not eat the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nRound(Bear, True) ::: The bear is round.\nYoung(Bear, True) ::: The bear is young.\nNeeds(Bear, Dog, True) ::: The bear needs the dog.\nSees(Bear, Cat, True) ::: The bear sees the cat.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nGreen(Cat, True) ::: The cat is green.\nNeeds(Cat, Mouse, True) ::: The cat needs the mouse.\nEats(Dog, Cat, True) ::: The dog eats the cat.\nCold(Dog, True) ::: The dog is cold.\nGreen(Dog, True) ::: The dog is green.\nNeeds(Dog, Cat, True) ::: The dog needs the cat.\nSees(Dog, Bear, True) ::: The dog sees the bear.\nEats(Mouse, Dog, True) ::: The mouse eats the dog.\nCold(Mouse, True) ::: The mouse is cold.\nNeeds(Mouse, Bear, True) ::: The mouse needs the bear.\nNeeds(Mouse, Dog, True) ::: The mouse needs the dog.\nRules:\nIf something eats the mouse then it needs the dog ::: If something eats the mouse then it needs the dog.\nIf the mouse sees the bear then the bear needs the mouse ::: If the mouse sees the bear then the bear needs the mouse.\nIf something eats the dog and the dog eats the bear then it needs the bear ::: If something eats the dog and the dog eats the bear then it needs the bear.\nIf something eats the bear then it is round ::: If something eats the bear then it is round.\nIf something eats the dog and it needs the cat then it eats the bear ::: If something eats the dog and it needs the cat then it eats"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1149_Q18",
    "context": "Anne is kind. Charlie is not big. Charlie is green. Erin is green. Erin is not kind. Harry is big. Harry is green. All big, green things are young. Big things are young. All red things are green. If something is kind then it is not red. All furry things are kind. If Harry is young then Harry is cold. If something is young and cold then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is furry.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nNot(Big(Charlie, True)) ::: Charlie is not big.\nGreen(Charlie, True) ::: Charlie is green.\nGreen(Erin, True) ::: Erin is green.\nNot(Kind(Erin, True)) ::: Erin is not kind.\nBig(Harry, True) ::: Harry is big.\nGreen(Harry, True) ::: Harry is green.\nRules:\nBig($x, True) >>> Young($x, True) ::: Big things are young.\nBig($x, True) && Green($x, True) >>> Young($x, True) ::: All big, green things are young.\nRed($x, True) >>> Green($x, True) ::: All red things are green.\nNot(Kind($x, True)) >>> Not(Red($x, True)) ::: If something is kind then it is not red.\nFurry($x, True) >>> Kind($x, True) ::: All furry things are kind.\nYoung($x, True) && Cold($x, True) >>> Furry($x, True) ::: If something is young and cold then it is furry.\nYoung($x, True) && Cold($x, True) >>> Harry($x, True) ::: If Harry is young then Harry is cold.\nQuery:\nFurry(Erin, True) ::: Erin is furry.\n------\nProblem:\nAnne is kind. Anne is not big. Anne is green. Anne is not furry. Anne is not red. Anne is not white. Anne is not young. Anne is not cold. Anne is not rough. Anne is not quiet. Anne is not green. Anne is not red. Anne is not white. Anne is not young. Anne is not cold. Anne is not rough. Anne is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-156_Q15",
    "context": "The bear chases the cow. The bear is not red. The bear sees the tiger. The cow chases the bear. The mouse chases the tiger. The tiger does not chase the mouse. The tiger needs the mouse. If someone sees the tiger then the tiger is nice. If someone chases the mouse and the mouse does not need the bear then the mouse is not young. If someone chases the cow then they are big. If someone needs the tiger then the tiger sees the bear. If someone is big then they need the tiger. If the tiger sees the bear and the tiger needs the mouse then the tiger is big. If someone is young then they need the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not need the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nIsRed($x, bool) ::: Is x red?\nIsBig($x, bool) ::: Is x big?\nIsYoung($x, bool) ::: Is x young?\nFacts:\nChases(Bear, Cow, True) ::: The bear chases the cow.\nNot(IsRed(Bear, True)) ::: The bear is not red.\nSees(Bear, Tiger, True) ::: The bear sees the tiger.\nChases(Cow, Bear, True) ::: The cow chases the bear.\nChases(Mouse, Tiger, True) ::: The mouse chases the tiger.\nNot(Chases(Tiger, Mouse, True)) ::: The tiger does not chase the mouse.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nIf(Sees(Tiger, Bear), Then(Tiger, Nice, True)) ::: If someone sees the tiger then the tiger is nice.\nNot(Chases(Mouse, Bear, True)) && Not(Mouse, Needs(Bear, True)) >>> Mouse, NotYoung(Mouse, True) ::: If someone chases the mouse and the mouse does not need the bear then the mouse is not young.\nChases(Mouse, Cow, True) ::: The mouse chases the cow.\nIf(Chases(Cow, Tiger), Then(Cow, Big, True)) ::: If someone chases the cow then they are big.\nIf(Needs(Tiger, Bear), Then(Tiger, Sees(Bear, True))) ::: If someone needs the tiger then the tiger sees the bear.\nIf(IsBig(Tiger, True), Then(Tiger, Needs(Mouse, True))) ::: If someone is big then they need the tiger.\nIf(Sees(Tiger, Bear) && Needs(Tiger, Mouse), Then(Tiger, Big, True)) ::: If the tiger sees the bear and the tiger needs the mouse then the tiger is big.\nIf(IsYoung(Mouse, True), Then(Mouse, Needs(Tiger, True))) ::: If someone is young then they need the tiger.\nQuery:\nNot(Needs(Cow, Tiger, True)) ::: The cow does not need the tiger.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-777_Q9",
    "context": "The bear is kind. The bear likes the cat. The cat likes the bear. The cat needs the cow. The cat sees the bear. The cat sees the cow. The cow is rough. The mouse likes the cat. The mouse needs the bear. The mouse sees the cow. If someone sees the bear then they need the mouse. If someone needs the bear and the bear needs the cow then the bear needs the cat. If someone likes the cow then the cow sees the bear. If the bear is red and the bear needs the cow then the cow needs the bear. If someone needs the mouse then they are big. If someone sees the bear and they are big then they like the cow. If the cat needs the mouse then the mouse needs the cow. If someone is kind then they see the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow sees the bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nFacts:\nKind(Bear, True) ::: The bear is kind.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nLikes(Cat, Bear, True) ::: The cat likes the bear.\nNeeds(Cat, Cow, True) ::: The cat needs the cow.\nSees(Cat, Bear, True) ::: The cat sees the bear.\nSees(Cat, Cow, True) ::: The cat sees the cow.\nRough(Cow, True) ::: The cow is rough.\nLikes(Mouse, Cat, True) ::: The mouse likes the cat.\nNeeds(Mouse, Bear, True) ::: The mouse needs the bear.\nSees(Mouse, Cow, True) ::: The mouse sees the cow.\nRules:\nSees($x, $y, True) >>> Needs($x, Mouse, True) ::: If someone sees the bear then they need the mouse.\nNeeds($x, Bear, True) && Needs(Bear, Cow, True) >>> Needs(Bear, Cat, True) ::: If someone needs the bear and the bear needs the cow then the bear needs the cat.\nLikes($x, Cow, True) >>> Sees(Cow, Bear, True) ::: If someone likes the cow then the cow sees the bear.\nRed($x, True) && Needs(Bear, Cow, True) >>> Needs(Cow, Bear, True) ::: If the bear is red and the bear needs the cow then the cow needs the bear.\nNeeds($x, Mouse, True) >>> Big($x, True) ::: If someone needs the mouse then they are big.\nSees($x, Bear, True) && Big($x, True) >>> Likes($x, Cow, True) ::: If the bear is red and the bear needs the cow then the cow needs the bear.\nNeeds(Cat, Mouse, True) >>> Needs(Mouse, Cow, True) ::: If someone needs the mouse then they are big.\nKind($x, True) >>> Sees($x, Cat, True) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-829_Q2",
    "context": "The dog does not eat the rabbit. The mouse eats the tiger. The mouse is green. The rabbit does not chase the tiger. The rabbit eats the dog. The rabbit is young. The tiger is green. If something visits the mouse then the mouse is big. If something eats the tiger then the tiger visits the mouse. If the dog is young and the dog does not visit the mouse then the mouse does not visit the rabbit. If something is green and it chases the rabbit then the rabbit does not eat the mouse. If something is green then it visits the dog. If something visits the rabbit and the rabbit is young then it is round. If something is round and it visits the dog then it chases the tiger. If something is big then it visits the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(Dog, Rabbit, True) ::: The dog eats the rabbit.\nEats(Mouse, Tiger, True) ::: The mouse eats the tiger.\nIs(Mouse, Green, True) ::: The mouse is green.\nChases(Rabbit, Tiger, False) ::: The rabbit does not chase the tiger.\nEats(Rabbit, Dog, True) ::: The rabbit eats the dog.\nIs(Rabbit, Young, True) ::: The rabbit is young.\nIs(Tiger, Green, True) ::: The tiger is green.\nVisits(Mouse, Tiger, True) ::: If something visits the mouse then the mouse is big.\nEats(Tiger, Mouse, True) ::: If something eats the tiger then the tiger visits the mouse.\nYoung(Dog, True) && Not(Visits(Dog, Mouse, True)) >>> Not(Visits(Mouse, Rabbit, True)) ::: If the dog is young and the dog does not visit the mouse then the mouse does not visit the rabbit.\nChases(Rabbit, Mouse, True) && Is(x, Green, True) >>> Not(Eats(x, Mouse, True)) ::: If something is green and it chases the rabbit then the rabbit does not eat the mouse.\nIs(x, Green, True) >>> Visits(x, Dog, True) ::: If something is green then it visits the dog.\nVisits(Rabbit, x, True) && Is(x, Young, True) >>> Is(x, Round, True) ::: If something is young and it visits the rabbit then it is round.\nIs(x, Round, True) && Visits(x, Dog, True) >>> Chases(x, Tiger, True) ::: If something is round and it visits the dog then it chases the tiger.\nIs(x, Big, True) >>> Visits(x, Rabbit, True) ::: If something is big then it visits the rabbit.\nQuery"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-439_Q11",
    "context": "The bald eagle is cold. The bald eagle is green. The bald eagle needs the lion. The bald eagle visits the rabbit. The dog sees the lion. The lion is cold. The lion is green. The lion needs the dog. The lion needs the rabbit. The lion visits the bald eagle. The lion visits the dog. The rabbit is round. The rabbit visits the dog. The rabbit visits the lion. If something is round then it is rough. If something visits the rabbit and it needs the bald eagle then the rabbit visits the bald eagle. If something is rough then it visits the lion. If the dog needs the rabbit and the rabbit sees the bald eagle then the bald eagle sees the dog. If the rabbit visits the lion and the rabbit needs the dog then the dog is round. If something visits the rabbit then the rabbit needs the bald eagle. If something visits the lion and the lion needs the dog then it needs the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog needs the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nNeeds(BaldEagle, Lion, True) ::: The bald eagle needs the lion.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nSees(Dog, Lion, True) ::: The dog sees the lion.\nCold(Lion, True) ::: The lion is cold.\nGreen(Lion, True) ::: The lion is green.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nVisits(Lion, BaldEagle, True) ::: The lion visits the bald eagle.\nVisits(Lion, Dog, True) ::: The lion visits the dog.\nRound(Rabbit, True) ::: The rabbit is round.\nVisits(Rabbit, Dog, True) ::: The rabbit visits the dog.\nVisits(Rabbit, Lion, True) ::: The rabbit visits the lion.\nRules:\nRound($x, True) >>> Visits($x, Lion, True) ::: If something is round then it visits the lion.\nNeeds($x, Rabbit, True) && Visits($x, BaldEagle, True) >>> Visits($x, BaldEagle, True) ::: If something visits the rabbit and it needs the bald eagle then the rabbit visits the bald eagle.\nSees($x, BaldEagle, True) && Needs($x, Rabbit, True) >>> Visits($x, Rabbit, True) ::: If the dog needs the rabbit and the rabbit sees the bald eagle then the bald eagle sees the dog.\nNeeds($x, Dog, True) && Visits($x, Rabbit, True) >>> Round($x, True) ::: If the rabbit visits the lion and the rabbit needs the dog then the dog is round.\nVisits($x, Rabbit"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-174_Q9",
    "context": "The bald eagle eats the bear. The bald eagle is cold. The bald eagle does not like the bear. The bald eagle likes the tiger. The bald eagle visits the bear. The bear eats the bald eagle. The bear is blue. The bear does not visit the tiger. The mouse likes the tiger. The tiger eats the mouse. The tiger is cold. The tiger likes the bear. If the mouse is kind then the mouse eats the bald eagle. If something eats the bald eagle and the bald eagle likes the tiger then the tiger likes the mouse. If something likes the tiger then it visits the mouse. If the tiger likes the mouse and the mouse does not eat the tiger then the mouse is big. If something visits the bear and it is kind then the bear likes the tiger. Cold, kind things are big. If the tiger eats the bald eagle then the tiger does not eat the mouse. If something visits the mouse then it is kind. If the bald eagle eats the mouse and the mouse does not eat the bear then the bald eagle is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear visits the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(BaldEagle, Bear, True) ::: The bald eagle eats the bear.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nDoesNotLike(BaldEagle, Bear, True) ::: The bald eagle does not like the bear.\nLikes(BaldEagle, Tiger, True) ::: The bald eagle likes the tiger.\nVisits(BaldEagle, Bear, True) ::: The bald eagle visits the bear.\nEats(Bear, BaldEagle, True) ::: The bear eats the bald eagle.\nBlue(Bear, True) ::: The bear is blue.\nDoesNotVisit(Bear, Tiger, True) ::: The bear does not visit the tiger.\nLikes(Mouse, Tiger, True) ::: The mouse likes the tiger.\nEats(Tiger, Mouse, True) ::: The tiger eats the mouse.\nCold(Tiger, True) ::: The tiger is cold.\nLikes(Tiger, Bear, True) ::: The tiger likes the bear.\nIfMouseIsKindThenMouseEatsBaldEagle(Mouse, BaldEagle, True) ::: If the mouse is kind then the mouse eats the bald eagle.\nIfSomethingEatsBaldEagleAndBaldEagleLikesTigerThenTigerLikesMouse(Something, BaldEagle, Tiger, Mouse, True) ::: If something eats the bald eagle and the bald eagle likes the tiger then the tiger likes the mouse.\nIfSomethingLikesTigerThenItVisitsMouse(Something, Tiger, Mouse, True) ::: If something likes the tiger then it visits the mouse.\nIfMouseLikesTigerAndMouseDoesNotEatTigerThenMouseIsBig(Mouse, Tiger, True) ::: If the mouse likes the tiger and the mouse does not eat the tiger then the mouse is big.\nIfTigerEatsBaldEagleThenTigerDoesNotEatMouse(Tiger, BaldEagle, Mouse, True) ::: If the tiger eats"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-430_Q15",
    "context": "The bear sees the squirrel. The bear visits the rabbit. The lion is not round. The lion does not like the rabbit. The lion visits the bear. The rabbit is not big. The rabbit is kind. The rabbit likes the squirrel. The rabbit sees the bear. The rabbit does not visit the bear. The squirrel visits the lion. If something is big and it visits the lion then the lion visits the rabbit. If something sees the lion then it does not like the lion. If something likes the squirrel then the squirrel visits the rabbit. If something sees the squirrel and it visits the squirrel then the squirrel does not see the lion. If something visits the lion then the lion is not round. If something sees the lion and it does not see the bear then it sees the squirrel. If something visits the rabbit then it sees the lion. If something sees the lion then it is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not see the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nLikes($x, $y, bool) ::: Does x like y?\nIsRound($x, bool) ::: Is x round?\nIsBig($x, bool) ::: Is x big?\nFacts:\nVisits(Bear, Squirrel, True) ::: The bear sees the squirrel.\nVisits(Bear, Rabbit, True) ::: The bear visits the rabbit.\nNotRound(Lion, True) ::: The lion is not round.\nNotLikes(Lion, Rabbit, True) ::: The lion does not like the rabbit.\nVisits(Lion, Bear, True) ::: The lion visits the bear.\nNotBig(Rabbit, True) ::: The rabbit is not big.\nKind(Rabbit, True) ::: The rabbit is kind.\nLikes(Rabbit, Squirrel, True) ::: The rabbit likes the squirrel.\nSees(Rabbit, Bear, True) ::: The rabbit sees the bear.\nNotVisits(Rabbit, Bear, True) ::: The rabbit does not visit the bear.\nVisits(Squirrel, Lion, True) ::: The squirrel visits the lion.\nRules:\nIf something is big and it visits the lion then the lion visits the rabbit ::: If something is big and it visits the lion then the lion visits the rabbit.\nIf something sees the lion then it does not like the lion ::: If something sees the lion then it does not like the lion.\nIf something likes the squirrel then the squirrel visits the rabbit ::: If something likes the squirrel then the squirrel visits the rabbit.\nIf something sees the squirrel and it visits the squirrel then the squirrel does not see the lion ::: If something sees the squirrel and it visits the squirrel then the squirrel does not see the lion.\nIf something visits the lion then the lion is not round ::: If something visits the lion then the lion is not round.\nIf something sees the lion and it does not see the bear then it sees the squirrel ::: If something sees the lion and it does not see the bear then it sees the squirrel.\nIf something visits the rabbit then it sees the lion ::: If something visits the rabbit then it sees the lion.\nIf something sees the lion then it is big ::: If something sees the lion then it is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1236_Q12",
    "context": "Anne is blue. Anne is smart. Bob is green. Bob is round. Erin is rough. Harry is cold. Harry is kind. All kind things are round. If something is rough then it is round. All cold things are round. Round things are cold. All kind things are green. If something is smart then it is rough. If something is cold and not blue then it is rough. If Bob is smart then Bob is not green. All smart, cold things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nSmart($x, bool) ::: Is x smart?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nSmart(Anne, True) ::: Anne is smart.\nGreen(Bob, True) ::: Bob is green.\nRound(Bob, True) ::: Bob is round.\nRough(Erin, True) ::: Erin is rough.\nCold(Harry, True) ::: Harry is cold.\nKind(Harry, True) ::: Harry is kind.\nRules:\nKind($x, True) >>> Round($x, True) ::: All kind things are round.\nRough($x, True) >>> Round($x, True) ::: If something is rough then it is round.\nCold($x, True) >>> Round($x, True) ::: All cold things are round.\nRound($x, True) >>> Cold($x, True) ::: Round things are cold.\nKind($x, True) >>> Green($x, True) ::: All kind things are green.\nSmart($x, True) >>> Rough($x, True) ::: If something is smart then it is rough.\nCold($x, True) && Not(Blue($x, True)) >>> Rough($x, True) ::: If something is cold and not blue then it is rough.\nIf(Bob(Smart($x, True))) >>> Not(Green($x, True)) ::: If Bob is smart then Bob is not green.\nSmart($x, True) && Cold($x, True) >>> Kind($x, True) ::: All smart, cold things are kind.\nQuery:\nNot(Green(Anne, True)) ::: Anne is not green.\n------\nProblem:\nAnne is blue. Anne is smart. Bob is green. Bob is round. Erin is rough. Harry is cold. Harry is kind. All kind things are round. If something is rough then it is round. All cold things are round. Round things are cold. All kind things are green. If something is smart then it is rough. If something is cold and not blue then it is rough. If Bob is smart then Bob is not green. All smart, cold things are kind.\nQuestion:\nBased on the above information,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-754_Q13",
    "context": "Anne is big. Anne is furry. Anne is rough. Anne is round. Anne is young. Charlie is big. Charlie is cold. Dave is furry. Dave is young. Harry is furry. Harry is nice. Harry is young. All round things are cold. Cold, furry things are rough. If something is furry and rough then it is round. If Charlie is round and Charlie is furry then Charlie is nice. All round, nice things are rough. Big, cold things are furry. Furry, round things are cold. Nice, round things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Anne, True) ::: Anne is big.\nFurry(Anne, True) ::: Anne is furry.\nRound(Anne, True) ::: Anne is round.\nYoung(Anne, True) ::: Anne is young.\nBig(Charlie, True) ::: Charlie is big.\nCold(Charlie, True) ::: Charlie is cold.\nFurry(Dave, True) ::: Dave is furry.\nYoung(Dave, True) ::: Dave is young.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nYoung(Harry, True) ::: Harry is young.\nRules:\nRound($x, True) >>> Cold($x, True) ::: All round things are cold.\nCold($x, True) && Furry($x, True) >>> Rough($x, True) ::: Cold, furry things are rough.\nFurry($x, True) && Rough($x, True) >>> Round($x, True) ::: If something is furry and rough then it is round.\nCharlie(Round($x, True) && Furry($x, True)) >>> Nice($x, True) ::: If Charlie is round and Charlie is furry then Charlie is nice.\nRound($x, True) && Nice($x, True) >>> Rough($x, True) ::: All round, nice things are rough.\nBig($x, True) && Cold($x, True) >>> Furry($x, True) ::: Big, cold things are furry.\nFurry($x, True) && Round($x, True) >>> Cold($x, True) ::: Furry, round things are cold.\nNice($x, True) && Round($x, True) >>> Young($x, True) ::: Nice, round things are young.\nQuery:\nNot(Rough(Harry, True)) ::: Harry is not rough.\n------\nProblem:\nAnne is big. Anne is furry. Anne is rough. Anne is round. Anne is"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-439_Q2",
    "context": "The bald eagle is cold. The bald eagle is green. The bald eagle needs the lion. The bald eagle visits the rabbit. The dog sees the lion. The lion is cold. The lion is green. The lion needs the dog. The lion needs the rabbit. The lion visits the bald eagle. The lion visits the dog. The rabbit is round. The rabbit visits the dog. The rabbit visits the lion. If something is round then it is rough. If something visits the rabbit and it needs the bald eagle then the rabbit visits the bald eagle. If something is rough then it visits the lion. If the dog needs the rabbit and the rabbit sees the bald eagle then the bald eagle sees the dog. If the rabbit visits the lion and the rabbit needs the dog then the dog is round. If something visits the rabbit then the rabbit needs the bald eagle. If something visits the lion and the lion needs the dog then it needs the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not need the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nGreen(BaldEagle, True) ::: The bald eagle is green.\nNeeds(BaldEagle, Lion, True) ::: The bald eagle needs the lion.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nSees(Dog, Lion, True) ::: The dog sees the lion.\nCold(Lion, True) ::: The lion is cold.\nGreen(Lion, True) ::: The lion is green.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nVisits(Lion, BaldEagle, True) ::: The lion visits the bald eagle.\nVisits(Lion, Dog, True) ::: The lion visits the dog.\nRound(Rabbit, True) ::: The rabbit is round.\nVisits(Rabbit, Dog, True) ::: The rabbit visits the dog.\nVisits(Rabbit, Lion, True) ::: The rabbit visits the lion.\nRules:\nRound($x, True) >>> Visits($x, Lion, True) ::: If something is round then it visits the lion.\nSees($x, Rabbit, True) && Needs($x, BaldEagle, True) >>> Visits($x, BaldEagle, True) ::: If the dog needs the rabbit and the rabbit sees the bald eagle then the bald eagle sees the dog.\nVisits($x, Rabbit, True) && Needs($x, Dog, True) >>> Round($x, True) ::: If the rabbit visits the lion and the rabbit needs the dog then the dog is round.\nVisits($x, Rabbit, True) && Needs($x, BaldEagle, True) >>> Needs($x, BaldEagle, True) ::: If something visits the rabbit and it needs the bald eagle then the rabbit visits the bald eagle.\nNeeds($x, Bald"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-169_Q5",
    "context": "The bald eagle chases the rabbit. The bald eagle does not chase the tiger. The bald eagle is green. The bald eagle is red. The bald eagle is young. The bald eagle sees the rabbit. The bear sees the bald eagle. The rabbit is red. The rabbit needs the bald eagle. The tiger chases the bear. The tiger is green. The tiger sees the bald eagle. If something is young and red then it is green. If something sees the bear then it needs the tiger. If something needs the bald eagle then the bald eagle chases the rabbit. If something is big and it chases the rabbit then it sees the bear. If something sees the rabbit and it needs the tiger then the tiger is not blue. If something chases the rabbit then it sees the bald eagle. If the rabbit is not young and the rabbit does not need the bald eagle then the rabbit sees the bear. If something is red and it needs the bear then it is big. If something is red then it needs the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(BaldEagle, Rabbit, True) ::: The bald eagle chases the rabbit.\nChases(BaldEagle, Tiger, False) ::: The bald eagle does not chase the tiger.\nIs(BaldEagle, Green, True) ::: The bald eagle is green.\nIs(BaldEagle, Red, True) ::: The bald eagle is red.\nIs(BaldEagle, Young, True) ::: The bald eagle is young.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nSees(Bear, BaldEagle, True) ::: The bear sees the bald eagle.\nIs(Rabbit, Red, True) ::: The rabbit is red.\nNeeds(Rabbit, BaldEagle, True) ::: The rabbit needs the bald eagle.\nChases(Tiger, Bear, True) ::: The tiger chases the bear.\nIs(Tiger, Green, True) ::: The tiger is green.\nSees(BaldEagle, Tiger, True) ::: The tiger sees the bald eagle.\nRules:\nYoung($x, True) && Red($x, True) >>> Green($x, True) ::: If something is young and red then it is green.\nNeeds($x, $y, True) >>> Chases($x, $y, True) ::: If something needs the bald eagle then the bald eagle chases the rabbit.\nBig($x, True) && Chases($x, $y, True) >>> Sees($x, $y, True) ::: If something is big and it chases the rabbit then it sees the bear.\nSees($x, $y, True) && Needs($x, $y, True) >>> Tiger($y, True) ::: If something sees the rabbit and it needs the tiger then the t"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-391_Q17",
    "context": "Anne is round. Anne is young. Erin is cold. Erin is kind. Erin is quiet. Erin is round. Erin is smart. Erin is white. Erin is young. Gary is smart. Harry is quiet. Harry is young. If someone is white and quiet then they are smart. If someone is smart and cold then they are round. If someone is kind then they are white. Young people are quiet. Quiet, smart people are round. Kind, quiet people are round. If someone is smart then they are kind. If someone is kind then they are young. All round, white people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nRound(Anne, True) ::: Anne is round.\nYoung(Anne, True) ::: Anne is young.\nCold(Erin, True) ::: Erin is cold.\nKind(Erin, True) ::: Erin is kind.\nQuiet(Erin, True) ::: Erin is quiet.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nSmart(Gary, True) ::: Gary is smart.\nQuiet(Harry, True) ::: Harry is quiet.\nYoung(Harry, True) ::: Harry is young.\nRules:\nYoung($x, True) >>> Quiet($x, True) ::: Young people are quiet.\nQuiet($x, True) && Smart($x, True) >>> Round($x, True) ::: Quiet, smart people are round.\nKind($x, True) >>> White($x, True) ::: If someone is kind then they are white.\nYoung($x, True) >>> Kind($x, True) ::: If someone is kind then they are young.\nWhite($x, True) && Smart($x, True) >>> Cold($x, True) ::: If someone is smart then they are cold.\nSmart($x, True) && Cold($x, True) >>> Round($x, True) ::: If someone is smart and cold then they are round.\nSmart($x, True) >>> Kind($x, True) ::: If someone is smart then they are kind.\nKind($x, True) >>> Young($x, True) ::: If someone is kind then they are young.\nAll($x, Round($x, True) && White($x, True)) >>> Cold($x, True) ::: All round, white people are cold.\nQuery:\nNot(Kind(Harry, True)) ::: Harry is not kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-371_Q22",
    "context": "Anne is nice. Anne is smart. Bob is nice. Fiona is green. Fiona is nice. Gary is blue. Gary is smart. All red things are nice. Big things are kind. If Bob is smart then Bob is green. Blue things are green. Green, smart things are big. If something is red and blue then it is big. Nice things are red. All kind things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nSmart(Anne, True) ::: Anne is smart.\nNice(Bob, True) ::: Bob is nice.\nGreen(Fiona, True) ::: Fiona is green.\nNice(Fiona, True) ::: Fiona is nice.\nBlue(Gary, True) ::: Gary is blue.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nRed($x, True) >>> Nice($x, True) ::: Nice things are red.\nKind($x, True) >>> Red($x, True) ::: All kind things are red.\nBig($x, True) >>> Kind($x, True) ::: Big things are kind.\nRed($x, True) >>> Big($x, True) ::: All red things are nice.\nBlue($x, True) >>> Green($x, True) ::: Blue things are green.\nGreen($x, True) >>> Smart($x, True) ::: Green, smart things are big.\nSmart($x, True) >>> Green($x, True) ::: If Bob is smart then Bob is green.\nRed($x, True) >>> Smart($x, True) ::: Nice things are red.\nQuery:\nSmart(Bob, True) ::: Bob is smart.\n------\nProblem:\nAnne is nice. Anne is smart. Bob is nice. Fiona is green. Fiona is nice. Gary is blue. Gary is smart. All red things are nice. Big things are kind. If Bob is smart then Bob is green. Blue things are green. Green, smart things are big. If something is red and blue then it is big. Nice things are red. All kind things are red.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is smart.\n###\nPredicates:\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nGreen($x, bool) ::: Is x green?\nBlue"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-329_Q6",
    "context": "The bald eagle is cold. The bald eagle is rough. The bald eagle needs the tiger. The bald eagle visits the squirrel. The lion is cold. The lion is kind. The lion needs the tiger. The squirrel chases the bald eagle. The squirrel chases the tiger. The squirrel visits the tiger. The tiger is red. If someone needs the squirrel then they chase the tiger. If someone is rough and they chase the squirrel then the squirrel visits the lion. If someone visits the tiger and they visit the lion then the lion needs the bald eagle. If someone visits the bald eagle and the bald eagle visits the squirrel then the bald eagle chases the squirrel. If someone is red then they chase the lion. If someone chases the lion and they visit the bald eagle then they need the bald eagle. If someone visits the bald eagle then they need the bald eagle. If someone chases the lion then they visit the bald eagle. If someone chases the tiger then the tiger chases the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not visit the bald eagle.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nRed($x, bool) ::: Is x red?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nNeeds(BaldEagle, Tiger, True) ::: The bald eagle needs the tiger.\nVisits(BaldEagle, Squirrel, True) ::: The bald eagle visits the squirrel.\nCold(Lion, True) ::: The lion is cold.\nKind(Lion, True) ::: The lion is kind.\nNeeds(Lion, Tiger, True) ::: The lion needs the tiger.\nChases(Squirrel, BaldEagle, True) ::: The squirrel chases the bald eagle.\nChases(Squirrel, Tiger, True) ::: The squirrel chases the tiger.\nVisits(Squirrel, Tiger, True) ::: The squirrel visits the tiger.\nRed(Tiger, True) ::: The tiger is red.\nRules:\nNeeds($x, $y, True) >>> Chases($x, $y, True) ::: If someone needs the squirrel then they chase the tiger.\nRough($x, True) && Chases($x, $y, True) >>> Visits($y, $z, True) ::: If someone is rough and they chase the squirrel then the squirrel visits the lion.\nVisits($x, $y, True) && Visits($x, $z, True) >>> Needs($y, $z, True) ::: If someone visits the tiger and they visit the lion then the lion needs the bald eagle.\nVisits($x, $y, True) && Visits($y, $z, True) >>> Chases($x, $z, True) ::: If someone visits the bald eagle and the bald eagle visits the squirrel then the bald eagle chases the squirrel.\nRed($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-891_Q1",
    "context": "Bob is green. Bob is kind. Charlie is green. Charlie is not smart. Erin is not young. Fiona is nice. Fiona is young. Green, smart things are quiet. If something is kind then it is green. Smart things are young. Young things are kind. Quiet things are furry. All quiet, nice things are furry. Nice, green things are smart. If Bob is kind and Bob is not green then Bob is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nFurry($x, bool) ::: Is x furry?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nKind(Bob, True) ::: Bob is kind.\nGreen(Charlie, True) ::: Charlie is green.\nSmart(Charlie, False) ::: Charlie is not smart.\nNot(Young(Erin, True)) ::: Erin is not young.\nNice(Fiona, True) ::: Fiona is nice.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nGreen($x, True) && Smart($x, True) >>> Quiet($x, True) ::: Green, smart things are quiet.\nKind($x, True) >>> Green($x, True) ::: If something is kind then it is green.\nSmart($x, True) >>> Young($x, True) ::: Smart things are young.\nYoung($x, True) >>> Kind($x, True) ::: Young things are kind.\nQuiet($x, True) && Nice($x, True) >>> Furry($x, True) ::: All quiet, nice things are furry.\nNice($x, True) && Green($x, True) >>> Smart($x, True) ::: Nice, green things are smart.\nNot(Green($x, True)) && Kind($x, True) && Not(Green($x, True)) >>> Furry($x, True) ::: If Bob is kind and Bob is not green then Bob is furry.\nQuery:\nNot(Young(Erin, True)) ::: Erin is not young.\n------\nProblem:\nBob is green. Bob is kind. Charlie is green. Charlie is not smart. Erin is not young. Fiona is nice. Fiona is young. Green, smart things are quiet. If something is kind then it is green. Smart things are young. Young things are kind. Quiet things are furry. All quiet, nice things are furry. Nice, green things are smart. If Bob is kind and Bob is not green then Bob is furry.\nQuestion:\nBased on the above"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-199_Q4",
    "context": "The dog is blue. The dog sees the mouse. The mouse is not round. The mouse sees the dog. The rabbit is cold. The rabbit is red. The rabbit sees the mouse. The squirrel is green. The squirrel needs the mouse. The squirrel sees the dog. The squirrel does not visit the dog. If something sees the dog then it sees the squirrel. If something is red and blue then it sees the squirrel. If something needs the squirrel and it is green then it visits the rabbit. If something needs the rabbit and the rabbit is blue then the rabbit does not need the dog. If the mouse needs the rabbit and the rabbit is cold then the mouse is green. If something sees the squirrel then it needs the rabbit. If something sees the rabbit then it needs the mouse. If something is blue then it needs the dog. If something is green and it sees the dog then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not see the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBlue(Dog, True) ::: The dog is blue.\nSees(Dog, Mouse, True) ::: The dog sees the mouse.\nNot(Round(Mouse, True)) ::: The mouse is not round.\nSees(Mouse, Dog, True) ::: The mouse sees the dog.\nCold(Rabbit, True) ::: The rabbit is cold.\nRed(Rabbit, True) ::: The rabbit is red.\nSees(Rabbit, Mouse, True) ::: The rabbit sees the mouse.\nGreen(Squirrel, True) ::: The squirrel is green.\nNeeds(Squirrel, Mouse, True) ::: The squirrel needs the mouse.\nSees(Squirrel, Dog, True) ::: The squirrel sees the dog.\nNot(Visits(Squirrel, Dog, True)) ::: The squirrel does not visit the dog.\nSees(Dog, Squirrel, True) ::: If something sees the dog then it sees the squirrel.\nAnd(Red(x, True), Blue(x, True)) >>> Sees(x, Squirrel, True) ::: If something is red and blue then it sees the squirrel.\nNeeds(Squirrel, Rabbit, True) && Green(Squirrel, True) >>> Visits(Squirrel, Rabbit, True) ::: If something needs the squirrel and it is green then it visits the rabbit.\nNeeds(Rabbit, Dog, True) && Blue(Rabbit, True) >>> Not(Needs(Rabbit, Dog, True)) ::: If the mouse needs the rabbit and the rabbit is blue then the rabbit does not need the dog.\nNeeds(Mouse, Rabbit, True) && Blue(Rabbit, True) >>> Green(Mouse, True) ::: If something needs the rabbit and the rabbit is blue then the mouse is green.\nSees(Squirrel, x"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-336_Q4",
    "context": "The bald eagle eats the bear. The bald eagle eats the cat. The bald eagle eats the rabbit. The bald eagle is young. The bald eagle likes the bear. The bald eagle sees the cat. The bald eagle sees the rabbit. The bear eats the bald eagle. The cat eats the bald eagle. The cat likes the rabbit. The rabbit is round. The rabbit sees the bald eagle. If someone eats the bald eagle and they see the rabbit then they are round. If someone eats the bald eagle and they eat the rabbit then the rabbit likes the cat. If someone is young and they eat the rabbit then the rabbit sees the cat. If someone eats the rabbit and the rabbit is cold then they are blue. If the rabbit sees the cat and the rabbit is round then the cat eats the rabbit. If the bald eagle sees the bear and the bald eagle likes the bear then the bald eagle is red. If someone eats the rabbit and they are blue then they eat the bald eagle. If someone likes the cat then the cat is round. If the rabbit likes the cat and the cat is round then the rabbit is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not see the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nFacts:\nEats(BaldEagle, Bear, True) ::: The bald eagle eats the bear.\nEats(BaldEagle, Cat, True) ::: The bald eagle eats the cat.\nEats(BaldEagle, Rabbit, True) ::: The bald eagle eats the rabbit.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nLikes(BaldEagle, Bear, True) ::: The bald eagle likes the bear.\nSees(BaldEagle, Cat, True) ::: The bald eagle sees the cat.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nEats(Bear, BaldEagle, True) ::: The bear eats the bald eagle.\nEats(Cat, BaldEagle, True) ::: The cat eats the bald eagle.\nLikes(Cat, Rabbit, True) ::: The cat likes the rabbit.\nRound(Rabbit, True) ::: The rabbit is round.\nSees(Rabbit, BaldEagle, True) ::: The rabbit sees the bald eagle.\nRules:\nEats($x, $y, True) && Sees($x, $z, True) >>> Round($z, True) ::: If someone eats the bald eagle and they see the rabbit then they are round.\nEats($x, $y, True) && Eats($x, $z, True) >>> $y Likes $z ::: If someone eats the bald eagle and they eat the rabbit then the rabbit likes the cat.\nEats($x, $y, True) && Young($x, True) >>> Round($y, True) ::: If someone eats the rabbit and they are young then the rabbit sees the cat.\nEats($x, $y, True) && Blue($x, True) >>> Blue($y, True) ::: If the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1044_Q10",
    "context": "Bob is blue. Bob is white. Charlie is green. Charlie is quiet. Charlie is round. Charlie is white. Erin is blue. Erin is cold. Erin is green. Gary is big. Gary is blue. Gary is cold. Gary is green. Gary is quiet. Gary is round. Gary is white. White things are cold. If something is blue then it is white. If something is cold then it is round. If something is green then it is quiet. All round, big things are green. If Bob is round then Bob is big. All white, quiet things are big. If something is big then it is cold. If something is blue and quiet then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nWhite(Bob, True) ::: Bob is white.\nGreen(Charlie, True) ::: Charlie is green.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRound(Charlie, True) ::: Charlie is round.\nWhite(Charlie, True) ::: Charlie is white.\nBlue(Erin, True) ::: Erin is blue.\nCold(Erin, True) ::: Erin is cold.\nGreen(Erin, True) ::: Erin is green.\nBig(Gary, True) ::: Gary is big.\nBlue(Gary, True) ::: Gary is blue.\nCold(Gary, True) ::: Gary is cold.\nGreen(Gary, True) ::: Gary is green.\nQuiet(Gary, True) ::: Gary is quiet.\nRound(Gary, True) ::: Gary is round.\nWhite(Gary, True) ::: Gary is white.\nRules:\nWhite($x, True) >>> Cold($x, True) ::: White things are cold.\nBlue($x, True) >>> White($x, True) ::: If something is blue then it is white.\nCold($x, True) >>> Round($x, True) ::: If something is cold then it is round.\nGreen($x, True) >>> Quiet($x, True) ::: If something is green then it is quiet.\nBig($x, True) && Green($x, True) >>> Round($x, True) ::: All round, big things are green.\nRound($x, True) >>> Big($x, True) ::: If Bob is round then Bob is big.\nWhite($x, True) && Quiet($x, True) >>> Big($x, True) ::: All white, quiet things are big.\nBig($x, True) >>> Cold($x, True) ::: If something is big then it is cold.\nBlue($x, True) && Quiet($x, True) >>> Cold($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-517_Q7",
    "context": "The bald eagle is green. The bald eagle is red. The cat chases the lion. The cat sees the tiger. The cat visits the bald eagle. The cat visits the lion. The lion chases the cat. The lion is red. The lion sees the bald eagle. The lion sees the cat. The tiger chases the cat. The tiger sees the cat. The tiger visits the bald eagle. The tiger visits the lion. If something sees the lion and it sees the bald eagle then it chases the cat. If something chases the cat then it is young. If something visits the tiger and the tiger sees the cat then it sees the lion. If something visits the tiger and the tiger visits the lion then it sees the bald eagle. If the lion sees the bald eagle then the bald eagle visits the tiger. If something is young then it visits the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle chases the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nRed(BaldEagle, True) ::: The bald eagle is red.\nChases(Cat, Lion, True) ::: The cat chases the lion.\nSees(Cat, Tiger, True) ::: The cat sees the tiger.\nVisits(Cat, BaldEagle, True) ::: The cat visits the bald eagle.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nRed(Lion, True) ::: The lion is red.\nSees(Lion, BaldEagle, True) ::: The lion sees the bald eagle.\nSees(Lion, Cat, True) ::: The lion sees the cat.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nSees(Tiger, Cat, True) ::: The tiger sees the cat.\nVisits(Tiger, BaldEagle, True) ::: The tiger visits the bald eagle.\nVisits(Tiger, Lion, True) ::: The tiger visits the lion.\nRules:\nIf something sees the lion and it sees the bald eagle then it chases the cat ::: If something sees the lion and it sees the bald eagle then it chases the cat.\nIf something chases the cat then it is young ::: If something chases the cat then it is young.\nIf something visits the tiger and the tiger sees the cat then it sees the lion ::: If something visits the tiger and the tiger sees the cat then it sees the lion.\nIf something visits the tiger and the tiger visits the lion then it sees the bald eagle ::: If something visits the tiger and the tiger visits the lion then it sees the bald eagle.\nIf the lion sees the bald eagle then the bald eagle visits the tiger ::: If the lion sees the bald eagle then the bald eagle visits the tiger."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-341_Q3",
    "context": "The bald eagle is cold. The bald eagle is nice. The bald eagle likes the cow. The bald eagle likes the tiger. The bald eagle sees the cow. The bald eagle sees the dog. The bald eagle sees the tiger. The bald eagle visits the cow. The cow is young. The cow visits the bald eagle. The dog sees the bald eagle. The dog visits the tiger. The tiger is blue. The tiger is cold. The tiger is young. The tiger visits the cow. If something is big and it visits the bald eagle then it visits the cow. If something likes the tiger and the tiger is big then it is big. If something visits the cow and the cow is young then it is big. If something visits the tiger then it is young. If the tiger likes the dog then the tiger visits the bald eagle. If something is big then it visits the dog. If something visits the dog then it is cold. If something is young then it likes the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nNice(BaldEagle, True) ::: The bald eagle is nice.\nLikes(BaldEagle, Cow, True) ::: The bald eagle likes the cow.\nLikes(BaldEagle, Tiger, True) ::: The bald eagle likes the tiger.\nSees(BaldEagle, Cow, True) ::: The bald eagle sees the cow.\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nSees(BaldEagle, Tiger, True) ::: The bald eagle sees the tiger.\nVisits(BaldEagle, Cow, True) ::: The bald eagle visits the cow.\nYoung(Cow, True) ::: The cow is young.\nVisits(Cow, BaldEagle, True) ::: The cow visits the bald eagle.\nSees(Dog, BaldEagle, True) ::: The dog sees the bald eagle.\nVisits(Dog, Tiger, True) ::: The dog visits the tiger.\nBlue(Tiger, True) ::: The tiger is blue.\nCold(Tiger, True) ::: The tiger is cold.\nYoung(Tiger, True) ::: The tiger is young.\nVisits(Tiger, Cow, True) ::: The tiger visits the cow.\nRules:\nBig($x, True) >>> Visits($x, BaldEagle, True) ::: If something is big and it visits the bald eagle then it visits the cow.\nLikes($x, Tiger, True) && Big($x, True) >>> Big($x, True) ::: If something likes the tiger and the tiger is big then it is big.\nVisits($x, Cow, True) && Young($x, True) >>> Big($x, True) ::: If something visits the cow and the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-818_Q1",
    "context": "Charlie is young. Erin is blue. Erin is not kind. Fiona is blue. Fiona is white. Gary is blue. Gary is kind. Furry, nice things are white. If something is young and blue then it is smart. All blue, smart things are furry. All smart, white things are furry. Young things are nice. If Fiona is smart and Fiona is young then Fiona is not furry. If Erin is kind then Erin is furry. If Gary is smart and Gary is white then Gary is not kind. If something is nice then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nSmart($x, bool) ::: Is x smart?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Erin, True) ::: Erin is blue.\nNot(Kind(Erin, True)) ::: Erin is not kind.\nBlue(Fiona, True) ::: Fiona is blue.\nWhite(Fiona, True) ::: Fiona is white.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nFurry(Furry, Nice($x, True) >>> White($x, True) ::: Furry, nice things are white.\nYoung($x, True) && Blue($x, True) >>> Smart($x, True) ::: If something is young and blue then it is smart.\nBlue($x, True) && Smart($x, True) >>> Furry($x, True) ::: All blue, smart things are furry.\nSmart($x, True) && White($x, True) >>> Furry($x, True) ::: All smart, white things are furry.\nYoung($x, True) >>> Nice($x, True) ::: Young things are nice.\nNot(Furry(Fiona, True) >>> Smart($x, True) && Young($x, True) >>> Not(Furry($x, True)) ::: If Fiona is smart and Fiona is young then Fiona is not furry.\nKind(Erin, True) >>> Furry(Erin, True) ::: If Erin is kind then Erin is furry.\nNot(Kind(Gary, True) && Smart($x, True) && White($x, True) >>> Not(Kind($x, True)) ::: If Gary is smart and Gary is white then Gary is not kind.\nBlue($x, True) >>> Nice($x, True) ::: If something is nice then it is blue.\nQuery:\nYoung(Charlie, True) ::: Charlie is young.\n------\nProblem:\nCharlie is young. Erin is blue. Erin is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1203_Q8",
    "context": "Anne is nice. Erin is red. Erin is not round. Fiona is not nice. Harry is not blue. Harry is red. Harry is young. If Harry is blue and Harry is nice then Harry is red. If something is young and round then it is rough. All young, nice things are rough. Round, quiet things are young. If Erin is young and Erin is round then Erin is blue. Nice things are quiet. All quiet things are round. Rough things are not red. If something is round and red then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nRed(Erin, True) ::: Erin is red.\nRound(Erin, False) ::: Erin is not round.\nNice(Fiona, False) ::: Fiona is not nice.\nBlue(Harry, False) ::: Harry is not blue.\nRed(Harry, True) ::: Harry is red.\nYoung(Harry, True) ::: Harry is young.\nRules:\nHarry(Blue, True) && Harry(Nice, True) >>> Harry(Red, True) ::: If Harry is blue and Harry is nice then Harry is red.\nYoung($x, True) && Round($x, True) >>> Rough($x, True) ::: If something is young and round then it is rough.\nYoung($x, True) && Nice($x, True) >>> Rough($x, True) ::: All young, nice things are rough.\nRound($x, True) && Quiet($x, True) >>> Young($x, True) ::: Round, quiet things are young.\nNice($x, True) >>> Quiet($x, True) ::: Nice things are quiet.\nQuiet($x, True) >>> Round($x, True) ::: All quiet things are round.\nRough($x, True) >>> Not(Red($x, True)) ::: Rough things are not red.\nRound($x, True) && Red($x, True) >>> Blue($x, True) ::: If something is round and red then it is blue.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-745_Q5",
    "context": "The bear is round. The bear likes the cow. The bear visits the lion. The cow is big. The cow is rough. The lion needs the bear. The mouse likes the lion. If someone visits the lion then they are round. If someone needs the bear then they need the lion. If someone needs the lion then they visit the lion. If someone visits the lion and the lion is round then they like the lion. If someone is rough then they need the lion. If someone likes the lion and they need the lion then the lion visits the mouse. If someone is rough then they visit the lion. If someone likes the lion and the lion is big then they are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion visits the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nFacts:\nRound(Bear, True) ::: The bear is round.\nLikes(Bear, Cow, True) ::: The bear likes the cow.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nBig(Cow, True) ::: The cow is big.\nRough(Cow, True) ::: The cow is rough.\nNeeds(Lion, Bear, True) ::: The lion needs the bear.\nLikes(Mouse, Lion, True) ::: The mouse likes the lion.\nRules:\nVisits($x, $y, True) >>> Round($x, True) ::: If someone visits the lion then they are round.\nNeeds($x, $y, True) >>> Needs($x, $y, True) ::: If someone needs the bear then they need the lion.\nNeeds($x, $y, True) >>> Visits($x, $y, True) ::: If someone needs the lion then they visit the lion.\nVisits($x, $y, True) && Round($y, True) >>> Likes($x, $y, True) ::: If someone visits the lion and the lion is round then they like the lion.\nRough($x, True) >>> Needs($x, Lion, True) ::: If someone is rough then they need the lion.\nLikes($x, $y, True) && Needs($x, $y, True) >>> Visits($y, Mouse, True) ::: If someone likes the lion and they need the"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1029_Q16",
    "context": "The bear is young. The bear visits the lion. The cat is round. The cat needs the bear. The lion is cold. The lion is not green. The lion is round. The lion does not need the bear. The lion sees the bear. The lion visits the bear. The lion visits the cat. The lion visits the rabbit. The rabbit is green. The rabbit is rough. The rabbit sees the lion. The rabbit visits the cat. If something visits the cat then the cat sees the lion. If something visits the lion and the lion visits the rabbit then it needs the lion. If something needs the lion and the lion is round then it needs the cat. If something is green and it needs the rabbit then the rabbit is green. If something is round then it visits the lion. If something sees the cat and the cat visits the lion then it is not rough. If something needs the cat and it is not green then it sees the cat. If something is young and it visits the bear then it sees the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit needs the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nFacts:\nYoung(Bear, True) ::: The bear is young.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Bear, True) ::: The cat needs the bear.\nCold(Lion, True) ::: The lion is cold.\nNot(Green(Lion, True)) ::: The lion is not green.\nRound(Lion, True) ::: The lion is round.\nNot(Needs(Lion, Bear, True)) ::: The lion does not need the bear.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nVisits(Lion, Bear, True) ::: The lion visits the bear.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nGreen(Rabbit, True) ::: The rabbit is green.\nRough(Rabbit, True) ::: The rabbit is rough.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nVisits(Rabbit, Cat, True) ::: The rabbit visits the cat.\nRules:\nYoung($x, True) >>> Visits($x, Bear, True) ::: If something visits the cat then the cat sees the lion.\nVisits($x, Lion) && Visits(Lion"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-151_Q5",
    "context": "The cat chases the tiger. The cat is red. The lion is nice. The lion is red. The lion sees the cat. The lion sees the rabbit. The lion sees the tiger. The rabbit chases the tiger. The rabbit sees the tiger. The tiger chases the cat. The tiger chases the rabbit. The tiger is nice. If someone is red and they eat the rabbit then they are blue. If the lion eats the cat and the lion chases the rabbit then the cat is kind. If the rabbit eats the tiger then the tiger is nice. If someone is rough then they see the cat. If someone is nice and they chase the rabbit then the rabbit is nice. If someone eats the cat and they are kind then they see the tiger. If someone is nice and they chase the tiger then they are blue. If someone is blue then they eat the cat. If someone eats the cat then the cat is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(Cat, Tiger, True) ::: The cat chases the tiger.\nRed(Cat, True) ::: The cat is red.\nNice(Lion, True) ::: The lion is nice.\nRed(Lion, True) ::: The lion is red.\nSees(Lion, Cat, True) ::: The lion sees the cat.\nSees(Lion, Rabbit, True) ::: The lion sees the rabbit.\nSees(Lion, Tiger, True) ::: The lion sees the tiger.\nChases(Rabbit, Tiger, True) ::: The rabbit chases the tiger.\nSees(Rabbit, Tiger, True) ::: The rabbit sees the tiger.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nNice(Tiger, True) ::: The tiger is nice.\nRed($x, True) >>> Blue($x, True) ::: If someone is red and they eat the rabbit then they are blue.\nKind(Lion, True) && Chases(Lion, Rabbit) >>> Cat(Lion, True) ::: If the lion eats the cat and the lion chases the rabbit then the cat is kind.\nEats(Rabbit, Tiger, True) >>> Nice(T"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-491_Q15",
    "context": "The bear chases the lion. The bear is not young. The dog chases the bear. The dog chases the lion. The dog chases the squirrel. The dog sees the lion. The dog visits the squirrel. The lion does not chase the bear. The lion does not chase the squirrel. The lion is not red. The squirrel chases the bear. The squirrel chases the dog. The squirrel is green. The squirrel is round. The squirrel is young. The squirrel sees the dog. If something visits the bear then it sees the bear. If something sees the bear then the bear sees the dog. If something visits the dog and the dog is young then the dog sees the bear. If something is green then it sees the dog. If something sees the dog then it visits the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not visit the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nChases(Bear, Lion, True) ::: The bear chases the lion.\nYoung(Bear, False) ::: The bear is not young.\nChases(Dog, Bear, True) ::: The dog chases the bear.\nChases(Dog, Lion, True) ::: The dog chases the lion.\nChases(Dog, Squirrel, True) ::: The dog chases the squirrel.\nSees(Dog, Lion, True) ::: The dog sees the lion.\nVisits(Dog, Squirrel, True) ::: The dog visits the squirrel.\nChases(Lion, Bear, False) ::: The lion does not chase the bear.\nChases(Lion, Squirrel, False) ::: The lion does not chase the squirrel.\nRed(Lion, False) ::: The lion is not red.\nChases(Squirrel, Bear, True) ::: The squirrel chases the bear.\nChases(Squirrel, Dog, True) ::: The squirrel chases the dog.\nGreen(Squirrel, True) ::: The squirrel is green.\nRound(Squirrel, True) ::: The squirrel is round.\nYoung(Squirrel, True) ::: The squirrel is young.\nSees(Squirrel, Dog, True) ::: The squirrel sees the dog.\nRules:\nYoung($x, True) >>> Chases($x"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1029_Q10",
    "context": "The bear is young. The bear visits the lion. The cat is round. The cat needs the bear. The lion is cold. The lion is not green. The lion is round. The lion does not need the bear. The lion sees the bear. The lion visits the bear. The lion visits the cat. The lion visits the rabbit. The rabbit is green. The rabbit is rough. The rabbit sees the lion. The rabbit visits the cat. If something visits the cat then the cat sees the lion. If something visits the lion and the lion visits the rabbit then it needs the lion. If something needs the lion and the lion is round then it needs the cat. If something is green and it needs the rabbit then the rabbit is green. If something is round then it visits the lion. If something sees the cat and the cat visits the lion then it is not rough. If something needs the cat and it is not green then it sees the cat. If something is young and it visits the bear then it sees the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not see the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nFacts:\nYoung(Bear, True) ::: The bear is young.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Bear, True) ::: The cat needs the bear.\nCold(Lion, True) ::: The lion is cold.\nNot(Green(Lion, True)) ::: The lion is not green.\nRound(Lion, True) ::: The lion is round.\nNot(Needs(Lion, Bear, True)) ::: The lion does not need the bear.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nVisits(Lion, Bear, True) ::: The lion visits the bear.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nGreen(Rabbit, True) ::: The rabbit is green.\nRough(Rabbit, True) ::: The rabbit is rough.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nVisits(Rabbit, Cat, True) ::: The rabbit visits the cat.\nRules:\nYoung($x, True) >>> Visits($x, Bear, True) ::: If something visits the cat then the cat sees the lion.\nVisits($x, Lion, True) && Visits("
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-777_Q6",
    "context": "The bear is kind. The bear likes the cat. The cat likes the bear. The cat needs the cow. The cat sees the bear. The cat sees the cow. The cow is rough. The mouse likes the cat. The mouse needs the bear. The mouse sees the cow. If someone sees the bear then they need the mouse. If someone needs the bear and the bear needs the cow then the bear needs the cat. If someone likes the cow then the cow sees the bear. If the bear is red and the bear needs the cow then the cow needs the bear. If someone needs the mouse then they are big. If someone sees the bear and they are big then they like the cow. If the cat needs the mouse then the mouse needs the cow. If someone is kind then they see the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not need the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nRules:\nKind($x, True) >>> Sees($x, Cat) ::: If someone is kind then they see the cat.\nLikes($x, Cow, True) >>> Sees($x, Bear) ::: If someone likes the cow then the cow sees the bear.\nNeeds($x, Bear, True) >>> Needs($x, Cow, True) ::: If someone needs the bear and the bear needs the cow then the bear needs the cat.\nSees($x, Bear) >>> Needs($x, Mouse, True) ::: If someone sees the bear then they need the mouse.\nLikes($x, Cow, True) >>> Sees($x, Bear) ::: If someone likes the cow then the cow sees the bear.\nSees($x, Bear) >>> Likes($x, Cow, True) ::: If someone sees the bear then they like the cow.\nNeeds($x, Mouse, True) >>> Needs($x, Cow, True) ::: If someone needs the mouse then they need the cow.\nSees($x, Bear) >>> Big($x, True) ::: If someone sees the bear and they are big then they like the cow.\nSees($x, Bear) >>> Kind($x, True) ::: If someone sees the bear then they are kind.\nLikes($x, Cow, True) >>> Sees($x, Bear) ::: If someone likes the cow then the cow sees the bear.\nNeeds($x, Bear, True) >>> Needs($x, Cow, True) ::: If someone needs the bear and"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-419_Q14",
    "context": "The bear likes the cow. The bear does not see the cow. The cow chases the bear. The cow is cold. The cow sees the dog. The dog likes the bear. The dog does not like the tiger. The tiger is not big. The tiger does not see the bear. The tiger sees the cow. If something likes the dog then it is round. If something sees the cow then it is round. If the cow is young and the bear does not see the cow then the bear is young. If something chases the dog then it likes the tiger. If something chases the dog and it is cold then it is young. If the bear likes the cow then the cow chases the dog. If something sees the bear and the bear is young then the bear is rough. If something chases the bear and the bear is young then the bear chases the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger likes the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nChases($x, $y, bool) ::: Does x chase y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nFacts:\nLikes(Bear, Cow, True) ::: The bear likes the cow.\nSees(Bear, Cow, False) ::: The bear does not see the cow.\nChases(Cow, Bear, True) ::: The cow chases the bear.\nCold(Cow, True) ::: The cow is cold.\nSees(Cow, Dog, True) ::: The cow sees the dog.\nLikes(Dog, Bear, True) ::: The dog likes the bear.\nLikes(Dog, Tiger, False) ::: The dog does not like the tiger.\nBig(Tiger, False) ::: The tiger is not big.\nSees(Tiger, Bear, False) ::: The tiger does not see the bear.\nSees(Tiger, Cow, True) ::: The tiger sees the cow.\nRules:\nLikes($x, Dog, True) >>> Round($x, True) ::: If something likes the dog then it is round.\nSees($x, Cow, True) >>> Round($x, True) ::: If something sees the cow then it is round.\nYoung($x, True) && Bear($x, True) && Sees($x, Cow, True) >>> Young($x, True) ::: If the cow is young and the bear does not see the cow then the bear is young.\nChases($x, Dog, True) >>> Likes($x, Tiger, True) ::: If something chases the dog then it likes the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-586_Q21",
    "context": "Erin is smart. Fiona is quiet. Gary is blue. Gary is kind. Gary is quiet. Gary is red. Harry is smart. If Harry is smart then Harry is kind. Quiet, smart things are blue. If something is green and smart then it is not blue. Kind things are quiet. All blue, green things are smart. Red things are furry. If Harry is smart and Harry is blue then Harry is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nFacts:\nSmart(Erin, True) ::: Erin is smart.\nQuiet(Fiona, True) ::: Fiona is quiet.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nSmart($x, True) >>> Kind($x, True) ::: If Harry is smart then Harry is kind.\nQuiet($x, True) && Smart($x, True) >>> Blue($x, True) ::: Quiet, smart things are blue.\nGreen($x, True) && Smart($x, True) >>> Blue($x, False) ::: If something is green and smart then it is not blue.\nKind($x, True) >>> Quiet($x, True) ::: Kind things are quiet.\nBlue($x, True) >>> Green($x, True) ::: All blue, green things are smart.\nRed($x, True) >>> Furry($x, True) ::: Red things are furry.\nSmart($x, True) && Blue($x, True) >>> Red($x, True) ::: If Harry is smart and Harry is blue then Harry is red.\nQuery:\nKind(Erin, False) ::: Erin is not kind.\n------\nProblem:\nErin is furry. Erin is green. Erin is quiet. Erin is red. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is white. Harry is fur"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-30_Q5",
    "context": "The bald eagle does not chase the mouse. The bald eagle chases the squirrel. The bald eagle needs the mouse. The bald eagle does not see the dog. The bald eagle sees the squirrel. The dog is not red. The dog needs the squirrel. The mouse does not chase the squirrel. The mouse is red. The mouse needs the dog. The mouse does not need the squirrel. The mouse sees the bald eagle. The mouse sees the dog. The squirrel is cold. The squirrel is red. The squirrel is round. If something is round and red then it chases the dog. If something chases the bald eagle then it sees the mouse. If something needs the mouse and the mouse needs the bald eagle then it does not see the squirrel. If something needs the mouse then the mouse does not see the squirrel. If something is blue and it needs the dog then it is cold. If something chases the dog then it chases the bald eagle. If the bald eagle chases the squirrel and the bald eagle sees the squirrel then the squirrel is red. If something sees the mouse and the mouse needs the dog then the dog chases the bald eagle. If something sees the squirrel and the squirrel is cold then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel chases the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChase($x, $y, bool) ::: Does x chase y?\nSee($x, $y, bool) ::: Does x see y?\nNeed($x, $y, bool) ::: Does x need y?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChase(BaldEagle, Mouse, False) ::: The bald eagle does not chase the mouse.\nChase(BaldEagle, Squirrel, True) ::: The bald eagle chases the squirrel.\nNeed(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nSee(BaldEagle, Dog, False) ::: The bald eagle does not see the dog.\nSee(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nRed(Dog, False) ::: The dog is not red.\nNeed(Dog, Squirrel, True) ::: The dog needs the squirrel.\nChase(Mouse, Squirrel, False) ::: The mouse does not chase the squirrel.\nRed(Mouse, True) ::: The mouse is red.\nNeed(Mouse, Dog, True) ::: The mouse needs the dog.\nNeed(Mouse, BaldEagle, False) ::: The mouse does not need the bald eagle.\nSee(Mouse, BaldEagle) ::: The mouse sees the bald eagle.\nSee(Mouse, Dog) ::: The mouse sees the dog.\nRound(Squirrel, True) ::: The squirrel is round.\nRed(Squirrel, True) ::: The squirrel is red.\nRound(Squirrel, True) ::: The squirrel is round.\nRules:\nRound($x, True) && Red($x, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1015_Q19",
    "context": "Anne is furry. Anne is nice. Dave is furry. Dave is not nice. Erin is smart. Harry is furry. Harry is nice. All round people are quiet. All round people are green. All quiet, furry people are green. Furry people are green. Big, quiet people are not smart. Smart people are nice. All green people are big. If Anne is big and Anne is green then Anne is round. If someone is quiet and smart then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not furry.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nNice(Anne, True) ::: Anne is nice.\nFurry(Dave, True) ::: Dave is furry.\nNice(Dave, False) ::: Dave is not nice.\nSmart(Erin, True) ::: Erin is smart.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nQuiet(Anne, True) ::: Anne is quiet.\nQuiet(Dave, True) ::: Dave is quiet.\nRound(Anne, True) ::: Anne is round.\nRound(Dave, True) ::: Dave is round.\nGreen(Anne, True) ::: Anne is green.\nGreen(Dave, True) ::: Dave is green.\nBig(Anne, True) ::: Anne is big.\nBig(Dave, True) ::: Dave is big.\nRules:\nFurry($x, True) >>> Green($x, True) ::: Furry people are green.\nFurry($x, True) >>> Green($x, True) ::: Furry people are green.\nQuiet($x, True) && Furry($x, True) >>> Green($x, True) ::: All quiet, furry people are green.\nFurry($x, True) >>> Green($x, True) ::: Furry people are green.\nBig($x, True) && Quiet($x, True) >>> Smart($x, False) ::: Big, quiet people are not smart.\nSmart($x, True) >>> Nice($x, True) ::: Smart people are nice.\nGreen($x, True) >>> Big($x, True) ::: All green people are big.\nQuiet($x, True) && Smart($x, True) >>> Round($x, True) ::: If someone is quiet and smart then they are round.\nGreen($x, True) && Anne($x, True) >>> Round($x, True) ::: If Anne is big and Anne is green then Anne is round.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-489_Q2",
    "context": "Bob is green. Bob is not nice. Dave is furry. Erin is furry. Erin is nice. Fiona is big. Fiona is not furry. Kind things are young. Young, big things are green. If something is young then it is green. If something is big and rough then it is not nice. If something is big then it is nice. If Bob is furry then Bob is young. If something is furry then it is big. If something is nice then it is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRules:\nYoung($x, True) >>> Green($x, True) ::: Young, big things are green.\nGreen($x, True) >>> Young($x, True) ::: If something is young then it is green.\nBig($x, True) && Rough($x, True) >>> Nice($x, False) ::: If something is big and rough then it is not nice.\nBig($x, True) >>> Nice($x, True) ::: If something is big then it is nice.\nFurry($x, True) >>> Young($x, True) ::: If Bob is furry then Bob is young.\nFurry($x, True) >>> Big($x, True) ::: If something is furry then it is big.\nNice($x, True) >>> Kind($x, True) ::: If something is nice then it is kind.\nFacts:\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, False) ::: Bob is not nice.\nFurry(Dave, True) ::: Dave is furry.\nFurry(Erin, True) ::: Erin is furry.\nNice(Erin, True) ::: Erin is nice.\nBig(Fiona, True) ::: Fiona is big.\nNotFurry(Fiona, True) ::: Fiona is not furry.\nKind(Fiona, True) ::: Fiona is kind.\nQuery:\nNotGreen(Bob, True) ::: Bob is not green.\n------\nProblem:\nBob is green. Bob is not nice. Dave is furry. Erin is furry. Erin is nice. Fiona is big. Fiona is not furry. Kind things are young. Young, big things are green. If something is young then it is green. If something is big and rough then it is not nice. If something is big then it is nice. If Bob is furry then Bob is young. If something is furry then it is big. If something is nice then it is kind.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not green.\n###\nPredicates:\nGreen($x, bool"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-268_Q19",
    "context": "Anne is green. Charlie is blue. Charlie is not green. Charlie is nice. Erin is young. Harry is kind. Harry is white. If something is blue then it is nice. If something is blue and not quiet then it is nice. If something is nice then it is kind. If Erin is green then Erin is white. All green things are blue. If something is young then it is white. If Harry is white then Harry is young. If Erin is nice and Erin is blue then Erin is young. All white things are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nBlue(Charlie, True) ::: Charlie is blue.\nNot(Green(Charlie, True)) ::: Charlie is not green.\nNice(Charlie, True) ::: Charlie is nice.\nYoung(Erin, True) ::: Erin is young.\nKind(Harry, True) ::: Harry is kind.\nWhite(Harry, True) ::: Harry is white.\nRules:\nBlue($x, True) >>> Nice($x, True) ::: If something is blue then it is nice.\nBlue($x, True) && Not(Quite($x, True)) >>> Nice($x, True) ::: If something is blue and not quiet then it is nice.\nNice($x, True) >>> Kind($x, True) ::: If something is nice then it is kind.\nIf(Erin, Green(Erin, True)) >>> White(Erin, True) ::: If Erin is green then Erin is white.\nAll(Green($x, True)) >>> Blue($x, True) ::: All green things are blue.\nYoung($x, True) >>> White($x, True) ::: If something is young then it is white.\nIf(Harry, White(Harry, True)) >>> Young(Harry, True) ::: If Harry is white then Harry is young.\nIf(Erin, Nice(Erin, True)) && If(Erin, Blue(Erin, True)) >>> Young(Erin, True) ::: If Erin is nice and Erin is blue then Erin is young.\nAll(White($x, True)) >>> Green($x, True) ::: All white things are green.\nQuery:\nNot(Young(Charlie, True)) ::: Charlie is not young.\n------\nProblem:\nAnne is green. Anne is quiet. Anne is young. Anne is white. Charlie is blue. Charlie is not green. Charlie is not quiet. Charlie is not young. Charlie is not white. Erin is blue. Erin is green. Erin is quiet. Erin is young. Erin is white. Fiona is blue. Fiona is green. Fiona is quiet."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-661_Q24",
    "context": "The bald eagle chases the tiger. The bald eagle visits the dog. The bear is not kind. The bear needs the bald eagle. The bear needs the tiger. The dog chases the bald eagle. The dog chases the bear. The dog is not cold. The dog needs the bear. The tiger is kind. The tiger is not young. If someone visits the bald eagle then the bald eagle chases the tiger. If someone visits the tiger then the tiger does not need the dog. If the dog chases the bear and the dog is round then the bear visits the dog. If someone chases the tiger and they chase the bald eagle then the bald eagle needs the dog. If someone needs the dog then the dog is round. If someone visits the dog then they chase the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFacts:\nChases(BaldEagle, Tiger, True) ::: The bald eagle chases the tiger.\nVisits(BaldEagle, Dog, True) ::: The bald eagle visits the dog.\nNotKind(Bear, True) ::: The bear is not kind.\nNeeds(Bear, BaldEagle, True) ::: The bear needs the bald eagle.\nNeeds(Bear, Tiger, True) ::: The bear needs the tiger.\nChases(BaldEagle, Dog, True) ::: The bald eagle chases the dog.\nChases(Dog, BaldEagle, True) ::: The dog chases the bald eagle.\nNotCold(Dog, True) ::: The dog is not cold.\nNeeds(Dog, Bear, True) ::: The dog needs the bear.\nKind(Tiger, True) ::: The tiger is kind.\nNotYoung(Tiger, True) ::: The tiger is not young.\nRules:\nVisits($x, $y, True) >>> Chases($x, $y, True) ::: If someone visits the bald eagle then the bald eagle chases the tiger.\nVisits($x, $y, True) >>> Needs($x, $y, True) ::: If someone visits the tiger then the tiger does not need the dog.\nChases($x, $y, True) && Chases($x, $z, True) >>> Needs($y, $z, True) ::: If someone chases the tiger and they chase the bald eagle then the bald eagle needs the dog.\nNeeds($x, $y, True) >>> Round($x, True) ::: If someone needs the dog then the dog is round.\nVisits($x, $y, True) >>> Chases($y, $x, True) ::: If someone visits the dog then they chase the bald eagle.\n------\nProblem:\nThe dog is not cold. The dog is not round. The dog is not young. The dog is not kind. The dog is not furry. The dog is not quiet. The dog is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-195_Q3",
    "context": "Bob is rough. Charlie is nice. Charlie is rough. Charlie is white. Dave is not white. Gary is cold. Gary is quiet. Rough, white things are quiet. If Charlie is round and Charlie is quiet then Charlie is rough. All young things are round. Nice things are white. Rough, nice things are cold. If something is round and rough then it is nice. If something is rough then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nFacts:\nRough(Bob, True) ::: Bob is rough.\nNice(Charlie, True) ::: Charlie is nice.\nRough(Charlie, True) ::: Charlie is rough.\nWhite(Charlie, True) ::: Charlie is white.\nNot(White(Dave, True)) ::: Dave is not white.\nCold(Gary, True) ::: Gary is cold.\nQuiet(Gary, True) ::: Gary is quiet.\nRules:\nRough($x, True) && White($x, True) >>> Quiet($x, True) ::: Rough, white things are quiet.\nCharlie(Round($x, True) && Quiet($x, True)) >>> Rough($x, True) ::: If Charlie is round and Charlie is quiet then Charlie is rough.\nYoung($x, True) >>> Round($x, True) ::: All young things are round.\nNice($x, True) >>> White($x, True) ::: Nice things are white.\nRough($x, True) && Nice($x, True) >>> Cold($x, True) ::: Rough, nice things are cold.\nRound($x, True) && Rough($x, True) >>> Nice($x, True) ::: If something is round and rough then it is nice.\nRough($x, True) >>> Young($x, True) ::: If something is rough then it is young.\nQuery:\nQuiet(Charlie, True) ::: Charlie is quiet.\n------\nProblem:\nBob is furry. Bob is green. Bob is quiet. Bob is rough. Bob is white. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is rough. Charlie is white. Dave is furry. Dave is green. Dave is quiet. Dave is rough. Dave is white. Erin is furry. Erin is green. Erin is quiet. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is quiet. Harry is rough. Harry is white. If someone is green then they are white. If someone is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-684_Q1",
    "context": "Anne is smart. Charlie is big. Charlie is nice. Gary is green. Harry is furry. Harry is nice. Harry is red. All furry people are kind. If Charlie is big then Charlie is green. If someone is kind then they are big. Kind, green people are big. Smart people are furry. If someone is green then they are kind. All big, nice people are kind. All smart, nice people are red. Big, kind people are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nFacts:\nSmart(Anne, True) ::: Anne is smart.\nBig(Charlie, True) ::: Charlie is big.\nNice(Charlie, True) ::: Charlie is nice.\nGreen(Gary, True) ::: Gary is green.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nRed(Harry, True) ::: Harry is red.\nRules:\nFurry($x, True) >>> Kind($x, True) ::: All furry people are kind.\nBig($x, True) >>> Green($x, True) ::: If Charlie is big then Charlie is green.\nKind($x, True) >>> Big($x, True) ::: If someone is kind then they are big.\nKind($x, True) && Green($x, True) >>> Big($x, True) ::: Kind, green people are big.\nSmart($x, True) >>> Furry($x, True) ::: Smart people are furry.\nGreen($x, True) >>> Kind($x, True) ::: If someone is green then they are kind.\nBig($x, True) && Nice($x, True) >>> Kind($x, True) ::: Big, nice people are kind.\nSmart($x, True) && Nice($x, True) >>> Red($x, True) ::: All smart, nice people are red.\nKind($x, True) && Big($x, True) >>> Nice($x, True) ::: Big, kind people are nice.\nQuery:\nNice(Charlie, True) ::: Charlie is nice.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is red. Anne is rough. Anne is white. Anne is young. Anne is big. Anne is kind. Anne is smart. Anne is nice. Anne is green. Anne is red. Anne is rough. Anne is white. Anne is young. Anne is big. Anne is kind. Anne is smart. Anne is nice. Anne is green. Anne is red. Anne is rough. Anne is white. Anne is young. Anne is big"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-502_Q3",
    "context": "The bear eats the rabbit. The bear sees the squirrel. The mouse eats the squirrel. The mouse is kind. The mouse sees the rabbit. The rabbit needs the squirrel. The squirrel eats the bear. If someone sees the squirrel and the squirrel sees the bear then the squirrel needs the mouse. If someone needs the rabbit and the rabbit sees the mouse then the mouse sees the rabbit. If someone is rough then they need the rabbit. If someone needs the rabbit then the rabbit sees the squirrel. If someone sees the squirrel then they are rough. If someone is nice and they need the mouse then they are rough. If someone is green then they are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nSees($x, $y) ::: Does x see y?\nNeeds($x, $y) ::: Does x need y?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nFacts:\nEats(Bear, Rabbit) ::: The bear eats the rabbit.\nSees(Bear, Squirrel) ::: The bear sees the squirrel.\nEats(Mouse, Squirrel) ::: The mouse eats the squirrel.\nKind(Mouse, True) ::: The mouse is kind.\nSees(Mouse, Rabbit) ::: The mouse sees the rabbit.\nNeeds(Rabbit, Squirrel) ::: The rabbit needs the squirrel.\nEats(Squirrel, Bear) ::: The squirrel eats the bear.\nRules:\nSees($x, $y) && Sees($y, $z) >>> Needs($x, $z) ::: If someone sees the squirrel and the squirrel sees the bear then the squirrel needs the mouse.\nNeeds($x, $y) && Sees($y, $z) >>> Sees($x, $z) ::: If someone needs the rabbit and the rabbit sees the mouse then the mouse sees the rabbit.\nNeeds($x, $y) >>> Rough($x, True) ::: If someone needs the rabbit then the rabbit sees the squirrel.\nSees($x, $y) >>> Rough($x, True) ::: If someone sees the squirrel then they are rough.\nKind($x, True) && Needs($x, Mouse) >>> Rough($x, True) ::: If someone is nice and they need the mouse then they are rough.\nGreen($x, True) >>> Kind($x, True) ::: If someone is green then they are kind.\nQuery:\nRough(Bear, True) ::: The bear is rough.\n------\nProblem:\nThe bear eats the rabbit. The bear sees the squirrel. The mouse eats the squirrel. The mouse is kind. The mouse sees the rabbit. The rabbit needs the squirrel. The squirrel eats the bear. If someone sees the squirrel and the squirrel sees the bear then the squirrel needs the mouse. If"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-616_Q7",
    "context": "The bald eagle is big. The bald eagle likes the cow. The bald eagle sees the rabbit. The cow is big. The cow sees the bald eagle. The dog is big. The dog is young. The dog likes the bald eagle. The rabbit sees the bald eagle. The rabbit visits the bald eagle. If the bald eagle sees the rabbit then the rabbit is big. If something likes the bald eagle then it is blue. If something likes the rabbit and the rabbit visits the cow then the cow is young. If something visits the rabbit then it is round. If something is round and it sees the cow then the cow sees the rabbit. If something is big then it visits the cow. If something sees the rabbit then the rabbit visits the bald eagle. If something is blue then it likes the rabbit. If something likes the cow and the cow is young then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nLikes(BaldEagle, Cow, True) ::: The bald eagle likes the cow.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nBig(Cow, True) ::: The cow is big.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nBig(Dog, True) ::: The dog is big.\nYoung(Dog, True) ::: The dog is young.\nLikes(Dog, BaldEagle, True) ::: The dog likes the bald eagle.\nSees(Rabbit, BaldEagle, True) ::: The rabbit sees the bald eagle.\nVisits(Rabbit, BaldEagle, True) ::: The rabbit visits the bald eagle.\nRules:\nBig($x, True) >>> Visits($x, Cow, True) ::: If the bald eagle sees the rabbit then the rabbit is big.\nLikes($x, BaldEagle, True) >>> Blue($x, True) ::: If something likes the bald eagle then it is blue.\nLikes($x, Rabbit) && Visits($x, Cow, True) >>> Young($x, True) ::: If something likes the rabbit and the rabbit visits the cow then the cow is young.\nVisits($x, Rabbit, True) >>> Round($x, True) ::: If something visits the rabbit then it is round.\nVisits($x, Rabbit, True) && Sees($x, Cow, True) >>> Sees($x, Rabbit, True) ::: If something is round and it sees the cow then the cow sees the rabbit.\nBig($x, True) >>> Visits($x, Cow, True) ::: If something is big then it visits the cow.\nSees($x, Rabbit, True) >>> Visits($x, BaldEagle, True) ::: If something sees the rabbit then the rabbit visits the"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-754_Q23",
    "context": "The cat is big. The cat is nice. The cat sees the dog. The cat visits the dog. The dog is big. The dog is nice. The mouse is nice. The mouse is red. The tiger eats the cat. The tiger eats the dog. The tiger visits the mouse. If someone visits the tiger then the tiger sees the mouse. If the cat eats the dog and the cat sees the dog then the cat is big. If someone eats the dog then they visit the cat. If the tiger is young and the tiger is nice then the tiger eats the mouse. If someone sees the mouse and the mouse is red then the mouse visits the tiger. If someone visits the tiger then they visit the cat. If someone visits the cat and the cat visits the dog then the dog visits the tiger. If the cat sees the tiger then the cat eats the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not eat the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Cat, True) ::: The cat is big.\nNice(Cat, True) ::: The cat is nice.\nSees(Cat, Dog, True) ::: The cat sees the dog.\nVisits(Cat, Dog, True) ::: The cat visits the dog.\nBig(Dog, True) ::: The dog is big.\nNice(Dog, True) ::: The dog is nice.\nNice(Mouse, True) ::: The mouse is nice.\nRed(Mouse, True) ::: The mouse is red.\nEats(Tiger, Cat, True) ::: The tiger eats the cat.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nVisits(Tiger, Mouse, True) ::: The tiger visits the mouse.\nRules:\nVisits($x, $y, True) >>> Sees($x, $y, True) ::: If someone visits the tiger then the tiger sees the mouse.\nEats(Cat, Dog) && Sees(Cat, Dog) >>> Big(Cat, True) ::: If the cat eats the dog and the cat sees the dog then the cat is big.\nVisits($x, $y, True) >>> Visits($y, $x, True) ::: If someone visits the tiger then they visit the cat.\nVisits($x, $y, True) && Visits($y, $z, True) >>> Visits($x, $z, True) ::: If someone visits the cat and the cat visits the dog then the dog visits the tiger.\nSees(Cat, Tiger) >>> Eats(Cat, Dog) ::: If the cat sees the tiger then the cat eats the dog.\nEats($x, $y) >>> Visits($x, $y, True) ::: If someone eats the dog then they visit the cat.\nYoung($x, True) && Nice($x, True) >>> Eats($x, Mouse, True) ::: If someone is young and nice then the tiger eats the mouse.\nRed"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-173_Q8",
    "context": "The bald eagle eats the cow. The bald eagle is blue. The cat visits the bald eagle. The cat visits the rabbit. The cow is blue. The cow sees the rabbit. The rabbit eats the bald eagle. The rabbit is cold. The rabbit sees the cow. The rabbit visits the cat. If something visits the cow and it sees the cow then it visits the bald eagle. If something is nice then it is big. If something visits the bald eagle then it is nice. If something is cold and it visits the cow then the cow sees the cat. If something is round and it eats the bald eagle then it sees the bald eagle. If something visits the cat then it visits the rabbit. If something visits the rabbit and it sees the cow then it visits the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not see the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nVisits($x, $y) ::: Does x visit y?\nSees($x, $y) ::: Does x see y?\nIs($x, $y) ::: Is x y?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(BaldEagle, Cow) ::: The bald eagle eats the cow.\nIs(BaldEagle, Blue) ::: The bald eagle is blue.\nVisits(Cat, BaldEagle) ::: The cat visits the bald eagle.\nVisits(Cat, Rabbit) ::: The cat visits the rabbit.\nIs(Cow, Blue) ::: The cow is blue.\nSees(Cow, Rabbit) ::: The cow sees the rabbit.\nEats(Rabbit, BaldEagle) ::: The rabbit eats the bald eagle.\nIs(Rabbit, Cold) ::: The rabbit is cold.\nSees(Rabbit, Cow) ::: The rabbit sees the cow.\nVisits(Rabbit, Cat) ::: The rabbit visits the cat.\nRules:\nVisits($x, $y) && Sees($x, $y) >>> Visits($x, BaldEagle) ::: If something visits the cow and it sees the cow then it visits the bald eagle.\nIs($x, Nice) >>> Is($x, Big) ::: If something is nice then it is big.\nVisits($x, BaldEagle) >>> Is($x, Nice) ::: If something visits the bald eagle then it is nice.\nIs($x, Cold) && Visits($x, Cow) >>> Sees($Cow, Cat) ::: If something is cold and it visits the cow then the cow sees the cat.\nIs($x, Round) && Eats($x, BaldEagle) >>> Sees($x, BaldEagle) ::: If something is round and it eats the bald eagle then it sees the bald eagle.\nVisits($x, Cat) >>> Visits($x, Rabbit) ::: If something visits the cat then it visits the rabbit.\nVisits($x, Rabbit) && Sees($x, Cow) >>> Visits($x, Cow) ::: If something visits the rab"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-683_Q1",
    "context": "The bear chases the cat. The bear chases the cow. The bear likes the cat. The bear likes the lion. The bear visits the cat. The cat is red. The cat visits the bear. The cat visits the cow. The cow visits the lion. The lion chases the cat. The lion is nice. If something likes the bear and it visits the lion then it is green. If something likes the lion and the lion is nice then it chases the lion. If something is green and it chases the cow then the cow is cold. Cold things are green. If something chases the lion and the lion chases the cat then it is cold. If the lion likes the cat and the cat chases the lion then the lion is nice. If something likes the cat then it likes the lion. If something likes the cat then it likes the lion. If something chases the lion then the lion visits the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear chases the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Bear, Cat, True) ::: The bear chases the cat.\nChases(Bear, Cow, True) ::: The bear chases the cow.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nLikes(Bear, Lion, True) ::: The bear likes the lion.\nVisits(Bear, Cat, True) ::: The bear visits the cat.\nRed(Cat, True) ::: The cat is red.\nVisits(Cat, Bear, True) ::: The cat visits the bear.\nVisits(Cat, Cow, True) ::: The cat visits the cow.\nVisits(Cow, Lion, True) ::: The cow visits the lion.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nNice(Lion, True) ::: The lion is nice.\nRules:\nLikes($x, $y, True) && Visits($x, $y, True) >>> Green($x, True) ::: If something likes the bear and it visits the lion then it is green.\nLikes($x, $y, True) && Nice($y, True) >>> Chases($x, $y, True) ::: If something likes the lion and the lion is nice then it chases the lion.\nGreen($x, True) && Chases($x, $y, True) >>> Cold($y, True) ::: If something chases the lion and the lion chases the cat then it is cold.\nCold($x, True) >>> Green($x, True) ::: Cold things are green.\nChases($x, $y, True) && Chases($y, $z, True) >>> Cold($x, True) ::: If the lion chases the cat and the cat chases the lion then the lion is nice.\nLikes($x, $y, True) && Likes($y, $z, True) >>> Likes($x, $z, True) ::: If something likes the cat then it likes the lion.\nLikes($x, $y, True) && Likes($y, $z, True) >>> Likes($x, $z, True) ::: If something likes the cat then it likes the lion.\nChases($x, $y, True) >>> Visits($y, $x, True) ::: If something chases the lion then the lion visits the bear.\nQuery:\nChases(Bear, Cat, True) ::: The bear chases the cat.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-622_Q13",
    "context": "Anne is nice. Anne is red. Bob is smart. Bob is young. Erin is red. Erin is round. Fiona is kind. Fiona is nice. Fiona is red. Fiona is smart. If something is round then it is nice. Nice things are round. If Bob is kind then Bob is furry. All smart, kind things are nice. All kind, young things are round. If something is young and smart then it is round. Red things are kind. If Anne is furry then Anne is red. If something is nice then it is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not furry.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nRed(Anne, True) ::: Anne is red.\nSmart(Bob, True) ::: Bob is smart.\nYoung(Bob, True) ::: Bob is young.\nRed(Erin, True) ::: Erin is red.\nRound(Erin, True) ::: Erin is round.\nKind(Fiona, True) ::: Fiona is kind.\nNice(Fiona, True) ::: Fiona is nice.\nRed(Fiona, True) ::: Fiona is red.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nRound($x, True) >>> Nice($x, True) ::: Nice things are round.\nNice($x, True) >>> Round($x, True) ::: If something is round then it is nice.\nKind($x, True) >>> Furry($x, True) ::: If Bob is kind then Bob is furry.\nSmart($x, True) && Kind($x, True) >>> Nice($x, True) ::: All smart, kind things are nice.\nKind($x, True) && Young($x, True) >>> Round($x, True) ::: All kind, young things are round.\nYoung($x, True) && Smart($x, True) >>> Round($x, True) ::: If something is young and smart then it is round.\nRed($x, True) >>> Kind($x, True) ::: Red things are kind.\nRed($x, True) >>> Nice($x, True) ::: If Anne is furry then Anne is red.\nNice($x, True) >>> Red($x, True) ::: If something is nice then it is red.\nQuery:\nFurry(Erin, False) ::: Erin is not furry.\n------\nProblem:\nAnne is furry. Anne is green. Anne is red. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is red. Bob is rough. Bob is white. Erin is furry. Erin is green. Erin is red. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is red. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is red. Harry is rough. Harry is white. If something is green then it is rough. If something is green then it is white. If something is green then it is red. If something is green then it is furry. If something is green then it is rough. If something is green then it is white. If something is green then it is red. If something is green"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-890_Q11",
    "context": "The bald eagle needs the cow. The bald eagle needs the mouse. The cow is round. The mouse does not visit the rabbit. The rabbit is green. The rabbit needs the bald eagle. The rabbit visits the bald eagle. If someone visits the mouse then they like the cow. If someone likes the mouse and they are blue then the mouse needs the rabbit. If someone needs the bald eagle then the bald eagle likes the rabbit. If someone needs the bald eagle then the bald eagle likes the mouse. If someone likes the cow then they are blue. If someone is red and they visit the cow then the cow is green. If someone visits the mouse then they do not visit the bald eagle. If someone is round and they need the bald eagle then the bald eagle is round. If someone visits the bald eagle and the bald eagle likes the rabbit then the bald eagle visits the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse needs the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nNeeds(BaldEagle, Cow, True) ::: The bald eagle needs the cow.\nNeeds(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nRound(Cow, True) ::: The cow is round.\nDoesNotVisit(Mouse, Rabbit, True) ::: The mouse does not visit the rabbit.\nGreen(Rabbit, True) ::: The rabbit is green.\nNeeds(Rabbit, BaldEagle, True) ::: The rabbit needs the bald eagle.\nVisits(Rabbit, BaldEagle, True) ::: The rabbit visits the bald eagle.\nIfVisitsMouseThenLikesCow($x, $y, True) ::: If someone visits the mouse then they like the cow.\nIfLikesMouseAndIsBlueThenMouseNeedsRabbit($x, $y, True) ::: If someone likes the mouse and they are blue then the mouse needs the rabbit.\nIfNeedsBaldEagleThenBaldEagleLikesRabbit($x, $y, True) ::: If someone needs the bald eagle then the bald eagle likes the rabbit.\nIfNeedsBaldEagleThenBaldEagleLikesMouse($x, $y, True) ::: If someone needs the bald eagle then the bald eagle likes the mouse.\nIfLikesCowThenIsBlue($x, $y, True) ::: If someone likes the cow then they are blue.\nIfIsRedAndVisitsCowThenCowIsGreen($x, $y, True) ::: If someone is red and they visit the cow then the cow is green.\nIfVisitsMouseThenDoesNotVisitBaldEagle($x, $y, True) ::: If someone visits the mouse then they do not visit the bald eagle.\nIfIsRoundAndNeedsBaldEagleThenBaldEagleIsRound($x, $y, True) ::: If someone is round and they need the bald eagle then the bald eagle is round.\nIfVisitsBaldEagleAndBaldEagleLikesRabbitThenBaldEagleVisitsMouse($x, $y, True) ::: If someone visits the bald eagle and the bald eagle likes the rabbit then the bald eagle visits the mouse.\nQuery:\nNeeds(Mouse, Rabbit, True) ::: The mouse needs the rabbit.\n------\nProblem:\nThe cow is round. The cow is green. The cow is furry. The cow is quiet. The cow is white. The cow is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-587_Q13",
    "context": "The bald eagle chases the squirrel. The bald eagle eats the bear. The bear does not eat the lion. The bear visits the lion. The lion does not eat the bald eagle. The squirrel is red. The squirrel visits the bald eagle. If something is round then it eats the squirrel. If something is blue and green then it chases the bald eagle. If something eats the squirrel then the squirrel is green. If the bald eagle is round then the bald eagle chases the lion. If something is blue then it chases the squirrel. All red things are blue. If something chases the lion then it is blue. Blue, red things are round. If something visits the bald eagle and it is not round then it visits the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is not round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nEats($x, $y) ::: Does x eat y?\nVisits($x, $y) ::: Does x visit y?\nIsRound($x, bool) ::: Is x round?\nIsBlue($x, bool) ::: Is x blue?\nIsGreen($x, bool) ::: Is x green?\nIsRed($x, bool) ::: Is x red?\nFacts:\nChases(BaldEagle, Squirrel) ::: The bald eagle chases the squirrel.\nEats(BaldEagle, Bear) ::: The bald eagle eats the bear.\nDoesNotEat(Bear, Lion) ::: The bear does not eat the lion.\nVisits(Bear, Lion) ::: The bear visits the lion.\nDoesNotEat(Lion, BaldEagle) ::: The lion does not eat the bald eagle.\nIsRed(Squirrel, True) ::: The squirrel is red.\nVisits(Squirrel, BaldEagle) ::: The squirrel visits the bald eagle.\nIfSomethingIsRoundThenItEatsTheSquirrel($x, True) ::: If something is round then it eats the squirrel.\nIfSomethingIsBlueAndGreenThenItChasesTheBaldEagle($x, True) ::: If something is blue and green then it chases the bald eagle.\nIfSomethingEatsTheSquirrelThenTheSquirrelIsGreen($x, True) ::: If something eats the squirrel then the squirrel is green.\nIfTheBaldEagleIsRoundThenTheBaldEagleChasesTheLion($x, True) ::: If the bald eagle is round then the bald eagle chases the lion.\nIfSomethingIsBlueThenItChasesTheSquirrel($x, True) ::: If something chases the lion then it is blue.\nBlueRedThingsAreRound($x, True) ::: Blue, red things are round.\nIfSomethingVisitsTheBaldEagleAndItIsNotRoundThenItVisitsTheLion($x, True) ::: If something visits the bald eagle and it is not round then it visits the lion.\nQuery:\nNotRound(Lion, True) ::: The lion is not round.\n------\nProblem:\nThe dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is furry. The dog is green. The dog"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-747_Q21",
    "context": "The bear eats the tiger. The bear is not red. The bear likes the squirrel. The bear visits the squirrel. The mouse eats the tiger. The mouse is red. The mouse is rough. The mouse likes the bear. The mouse does not like the tiger. The squirrel likes the bear. The tiger eats the mouse. If the mouse likes the bear and the bear likes the mouse then the mouse is not kind. If someone visits the mouse then they like the squirrel. If someone is green then they visit the bear. If someone likes the bear and the bear visits the tiger then they visit the bear. If someone eats the bear and they do not like the tiger then they are green. If someone visits the mouse then the mouse eats the bear. If someone is red and they eat the tiger then the tiger visits the mouse. If someone visits the bear then they are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not visit the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nFacts:\nEats(Bear, Tiger, True) ::: The bear eats the tiger.\nNot(Red(Bear, True)) ::: The bear is not red.\nLikes(Bear, Squirrel, True) ::: The bear likes the squirrel.\nVisits(Bear, Squirrel, True) ::: The bear visits the squirrel.\nEats(Mouse, Tiger, True) ::: The mouse eats the tiger.\nRed(Mouse, True) ::: The mouse is red.\nRough(Mouse, True) ::: The mouse is rough.\nLikes(Mouse, Bear, True) ::: The mouse likes the bear.\nNot(Likes(Mouse, Tiger, True)) ::: The mouse does not like the tiger.\nLikes(Squirrel, Bear, True) ::: The squirrel likes the bear.\nEats(Tiger, Mouse, True) ::: The tiger eats the mouse.\nRules:\nIf Mouse(Likes(Bear, Mouse) && Bear(Likes(Mouse, Bear)) then Mouse(Not(Kind(Mouse, True))) ::: If the mouse likes the bear and the bear likes the mouse then the mouse is not kind.\nIf Visits(Mouse, $x) then Mouse(Likes($x, Squirrel)) ::: If someone visits the mouse then they like the squirrel.\nIf Green($x) then Bear(Visits($x, Bear)) ::: If someone is green then they visit the bear.\nIf Bear(Likes($x, Bear)) && Bear(Visits($x, Tiger)) then Bear(Visits($x, Bear)) ::: If someone likes the bear and the bear visits the tiger then they visit the bear.\nIf Eats($x, Bear) && Not(Likes($x, Tiger)) then Green($x, True) ::: If someone eats the bear and they do not like the tiger then they are green.\nIf Visits(Mouse, $x) then Bear(Eats($x, Bear)) ::: If someone visits the mouse then the mouse eats the bear.\nIf Red($x) && Eats($x, Tiger) then Tiger(Visits(Mouse, $x)) ::: If someone is red and they eat the tiger then the tiger visits the mouse.\nIf Visits(Bear, $x) then Bear(Kind($x, True)) ::: If someone visits the bear then they are kind.\nQuery:\nNot(Visits(Mouse, Squirrel, True)) ::: The mouse does not visit the squirrel.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-487_Q10",
    "context": "The cat chases the lion. The cat is rough. The cat is young. The cat needs the lion. The cat needs the rabbit. The dog is green. The dog is young. The dog likes the cat. The lion is blue. The lion is green. The rabbit chases the lion. The rabbit is blue. The rabbit is rough. The rabbit likes the dog. The rabbit needs the dog. The rabbit needs the lion. If someone chases the lion then they are round. If the lion needs the rabbit and the rabbit chases the dog then the lion likes the dog. If someone is round and they chase the lion then they need the cat. If someone needs the cat and they chase the dog then they like the rabbit. If someone chases the lion and the lion is blue then the lion is round. If someone chases the rabbit then they are rough. If someone is rough and they like the rabbit then the rabbit is young. If the rabbit chases the cat and the cat needs the lion then the rabbit is young. If someone is round and they need the cat then they chase the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not like the rabbit.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(Cat, Lion, True) ::: The cat chases the lion.\nRough(Cat, True) ::: The cat is rough.\nYoung(Cat, True) ::: The cat is young.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nNeeds(Cat, Rabbit, True) ::: The cat needs the rabbit.\nGreen(Dog, True) ::: The dog is green.\nYoung(Dog, True) ::: The dog is young.\nLikes(Dog, Cat, True) ::: The dog likes the cat.\nBlue(Lion, True) ::: The lion is blue.\nGreen(Lion, True) ::: The lion is green.\nChases(Rabbit, Lion, True) ::: The rabbit chases the lion.\nBlue(Rabbit, True) ::: The rabbit is blue.\nRough(Rabbit, True) ::: The rabbit is rough.\nLikes(Rabbit, Dog, True) ::: The rabbit likes the dog.\nNeeds(Rabbit, Dog, True) ::: The rabbit needs the dog.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nRound(Lion, True) >>> Chases(Lion, $x, True) ::: If someone chases the lion then they are round.\nLikes(Cat, Dog, True) >>> Needs(Lion, Rabbit, True) && Chases(Rabbit, Dog, True) ::: If the lion needs the rabbit and the rabbit chases the dog then the lion likes the dog.\nRound(Lion, True) >>> Needs(Cat, Lion, True) && Chases(Dog, Rabbit, True) ::: If someone is round and they chase the lion then they need the cat.\nNeeds(Cat, Lion, True) >>> Chases(Dog, Rabbit, True) ::: If someone needs the cat and they chase the dog then they like the rabbit.\nRound(Lion, True) >>> Chases(Lion, $x, True) && Blue($x, True) ::: If someone chases the lion and the lion is blue then the lion is round.\nRough(Rabbit, True) >>> Likes(Rabbit, Dog, True) ::: If someone is rough and they like the rabbit then the rabbit is young.\nChases(Rabbit, Cat) && Needs(Cat, Lion) ::: If the rabbit chases the cat and the cat needs the lion"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-136_Q24",
    "context": "The bald eagle is rough. The bear eats the dog. The bear is big. The bear needs the dog. The bear sees the cat. The bear sees the dog. The cat eats the dog. The dog is nice. The dog is rough. The dog needs the bear. The dog needs the cat. The dog sees the bald eagle. If something eats the bear then the bear eats the bald eagle. If something needs the cat then the cat eats the bald eagle. If something sees the cat and the cat is green then the cat eats the bear. If something eats the bear and it eats the dog then the bear is rough. If something eats the bald eagle then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nEats($x, $y, bool) ::: Does x eat y?\nBig($x, bool) ::: Is x big?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nFacts:\nRough(BaldEagle, True) ::: The bald eagle is rough.\nEats(Bear, Dog, True) ::: The bear eats the dog.\nBig(Bear, True) ::: The bear is big.\nNeeds(Bear, Dog, True) ::: The bear needs the dog.\nSees(Bear, Cat, True) ::: The bear sees the cat.\nSees(Bear, Dog, True) ::: The bear sees the dog.\nEats(Cat, Dog, True) ::: The cat eats the dog.\nNice(Dog, True) ::: The dog is nice.\nRough(Dog, True) ::: The dog is rough.\nNeeds(Dog, Bear, True) ::: The dog needs the bear.\nNeeds(Dog, Cat, True) ::: The dog needs the cat.\nSees(Dog, BaldEagle, True) ::: The dog sees the bald eagle.\nEats(Bear, BaldEagle, True) >>> Eats(Bear, Dog) ::: If something eats the bear then the bear eats the bald eagle.\nEats(Cat, BaldEagle, True) >>> Needs(Cat, BaldEagle) ::: If something needs the cat then the cat eats the bald eagle.\nSees(Cat, Dog) && Green(Cat) >>> Eats(Cat, Bear) ::: If something sees the cat and the cat is green then the cat eats the bear.\nEats(Bear, BaldEagle) && Eats(Bear, Dog) >>> Rough(Bear) ::: If something eats the bear and it eats the dog then the bear is rough.\nEats(BaldEagle, $x) >>> Green($x) ::: If something eats the bald eagle then it is green.\nQuery:\nYoung(Cat, True) ::: The cat is young.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is rough. The cat is white. The cat is young. The dog is furry. The dog is green. The dog is rough. The dog is white. The dog is young. The eagle is furry. The eagle is green. The eagle is rough. The eagle is white. The eagle is young. The fox is furry. The fox is green. The fox is rough. The fox is white. The fox is young. The horse is furry. The horse is green. The horse is rough. The horse is white. The horse is young"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-465_Q1",
    "context": "Anne is big. Anne is furry. Anne is green. Anne is not kind. Bob is furry. Bob is green. Bob is red. Bob is round. Erin is not blue. Erin is red. Gary is not furry. Big people are round. All blue people are not round. If someone is big and round then they are green. If Bob is not red then Bob is not big. If Bob is round then Bob is big. Red people are kind. If Gary is not blue then Gary is furry. If someone is kind and green then they are furry. Kind people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(Anne, True) ::: Anne is big.\nFurry(Anne, True) ::: Anne is furry.\nGreen(Anne, True) ::: Anne is green.\nNot(Kind(Anne, True)) ::: Anne is not kind.\nFurry(Bob, True) ::: Bob is furry.\nGreen(Bob, True) ::: Bob is green.\nRed(Bob, True) ::: Bob is red.\nRound(Bob, True) ::: Bob is round.\nNot(Blue(Erin, True)) ::: Erin is not blue.\nRed(Erin, True) ::: Erin is red.\nNot(Furry(Gary, True)) ::: Gary is not furry.\nRules:\nBig($x, True) >>> Round($x, True) ::: Big people are round.\nNot(Blue($x, True)) >>> Round($x, True) ::: All blue people are not round.\nBig($x, True) && Round($x, True) >>> Green($x, True) ::: If Bob is not red then Bob is not big.\nBig($x, True) && Round($x, True) >>> Green($x, True) ::: If Bob is round then Bob is big.\nRed($x, True) >>> Kind($x, True) ::: Red people are kind.\nNot(Blue($x, True)) >>> Furry($x, True) ::: If Gary is not blue then Gary is furry.\nKind($x, True) && Green($x, True) >>> Furry($x, True) ::: If someone is kind and green then they are furry.\nKind($x, True) >>> Big($x, True) ::: Kind people are big.\n------\nProblem:\nAnne is big. Anne is furry. Anne is green. Anne is not kind. Bob is furry. Bob is green. Bob is red. Bob is round. Erin is not blue. Erin is red. Gary is not furry. Big people are round. All blue people are not round. If someone is big and round then they are green. If Bob is not red then Bob is not big. If Bob is round then Bob is big. Red people are kind. If Gary is not blue then Gary is furry. If someone is kind and green then they are furry. Kind people are big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is round.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-966_Q21",
    "context": "The bald eagle eats the cow. The bald eagle is young. The cow is nice. The cow sees the bald eagle. The dog eats the bald eagle. The tiger eats the cow. The tiger needs the bald eagle. If something is green and it eats the cow then it does not see the bald eagle. If something eats the tiger then the tiger is young. If something is red then it eats the tiger. If something sees the bald eagle then it eats the cow. If something is green and it needs the dog then it needs the bald eagle. If something sees the tiger then it needs the bald eagle. If something is red then it eats the bald eagle. If something is young then it is red. If something eats the dog and it is red then the dog is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not see the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nSees($x, $y, bool) ::: Does x see y?\nNeeds($x, $y, bool) ::: Does x need y?\nRules:\nEats(BaldEagle, Cow, True) ::: The bald eagle eats the cow.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nNice(Cow, True) ::: The cow is nice.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nEats(Tiger, Cow, True) ::: The tiger eats the cow.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nGreen($x, True) && Eats($x, Cow, True) >>> DoesNotSee($x, BaldEagle, True) ::: If something is green and it eats the cow then it does not see the bald eagle.\nEats($x, Tiger, True) >>> Young($x, True) ::: If something eats the tiger then the tiger is young.\nRed($x, True) >>> Eats($x, Tiger, True) ::: If something is red then it eats the tiger.\nSees($x, BaldEagle, True) >>> Eats($x, Cow, True) ::: If something sees the bald eagle then it eats the cow.\nGreen($x, True) && Needs($x, Dog, True) >>> Needs($x, BaldEagle, True) ::: If something is green and it needs the dog then it needs the bald eagle.\nSees($x, Tiger, True) >>> Needs($x, BaldEagle, True) ::: If something sees the tiger then it needs the bald eagle.\nRed($x, True) >>> Eats($x, BaldEagle, True) ::: If something is red then it eats the bald eagle.\nYoung($x, True) >>> Red($x, True) ::: If something is young then it is red.\nEats(Dog, $x, True) && Red($x, True) >>> Young($x, True) ::: If something eats the dog and it is red then the dog is young.\nQuery:\nDoesNotSee(Tiger, Dog, True) ::: The tiger does not see the dog.\n------\nProblem:\nThe dog is furry. The dog is green. The dog is young. The dog is white. The dog is rough. The dog is quiet. The dog is red. The dog is nice. The dog is rough. The dog is quiet. The dog is young. The dog is white. The dog is furry. The dog is green. The dog is young. The dog is white."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-345_Q22",
    "context": "The cat is big. The cat is cold. The cat likes the cow. The cat visits the lion. The cow is blue. The cow likes the lion. The cow does not visit the lion. The lion chases the cat. The lion is not big. The lion is rough. The lion visits the cat. The squirrel likes the cow. If something visits the squirrel then it likes the cat. If something visits the cat then it likes the cat. If something likes the squirrel and it is big then the squirrel likes the lion. If something likes the cow and it visits the cow then the cow visits the cat. If something likes the cat then it chases the squirrel. If something chases the lion and the lion is not cold then it visits the cow. If something chases the lion then the lion chases the cow. If something chases the squirrel then the squirrel visits the cat. If the cow is rough then the cow chases the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat likes the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Cat, True) ::: The cat is big.\nCold(Cat, True) ::: The cat is cold.\nLikes(Cat, Cow, True) ::: The cat likes the cow.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nBlue(Cow, True) ::: The cow is blue.\nLikes(Cow, Lion, True) ::: The cow likes the lion.\nVisits(Cow, Lion, False) ::: The cow does not visit the lion.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nNot(Big(Lion, True)) ::: The lion is not big.\nRough(Lion, True) ::: The lion is rough.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nIf(Visits(Squirrel, $x, True), Likes($x, Cat, True)) ::: If something visits the squirrel then it likes the cat.\nIf(Visits($x, Cat, True), Likes($x, Cat, True)) ::: If something visits the cat then it likes the cat.\nIf(Likes(Squirrel, $x, True), Big($x, True), Likes(Squirrel, Lion, True)) ::: If something likes the squirrel and it is big then the squirrel likes the lion.\nIf(Likes(Cow, $x, True), Visits($x, Cow, True), Visits(Cow, Cat, True)) ::: If something likes the cow and it visits the cow then the cow visits the cat.\nIf(Likes($x, Cat, True), Chases($x, Squirrel, True)) ::: If something likes the cat then it chases the squirrel.\nIf(Chases(Lion, $x, True), Not(Cold($x, True)), Visits(Lion, Cow, True)) ::: If something chases the lion and the lion is not cold then it visits the cow.\nIf(Chases(Lion, $x, True), Chases($x, Cow, True)) ::: If something chases the lion then the lion chases the cow.\nIf(Chases(Squirrel, $x, True), Visits($x, Cat, True)) ::: If something chases the squirrel then the squirrel visits the cat.\nIf(Blue(Cow, True), Chases(Cow, Cat, True"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-672_Q3",
    "context": "Anne is cold. Anne is kind. Anne is round. Anne is smart. Anne is young. Erin is cold. Erin is round. Erin is smart. Gary is cold. Gary is kind. Gary is rough. Gary is round. Gary is smart. Gary is white. Gary is young. Harry is cold. If someone is kind then they are round. Young, cold people are white. All white people are young. All cold people are white. All round people are smart. If someone is young and cold then they are kind. All round people are kind. All young people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nKind(Anne, True) ::: Anne is kind.\nRound(Anne, True) ::: Anne is round.\nSmart(Anne, True) ::: Anne is smart.\nYoung(Anne, True) ::: Anne is young.\nCold(Erin, True) ::: Erin is cold.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nCold(Gary, True) ::: Gary is cold.\nKind(Gary, True) ::: Gary is kind.\nRound(Gary, True) ::: Gary is round.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nYoung(Gary, True) ::: Gary is young.\nCold(Harry, True) ::: Harry is cold.\nRules:\nKind($x, True) >>> Round($x, True) ::: If someone is kind then they are round.\nYoung($x, True) && Cold($x, True) >>> White($x, True) ::: Young, cold people are white.\nWhite($x, True) >>> Young($x, True) ::: All white people are young.\nCold($x, True) >>> White($x, True) ::: All cold people are white.\nRound($x, True) >>> Smart($x, True) ::: All round people are smart.\nYoung($x, True) && Cold($x, True) >>> Kind($x, True) ::: If someone is young and cold then they are kind.\nRound($x, True) >>> Kind($x, True) ::: All round people are kind.\nYoung($x, True) >>> Rough($x, True) ::: All young people are rough.\nQuery:\nKind(Erin, True) ::: Erin is kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-813_Q17",
    "context": "The cow likes the lion. The cow sees the dog. The dog is big. The dog is cold. The dog likes the lion. The lion is nice. The lion is rough. The lion does not need the dog. The rabbit is cold. The rabbit needs the cow. The rabbit needs the lion. The rabbit sees the dog. If someone likes the cow then they are big. If someone needs the lion then the lion needs the cow. If someone likes the lion then they like the rabbit. If someone sees the cow and they are not big then they do not like the lion. If someone is green then they see the rabbit. If someone is green and they like the cow then the cow needs the rabbit. If someone sees the rabbit then the rabbit likes the lion. If someone likes the lion and they do not see the dog then they need the lion. If someone likes the lion and they like the rabbit then the lion is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not like the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nNeeds($x, $y, bool) ::: Does x need y?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nFacts:\nLikes(Cow, Lion, True) ::: The cow likes the lion.\nSees(Cow, Dog, True) ::: The cow sees the dog.\nBig(Dog, True) ::: The dog is big.\nCold(Dog, True) ::: The dog is cold.\nLikes(Dog, Lion, True) ::: The dog likes the lion.\nNice(Lion, True) ::: The lion is nice.\nRough(Lion, True) ::: The lion is rough.\nDoesNotNeed(Lion, Dog, True) ::: The lion does not need the dog.\nCold(Rabbit, True) ::: The rabbit is cold.\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nSees(Rabbit, Dog, True) ::: The rabbit sees the dog.\nRules:\nLikes($x, Cow, True) >>> Big($x, True) ::: If someone likes the cow then they are big.\nNeeds($x, Lion, True) >>> LionNeedsCow($x, True) ::: If someone needs the lion then the lion needs the cow.\nLikes($x, Lion) >>> Likes($x, Rabbit, True) ::: If someone likes the lion then they like the rabbit.\nSees($x, Cow) && Not(Big($x, True)) >>> Not(Likes($x, Lion, True)) ::: If someone sees the cow and they are not big then they do not like the lion.\nSees($x, Rabbit) >>> Likes($x, Lion, True) ::: If someone sees the rabbit then the rabbit likes the lion."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-721_Q6",
    "context": "The bald eagle does not eat the mouse. The bald eagle is not rough. The bald eagle needs the lion. The bald eagle sees the lion. The lion is nice. The mouse is kind. The mouse needs the bald eagle. The mouse needs the lion. The mouse sees the lion. The rabbit eats the bald eagle. The rabbit needs the mouse. If someone eats the bald eagle and they see the bald eagle then they are big. If someone is nice and they eat the rabbit then they eat the bald eagle. If someone eats the bald eagle then they are cold. If someone needs the rabbit and they are big then the rabbit sees the mouse. If someone is cold then they need the lion. If someone is cold and big then they do not need the bald eagle. If someone needs the lion then they see the bald eagle. If the rabbit sees the bald eagle and the rabbit is not big then the bald eagle eats the lion. If the bald eagle eats the lion then the bald eagle does not see the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not need the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(BaldEagle, Mouse, False) ::: The bald eagle does not eat the mouse.\nEats(BaldEagle, Lion, False) ::: The bald eagle is not rough.\nEats(BaldEagle, Lion, True) ::: The bald eagle needs the lion.\nEats(BaldEagle, Lion, True) ::: The bald eagle sees the lion.\nNeeds(BaldEagle, Lion, True) ::: The lion is nice.\nNeeds(Mouse, BaldEagle, True) ::: The mouse is kind.\nEats(Mouse, BaldEagle, True) ::: The mouse needs the bald eagle.\nEats(Mouse, Lion, True) ::: The mouse needs the lion.\nEats(Mouse, Lion, True) ::: The mouse sees the lion.\nEats(Rabbit, BaldEagle, True) ::: The rabbit eats the bald eagle.\nEats(Rabbit, Mouse, True) ::: The rabbit needs the mouse.\nEats(Rabbit, Mouse, True) ::: If someone eats the bald eagle and they see the bald eagle then they are big.\nEats(Rabbit, Mouse, True) ::: If someone is nice and they eat the rabbit then they eat the bald eagle.\nEats(Rabbit, Mouse, True) ::: If someone eats the bald eagle then they are cold.\nEats(Rabbit, Mouse, True) ::: If someone needs the rabbit and they are big then the rabbit sees the mouse.\nEats(Rabbit, Mouse, True) ::: If someone is cold then they need the lion.\nEats(Rabbit, Mouse, True) ::: If someone is cold and big then they do not need the bald eagle.\nEats(Rabbit, Mouse, True) ::: If someone needs the lion"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1122_Q9",
    "context": "Bob is nice. Bob is round. Bob is white. Charlie is blue. Charlie is nice. Fiona is blue. Harry is white. If someone is blue then they are furry. All furry, nice people are smart. If someone is furry and white then they are nice. All white people are blue. Nice, smart people are quiet. Round people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nNice(Bob, True) ::: Bob is nice.\nRound(Bob, True) ::: Bob is round.\nWhite(Bob, True) ::: Bob is white.\nBlue(Charlie, True) ::: Charlie is blue.\nNice(Charlie, True) ::: Charlie is nice.\nBlue(Fiona, True) ::: Fiona is blue.\nWhite(Harry, True) ::: Harry is white.\nRules:\nBlue($x, True) >>> Furry($x, True) ::: If someone is blue then they are furry.\nFurry($x, True) && Nice($x, True) >>> Smart($x, True) ::: All furry, nice people are smart.\nFurry($x, True) && White($x, True) >>> Nice($x, True) ::: If someone is furry and white then they are nice.\nWhite($x, True) >>> Blue($x, True) ::: All white people are blue.\nNice($x, True) && Smart($x, True) >>> Quiet($x, True) ::: Nice, smart people are quiet.\nRound($x, True) >>> White($x, True) ::: Round people are white.\nQuery:\nQuiet(Bob, True) ::: Bob is quiet.\n------\nProblem:\nBob is furry. Bob is nice. Bob is white. Charlie is furry. Charlie is nice. Charlie is white. Fiona is furry. Fiona is nice. Fiona is white. Harry is furry. Harry is nice. Harry is white. If someone is furry then they are nice. If someone is furry and white then they are nice. If someone is furry and white then they are white. If someone is furry and white then they are white. If someone is furry and white then they are white. If someone is furry and white then they are white. If someone is"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-649_Q1",
    "context": "The bald eagle is nice. The bald eagle is rough. The bald eagle needs the mouse. The bald eagle needs the squirrel. The mouse is kind. The mouse is young. The mouse likes the tiger. The mouse sees the bald eagle. The squirrel is kind. The squirrel is nice. The squirrel needs the bald eagle. The tiger is kind. If someone likes the bald eagle then they are rough. If someone is blue and they see the tiger then the tiger needs the squirrel. If the mouse needs the bald eagle and the bald eagle likes the mouse then the bald eagle is rough. If the mouse needs the squirrel then the squirrel likes the mouse. If someone is rough then they see the mouse. If someone needs the tiger and the tiger is kind then they like the bald eagle. If someone sees the mouse then they need the squirrel. If someone needs the squirrel and the squirrel is nice then the squirrel needs the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle needs the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nNice(BaldEagle, True) ::: The bald eagle is nice.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nNeeds(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nNeeds(BaldEagle, Squirrel, True) ::: The bald eagle needs the squirrel.\nKind(Mouse, True) ::: The mouse is kind.\nYoung(Mouse, True) ::: The mouse is young.\nLikes(Mouse, Tiger, True) ::: The mouse likes the tiger.\nSees(Mouse, BaldEagle, True) ::: The mouse sees the bald eagle.\nKind(Squirrel, True) ::: The squirrel is kind.\nNice(Squirrel, True) ::: The squirrel is nice.\nNeeds(Squirrel, BaldEagle, True) ::: The squirrel needs the bald eagle.\nKind(Tiger, True) ::: The tiger is kind.\nRules:\nLikes($x, BaldEagle, True) >>> Rough($x, True) ::: If someone likes the bald eagle then they are rough.\nBlue($x, True) && Sees($x, Tiger, True) >>> Needs(Tiger, Squirrel, True) ::: If the mouse needs the bald eagle and the bald eagle likes the mouse then the bald eagle is rough.\nNeeds($x, BaldEagle, True) && Likes($x, Mouse, True) >>> Needs(BaldEagle, Mouse, True) ::: If someone needs the tiger and the tiger is kind then they like the bald eagle.\nSees($x, Mouse, True) >>> Needs($x, S"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-305_Q1",
    "context": "Anne is quiet. Bob is not rough. Gary is big. Gary is kind. Gary is rough. Gary is young. Harry is young. All big people are furry. Young people are furry. All quiet, kind people are furry. If Harry is furry and Harry is quiet then Harry is round. Rough, kind people are quiet. Young, rough people are kind. All quiet, furry people are round. Furry people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nNot(Rough(Bob, True)) ::: Bob is not rough.\nBig(Gary, True) ::: Gary is big.\nKind(Gary, True) ::: Gary is kind.\nRough(Gary, True) ::: Gary is rough.\nYoung(Gary, True) ::: Gary is young.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBig($x, True) >>> Furry($x, True) ::: All big people are furry.\nYoung($x, True) >>> Furry($x, True) ::: Young people are furry.\nQuite($x, True) && Kind($x, True) >>> Furry($x, True) ::: All quiet, kind people are furry.\nHarry(Furry, True) && Harry(Quite, True) >>> Harry(Round, True) ::: If Harry is furry and Harry is quiet then Harry is round.\nRough($x, True) && Kind($x, True) >>> Quite($x, True) ::: Rough, kind people are quiet.\nYoung($x, True) && Rough($x, True) >>> Kind($x, True) ::: Young, rough people are kind.\nFurry($x, True) >>> Round($x, True) ::: All quiet, furry people are round.\nFurry($x, True) >>> Rough($x, True) ::: Furry people are rough.\nQuery:\nYoung(Gary, True) ::: Gary is young.\n------\nProblem:\nAnne is quiet. Bob is not rough. Gary is big. Gary is kind. Gary is rough. Gary is young. Harry is young. All big people are furry. Young people are furry. All quiet, kind people are furry. If Harry is furry and Harry"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1335_Q7",
    "context": "Anne is cold. Anne is green. Anne is rough. Charlie is kind. Dave is cold. Dave is furry. Dave is kind. Dave is quiet. Dave is red. Erin is kind. Erin is quiet. Erin is red. Furry, rough people are green. Red people are furry. All green people are kind. Kind people are quiet. If someone is cold then they are rough. All furry, rough people are cold. All quiet people are red. All red, quiet people are cold. If Anne is kind then Anne is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nGreen(Anne, True) ::: Anne is green.\nRough(Anne, True) ::: Anne is rough.\nKind(Charlie, True) ::: Charlie is kind.\nCold(Dave, True) ::: Dave is cold.\nFurry(Dave, True) ::: Dave is furry.\nKind(Dave, True) ::: Dave is kind.\nQuiet(Dave, True) ::: Dave is quiet.\nRed(Dave, True) ::: Dave is red.\nKind(Erin, True) ::: Erin is kind.\nQuiet(Erin, True) ::: Erin is quiet.\nRed(Erin, True) ::: Erin is red.\nRules:\nFurry($x, True) && Rough($x, True) >>> Green($x, True) ::: Furry, rough people are green.\nRed($x, True) >>> Furry($x, True) ::: Red people are furry.\nGreen($x, True) >>> Kind($x, True) ::: All green people are kind.\nKind($x, True) >>> Quiet($x, True) ::: Kind people are quiet.\nCold($x, True) >>> Rough($x, True) ::: If someone is cold then they are rough.\nFurry($x, True) && Rough($x, True) >>> Cold($x, True) ::: All furry, rough people are cold.\nQuiet($x, True) >>> Red($x, True) ::: All quiet people are red.\nRed($x, True) && Quiet($x, True) >>> Cold($x, True) ::: All red, quiet people are cold.\nKind($x, True) >>> Furry($x, True) ::: If Anne is kind then Anne is furry.\nQuery:\nF"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1331_Q16",
    "context": "Bob is big. Dave is big. Dave is quiet. Dave is round. Fiona is round. Harry is kind. Harry is smart. Big people are kind. All kind, big people are round. If someone is smart then they are kind. If someone is green and smart then they are furry. If someone is quiet and furry then they are smart. Furry, big people are quiet. All smart, kind people are big. If someone is furry then they are big. Round people are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRules:\nBig($x, True) >>> Kind($x, True) ::: Big people are kind.\nKind($x, True) && Big($x, True) >>> Round($x, True) ::: All kind, big people are round.\nSmart($x, True) >>> Kind($x, True) ::: If someone is smart then they are kind.\nGreen($x, True) && Smart($x, True) >>> Furry($x, True) ::: If someone is green and smart then they are furry.\nQuiet($x, True) && Furry($x, True) >>> Smart($x, True) ::: If someone is quiet and furry then they are smart.\nFurry($x, True) && Big($x, True) >>> Quiet($x, True) ::: Furry, big people are quiet.\nSmart($x, True) && Kind($x, True) >>> Big($x, True) ::: All smart, kind people are big.\nBig($x, True) >>> Furry($x, True) ::: If someone is furry then they are big.\nRound($x, True) >>> Furry($x, True) ::: Round people are furry.\nQuery:\nGreen(Harry, True) ::: Harry is green.\n------\nProblem:\nBob is big. Bob is furry. Bob is green. Bob is kind. Bob is quiet. Bob is round. Bob is smart. Bob is white. Dave is big. Dave is furry. Dave is green. Dave is kind. Dave is quiet. Dave is round. Dave is smart. Dave is white. Fiona is big. Fiona is furry. Fiona is green. Fiona is kind. Fiona is quiet. Fiona is round. Fiona is smart. Fiona is white. Harry is big. Harry is furry. Harry is green. Harry is kind. Harry is quiet. Harry is round. Harry is smart. Harry is white.\nQuestion:"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-427_Q14",
    "context": "The bald eagle eats the tiger. The bald eagle is red. The bald eagle likes the rabbit. The bear eats the bald eagle. The bear is rough. The rabbit eats the tiger. The tiger eats the bald eagle. The tiger eats the rabbit. The tiger is kind. The tiger likes the bear. If someone is cold then they see the rabbit. If someone sees the tiger and the tiger is kind then they see the bald eagle. If the rabbit is red and the rabbit is rough then the rabbit likes the bear. If someone sees the rabbit then the rabbit eats the bald eagle. If someone eats the bald eagle then they are cold. If someone sees the bald eagle and they eat the bear then they like the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle sees the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nRules:\nEats(BaldEagle, Tiger, True) ::: The bald eagle eats the tiger.\nRed(BaldEagle, True) ::: The bald eagle is red.\nLikes(BaldEagle, Rabbit, True) ::: The bald eagle likes the rabbit.\nEats(Bear, BaldEagle, True) ::: The bear eats the bald eagle.\nRough(Bear, True) ::: The bear is rough.\nEats(Rabbit, Tiger, True) ::: The rabbit eats the tiger.\nEats(Tiger, BaldEagle, True) ::: The tiger eats the bald eagle.\nEats(Tiger, Rabbit, True) ::: The tiger eats the rabbit.\nKind(Tiger, True) ::: The tiger is kind.\nLikes(Tiger, Bear, True) ::: The tiger likes the bear.\nCold($x, True) >>> Sees($x, Rabbit, True) ::: If someone is cold then they see the rabbit.\nSees(Tiger, BaldEagle, True) >>> Kind(Tiger, True) ::: If someone sees the tiger and the tiger is kind then they see the bald eagle.\nRed($x, True) && Rough($x, True) >>> Likes($x, Bear, True) ::: If the rabbit is red and the rabbit is rough then the rabbit likes the bear.\nSees($x, Rabbit, True) >>> Eats($x, BaldEagle, True) ::: If someone sees the rabbit then the rabbit eats the bald eagle.\nEats($x, BaldEagle, True) >>> Cold($x, True) ::: If someone eats the bald eagle then they are cold.\nSees($x, Bald"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-345_Q9",
    "context": "The cat is big. The cat is cold. The cat likes the cow. The cat visits the lion. The cow is blue. The cow likes the lion. The cow does not visit the lion. The lion chases the cat. The lion is not big. The lion is rough. The lion visits the cat. The squirrel likes the cow. If something visits the squirrel then it likes the cat. If something visits the cat then it likes the cat. If something likes the squirrel and it is big then the squirrel likes the lion. If something likes the cow and it visits the cow then the cow visits the cat. If something likes the cat then it chases the squirrel. If something chases the lion and the lion is not cold then it visits the cow. If something chases the lion then the lion chases the cow. If something chases the squirrel then the squirrel visits the cat. If the cow is rough then the cow chases the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel likes the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Cat, True) ::: The cat is big.\nCold(Cat, True) ::: The cat is cold.\nLikes(Cat, Cow, True) ::: The cat likes the cow.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nBlue(Cow, True) ::: The cow is blue.\nLikes(Cow, Lion, True) ::: The cow likes the lion.\nVisits(Cow, Lion, False) ::: The cow does not visit the lion.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nNot(Big(Lion, True)) ::: The lion is not big.\nRough(Lion, True) ::: The lion is rough.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nIf(Visits(Squirrel, $x, True), Likes($x, Cat, True)) ::: If something visits the squirrel then it likes the cat.\nIf(Visits($x, Cat, True), Likes($x, Cat, True)) ::: If something visits the cat then it likes the cat.\nIf(Likes(Squirrel, $x, True), Big($x, True), Likes(Squirrel, Lion, True)) ::: If something likes the squirrel and it is big then the squirrel likes the lion.\nIf(Likes(Cow, $x, True), Visits($x, Cow, True), Visits(Cow, Cat, True)) ::: If something likes the cow and it visits the cow then the cow visits the cat.\nIf(Likes($x, Cat, True), Chases($x, Squirrel, True)) ::: If something likes"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-399_Q3",
    "context": "Bob is quiet. Bob is smart. Charlie is kind. Charlie is smart. Charlie is white. Erin is blue. Harry is green. White, green things are smart. Smart, quiet things are white. All quiet, kind things are white. If Erin is kind and Erin is blue then Erin is white. All kind things are quiet. White things are quiet. Green things are kind. All white, smart things are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nSmart(Bob, True) ::: Bob is smart.\nKind(Charlie, True) ::: Charlie is kind.\nSmart(Charlie, True) ::: Charlie is smart.\nWhite(Charlie, True) ::: Charlie is white.\nBlue(Erin, True) ::: Erin is blue.\nGreen(Harry, True) ::: Harry is green.\nRules:\nWhite($x, True) >>> Green($x, True) ::: White, green things are smart.\nSmart($x, True) && Quite($x, True) >>> White($x, True) ::: Smart, quiet things are white.\nQuite($x, True) && Kind($x, True) >>> White($x, True) ::: All quiet, kind things are white.\nKind($x, True) >>> Quite($x, True) ::: All kind things are quiet.\nWhite($x, True) >>> Quite($x, True) ::: White things are quiet.\nGreen($x, True) >>> Kind($x, True) ::: Green things are kind.\nWhite($x, True) && Smart($x, True) >>> Furry($x, True) ::: All white, smart things are furry.\nQuery:\nWhite(Bob, True) ::: Bob is white.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-683_Q22",
    "context": "The bear chases the cat. The bear chases the cow. The bear likes the cat. The bear likes the lion. The bear visits the cat. The cat is red. The cat visits the bear. The cat visits the cow. The cow visits the lion. The lion chases the cat. The lion is nice. If something likes the bear and it visits the lion then it is green. If something likes the lion and the lion is nice then it chases the lion. If something is green and it chases the cow then the cow is cold. Cold things are green. If something chases the lion and the lion chases the cat then it is cold. If the lion likes the cat and the cat chases the lion then the lion is nice. If something likes the cat then it likes the lion. If something likes the cat then it likes the lion. If something chases the lion then the lion visits the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Bear, Cat, True) ::: The bear chases the cat.\nChases(Bear, Cow, True) ::: The bear chases the cow.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nLikes(Bear, Lion, True) ::: The bear likes the lion.\nVisits(Bear, Cat, True) ::: The bear visits the cat.\nRed(Cat, True) ::: The cat is red.\nVisits(Cat, Bear, True) ::: The cat visits the bear.\nVisits(Cat, Cow, True) ::: The cat visits the cow.\nVisits(Cow, Lion, True) ::: The cow visits the lion.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nNice(Lion, True) ::: The lion is nice.\nRules:\nLikes($x, $y, True) && Visits($x, $y, True) >>> Green($x, True) ::: If something likes the bear and it visits the lion then it is green.\nLikes($x, $y, True) && Nice($y, True) >>> Ch"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-668_Q8",
    "context": "The bald eagle is nice. The bald eagle is round. The bald eagle likes the lion. The bald eagle visits the dog. The cat is green. The cat is nice. The cat is round. The cat likes the bald eagle. The cat likes the dog. The cat visits the dog. The dog eats the cat. The dog is big. The dog is blue. The lion is blue. If something is nice and green then it visits the bald eagle. If something is big then it eats the lion. If the bald eagle visits the lion then the lion is nice. If the bald eagle likes the cat then the bald eagle visits the dog. Round things are big. If something eats the cat and the cat eats the dog then the cat eats the lion. If something visits the dog and it eats the lion then the lion is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nNice(BaldEagle, True) ::: The bald eagle is nice.\nRound(BaldEagle, True) ::: The bald eagle is round.\nLikes(BaldEagle, Lion, True) ::: The bald eagle likes the lion.\nVisits(BaldEagle, Dog, True) ::: The bald eagle visits the dog.\nGreen(Cat, True) ::: The cat is green.\nNice(Cat, True) ::: The cat is nice.\nRound(Cat, True) ::: The cat is round.\nLikes(Cat, BaldEagle, True) ::: The cat likes the bald eagle.\nLikes(Cat, Dog, True) ::: The cat likes the dog.\nVisits(Cat, Dog, True) ::: The cat visits the dog.\nEats(Dog, Cat, True) ::: The dog eats the cat.\nBig(Dog, True) ::: The dog is big.\nBlue(Dog, True) ::: The dog is blue.\nBlue(Lion, True) ::: The lion is blue.\nRules:\nNice($x, True) && Green($x, True) >>> Visits($x, BaldEagle, True) ::: If something is nice and green"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1176_Q8",
    "context": "Bob is not round. Charlie is furry. Charlie is nice. Charlie is smart. Erin is red. Fiona is furry. Fiona is young. All red people are not round. Red people are not blue. All young people are furry. If Erin is red and Erin is not round then Erin is nice. If someone is round and nice then they are not young. All smart people are young. Nice people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotRound(Bob, True) ::: Bob is not round.\nFurry(Charlie, True) ::: Charlie is furry.\nNice(Charlie, True) ::: Charlie is nice.\nSmart(Charlie, True) ::: Charlie is smart.\nRed(Erin, True) ::: Erin is red.\nFurry(Fiona, True) ::: Fiona is furry.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nRed($x, True) >>> NotRound($x, True) ::: All red people are not round.\nRed($x, True) >>> NotBlue($x, True) ::: Red people are not blue.\nYoung($x, True) >>> Furry($x, True) ::: All young people are furry.\nRed($x, True) && NotRound($x, True) >>> Nice($x, True) ::: If Erin is red and Erin is not round then Erin is nice.\nRound($x, True) && Nice($x, True) >>> NotYoung($x, True) ::: If someone is round and nice then they are not young.\nSmart($x, True) >>> Young($x, True) ::: All smart people are young.\nNice($x, True) >>> Smart($x, True) ::: Nice people are smart"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-121_Q6",
    "context": "The bald eagle needs the cow. The bald eagle needs the tiger. The bald eagle sees the cow. The cow is big. The cow needs the bald eagle. The cow needs the tiger. The mouse eats the cow. The mouse is blue. The mouse is cold. The mouse needs the bald eagle. The mouse sees the cow. The mouse sees the tiger. The tiger eats the cow. The tiger needs the bald eagle. The tiger needs the cow. The tiger needs the mouse. If someone needs the tiger then they are red. If the mouse needs the bald eagle and the bald eagle needs the cow then the mouse needs the cow. If the cow needs the mouse and the mouse sees the cow then the mouse is big. If someone eats the mouse then they see the cow. If someone sees the mouse and they see the bald eagle then the bald eagle needs the tiger. If someone is big then they see the bald eagle. If someone is big and they see the bald eagle then they need the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not need the mouse.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFacts:\nNeeds(BaldEagle, Cow, True) ::: The bald eagle needs the cow.\nNeeds(BaldEagle, Tiger, True) ::: The bald eagle needs the tiger.\nSees(BaldEagle, Cow, True) ::: The bald eagle sees the cow.\nIs(Cow, Big, True) ::: The cow is big.\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\nNeeds(Cow, Tiger, True) ::: The cow needs the tiger.\nEats(Mouse, Cow, True) ::: The mouse eats the cow.\nIs(Mouse, Blue, True) ::: The mouse is blue.\nIs(Mouse, Cold, True) ::: The mouse is cold.\nNeeds(Mouse, BaldEagle, True) ::: The mouse needs the bald eagle.\nSees(Mouse, Cow, True) ::: The mouse sees the cow.\nSees(Mouse, Tiger, True) ::: The mouse sees the tiger.\nEats(Tiger, Cow, True) ::: The tiger eats the cow.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald e"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-517_Q3",
    "context": "The bald eagle is green. The bald eagle is red. The cat chases the lion. The cat sees the tiger. The cat visits the bald eagle. The cat visits the lion. The lion chases the cat. The lion is red. The lion sees the bald eagle. The lion sees the cat. The tiger chases the cat. The tiger sees the cat. The tiger visits the bald eagle. The tiger visits the lion. If something sees the lion and it sees the bald eagle then it chases the cat. If something chases the cat then it is young. If something visits the tiger and the tiger sees the cat then it sees the lion. If something visits the tiger and the tiger visits the lion then it sees the bald eagle. If the lion sees the bald eagle then the bald eagle visits the tiger. If something is young then it visits the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nRed(BaldEagle, True) ::: The bald eagle is red.\nChases(Cat, Lion, True) ::: The cat chases the lion.\nSees(Cat, Tiger, True) ::: The cat sees the tiger.\nVisits(Cat, BaldEagle, True) ::: The cat visits the bald eagle.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nRed(Lion, True) ::: The lion is red.\nSees(Lion, BaldEagle, True) ::: The lion sees the bald eagle.\nSees(Lion, Cat, True) ::: The lion sees the cat.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nSees(Tiger, Cat, True) ::: The tiger sees the cat.\nVisits(Tiger, BaldEagle, True) ::: The tiger visits the bald eagle.\nVisits(Tiger, Lion, True) ::: The tiger visits the lion.\nRules:\nSees($x, $y, True) && Sees($x, BaldEagle, True) >>> Chases($x, Cat, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-718_Q9",
    "context": "Bob is round. Charlie is big. Charlie is furry. Charlie is green. Charlie is round. Charlie is white. Dave is big. Dave is quiet. Gary is green. Gary is quiet. All furry people are white. If someone is big then they are smart. All white, big people are round. If someone is quiet then they are smart. Smart people are big. All big, green people are furry. If someone is smart and round then they are quiet. Green people are smart. All smart, furry people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nFacts:\nRound(Bob, True) ::: Bob is round.\nBig(Charlie, True) ::: Charlie is big.\nFurry(Charlie, True) ::: Charlie is furry.\nGreen(Charlie, True) ::: Charlie is green.\nRound(Charlie, True) ::: Charlie is round.\nWhite(Charlie, True) ::: Charlie is white.\nBig(Dave, True) ::: Dave is big.\nQuiet(Dave, True) ::: Dave is quiet.\nGreen(Gary, True) ::: Gary is green.\nQuiet(Gary, True) ::: Gary is quiet.\nRules:\nFurry($x, True) >>> White($x, True) ::: All furry people are white.\nBig($x, True) >>> Smart($x, True) ::: If someone is big then they are smart.\nBig($x, True) && White($x, True) >>> Round($x, True) ::: All white, big people are round.\nQuiet($x, True) >>> Smart($x, True) ::: If someone is quiet then they are smart.\nSmart($x, True) >>> Big($x, True) ::: Smart people are big.\nBig($x, True) && Green($x, True) >>> Furry($x, True) ::: All big, green people are fur"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-423_Q3",
    "context": "Anne is cold. Anne is furry. Anne is not quiet. Charlie is kind. Fiona is not quiet. Fiona is young. Harry is cold. Kind things are furry. Nice things are big. Furry things are nice. If something is young and furry then it is quiet. If Anne is quiet then Anne is cold. Kind, big things are young. If something is kind and not furry then it is not young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nQuite(Anne, False) ::: Anne is not quiet.\nKind(Charlie, True) ::: Charlie is kind.\nQuite(Fiona, False) ::: Fiona is not quiet.\nYoung(Fiona, True) ::: Fiona is young.\nCold(Harry, True) ::: Harry is cold.\nRules:\nFurry($x, True) >>> Nice($x, True) ::: Furry things are nice.\nKind($x, True) >>> Furry($x, True) ::: Kind things are furry.\nBig($x, True) >>> Nice($x, True) ::: Nice things are big.\nFurry($x, True) && Young($x, True) >>> Quite($x, True) ::: If something is young and furry then it is quiet.\nQuite(Anne, True) >>> Cold($x, True) ::: If Anne is quiet then Anne is cold.\nKind($x, True) && Not(Furry($x, True)) >>> Not(Young($x, True)) ::: If something is kind and not furry then it is not young.\nKind($x, True) && Big($x, True) >>> Young($x, True"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-587_Q11",
    "context": "The bald eagle chases the squirrel. The bald eagle eats the bear. The bear does not eat the lion. The bear visits the lion. The lion does not eat the bald eagle. The squirrel is red. The squirrel visits the bald eagle. If something is round then it eats the squirrel. If something is blue and green then it chases the bald eagle. If something eats the squirrel then the squirrel is green. If the bald eagle is round then the bald eagle chases the lion. If something is blue then it chases the squirrel. All red things are blue. If something chases the lion then it is blue. Blue, red things are round. If something visits the bald eagle and it is not round then it visits the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel chases the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nIsRound($x, bool) ::: Is x round?\nIsBlue($x, bool) ::: Is x blue?\nIsGreen($x, bool) ::: Is x green?\nIsRed($x, bool) ::: Is x red?\nFacts:\nChases(BaldEagle, Squirrel, True) ::: The bald eagle chases the squirrel.\nEats(BaldEagle, Bear, True) ::: The bald eagle eats the bear.\nDoesNotEat(Bear, Lion, True) ::: The bear does not eat the lion.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nDoesNotEat(Lion, BaldEagle, True) ::: The lion does not eat the bald eagle.\nIsRed(Squirrel, True) ::: The squirrel is red.\nVisits(Squirrel, BaldEagle, True) ::: The squirrel visits the bald eagle.\nIfSomethingIsRoundThenItEatsTheSquirrel($x, True) ::: If something is round then it eats the squirrel.\nIfSomethingIsBlueAndGreenThenItChasesTheBaldEagle($x, True) ::: If something is blue and green then it chases the bald eagle.\nIfSomethingEatsTheSquirrelThenTheSquirrelIsGreen($x, True) ::: If something eats the squirrel then the squirrel is green.\nIfTheBaldEagleIsRoundThenTheBaldEagleChasesTheLion($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-510_Q5",
    "context": "The bear is cold. The bear is not green. The bear is rough. The rabbit is cold. The squirrel is nice. The squirrel does not visit the rabbit. The squirrel visits the tiger. The tiger chases the bear. The tiger does not eat the rabbit. The tiger is cold. The tiger is nice. The tiger is not rough. The tiger visits the rabbit. The tiger visits the squirrel. If something is green and it visits the squirrel then the squirrel is green. If something chases the rabbit then it eats the bear. If the squirrel eats the rabbit and the rabbit visits the bear then the bear is not red. If something is cold then it chases the rabbit. If the rabbit chases the squirrel then the squirrel eats the bear. If something chases the bear and it visits the tiger then the tiger chases the squirrel. If something is cold and not nice then it eats the rabbit. If something eats the bear and the bear visits the squirrel then it eats the rabbit. If something eats the bear then it chases the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit eats the bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nVisit($x, $y, bool) ::: Does x visit y?\nEat($x, $y, bool) ::: Does x eat y?\nChase($x, $y, bool) ::: Does x chase y?\nFacts:\nCold(Bear, True) ::: The bear is cold.\nNot(Green(Bear, True)) ::: The bear is not green.\nRough(Bear, True) ::: The bear is rough.\nCold(Rabbit, True) ::: The rabbit is cold.\nNice(Squirrel, True) ::: The squirrel is nice.\nNot(Visit(Rabbit, Squirrel, True)) ::: The squirrel does not visit the rabbit.\nVisit(Squirrel, Tiger, True) ::: The squirrel visits the tiger.\nChase(Tiger, Bear, True) ::: The tiger chases the bear.\nNot(Eat(Tiger, Rabbit, True)) ::: The tiger does not eat the rabbit.\nCold(Tiger, True) ::: The tiger is cold.\nNice(Tiger, True) ::: The tiger is nice.\nNot(Rough(Tiger, True)) ::: The tiger is not rough.\nVisit(Tiger, Rabbit, True) ::: The tiger visits the rabbit.\nVisit(Tiger, Squirrel, True) ::: The tiger visits the squirrel."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-442_Q24",
    "context": "The bald eagle chases the cat. The bald eagle does not eat the mouse. The cat eats the cow. The cow eats the cat. The cow is blue. The cow is young. The cow sees the cat. The cow does not see the mouse. The mouse does not chase the cow. The mouse eats the bald eagle. The mouse is round. If something eats the mouse then it is round. If the mouse is red then the mouse sees the cow. If something chases the cat then it does not chase the mouse. If the mouse chases the cat then the cat eats the mouse. If something is round then it chases the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle chases the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(BaldEagle, Cat, True) ::: The bald eagle chases the cat.\nEats(BaldEagle, Mouse, False) ::: The bald eagle does not eat the mouse.\nEats(Cat, Cow, True) ::: The cat eats the cow.\nEats(Cow, Cat, True) ::: The cow eats the cat.\nIs(Cow, Blue, True) ::: The cow is blue.\nIs(Cow, Young, True) ::: The cow is young.\nSees(Cow, Cat, True) ::: The cow sees the cat.\nSees(Cow, Mouse, False) ::: The cow does not see the mouse.\nEats(Mouse, BaldEagle, True) ::: The mouse eats the bald eagle.\nIs(Mouse, Round, True) ::: The mouse is round.\nRules:\nEats($x, $y, True) >>> Round($x, True) ::: If something eats the mouse then it is round.\nIs(Mouse, Red, True) >>> Sees(Mouse, Cow, True) ::: If the mouse is red then the mouse sees the cow.\nChases($x, Cat, True) >>> Eats($x, Mouse, True) ::: If something chases the cat then it eats the mouse.\nChases($x, Mouse, True) >>> Eats($x, Cat, True) ::: If the mouse chases the cat then the cat eats the mouse.\nRound($x, True) >>> Chases($x, Cat, True) ::: If something is round then it chases the cat.\nQuery:\nChases(BaldEagle, BaldEagle, True) ::: The bald eagle chases the bald eagle.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-739_Q1",
    "context": "The bald eagle eats the dog. The bald eagle sees the dog. The dog is cold. The dog likes the squirrel. The dog sees the rabbit. The rabbit eats the dog. The rabbit eats the squirrel. The rabbit likes the dog. The rabbit sees the squirrel. The squirrel likes the bald eagle. If someone is cold and they like the bald eagle then they eat the rabbit. If someone likes the dog and they see the squirrel then the dog likes the bald eagle. If the bald eagle sees the dog and the bald eagle is cold then the bald eagle likes the dog. If someone likes the rabbit then they are young. If someone likes the dog and the dog likes the squirrel then they like the bald eagle. If the bald eagle is red and the bald eagle likes the squirrel then the squirrel eats the rabbit. If the dog likes the bald eagle and the bald eagle sees the dog then the bald eagle is cold. If someone sees the bald eagle then the bald eagle is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit likes the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nLikes($x, $y, bool) ::: Does x like y?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nRules:\nEats(BaldEagle, Dog, True) ::: The bald eagle eats the dog.\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nCold(Dog, True) ::: The dog is cold.\nLikes(Dog, Squirrel, True) ::: The dog likes the squirrel.\nSees(Dog, Rabbit, True) ::: The dog sees the rabbit.\nEats(Rabbit, Dog, True) ::: The rabbit eats the dog.\nEats(Rabbit, Squirrel, True) ::: The rabbit eats the squirrel.\nLikes(Rabbit, Dog, True) ::: The rabbit likes the dog.\nSees(Rabbit, Squirrel, True) ::: The rabbit sees the squirrel.\nLikes(Squirrel, BaldEagle, True) ::: The squirrel likes the bald eagle.\nCold($x, True) && Likes($x, BaldEagle, True) >>> Eats($x, Rabbit, True) ::: If someone is cold and they like the bald eagle then they eat the rabbit.\nLikes(Dog, Squirrel, True) && Sees(Dog, Squirrel, True) >>> Likes(Dog, BaldEagle, True) ::: If someone likes the dog and they see the squirrel then the dog likes the bald eagle.\nSees(BaldEagle, Dog, True) && Cold(BaldEagle, True) >>> Likes(BaldEagle, Dog, True) ::: If the bald eagle sees the dog and the bald eagle is cold then the bald eagle likes the dog.\nLikes(Dog, BaldEagle, True) >>> Young($x"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1111_Q2",
    "context": "Bob is big. Bob is blue. Bob is cold. Bob is red. Bob is rough. Charlie is not cold. Charlie is green. Gary is blue. Harry is cold. Harry is rough. If someone is quiet and blue then they are big. If someone is rough and quiet then they are red. Green people are rough. If someone is big and blue then they are green. Blue people are quiet. If Gary is not blue then Gary is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nRed(Bob, True) ::: Bob is red.\nRough(Bob, True) ::: Bob is rough.\nGreen(Charlie, True) ::: Charlie is green.\nBlue(Gary, True) ::: Gary is blue.\nCold(Harry, True) ::: Harry is cold.\nRough(Harry, True) ::: Harry is rough.\nRules:\nQuiet($x, True) && Blue($x, True) >>> Big($x, True) ::: If someone is quiet and blue then they are big.\nRough($x, True) && Quiet($x, True) >>> Red($x, True) ::: If someone is rough and quiet then they are red.\nGreen($x, True) >>> Rough($x, True) ::: Green people are rough.\nBig($x, True) && Blue($x, True) >>> Green($x, True) ::: If someone is big and blue then they are green.\nBlue($x, True) >>> Quiet($x, True) ::: Blue people are quiet.\nNot(Blue($x, True)) >>> Big($x, True) ::: If Gary is not blue then Gary is big.\nQuery:\nNot(Blue(Bob, True)) ::: Bob is not blue.\n------\nProblem:\nBob is big. Bob is blue. Bob is cold. Bob is red. Bob is rough. Charlie is not cold. Charlie is green. Gary is blue. Harry is cold. Harry is rough. If someone is quiet and blue then they are big. If someone is rough and quiet then they are red. Green people are rough. If someone is big and blue then they are green. Blue"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-442_Q9",
    "context": "The bald eagle chases the cat. The bald eagle does not eat the mouse. The cat eats the cow. The cow eats the cat. The cow is blue. The cow is young. The cow sees the cat. The cow does not see the mouse. The mouse does not chase the cow. The mouse eats the bald eagle. The mouse is round. If something eats the mouse then it is round. If the mouse is red then the mouse sees the cow. If something chases the cat then it does not chase the mouse. If the mouse chases the cat then the cat eats the mouse. If something is round then it chases the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat chases the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(BaldEagle, Cat, True) ::: The bald eagle chases the cat.\nEats(BaldEagle, Mouse, False) ::: The bald eagle does not eat the mouse.\nEats(Cat, Cow, True) ::: The cat eats the cow.\nEats(Cow, Cat, True) ::: The cow eats the cat.\nIs(Cow, Blue, True) ::: The cow is blue.\nIs(Cow, Young, True) ::: The cow is young.\nSees(Cow, Cat, True) ::: The cow sees the cat.\nSees(Cow, Mouse, False) ::: The cow does not see the mouse.\nEats(Mouse, BaldEagle, True) ::: The mouse eats the bald eagle.\nIs(Mouse, Round, True) ::: The mouse is round.\nRules:\nEats($x, $y, True) >>> Round($x, True) ::: If something eats the mouse then it is round.\nIs(Mouse, Red, True) >>> Sees(Mouse, Cow, True) ::: If the mouse is red then the mouse sees the cow.\nChases($x, Cat, True) >>> Eats($x, Mouse, True) ::: If something chases the cat then it eats the mouse.\nChases($x, Cat, True) >>> Chases($x, Mouse, False) ::: If something chases the cat then it does not chase the mouse.\nChases(Mouse, Cat, True) >>> Eats(Cat, Mouse, True) ::: If the mouse chases the cat then the cat eats the mouse.\nRound($x, True) >>> Chases($x, Cat, True) ::: If something is round then it chases"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-108_Q15",
    "context": "Anne is green. Bob is big. Bob is furry. Dave is green. Erin is furry. Erin is green. Erin is round. If Anne is white and Anne is big then Anne is not furry. Furry people are kind. If someone is kind then they are white. If someone is white then they are big. If someone is rough then they are green. If someone is kind and not big then they are not rough. Furry, white people are rough. Green, kind people are round. If someone is white and not green then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nBig(Bob, True) ::: Bob is big.\nFurry(Bob, True) ::: Bob is furry.\nGreen(Dave, True) ::: Dave is green.\nFurry(Erin, True) ::: Erin is furry.\nGreen(Erin, True) ::: Erin is green.\nRound(Erin, True) ::: Erin is round.\nRules:\nIf Anne is white and Anne is big then Anne is not furry ::: If Anne is white and Anne is big then Anne is not furry.\nFurry($x, True) >>> Kind($x, True) ::: Furry people are kind.\nKind($x, True) >>> White($x, True) ::: If someone is kind then they are white.\nWhite($x, True) >>> Big($x, True) ::: If someone is white then they are big.\nRough($x, True) >>> Green($x, True) ::: If someone is rough then they are green.\nKind($x, True) && Not(Big($x, True)) >>> Not(Rough($x, True)) ::: If someone is kind and not big then they are not rough.\nFurry($x, True) && White($x, True) >>> Rough($x, True) ::: Furry, white people are rough.\nGreen($x, True) && Kind($x, True) >>> Round($x, True) ::: Green, kind people are round.\nWhite($x, True) && Not(Green($x, True)) >>> Round($x, True) ::: If someone is white and not green then they are round.\nQuery:\nNot(White(Dave, True)) ::: Dave is not white.\n------\nProblem:\nAnne is green. Bob is big. Bob is furry. Dave is green. Erin is"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-90_Q18",
    "context": "The bear is kind. The mouse chases the bear. The mouse chases the rabbit. The mouse visits the rabbit. The rabbit is blue. The rabbit needs the mouse. The squirrel chases the mouse. The squirrel chases the rabbit. The squirrel is blue. The squirrel is green. The squirrel is young. If the squirrel is young and the squirrel needs the rabbit then the squirrel visits the rabbit. If something is cold then it needs the squirrel. If something visits the mouse and the mouse needs the squirrel then it needs the rabbit. If something chases the bear then it is cold. If something visits the bear and the bear visits the squirrel then the squirrel visits the rabbit. If something needs the squirrel then the squirrel visits the mouse. If the mouse visits the bear and the mouse visits the squirrel then the squirrel visits the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear needs the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nKind(Bear, True) ::: The bear is kind.\nChases(Mouse, Bear, True) ::: The mouse chases the bear.\nChases(Mouse, Rabbit, True) ::: The mouse chases the rabbit.\nVisits(Mouse, Rabbit, True) ::: The mouse visits the rabbit.\nBlue(Rabbit, True) ::: The rabbit is blue.\nNeeds(Rabbit, Mouse, True) ::: The rabbit needs the mouse.\nChases(Squirrel, Mouse, True) ::: The squirrel chases the mouse.\nChases(Squirrel, Rabbit, True) ::: The squirrel chases the rabbit.\nBlue(Squirrel, True) ::: The squirrel is blue.\nGreen(Squirrel, True) ::: The squirrel is green.\nYoung(Squirrel, True) ::: The squirrel is young.\nRules:\nYoung($x, True) >>> Needs($x, Rabbit, True) ::: If the squirrel is young and the squirrel needs the rabbit then the squirrel visits the rabbit.\nCold($x, True) >>> Needs($x, Squirrel, True) ::: If something is cold then it needs the squirrel.\nVisits($x, Mouse, True) && Needs($x, Squirrel, True) >>> Needs($x, Rabbit, True) ::: If something visits the mouse and the mouse needs the squirrel then it needs the rabbit.\nChases($x, Bear, True) >>> Cold($x, True) ::: If something chases the bear then it is cold.\nVisits($x, Bear"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-959_Q14",
    "context": "Bob is rough. Fiona is cold. Fiona is rough. Gary is big. Gary is quiet. Harry is big. Harry is rough. If someone is white and smart then they are furry. All rough people are big. All furry people are white. If someone is quiet and cold then they are white. All furry people are white. If Harry is big then Harry is cold. Big, smart people are quiet. If someone is big then they are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is furry.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nFacts:\nRough(Bob, True) ::: Bob is rough.\nCold(Fiona, True) ::: Fiona is cold.\nRough(Fiona, True) ::: Fiona is rough.\nBig(Gary, True) ::: Gary is big.\nQuiet(Gary, True) ::: Gary is quiet.\nBig(Harry, True) ::: Harry is big.\nRough(Harry, True) ::: Harry is rough.\nRules:\nWhite($x, True) && Smart($x, True) >>> Furry($x, True) ::: If someone is white and smart then they are furry.\nRough($x, True) >>> Big($x, True) ::: All rough people are big.\nFurry($x, True) >>> White($x, True) ::: All furry people are white.\nQuiet($x, True) && Cold($x, True) >>> White($x, True) ::: If someone is quiet and cold then they are white.\nFurry($x, True) >>> White($x, True) ::: All furry people are white.\nIf Harry is big then Harry is cold ::: If Harry is big then Harry is cold.\nBig($x, True) && Smart($x, True) >>> Quiet($x, True) ::: Big, smart people are quiet.\nBig($x, True) >>> Smart($x, True) ::: If someone is big then they are smart.\nQuery:\nFurry(Gary, True) ::: Gary is furry.\n------\nProblem:\nBob is furry. Bob is quiet. Bob is rough. Bob is white. Bob is young. Erin is furry. Erin is quiet. Erin is rough. Erin is white. Erin is young. Fiona is furry. Fiona is quiet. F"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1183_Q16",
    "context": "Bob is round. Bob is smart. Charlie is not smart. Fiona is young. Gary is nice. Gary is smart. Gary is white. If someone is young then they are smart. If Fiona is young then Fiona is smart. If someone is green and young then they are white. If someone is smart then they are green. If someone is quiet then they are round. If someone is round and not smart then they are not quiet. If someone is nice then they are quiet. If someone is white then they are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nRound(Bob, True) ::: Bob is round.\nSmart(Bob, True) ::: Bob is smart.\nNotSmart(Charlie, True) ::: Charlie is not smart.\nYoung(Fiona, True) ::: Fiona is young.\nNice(Gary, True) ::: Gary is nice.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nRules:\nYoung($x, True) >>> Smart($x, True) ::: If someone is young then they are smart.\nYoung(Fiona, True) >>> Smart(Fiona, True) ::: If Fiona is young then Fiona is smart.\nGreen($x, True) && Young($x, True) >>> White($x, True) ::: If someone is green and young then they are white.\nSmart($x, True) >>> Green($x, True) ::: If someone is smart then they are green.\nQuiet($x, True) >>> Round($x, True) ::: If someone is quiet then they are round.\nRound($x, True) && NotSmart($x, True) >>> NotQuiet($x, True) ::: If someone is round and not smart then they are not quiet.\nNice($x, True) >>> Quiet($x, True) ::: If someone is nice then they are quiet.\nWhite($x, True) >>> Quiet($x, True) ::: If someone is white then they are quiet.\nQuery:\nWhite(Bob, True) ::: Bob is white.\n------\nProblem:\nBob is round. Bob is smart. Charlie is not smart. Fiona is young. Gary is nice. Gary is smart. Gary is white. If someone is young then they are smart. If Fiona is young then Fiona is smart. If someone is green and young then they are white."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-70_Q15",
    "context": "The bald eagle chases the rabbit. The bald eagle chases the tiger. The lion needs the rabbit. The rabbit does not chase the lion. The rabbit needs the bald eagle. The rabbit needs the lion. The tiger visits the rabbit. If something chases the rabbit then it is big. If something needs the tiger then it is big. If something needs the lion and it visits the rabbit then it chases the lion. If something is big then it chases the lion. If something chases the tiger then the tiger needs the rabbit. If something visits the tiger then the tiger is not green. If something chases the lion then the lion chases the rabbit. If something chases the tiger then it visits the bald eagle. If something chases the rabbit and it does not visit the lion then the lion does not need the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not visit the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nFacts:\nChases(BaldEagle, Rabbit, True) ::: The bald eagle chases the rabbit.\nChases(BaldEagle, Tiger, True) ::: The bald eagle chases the tiger.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nNot(Rabbit, Chases, Lion) ::: The rabbit does not chase the lion.\nNeeds(Rabbit, BaldEagle, True) ::: The rabbit needs the bald eagle.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nRules:\nChases($x, $y, True) >>> Big($x, True) ::: If something chases the rabbit then it is big.\nNeeds($x, Tiger, True) >>> Big($x, True) ::: If something needs the tiger then it is big.\nNeeds($x, Lion, True) && Visits($x, Rabbit, True) >>> Chases($x, Lion, True) ::: If something needs the lion and it visits the rabbit then it chases the lion.\nBig($x, True) >>> Chases($x, Lion, True) ::: If something is big then it chases the lion.\nChases($x, Tiger, True) >>> Needs($x, Rabbit, True) ::: If something chases the tiger then the tiger needs the rabbit.\nNot(Visits($x, Tiger, True)) >>> Green($x, True) ::: If something visits the tiger then the tiger is not green.\nChases($x, Lion, True) >>> Chases($x, Rabbit, True) ::: If something chases the lion then the lion chases the rabbit.\nChases($x, T"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-372_Q8",
    "context": "Charlie is young. Erin is blue. Erin is green. Fiona is big. Fiona is green. Gary is blue. Gary is green. All red things are furry. All furry things are red. Young things are red. If something is smart and not red then it is not green. All furry things are green. If something is red and green then it is blue. If something is young and big then it is smart. If something is blue and green then it is smart. Blue, red things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Erin, True) ::: Erin is blue.\nGreen(Erin, True) ::: Erin is green.\nBig(Fiona, True) ::: Fiona is big.\nGreen(Fiona, True) ::: Fiona is green.\nBlue(Gary, True) ::: Gary is blue.\nGreen(Gary, True) ::: Gary is green.\nRed($x, True) >>> Furry($x, True) ::: All red things are furry.\nFurry($x, True) >>> Red($x, True) ::: All furry things are red.\nYoung($x, True) >>> Red($x, True) ::: Young things are red.\nNot(Red($x, True)) && Not(Furry($x, True)) >>> Not(Green($x, True)) ::: If something is smart and not red then it is not green.\nFurry($x, True) >>> Green($x, True) ::: All furry things are green.\nRed($x, True) && Green($x, True) >>> Blue($x, True) ::: If something is red and green then it is blue.\nYoung($x, True) && Big($x, True) >>> Smart($x, True) ::: If something is young and big then it is smart.\nBlue($x, True) && Green($x, True) >>> Smart($x, True) ::: If something is blue and green then it is smart.\nBlue($x, True) && Red($x, True) >>> Smart($x, True) ::: Blue, red things are smart.\nQuery:\nNot(Green(Charlie, True)) ::: Charlie is not green.\n------\nProblem:\nCharlie is young. Erin is blue. Er"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-120_Q9",
    "context": "Dave is nice. Dave is red. Erin is red. Fiona is rough. Fiona is round. Gary is cold. Gary is green. Gary is red. Gary is rough. Gary is not smart. Smart, round things are nice. Red things are nice. Rough, nice things are round. Cold things are rough. If something is red and nice then it is cold. All round things are green. If something is nice and not cold then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nFacts:\nNice(Dave, True) ::: Dave is nice.\nRed(Dave, True) ::: Dave is red.\nRed(Erin, True) ::: Erin is red.\nRound(Fiona, True) ::: Fiona is round.\nRound(Gary, True) ::: Gary is round.\nCold(Gary, True) ::: Gary is cold.\nGreen(Gary, True) ::: Gary is green.\nRound(Gary, True) ::: Gary is round.\nNotSmart(Gary, True) ::: Gary is not smart.\nRules:\nSmart($x, True) >>> Round($x, True) ::: Smart, round things are nice.\nRed($x, True) >>> Nice($x, True) ::: Red things are nice.\nRound($x, True) && Nice($x, True) >>> Rough($x, True) ::: Rough, nice things are round.\nCold($x, True) >>> Rough($x, True) ::: Cold things are rough.\nRed($x, True) && Nice($x, True) >>> Cold($x, True) ::: If something is red and nice then it is cold.\nAll($x, Round($x, True)) >>> Green($x, True) ::: All round things are green.\nNice($x, True) && NotCold($x, True) >>> Green($x, True) ::: If something is nice and not cold then it is green.\nQuery:\nRound(Erin, True) ::: Erin is round.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-586_Q14",
    "context": "Erin is smart. Fiona is quiet. Gary is blue. Gary is kind. Gary is quiet. Gary is red. Harry is smart. If Harry is smart then Harry is kind. Quiet, smart things are blue. If something is green and smart then it is not blue. Kind things are quiet. All blue, green things are smart. Red things are furry. If Harry is smart and Harry is blue then Harry is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nFacts:\nSmart(Erin, True) ::: Erin is smart.\nQuiet(Fiona, True) ::: Fiona is quiet.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nSmart($x, True) >>> Kind($x, True) ::: If Harry is smart then Harry is kind.\nQuiet($x, True) && Smart($x, True) >>> Blue($x, True) ::: Quiet, smart things are blue.\nGreen($x, True) && Smart($x, True) >>> Blue($x, False) ::: If something is green and smart then it is not blue.\nKind($x, True) >>> Quiet($x, True) ::: Kind things are quiet.\nBlue($x, True) && Green($x, True) >>> Smart($x, True) ::: All blue, green things are smart.\nRed($x, True) >>> Furry($x, True) ::: Red things are furry.\nSmart($x, True) && Blue($x, True) >>> Red($x, True) ::: If Harry is smart and Harry is blue then Harry is red.\nQuery:\nSmart(Fiona, True) ::: Fiona is smart.\n------\nProblem:\nErin is furry. Erin is green. Erin is quiet. Erin is red. Erin is rough. Erin is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-372_Q17",
    "context": "Charlie is young. Erin is blue. Erin is green. Fiona is big. Fiona is green. Gary is blue. Gary is green. All red things are furry. All furry things are red. Young things are red. If something is smart and not red then it is not green. All furry things are green. If something is red and green then it is blue. If something is young and big then it is smart. If something is blue and green then it is smart. Blue, red things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Erin, True) ::: Erin is blue.\nGreen(Erin, True) ::: Erin is green.\nBig(Fiona, True) ::: Fiona is big.\nGreen(Fiona, True) ::: Fiona is green.\nBlue(Gary, True) ::: Gary is blue.\nGreen(Gary, True) ::: Gary is green.\nRed($x, True) >>> Furry($x, True) ::: All red things are furry.\nFurry($x, True) >>> Red($x, True) ::: All furry things are red.\nYoung($x, True) >>> Red($x, True) ::: Young things are red.\nNot(Red($x, True)) && Not(Furry($x, True)) >>> Not(Green($x, True)) ::: If something is smart and not red then it is not green.\nFurry($x, True) >>> Green($x, True) ::: All furry things are green.\nRed($x, True) && Green($x, True) >>> Blue($x, True) ::: If something is red and green then it is blue.\nYoung($x, True) && Big($x, True) >>> Smart($x, True) ::: If something is young and big then it is smart.\nBlue($x, True) && Green($x, True"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-925_Q22",
    "context": "The bald eagle chases the bear. The bald eagle needs the cat. The bald eagle visits the squirrel. The bear does not chase the squirrel. The bear is blue. The cat chases the squirrel. The cat visits the bear. The cat visits the squirrel. The squirrel is green. The squirrel does not need the cat. If someone is cold and they visit the bear then the bear does not need the squirrel. If the bald eagle is blue and the bald eagle visits the cat then the cat is nice. If someone is blue then they visit the cat. If someone visits the bear then the bear needs the cat. If the bear visits the bald eagle then the bear visits the cat. If someone needs the squirrel then the squirrel chases the cat. If the bear needs the bald eagle and the bear needs the cat then the bald eagle is blue. If someone visits the cat then they need the bald eagle. If someone needs the bear and they are blue then the bear does not visit the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nNeeds($x, $y) ::: Does x need y?\nVisits($x, $y) ::: Does x visit y?\nIs($x, $y) ::: Is x y?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(BaldEagle, Bear) ::: The bald eagle chases the bear.\nNeeds(BaldEagle, Cat) ::: The bald eagle needs the cat.\nVisits(BaldEagle, Squirrel) ::: The bald eagle visits the squirrel.\nNot(Chases(Bear, Squirrel)) ::: The bear does not chase the squirrel.\nIs(Bear, Blue) ::: The bear is blue.\nChases(Cat, Squirrel) ::: The cat chases the squirrel.\nVisits(Cat, Bear) ::: The cat visits the bear.\nVisits(Cat, Squirrel) ::: The cat visits the squirrel.\nIs(Squirrel, Green) ::: The squirrel is green.\nNot(Needs(Squirrel, Cat)) ::: The squirrel does not need the cat.\nIf(Cold($x, True), Visits($x, Bear), Not(Needs(Bear, Squirrel))) ::: If someone is cold and they visit the bear then the bear does not need the squirrel.\nIf(Is(BaldEagle, Blue), Visits(BaldEagle, Cat), Is(Cat, Nice)) ::: If the bald eagle is blue and the bald eagle visits the cat then the cat is nice.\nIf(Is($x, Blue), Vis"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1017_Q19",
    "context": "Dave is big. Dave is furry. Erin is blue. Erin is cold. Erin is round. Fiona is quiet. Gary is rough. If something is rough and cold then it is furry. Quiet, big things are not round. If Dave is blue then Dave is furry. All quiet, blue things are big. If Fiona is furry then Fiona is blue. If something is quiet then it is cold. All big things are cold. All blue, round things are not quiet. Cold things are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Dave, True) ::: Dave is big.\nFurry(Dave, True) ::: Dave is furry.\nBlue(Erin, True) ::: Erin is blue.\nCold(Erin, True) ::: Erin is cold.\nRound(Erin, True) ::: Erin is round.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRough(Gary, True) ::: Gary is rough.\nRules:\nBig($x, True) >>> Cold($x, True) ::: All big things are cold.\nBlue($x, True) >>> Furry($x, True) ::: If Dave is blue then Dave is furry.\nQuiet($x, True) >>> Cold($x, True) ::: If something is quiet then it is cold.\nFurry($x, True) && Cold($x, True) >>> Rough($x, True) ::: If something is rough and cold then it is furry.\nQuiet($x, True) && Big($x, True) >>> Round($x, True) ::: Quiet, big things are not round.\nBlue($x, True) && Round($x, True) >>> Quiet($x, True) ::: All blue, round things are not quiet.\nFurry($x, True) >>> Blue($x, True) ::: If Fiona is furry then Fiona is blue.\nRough($x"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-330_Q11",
    "context": "The bald eagle eats the mouse. The bald eagle likes the lion. The bald eagle does not see the lion. The cat is not cold. The cat does not like the lion. The cat sees the lion. The cat does not see the mouse. The lion likes the cat. The mouse eats the bald eagle. The mouse is kind. The mouse sees the bald eagle. If something is red and not cold then it does not eat the cat. If something is kind then it sees the mouse. If something likes the bald eagle then the bald eagle is rough. If something is rough then it likes the bald eagle. If something sees the bald eagle then it is rough. If the cat is kind and the cat likes the mouse then the cat does not see the lion. If something likes the bald eagle then it eats the lion. If something likes the mouse and the mouse does not eat the cat then the cat does not see the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle eats the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nEats(BaldEagle, Mouse, True) ::: The bald eagle eats the mouse.\nLikes(BaldEagle, Lion, True) ::: The bald eagle likes the lion.\nDoesNotSee(BaldEagle, Lion, True) ::: The bald eagle does not see the lion.\nNotCold(Cat, True) ::: The cat is not cold.\nDoesNotLike(Cat, Lion, True) ::: The cat does not like the lion.\nSees(Cat, Lion, True) ::: The cat sees the lion.\nDoesNotSee(Cat, Mouse, True) ::: The cat does not see the mouse.\nLikes(Cat, Lion, True) ::: The lion likes the cat.\nEats(Mouse, BaldEagle, True) ::: The mouse eats the bald eagle.\nKind(Mouse, True) ::: The mouse is kind.\nSees(Mouse, BaldEagle, True) ::: The mouse sees the bald eagle.\nRules:\nIf something is red and not cold then it does not eat the cat. ::: If something is red and not cold then it does not eat the cat.\nIf something is kind then it sees the mouse. ::: If something is kind then it sees the mouse.\nIf something likes the bald eagle then the bald eagle is rough. ::: If something likes the bald eagle then the bald"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-226_Q4",
    "context": "The bear is not big. The bear needs the squirrel. The dog is nice. The dog sees the tiger. The squirrel sees the bear. The squirrel sees the tiger. The tiger eats the dog. The tiger is green. The tiger needs the bear. The tiger sees the squirrel. If someone eats the dog then the dog needs the bear. If someone eats the bear then they eat the tiger. If someone needs the tiger and they see the dog then they eat the tiger. If someone is nice and they need the bear then they eat the bear. If someone sees the dog then they eat the squirrel. If someone needs the tiger and the tiger eats the bear then they eat the squirrel. If someone eats the tiger then the tiger eats the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not need the bear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNeeds($x, $y, bool) ::: Does x need y?\nNice($x, bool) ::: Is x nice?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nGreen($x, bool) ::: Is x green?\nFacts:\nNotBig(Bear, True) ::: The bear is not big.\nNeeds(Bear, Squirrel, True) ::: The bear needs the squirrel.\nNice(Dog, True) ::: The dog is nice.\nSees(Dog, Tiger, True) ::: The dog sees the tiger.\nSees(Squirrel, Bear, True) ::: The squirrel sees the bear.\nSees(Squirrel, Tiger, True) ::: The squirrel sees the tiger.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nGreen(Tiger, True) ::: The tiger is green.\nNeeds(Tiger, Bear, True) ::: The tiger needs the bear.\nSees(Tiger, Squirrel, True) ::: The tiger sees the squirrel.\nRules:\nNotBig(Bear, True) >>> Needs(Bear, Squirrel, True) ::: The bear is not big.\nEats(Dog, Bear, True) >>> Needs(Dog, Bear, True) ::: If someone eats the dog then the dog needs the bear.\nNeeds(Bear, Tiger, True) >>> Eats(Bear, Tiger, True) ::: If someone needs the tiger and they see the dog then they eat the tiger.\nNeeds(Bear, Tiger,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1364_Q16",
    "context": "Charlie is big. Charlie is cold. Charlie is kind. Charlie is quiet. Charlie is red. Charlie is rough. Charlie is smart. Erin is kind. Fiona is quiet. Fiona is rough. Harry is kind. Harry is rough. Kind things are big. All kind, smart things are rough. If something is red and quiet then it is big. All red things are cold. All cold, quiet things are smart. If something is big and smart then it is cold. All quiet things are cold. Kind, big things are red. All cold, smart things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nBig(Charlie, True) ::: Charlie is big.\nCold(Charlie, True) ::: Charlie is cold.\nKind(Charlie, True) ::: Charlie is kind.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nSmart(Charlie, True) ::: Charlie is smart.\nKind(Erin, True) ::: Erin is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nKind(Harry, True) ::: Harry is kind.\nRough(Harry, True) ::: Harry is rough.\nRules:\nKind($x, True) >>> Big($x, True) ::: Kind things are big.\nKind($x, True) && Smart($x, True) >>> Rough($x, True) ::: All kind, smart things are rough.\nRed($x, True) && Quiet($x, True) >>> Big($x, True) ::: If something is red and quiet then it is big.\nRed($x, True) >>> Cold($x, True) ::: All red things are cold.\nCold($x, True) && Quiet($x, True) >>> Smart($x, True) ::: All cold, quiet"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-959_Q2",
    "context": "Bob is rough. Fiona is cold. Fiona is rough. Gary is big. Gary is quiet. Harry is big. Harry is rough. If someone is white and smart then they are furry. All rough people are big. All furry people are white. If someone is quiet and cold then they are white. All furry people are white. If Harry is big then Harry is cold. Big, smart people are quiet. If someone is big then they are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nFacts:\nRough(Bob, True) ::: Bob is rough.\nCold(Fiona, True) ::: Fiona is cold.\nRough(Fiona, True) ::: Fiona is rough.\nBig(Gary, True) ::: Gary is big.\nQuiet(Gary, True) ::: Gary is quiet.\nBig(Harry, True) ::: Harry is big.\nRough(Harry, True) ::: Harry is rough.\nRules:\nWhite($x, True) && Smart($x, True) >>> Furry($x, True) ::: If someone is white and smart then they are furry.\nRough($x, True) >>> Big($x, True) ::: All rough people are big.\nFurry($x, True) >>> White($x, True) ::: All furry people are white.\nQuiet($x, True) && Cold($x, True) >>> White($x, True) ::: If someone is quiet and cold then they are white.\nFurry($x, True) >>> White($x, True) ::: All furry people are white.\nIf Harry is big then Harry is cold ::: If Harry is big then Harry is cold.\nBig($x, True) && Smart($x, True) >>> Quiet($x, True) ::: Big, smart people are quiet.\nBig($x, True) >>> Smart($x, True) ::: If someone is big then"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-454_Q13",
    "context": "Anne is green. Anne is nice. Anne is not rough. Anne is smart. Bob is green. Bob is nice. Fiona is white. Gary is rough. Gary is round. Gary is white. If something is nice then it is round. If something is white then it is round. If something is young and not nice then it is round. If Bob is round and Bob is green then Bob is rough. If something is young and green then it is smart. Smart things are white. If something is rough and not green then it is white. If something is rough then it is young. All rough things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nNice(Anne, True) ::: Anne is nice.\nNot(Rough(Anne, True)) ::: Anne is not rough.\nSmart(Anne, True) ::: Anne is smart.\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, True) ::: Bob is nice.\nWhite(Fiona, True) ::: Fiona is white.\nRound(Gary, True) ::: Gary is round.\nWhite(Gary, True) ::: Gary is white.\nRules:\nNice($x, True) >>> Round($x, True) ::: If something is nice then it is round.\nWhite($x, True) >>> Round($x, True) ::: If something is white then it is round.\nYoung($x, True) && Not(Nice($x, True)) >>> Round($x, True) ::: If something is young and not nice then it is round.\nAnd(Bob(Round($x, True)), Bob(Green($x, True))) >>> Rough($x, True) ::: If Bob is round and Bob is green then Bob is rough.\nYoung($x, True) && Green($x, True) >>> Smart($x, True) ::: If something is young and green then it is smart.\nSmart($x, True) >>> White($x, True) ::: Smart things are white.\nNot(Green($x, True)) && Rough($"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-442_Q10",
    "context": "The bald eagle chases the cat. The bald eagle does not eat the mouse. The cat eats the cow. The cow eats the cat. The cow is blue. The cow is young. The cow sees the cat. The cow does not see the mouse. The mouse does not chase the cow. The mouse eats the bald eagle. The mouse is round. If something eats the mouse then it is round. If the mouse is red then the mouse sees the cow. If something chases the cat then it does not chase the mouse. If the mouse chases the cat then the cat eats the mouse. If something is round then it chases the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not chase the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(BaldEagle, Cat, True) ::: The bald eagle chases the cat.\nEats(BaldEagle, Mouse, False) ::: The bald eagle does not eat the mouse.\nEats(Cat, Cow, True) ::: The cat eats the cow.\nEats(Cow, Cat, True) ::: The cow eats the cat.\nIs(Cow, Blue, True) ::: The cow is blue.\nIs(Cow, Young, True) ::: The cow is young.\nSees(Cow, Cat, True) ::: The cow sees the cat.\nSees(Cow, Mouse, False) ::: The cow does not see the mouse.\nEats(Mouse, BaldEagle, True) ::: The mouse eats the bald eagle.\nIs(Mouse, Round, True) ::: The mouse is round.\nRules:\nEats($x, $y, True) >>> Round($x, True) ::: If something eats the mouse then it is round.\nIs(Mouse, Red, True) >>> Sees(Mouse, Cow, True) ::: If the mouse is red then the mouse sees the cow.\nChases($x, Cat, True) >>> Eats($x, Mouse, False) ::: If something chases the cat then it does not chase the mouse.\nChases(Mouse, Cat, True) >>> Eats(Cat, Mouse, True) ::: If the mouse chases the cat then the cat eats the mouse.\nRound($x, True) >>> Chases($x, Cat, True) ::: If something is round then it chases the cat.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-561_Q16",
    "context": "The bald eagle is blue. The bald eagle does not need the squirrel. The bear chases the bald eagle. The bear is blue. The bear is round. The bear sees the bald eagle. The squirrel is nice. The squirrel is red. The tiger chases the bald eagle. The tiger sees the bald eagle. If someone chases the squirrel then they see the tiger. If the bald eagle sees the tiger and the tiger chases the bald eagle then the tiger needs the squirrel. If someone is red then they see the bear. If someone needs the bear then they do not chase the squirrel. All blue people are round. If someone needs the tiger then they chase the bear. If someone is red and they need the tiger then the tiger is red. If someone sees the bear then they need the tiger. If someone sees the tiger and the tiger does not see the bear then they do not chase the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger sees the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBaldEagle($x, bool) ::: Is x a bald eagle?\nBlue($x, bool) ::: Is x blue?\nChases($x, $y, bool) ::: Does x chase y?\nDoesNotNeed($x, $y, bool) ::: Does x not need y?\nNeeds($x, $y, bool) ::: Does x need y?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBaldEagle(BaldEagle, True) ::: The bald eagle is a bald eagle.\nBaldEagle(Bear, False) ::: The bear is not a bald eagle.\nBaldEagle(Squirrel, False) ::: The squirrel is not a bald eagle.\nBaldEagle(Tiger, False) ::: The tiger is not a bald eagle.\nBlue(BaldEagle, True) ::: The bald eagle is blue.\nBlue(Bear, True) ::: The bear is blue.\nBlue(Squirrel, False) ::: The squirrel is not blue.\nBlue(Tiger, False) ::: The tiger is not blue.\nChases(BaldEagle, Bear, True) ::: The bear chases the bald eagle.\nChases(BaldEagle, Squirrel, False) ::: The squirrel does not chase the bald eagle.\nChases(BaldEagle, Tiger, True) ::: The tiger chases the bald eagle.\nChases(Bear, BaldEagle, True) ::: The bald eagle is chased by the bear.\nChases(Bear, Squirrel, False) ::: The squirrel is not chased by the bear.\nChases(Bear, Tiger, False) ::: The tiger is not chased by the bear.\nChases(Squirrel, BaldEagle, False) ::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-276_Q8",
    "context": "Bob is kind. Bob is round. Charlie is rough. Erin is green. Erin is rough. Erin is round. Gary is cold. All rough people are green. If someone is green then they are white. If someone is white then they are not big. If someone is green and not big then they are kind. If someone is kind and not big then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nRound(Bob, True) ::: Bob is round.\nRough(Charlie, True) ::: Charlie is rough.\nGreen(Erin, True) ::: Erin is green.\nRough(Erin, True) ::: Erin is rough.\nRound(Erin, True) ::: Erin is round.\nCold(Gary, True) ::: Gary is cold.\nRules:\nRough($x, True) >>> Green($x, True) ::: All rough people are green.\nGreen($x, True) >>> White($x, True) ::: If someone is green then they are white.\nWhite($x, True) >>> Not(Big($x, True)) ::: If someone is white then they are not big.\nGreen($x, True) && Not(Big($x, True)) >>> Kind($x, True) ::: If someone is green and not big then they are kind.\nKind($x, True) && Not(Big($x, True)) >>> Round($x, True) ::: If someone is kind and not big then they are round.\nQuery:\nNot(Kind(Erin, True)) ::: Erin is not kind.\n------\nProblem:\nBob is kind. Bob is round. Charlie is rough. Erin is green. Erin is rough. Erin is round. Gary is cold. All rough people are green. If someone is green then they are white. If someone is white then they are not big. If someone is green and not big then they are kind. If someone is kind and not big then they are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not kind.\n###\nPredicates:\nKind($"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-423_Q4",
    "context": "Anne is cold. Anne is furry. Anne is not quiet. Charlie is kind. Fiona is not quiet. Fiona is young. Harry is cold. Kind things are furry. Nice things are big. Furry things are nice. If something is young and furry then it is quiet. If Anne is quiet then Anne is cold. Kind, big things are young. If something is kind and not furry then it is not young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nQuite(Anne, False) ::: Anne is not quiet.\nKind(Charlie, True) ::: Charlie is kind.\nQuite(Fiona, False) ::: Fiona is not quiet.\nYoung(Fiona, True) ::: Fiona is young.\nCold(Harry, True) ::: Harry is cold.\nRules:\nKind($x, True) >>> Furry($x, True) ::: Kind things are furry.\nNice($x, True) >>> Big($x, True) ::: Nice things are big.\nFurry($x, True) >>> Nice($x, True) ::: Furry things are nice.\nYoung($x, True) && Furry($x, True) >>> Quite($x, True) ::: If something is young and furry then it is quiet.\nQuite(Anne, True) >>> Cold($x, True) ::: If Anne is quiet then Anne is cold.\nKind($x, True) && Not(Furry($x, True)) >>> Not(Young($x, True)) ::: If something is kind and not furry then it is not young.\nKind($x, True) && Big($x, True) >>> Young($x, True) ::: Kind, big things are young.\nQuery:\nNot(Furry(Charlie, True)) ::: Charlie is not furry.\n------\nProblem:\nAnne is furry. Anne is not quiet. Anne is not red. Anne is not white. Anne is not young. Anne is not green. Anne"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-960_Q3",
    "context": "Anne is quiet. Anne is not round. Anne is young. Charlie is not quiet. Charlie is young. Dave is blue. Dave is not smart. Harry is blue. Harry is kind. Harry is young. All blue, kind things are rough. Rough, kind things are quiet. Round things are kind. If Anne is round then Anne is kind. If Anne is smart and Anne is quiet then Anne is not round. All blue things are round. If something is kind and not round then it is young. If something is quiet and not blue then it is young. Quiet things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nRound(Anne, False) ::: Anne is not round.\nYoung(Anne, True) ::: Anne is young.\nQuite(Charlie, False) ::: Charlie is not quiet.\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Dave, True) ::: Dave is blue.\nSmart(Dave, False) ::: Dave is not smart.\nBlue(Harry, True) ::: Harry is blue.\nKind(Harry, True) ::: Harry is kind.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBlue($x, True) >>> Round($x, True) ::: All blue things are round.\nKind($x, True) >>> Round($x, True) ::: Round things are kind.\nKind($x, True) && Not(Round($x, True)) >>> Young($x, True) ::: If something is kind and not round then it is young.\nQuiet($x, True) && Not(Blue($x, True)) >>> Young($x, True) ::: If something is quiet and not blue then it is young.\nBlue($x, True) && Kind($x, True) >>> Rough($x, True) ::: All blue, kind things are rough.\nKind($x, True) && Not(Round($x, True)) >>> Rough($x, True) ::: Rough, kind things are quiet.\nYoung($x, True) >>> Quiet($x, True) ::: Quiet things are young.\nNot(Round($x, True)) >>> Kind($x, True) ::: If Anne is round then Anne is kind"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1029_Q17",
    "context": "The bear is young. The bear visits the lion. The cat is round. The cat needs the bear. The lion is cold. The lion is not green. The lion is round. The lion does not need the bear. The lion sees the bear. The lion visits the bear. The lion visits the cat. The lion visits the rabbit. The rabbit is green. The rabbit is rough. The rabbit sees the lion. The rabbit visits the cat. If something visits the cat then the cat sees the lion. If something visits the lion and the lion visits the rabbit then it needs the lion. If something needs the lion and the lion is round then it needs the cat. If something is green and it needs the rabbit then the rabbit is green. If something is round then it visits the lion. If something sees the cat and the cat visits the lion then it is not rough. If something needs the cat and it is not green then it sees the cat. If something is young and it visits the bear then it sees the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not visit the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nFacts:\nYoung(Bear, True) ::: The bear is young.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Bear, True) ::: The cat needs the bear.\nCold(Lion, True) ::: The lion is cold.\nNot(Green(Lion, True)) ::: The lion is not green.\nRound(Lion, True) ::: The lion is round.\nNot(Needs(Lion, Bear, True)) ::: The lion does not need the bear.\nSees(Lion, Bear, True) ::: The lion sees the bear.\nVisits(Lion, Bear, True) ::: The lion visits the bear.\nVisits(Lion, Cat, True) ::: The lion visits the cat.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nGreen(Rabbit, True) ::: The rabbit is green.\nRough(Rabbit, True) ::: The rabbit is rough.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nVisits(Rabbit, Cat, True) ::: The rabbit visits the cat.\nRules:\nYoung($x, True) >>> Visits($x, Bear, True) ::: If something visits the cat then the cat sees the lion.\nVisits($x, Lion, True) && Visits(Lion, $y, True) >>> Needs($x, Lion, True) ::: If something visits the lion and the lion visits the rabbit"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-173_Q17",
    "context": "The bald eagle eats the cow. The bald eagle is blue. The cat visits the bald eagle. The cat visits the rabbit. The cow is blue. The cow sees the rabbit. The rabbit eats the bald eagle. The rabbit is cold. The rabbit sees the cow. The rabbit visits the cat. If something visits the cow and it sees the cow then it visits the bald eagle. If something is nice then it is big. If something visits the bald eagle then it is nice. If something is cold and it visits the cow then the cow sees the cat. If something is round and it eats the bald eagle then it sees the bald eagle. If something visits the cat then it visits the rabbit. If something visits the rabbit and it sees the cow then it visits the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not visit the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nVisits($x, $y) ::: Does x visit y?\nSees($x, $y) ::: Does x see y?\nIs($x, $y) ::: Is x y?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nFacts:\nEats(BaldEagle, Cow) ::: The bald eagle eats the cow.\nIs(BaldEagle, Blue) ::: The bald eagle is blue.\nVisits(Cat, BaldEagle) ::: The cat visits the bald eagle.\nVisits(Cat, Rabbit) ::: The cat visits the rabbit.\nIs(Cow, Blue) ::: The cow is blue.\nSees(Cow, Rabbit) ::: The cow sees the rabbit.\nEats(Rabbit, BaldEagle) ::: The rabbit eats the bald eagle.\nIs(Rabbit, Cold) ::: The rabbit is cold.\nSees(Rabbit, Cow) ::: The rabbit sees the cow.\nVisits(Rabbit, Cat) ::: The rabbit visits the cat.\nRules:\nVisits($x, $y) && Sees($x, $y) >>> Visits($x, BaldEagle) ::: If something visits the cow and it sees the cow then it visits the bald eagle.\nNice($x, True) >>> Big($x, True) ::: If something is nice then it is big.\nVisits($x, BaldEagle) >>> Nice($x, True) ::: If something visits the bald eagle then it is nice.\nCold($x, True) && Visits($x, Cow) >>> Cow($x, True) ::: If something is cold and it visits the cow then the cow sees the cat.\nRound($x, True) && Eats($x, BaldEagle) >>> Sees($x, BaldEagle"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-151_Q23",
    "context": "The cat chases the tiger. The cat is red. The lion is nice. The lion is red. The lion sees the cat. The lion sees the rabbit. The lion sees the tiger. The rabbit chases the tiger. The rabbit sees the tiger. The tiger chases the cat. The tiger chases the rabbit. The tiger is nice. If someone is red and they eat the rabbit then they are blue. If the lion eats the cat and the lion chases the rabbit then the cat is kind. If the rabbit eats the tiger then the tiger is nice. If someone is rough then they see the cat. If someone is nice and they chase the rabbit then the rabbit is nice. If someone eats the cat and they are kind then they see the tiger. If someone is nice and they chase the tiger then they are blue. If someone is blue then they eat the cat. If someone eats the cat then the cat is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not eat the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(Cat, Tiger, True) ::: The cat chases the tiger.\nRed(Cat, True) ::: The cat is red.\nNice(Lion, True) ::: The lion is nice.\nRed(Lion, True) ::: The lion is red.\nSees(Lion, Cat, True) ::: The lion sees the cat.\nSees(Lion, Rabbit, True) ::: The lion sees the rabbit.\nSees(Lion, Tiger, True) ::: The lion sees the tiger.\nChases(Rabbit, Tiger, True) ::: The rabbit chases the tiger.\nSees(Rabbit, Tiger, True) ::: The rabbit sees the tiger.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nNice(Tiger, True) ::: The tiger is nice.\nRed($x, True) >>> Blue($x, True) ::: If someone is red and they eat the rabbit then they are blue.\nKind($x, True) && Chases($x, Rabbit, True) >>> Nice($x, True) ::: If the lion eats the cat and the lion chases the rabbit then the cat is kind.\nEats($x, Tiger, True) >>> Nice($x, True) ::: If the rabbit eats the tiger then the tiger is nice.\nRough($x, True) >>> Sees($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-183_Q3",
    "context": "The bald eagle does not eat the lion. The bald eagle does not eat the squirrel. The bald eagle is rough. The lion eats the bald eagle. The lion eats the squirrel. The lion likes the mouse. The lion needs the squirrel. The mouse likes the squirrel. The mouse needs the lion. The squirrel eats the lion. The squirrel is rough. If someone is nice then they like the mouse. If the squirrel needs the lion and the squirrel is nice then the squirrel does not eat the mouse. If the squirrel likes the mouse then the squirrel needs the bald eagle. If someone likes the mouse and the mouse needs the squirrel then the mouse does not like the bald eagle. If the squirrel eats the lion then the squirrel is nice. If the squirrel does not need the bald eagle then the squirrel is round. If someone needs the bald eagle then they are round. If someone eats the mouse and the mouse is nice then the mouse does not need the bald eagle. If someone is round and rough then they eat the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nEats(BaldEagle, Lion, True) ::: The bald eagle does not eat the lion.\nEats(BaldEagle, Squirrel, True) ::: The bald eagle does not eat the squirrel.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nEats(Lion, BaldEagle, True) ::: The lion eats the bald eagle.\nEats(Lion, Squirrel, True) ::: The lion eats the squirrel.\nLikes(Lion, Mouse, True) ::: The lion likes the mouse.\nNeeds(Lion, Squirrel, True) ::: The lion needs the squirrel.\nLikes(Mouse, Squirrel, True) ::: The mouse likes the squirrel.\nNeeds(Mouse, Lion, True) ::: The mouse needs the lion.\nEats(Squirrel, Lion, True) ::: The squirrel eats the lion.\nRough(Squirrel, True) ::: The squirrel is rough.\nRules:\nNice($x, True) >>> Likes($x, Mouse, True) ::: If someone is nice then they like the mouse.\nNot(Needs(Squirrel, Lion, True) && Nice(Squirrel, True)) >>> Not(Eats(Squirrel, Mouse, True)) ::: If the squirrel needs the lion and the squirrel is nice then the squirrel does not eat the mouse.\nLikes(Squirrel, Mouse, True) >>> Needs(Squirrel, BaldEagle, True) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-221_Q5",
    "context": "Anne is nice. Anne is young. Dave is cold. Dave is smart. Dave is white. Fiona is nice. Fiona is not red. Fiona is young. Gary is cold. Gary is red. If someone is smart then they are green. If someone is green then they are nice. Nice people are young. If someone is white then they are young. If someone is cold then they are white. If someone is green and smart then they are white. All young, red people are smart. If Fiona is red then Fiona is green. If Anne is smart then Anne is not green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nYoung(Anne, True) ::: Anne is young.\nCold(Dave, True) ::: Dave is cold.\nSmart(Dave, True) ::: Dave is smart.\nWhite(Dave, True) ::: Dave is white.\nNice(Fiona, True) ::: Fiona is nice.\nRed(Fiona, False) ::: Fiona is not red.\nYoung(Fiona, True) ::: Fiona is young.\nRed(Gary, True) ::: Gary is red.\nCold(Gary, True) ::: Gary is cold.\nRules:\nSmart($x, True) >>> Green($x, True) ::: If someone is smart then they are green.\nGreen($x, True) >>> Nice($x, True) ::: If someone is green then they are nice.\nNice($x, True) >>> Young($x, True) ::: Nice people are young.\nWhite($x, True) >>> Young($x, True) ::: If someone is white then they are young.\nCold($x, True) >>> White($x, True) ::: If someone is cold then they are white.\nSmart($x, True) && Green($x, True) >>> White($x, True) ::: If someone is green and smart then they are white.\nYoung($x, True) && Red($x, True) >>> Smart($x, True) ::: All young, red people are smart.\nRed($x, True) >>> Green($x, True) ::: If Fiona is red then Fiona is green.\nSmart($x, True) >>> Green($x, True) ::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-174_Q18",
    "context": "The bald eagle eats the bear. The bald eagle is cold. The bald eagle does not like the bear. The bald eagle likes the tiger. The bald eagle visits the bear. The bear eats the bald eagle. The bear is blue. The bear does not visit the tiger. The mouse likes the tiger. The tiger eats the mouse. The tiger is cold. The tiger likes the bear. If the mouse is kind then the mouse eats the bald eagle. If something eats the bald eagle and the bald eagle likes the tiger then the tiger likes the mouse. If something likes the tiger then it visits the mouse. If the tiger likes the mouse and the mouse does not eat the tiger then the mouse is big. If something visits the bear and it is kind then the bear likes the tiger. Cold, kind things are big. If the tiger eats the bald eagle then the tiger does not eat the mouse. If something visits the mouse then it is kind. If the bald eagle eats the mouse and the mouse does not eat the bear then the bald eagle is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear likes the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(BaldEagle, Bear, True) ::: The bald eagle eats the bear.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nDoesNotLike(BaldEagle, Bear, True) ::: The bald eagle does not like the bear.\nLikes(BaldEagle, Tiger, True) ::: The bald eagle likes the tiger.\nVisits(BaldEagle, Bear, True) ::: The bald eagle visits the bear.\nEats(Bear, BaldEagle, True) ::: The bear eats the bald eagle.\nBlue(Bear, True) ::: The bear is blue.\nDoesNotVisit(Bear, Tiger, True) ::: The bear does not visit the tiger.\nLikes(Mouse, Tiger, True) ::: The mouse likes the tiger.\nEats(Tiger, Mouse, True) ::: The tiger eats the mouse.\nCold(Tiger, True) ::: The tiger is cold.\nLikes(Tiger, Bear, True) ::: The tiger likes the bear.\nIfMouseIsKindThenMouseEatsBaldEagle(Mouse, BaldEagle, True) ::: If the mouse is kind then the mouse eats the bald eagle.\nIfSomethingEatsBaldEagleAndBaldEagleLikesTigerThenTigerLikesMouse(Something, BaldEagle, Tiger, Mouse, True) ::: If something eats the bald eagle and the bald eagle likes the tiger then the tiger likes the mouse.\nIfSomethingLikesTigerThenItVisitsMouse(Something, Tiger, Mouse, True) ::: If something likes the tiger then it visits the mouse.\nIfMouseLikesTigerAndMouseDoesNotEatTigerThenMouseIsBig(Mouse, Tiger, True) ::: If the mouse likes the tiger and the mouse does not eat the tiger then the mouse is big.\nIfTigerEatsBaldEagleThenTigerDoesNotEatMouse(Tiger, BaldEagle, Mouse, True) ::: If the tiger eats the bald eagle then the tiger does not eat the mouse.\nIfSomethingVisitsMouseThenItIsKind(Something, Mouse, True) ::: If the mouse visits the mouse then it is kind.\nIfBaldEagleEatsMouseAndMouseDoesNotEatBearThenBaldEagleIsBig(BaldEagle, Mouse, Bear, True) ::: If the bald eagle eats the mouse and the mouse does not eat the bear then the bald eagle is big.\nRules:\nKind($x, True) >>> Eats($x, BaldEagle, True) ::: If the mouse is kind then the mouse eats the bald eagle.\nLikes($x, Tiger, True) && Eats($x, BaldEagle, True) >>> Likes($x, Mouse, True) ::: If something eats the bald eagle and the bald eagle likes the tiger then the tiger likes the mouse.\nLikes($x, Tiger, True) >>> Visits($x, Mouse, True) ::: If something likes the tiger then it visits the mouse.\nLikes($x, Tiger, True) && DoesNotEat($x, Tiger, True) >>> IsBig($x, True) ::: If the mouse likes the tiger and the mouse does not eat the tiger then the mouse is big.\nVisits($x, Bear, True) && Kind($x, True) >>> Likes($x, Tiger, True) ::: If the bear visits the bear and it is kind then the bear likes the tiger.\nCold($x, True) && Kind($x, True) >>> IsBig($x, True) ::: Cold, kind things are big.\nEats($x, Mouse, True) && DoesNotEat($x, Bear, True) >>> IsBig($x, True) ::: If the bald eagle eats the mouse and the mouse does not eat the bear then the bald eagle is big"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-121_Q12",
    "context": "The bald eagle needs the cow. The bald eagle needs the tiger. The bald eagle sees the cow. The cow is big. The cow needs the bald eagle. The cow needs the tiger. The mouse eats the cow. The mouse is blue. The mouse is cold. The mouse needs the bald eagle. The mouse sees the cow. The mouse sees the tiger. The tiger eats the cow. The tiger needs the bald eagle. The tiger needs the cow. The tiger needs the mouse. If someone needs the tiger then they are red. If the mouse needs the bald eagle and the bald eagle needs the cow then the mouse needs the cow. If the cow needs the mouse and the mouse sees the cow then the mouse is big. If someone eats the mouse then they see the cow. If someone sees the mouse and they see the bald eagle then the bald eagle needs the tiger. If someone is big then they see the bald eagle. If someone is big and they see the bald eagle then they need the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not need the mouse.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFacts:\nNeeds(BaldEagle, Cow, True) ::: The bald eagle needs the cow.\nNeeds(BaldEagle, Tiger, True) ::: The bald eagle needs the tiger.\nSees(BaldEagle, Cow, True) ::: The bald eagle sees the cow.\nIs(Cow, Big, True) ::: The cow is big.\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\nNeeds(Cow, Tiger, True) ::: The cow needs the tiger.\nEats(Mouse, Cow, True) ::: The mouse eats the cow.\nIs(Mouse, Blue, True) ::: The mouse is blue.\nIs(Mouse, Cold, True) ::: The mouse is cold.\nNeeds(Mouse, BaldEagle, True) ::: The mouse needs the bald eagle.\nSees(Mouse, Cow, True) ::: The mouse sees the cow.\nSees(Mouse, Tiger, True) ::: The mouse sees the tiger.\nEats(Tiger, Cow, True) ::: The tiger eats the cow.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nNeeds(Tiger, Cow, True) ::: The tiger needs the cow.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nRed(Mouse, True) ::: If someone needs the tiger then they are red.\nNeeds(Mouse, BaldEagle) && Needs(BaldEagle, Cow) >>> Needs(Mouse, Cow) ::: If the mouse needs the bald eagle and the bald eagle needs the cow then the mouse needs the cow.\nIs(Cow, Mouse) && Sees(Cow, Cow) >>> Big(Mouse) ::: If the cow needs the mouse and the mouse sees the cow then the mouse is big.\nSees(Mouse, BaldEagle) && Sees(BaldEagle, Tiger) >>> Needs(Tiger, BaldEagle) ::: If someone sees the mouse and they see the bald eagle then the bald eagle needs the tiger.\nBig(Mouse, True) >>> Sees(Mouse, BaldEagle) ::: If someone is big then they see the bald eagle.\nBig(Mouse, True) && Sees(Mouse, BaldEagle) >>> Needs(Mouse, Cow) ::: If someone is big and they see the bald eagle then they need the mouse.\nQuery:\nNeeds(Mouse, Mouse, True) ::: The mouse does not need the mouse.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The cat is young. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white. The dog is young. The horse is furry. The horse is green. The horse is red. The horse is rough. The horse is white. The horse is young. The lion is furry. The lion is green. The lion is red. The lion is rough. The lion is white. The lion is young. The monkey is furry. The monkey is green. The monkey is red. The monkey is rough. The monkey is white. The monkey is young. The tiger is furry. The tiger is green. The tiger is red. The tiger is rough. The tiger is white. The tiger is young. The wolf is furry. The wolf is green. The wolf is red. The wolf is rough. The wolf is white. The wolf is young. If someone is furry and green then they are young. If someone is furry and green then they are rough. If someone is furry and green then they are white. If someone is furry and green then they are red. If someone is furry and green then they are"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-155_Q6",
    "context": "Charlie is cold. Charlie is rough. Charlie is white. Erin is cold. Erin is smart. Fiona is blue. Fiona is cold. Fiona is furry. Fiona is white. Gary is round. If Erin is white then Erin is blue. If someone is round then they are blue. Smart, cold people are white. All smart people are furry. Furry people are cold. Smart, furry people are round. If someone is blue then they are smart. If someone is smart and not cold then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nRough(Charlie, True) ::: Charlie is rough.\nWhite(Charlie, True) ::: Charlie is white.\nCold(Erin, True) ::: Erin is cold.\nSmart(Erin, True) ::: Erin is smart.\nBlue(Fiona, True) ::: Fiona is blue.\nCold(Fiona, True) ::: Fiona is cold.\nFurry(Fiona, True) ::: Fiona is furry.\nWhite(Fiona, True) ::: Fiona is white.\nRound(Gary, True) ::: Gary is round.\nRules:\nErin(White, True) >>> Erin(Blue, True) ::: If Erin is white then Erin is blue.\nRound($x, True) >>> Blue($x, True) ::: If someone is round then they are blue.\nSmart($x, True) && Cold($x, True) >>> White($x, True) ::: Smart, cold people are white.\nSmart($x, True) >>> Furry($x, True) ::: All smart people are furry.\nFurry($x, True) >>> Cold($x, True) ::: Furry people are cold.\nSmart($x, True) && Furry($x, True) >>> Round($x, True) ::: Smart, furry people are round.\nBlue($x, True) >>> Smart($x, True) ::: If someone is blue then they are smart.\nSmart($x, True) && Not(Cold($x, True)) >>> Rough($x, True) ::: If someone is smart and not cold then they are rough.\nQuery:\nNot(Round(Erin, True)) ::: Erin is not round.\n------\nProblem:\nCharlie is cold. Charlie is rough. Charlie is white. Erin is cold. Erin is smart. Fiona is blue. Fiona is cold. Fiona is furry. Fiona is white. Gary is round. If Erin is white then Erin is blue. If someone is round then they are blue. Smart, cold people are white. All smart people are furry. Furry people are cold. Smart, furry people are round. If someone is blue then they are smart. If someone is smart and not cold then they are rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is not round.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nRough(Charlie, True) ::: Charlie is rough.\nWhite(Charlie, True) ::: Charlie is white.\nCold(Erin, True) ::: Erin is cold.\nSmart(Erin, True) ::: Erin is smart.\nBlue(Fiona, True) ::: Fiona is blue.\nCold(Fiona, True) ::: Fiona is cold.\nFurry(Fiona, True) ::: Fiona is furry.\nWhite(Fiona, True) ::: Fiona is white.\nRound(Gary, True) ::: Gary is round.\nRules:\nErin(White, True) >>> Erin(Blue, True) ::: If Erin is white then Erin is blue.\nRound($x, True) >>> Blue($x, True) ::: If someone is round then they are blue.\nSmart($x, True) && Cold($x, True) >>> White($x, True) ::: Smart, cold people are white.\nSm"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1026_Q4",
    "context": "The cat is green. The cat is nice. The cat likes the squirrel. The rabbit likes the tiger. The rabbit does not need the cat. The rabbit needs the squirrel. The squirrel is cold. The squirrel needs the cat. The squirrel needs the rabbit. The tiger chases the cat. The tiger chases the rabbit. The tiger is kind. The tiger is nice. The tiger is young. The tiger likes the cat. The tiger needs the cat. If something chases the squirrel then the squirrel needs the tiger. If something needs the tiger then it likes the rabbit. If something chases the cat and it likes the rabbit then the rabbit chases the squirrel. If something chases the rabbit then the rabbit does not need the tiger. If something is kind and it chases the rabbit then it needs the tiger. If something is kind then it does not like the squirrel. If something likes the squirrel and it does not need the tiger then the squirrel likes the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit needs the tiger.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Cat, True) ::: The cat is green.\nNice(Cat, True) ::: The cat is nice.\nLikes(Cat, Squirrel, True) ::: The cat likes the squirrel.\nNeeds(Rabbit, Squirrel, True) ::: The rabbit likes the tiger.\nNeeds(Rabbit, Cat, False) ::: The rabbit does not need the cat.\nCold(Squirrel, True) ::: The squirrel is cold.\nNeeds(Squirrel, Cat, True) ::: The squirrel needs the cat.\nNeeds(Squirrel, Rabbit, True) ::: The squirrel needs the rabbit.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nKind(Tiger, True) ::: The tiger is kind.\nNice(Tiger, True) ::: The tiger is nice.\nYoung(Tiger, True) ::: The tiger is young.\nLikes(Tiger, Cat, True) ::: The tiger likes the cat.\nNeeds(Tiger, Cat, True) ::: The tiger needs the cat.\nRules:\nIf something chases the squirrel then the squirrel needs the tiger. ::: If something chases the squirrel then the squirrel needs the tiger.\nIf something needs the tiger then it likes the rabbit. ::: If something needs the tiger then it likes the rabbit.\nIf something chases the cat and it likes the rabbit then the rabbit chases the squirrel. ::: If something chases the cat and it likes the rabbit then the rabbit chases the squirrel.\nIf something chases the rabbit then the rabbit does not need the tiger. ::: If something chases the rabbit then the rabbit does not need the tiger.\nIf something is kind and it chases the rabbit then it needs the tiger. ::: If something is kind and it chases the rabbit then it needs the tiger.\nIf something is kind then it does not like the squirrel. ::: If something is kind then it does not like the squirrel.\nIf something likes the squirrel and it does not need the tiger then the squirrel likes the tiger. ::: If something likes the squirrel and it does not need the tiger then the squirrel likes the tiger.\nQuery:\nNeeds(Rabbit, Tiger, True) ::: The rabbit needs the tiger.\n------\nProblem:\nThe cat is green. The cat is nice. The cat likes the squirrel. The rabbit likes the tiger. The rabbit does not need the cat. The rabbit needs the squirrel. The squirrel is cold. The squirrel needs the cat. The squirrel needs the rabbit. The tiger chases the cat. The tiger chases the rabbit. The tiger is kind. The tiger is nice. The tiger is young. The tiger likes the cat. The tiger needs the cat. If something chases the squirrel then the squirrel needs the tiger. If something needs the tiger then it likes the rabbit. If something chases the cat and it likes the rabbit then the rabbit chases the squirrel. If something chases the rabbit then the rabbit does not need the tiger. If something is kind and it chases the rabbit then it needs the tiger. If something is kind then it does not like the squirrel. If something likes the squirrel and it does not need the tiger then the squirrel likes the tiger.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The rabbit needs the tiger.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nN"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-849_Q24",
    "context": "Anne is green. Bob is kind. Bob is rough. Erin is not rough. Fiona is nice. Fiona is not red. Fiona is rough. If something is green then it is not blue. Green things are red. Green, red things are rough. If Bob is blue then Bob is kind. All kind things are smart. Rough, red things are kind. If something is green and not kind then it is nice. All smart things are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nKind(Bob, True) ::: Bob is kind.\nRough(Bob, True) ::: Bob is rough.\nNot(Rough(Erin, True)) ::: Erin is not rough.\nNice(Fiona, True) ::: Fiona is nice.\nNot(Red(Fiona, True)) ::: Fiona is not red.\nRough(Fiona, True) ::: Fiona is rough.\nRules:\nGreen($x, True) >>> Not(Blue($x, True)) ::: If something is green then it is not blue.\nGreen($x, True) >>> Red($x, True) ::: Green things are red.\nGreen($x, True) && Red($x, True) >>> Rough($x, True) ::: Green, red things are rough.\nKind(Bob, True) >>> Blue($x, True) ::: If Bob is blue then Bob is kind.\nKind($x, True) >>> Smart($x, True) ::: All kind things are smart.\nRough($x, True) && Red($x, True) >>> Kind($x, True) ::: Rough, red things are kind.\nGreen($x, True) && Not(Kind($x, True)) >>> Nice($x, True) ::: If something is green and not kind then it is nice.\nSmart($x, True) >>> Nice($x, True) ::: All smart things are nice.\nQuery:\nBlue(Fiona, True) ::: Fiona is blue.\n------\nProblem:\nAnne is green. Bob is kind. Bob is rough. Erin is not rough. Fiona is nice. Fiona is not red. Fiona is rough. If something is green then it is not blue. Green things are red. Green, red things are rough. If Bob is blue then Bob is kind. All kind things are smart. Rough, red things are kind. If something is green and not kind then it is nice. All smart things are nice.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is blue.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nKind(Bob, True) ::: Bob is kind.\nRough(Bob, True) ::: Bob is rough.\nNot(Rough(Erin, True)) ::: Erin is not rough.\nNice(Fiona, True) ::: Fiona is nice.\nNot(Red(Fiona, True)) ::: Fiona is not red.\nRough(Fiona, True) ::: Fiona is rough.\nRules:\nGreen($x, True) >>> Not(Blue($x, True)) ::: If something is green then it is not blue.\nGreen($x, True) >>> Red($x, True) ::: Green things are red.\nGreen($x, True) && Red($x, True) >>> Rough($x, True) ::: Green, red things are rough.\nKind(Bob, True) >>> Blue($x, True) ::: If Bob is blue then Bob is kind.\nKind($x, True) >>> Smart($x, True) ::: All kind things are smart.\nRough($x, True) && Red($x, True) >>> Kind($x, True) ::: Rough, red things are kind.\nGreen($x, True) && Not(Kind($x, True)) >>> Nice($x, True) ::: If something is green and not kind then it is nice.\nSmart($x, True) >>> Nice($x, True) ::: All smart things are nice"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-308_Q1",
    "context": "Anne is cold. Anne is young. Charlie is cold. Erin is big. Fiona is blue. Fiona is red. Fiona is smart. If something is big and young then it is smart. If something is big and red then it is young. All cold things are red. If something is green then it is cold. If Anne is blue and Anne is smart then Anne is young. All smart, young things are green. If something is red and big then it is young. If something is big then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nGreen($x, bool) ::: Is x green?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nYoung(Anne, True) ::: Anne is young.\nCold(Charlie, True) ::: Charlie is cold.\nBig(Erin, True) ::: Erin is big.\nBlue(Fiona, True) ::: Fiona is blue.\nRed(Fiona, True) ::: Fiona is red.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nBig($x, True) && Young($x, True) >>> Smart($x, True) ::: If something is big and young then it is smart.\nBig($x, True) && Red($x, True) >>> Young($x, True) ::: If something is big and red then it is young.\nRed($x, True) >>> Young($x, True) ::: All cold things are red.\nGreen($x, True) >>> Cold($x, True) ::: If something is green then it is cold.\nBlue($x, True) && Smart($x, True) >>> Young($x, True) ::: If Anne is blue and Anne is smart then Anne is young.\nAll($x, True) >>> Green($x, True) ::: All smart, young things are green.\nRed($x, True) && Big($x, True) >>> Young($x, True) ::: If something is red and big then it is young.\nBig($x, True) >>> Young($x, True) ::: If something is big then it is young.\nQuery:\nRed(Fiona, True) ::: Fiona is red.\n------\nProblem:\nAnne is cold. Anne is young. Charlie is cold. Erin is big. Fiona is blue. Fiona is red. Fiona is smart. If something is big and young then it is smart. If something is big and red then it is young. All cold things are red. If something is green then it is cold. If Anne is blue and Anne is smart then Anne is young. All smart, young things are green. If something is red and big then it is young. If something is big then it is young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is red.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nGreen($x, bool) ::: Is x green?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nYoung(Anne, True) ::: Anne is young.\nCold(Charlie, True) ::: Charlie is cold.\nBig(Erin, True) ::: Erin is big.\nBlue(Fiona, True) ::: Fiona is blue.\nRed(Fiona, True) ::: Fiona is red.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nBig($x, True) && Young($x, True) >>> Smart($x, True) ::: If something is big and young then it is smart.\nBig($x, True) && Red($x, True) >>> Young($x, True) ::: If something is big and red then it is young.\nRed($x, True) >>> Young($x, True) ::: All cold things are red.\nGreen($x, True) >>> Cold($x, True) ::: If something is green then it is cold.\nBlue($x, True) && Smart($x, True) >>> Young($x, True) ::: If Anne is blue and Anne is smart then Anne is young.\nAll($x, True) >>> Green($x, True) ::: All smart, young things are green.\nRed($x, True) && Big($x, True) >>> Young($x, True) ::: If something is red"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1233_Q2",
    "context": "Anne is smart. Bob is quiet. Bob is young. Fiona is not quiet. Gary is kind. Gary is rough. Gary is smart. Rough, kind people are blue. Young, kind people are rough. If someone is furry then they are quiet. Furry, young people are quiet. All quiet people are young. If someone is blue and kind then they are young. If someone is smart then they are furry. If Fiona is blue then Fiona is not kind. Young people are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nFacts:\nSmart(Anne, True) ::: Anne is smart.\nQuiet(Bob, True) ::: Bob is quiet.\nYoung(Bob, True) ::: Bob is young.\nNotQuiet(Fiona, True) ::: Fiona is not quiet.\nKind(Gary, True) ::: Gary is kind.\nRough(Gary, True) ::: Gary is rough.\nSmart(Gary, True) ::: Gary is smart.\nRough(Kind($x, True), Blue($x, True)) ::: Rough, kind people are blue.\nYoung(Kind($x, True), Rough($x, True)) ::: Young, kind people are rough.\nFurry($x, True) >>> Quiet($x, True) ::: If someone is furry then they are quiet.\nFurry(Young($x, True), Quiet($x, True)) ::: Furry, young people are quiet.\nAll(Quiet($x, True), Young($x, True)) ::: All quiet people are young.\nKind($x, True) >>> Blue($x, True) && Young($x, True) ::: If someone is blue and kind then they are young.\nSmart($x, True) >>> Furry($x, True) ::: If someone is smart then they are furry.\nNotKind(Fiona, Blue($x, True)) ::: If Fiona is blue then Fiona is not kind.\nYoung($x, True) >>> Kind($x, True) ::: Young people are kind.\nQuery:\nNotYoung(Bob, True) ::: Bob is not young.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is quiet. Bob is rough. Bob is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is quiet. Harry is rough. Harry is white. Young people are furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne is green then Anne is white. If Anne"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-143_Q12",
    "context": "Anne is round. Bob is blue. Bob is kind. Bob is red. Dave is big. Dave is kind. Dave is smart. Fiona is big. Fiona is red. Fiona is rough. Fiona is round. If Bob is round and Bob is red then Bob is rough. Big people are kind. All blue people are big. All round people are blue. All smart, red people are kind. All kind people are rough. All rough, big people are smart. Round, smart people are blue. If Fiona is smart and Fiona is red then Fiona is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nFacts:\nRound(Anne, True) ::: Anne is round.\nBlue(Bob, True) ::: Bob is blue.\nKind(Bob, True) ::: Bob is kind.\nRed(Bob, True) ::: Bob is red.\nBig(Dave, True) ::: Dave is big.\nKind(Dave, True) ::: Dave is kind.\nSmart(Dave, True) ::: Dave is smart.\nRound(Fiona, True) ::: Fiona is round.\nRed(Fiona, True) ::: Fiona is red.\nRough(Fiona, True) ::: Fiona is rough.\nRules:\nBig($x, True) >>> Kind($x, True) ::: Big people are kind.\nBlue($x, True) >>> Big($x, True) ::: All blue people are big.\nRound($x, True) >>> Blue($x, True) ::: All round people are blue.\nSmart($x, True) && Red($x, True) >>> Kind($x, True) ::: All smart, red people are kind.\nKind($x, True) >>> Rough($x, True) ::: All kind people are rough.\nRough($x, True) && Big($x, True) >>> Smart($x, True) ::: All rough, big people are smart.\nRound($x, True) && Smart($x, True) >>> Blue($x, True) ::: Round, smart people are blue.\nQuery:\nSmart(Anne, False) ::: Anne is not smart.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is quiet. Bob is rough. Bob is white. Dave is furry. Dave is green. Dave is quiet. Dave is rough. Dave is white. Erin is furry. Erin is green. Erin is quiet. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is quiet. Harry is rough. Harry is white. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then Anne is white. If Anne is green then Anne is furry. If Anne is green then Anne is quiet. If Anne is green then Anne is rough. If Anne is green then"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-858_Q5",
    "context": "Anne is big. Anne is smart. Bob is cold. Gary is big. Gary is furry. Harry is not cold. Harry is green. All young people are cold. If someone is smart then they are young. If someone is furry then they are green. Green people are white. If someone is green and cold then they are white. If Harry is green and Harry is young then Harry is furry. Green people are furry. All cold people are furry. If Gary is green then Gary is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nSmart(Anne, True) ::: Anne is smart.\nCold(Bob, True) ::: Bob is cold.\nBig(Gary, True) ::: Gary is big.\nFurry(Gary, True) ::: Gary is furry.\nGreen(Harry, True) ::: Harry is green.\nNot(Cold(Harry, True)) ::: Harry is not cold.\nRules:\nYoung($x, True) >>> Cold($x, True) ::: All young people are cold.\nSmart($x, True) >>> Young($x, True) ::: If someone is smart then they are young.\nFurry($x, True) >>> Green($x, True) ::: If someone is furry then they are green.\nGreen($x, True) >>> White($x, True) ::: Green people are white.\nGreen($x, True) && Cold($x, True) >>> White($x, True) ::: If someone is green and cold then they are white.\nGreen($x, True) && Young($x, True) >>> Furry($x, True) ::: If Harry is green and Harry is young then Harry is furry.\nGreen($x, True) >>> Furry($x, True) ::: Green people are furry.\nCold($x, True) >>> Furry($x, True) ::: All cold people are furry.\nIf(Gary, Green($x, True), Furry($x, True)) ::: If Gary is green then Gary is furry.\nQuery:\nGreen(Bob, True) ::: Bob is green.\n------\nProblem:\nAnne is big. Anne is smart. Bob is cold. Gary is big. Gary is furry. Harry is not cold. Harry is green. All young people are cold. If someone is smart then they are young. If someone is furry then they are green. Green people are white. If someone is green and cold then they are white. If Harry is green and Harry is young then Harry is furry. Green people are furry. All cold people are furry. If Gary is green then Gary is furry.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is green.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nSmart(Anne, True) ::: Anne is smart.\nCold(Bob, True) ::: Bob is cold.\nBig(Gary, True) ::: Gary is big.\nFurry(Gary, True) ::: Gary is furry.\nGreen(Harry, True) ::: Harry is green.\nNot(Cold(Harry, True)) ::: Harry is not cold.\nRules:\nYoung($x, True) >>> Cold($x, True) ::: All young people are cold.\nSmart($x, True) >>> Young($x, True) ::: If someone is smart then they are young.\nFurry($x, True) >>> Green($x, True) ::: If someone is furry then they are green.\nGreen($x, True) >>> White($x, True) ::: Green people are white.\nGreen($x, True) && Cold($x, True) >>> White($x, True) ::: If someone is green and cold then they are white.\nGreen($x, True) && Young($x, True) >>> Furry($x, True) ::: If Harry is green and Harry is young then Harry is furry.\nGreen($x, True) >>> Furry($x, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-977_Q14",
    "context": "The cat is young. The cat visits the mouse. The cow is cold. The cow likes the lion. The lion is cold. The lion likes the cat. The lion needs the mouse. The lion visits the mouse. The mouse is cold. The mouse is red. The mouse is young. The mouse likes the cat. The mouse needs the cat. The mouse needs the cow. If something needs the cat and the cat is red then it is blue. Blue things are red. If something likes the mouse and the mouse likes the cat then the cat is blue. If something is cold and red then it likes the mouse. If something needs the cow and it is cold then it is young. If something is nice then it visits the lion. If something needs the lion then it likes the cat. If something visits the cat and it likes the lion then the cat is blue. If something is cold and blue then it needs the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse visits the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nYoung(Cat, True) ::: The cat is young.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nCold(Cow, True) ::: The cow is cold.\nLikes(Cow, Lion, True) ::: The cow likes the lion.\nCold(Lion, True) ::: The lion is cold.\nLikes(Lion, Cat, True) ::: The lion likes the cat.\nNeeds(Lion, Mouse, True) ::: The lion needs the mouse.\nVisits(Lion, Mouse, True) ::: The lion visits the mouse.\nCold(Mouse, True) ::: The mouse is cold.\nRed(Mouse, True) ::: The mouse is red.\nYoung(Mouse, True) ::: The mouse is young.\nLikes(Mouse, Cat, True) ::: The mouse likes the cat.\nNeeds(Mouse, Cat, True) ::: The mouse needs the cat.\nNeeds(Mouse, Cow, True) ::: The mouse needs the cow.\nIfSomethingNeedsTheCatAndTheCatIsRedThenItIsBlue($x, $y, $z, True) ::: If something needs the cat and the cat is red then it is blue.\nBlueThingsAreRed($x, $y, True) ::: Blue things are red.\nIfSomethingLikesTheMouseAndTheMouseLikesTheCatThenTheCatIsBlue($x, $y, $z, True) ::: If something likes the mouse and the mouse likes the cat then the cat is blue.\nIfSomethingIsColdAndRedThenItLikesTheMouse($x, $y, $z, True) ::: If something is cold and red then it likes the mouse.\nIfSomethingNeedsTheCowAndItIsColdThenItIsYoung($x, $y, $z, True) ::: If something needs the cow and it is cold then it is young.\nIfSomethingIsNiceThenItVisitsTheLion($x, $y, $z, True) ::: If something is nice then it visits the lion.\nIfSomethingNeedsTheLionThenItLikesTheCat($x, $y, $z, True) ::: If something needs the lion then it likes the cat.\nIfSomethingVisitsTheCatAndItLikesTheLionThenTheCatIsBlue($x, $y, $z, True) ::: If something visits the cat and it likes the lion then the cat is blue.\nIfSomethingIsColdAndBlueThenItNeedsTheLion($x, $y, $z, True) ::: If something is cold and blue then it needs the lion.\nQuery:\nVisits(Mouse, Lion, True) ::: The mouse visits the lion.\n------\nProblem:\nThe cat is young. The cat visits the mouse. The cow is cold. The cow likes the lion. The lion is cold. The lion likes the cat. The lion needs the mouse. The lion visits the mouse. The mouse is cold. The mouse is red. The mouse is young. The mouse likes the cat. The mouse needs the cat. The mouse needs the cow. If something needs the cat and the cat is red then it is blue. Blue things are red. If something likes the mouse and the mouse likes the cat then the cat is blue. If something is cold and red then it likes the mouse. If something needs the cow and it is cold then it is young. If something is nice then it visits the lion. If something needs the lion then it likes the cat. If something visits the cat and it likes the lion then the cat is blue. If something is cold and blue then it needs the lion.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? The mouse visits the lion.\n###\nPredicates:\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-637_Q19",
    "context": "The bald eagle eats the bear. The bald eagle is nice. The bald eagle visits the mouse. The bear eats the tiger. The bear is kind. The bear visits the tiger. The mouse eats the bear. The mouse is green. The mouse is kind. The mouse sees the bald eagle. The mouse sees the bear. The mouse sees the tiger. The tiger eats the mouse. The tiger sees the bald eagle. The tiger sees the bear. The tiger visits the mouse. If something is kind then it visits the bald eagle. If something eats the bear then the bear sees the bald eagle. If the bald eagle is round then the bald eagle eats the bear. If something eats the bald eagle and it sees the bear then the bald eagle is kind. If something sees the bald eagle then the bald eagle visits the mouse. If something visits the bald eagle and the bald eagle visits the mouse then it eats the bald eagle. If something is blue and it eats the tiger then the tiger eats the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is not green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y) ::: Does x eat y?\nVisits($x, $y) ::: Does x visit y?\nSees($x, $y) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(BaldEagle, Bear) ::: The bald eagle eats the bear.\nKind(BaldEagle, True) ::: The bald eagle is nice.\nVisits(BaldEagle, Mouse) ::: The bald eagle visits the mouse.\nEats(Bear, Tiger) ::: The bear eats the tiger.\nKind(Bear, True) ::: The bear is kind.\nVisits(Bear, Tiger) ::: The bear visits the tiger.\nEats(Mouse, Bear) ::: The mouse eats the bear.\nKind(Mouse, True) ::: The mouse is kind.\nGreen(Mouse, True) ::: The mouse is green.\nSees(Mouse, BaldEagle) ::: The mouse sees the bald eagle.\nSees(Mouse, Bear) ::: The mouse sees the bear.\nSees(Mouse, Tiger) ::: The mouse sees the tiger.\nEats(Tiger, Mouse) ::: The tiger eats the mouse.\nSees(Tiger, BaldEagle) ::: The tiger sees the bald eagle.\nSees(Tiger, Bear) ::: The tiger sees the bear.\nVisits(Tiger, Mouse) ::: The tiger visits the mouse.\nRules:\nKind($x, True) >>> Visits($x, BaldEagle) ::: If something is kind then it visits the bald eagle.\nEats($x, Bear) >>> Sees($x, BaldEagle) ::: If something eats the bear then the bear sees the bald eagle.\nRound($x, True) >>> Eats($x, Bear) ::: If the bald eagle is round then the bald eagle eats the bear.\nEats($x, BaldEagle) && Sees($x, Bear) >>> Kind($x, True) ::: If something eats the bald eagle and it sees the bear then the bald eagle is kind.\nSees($x, BaldEagle) >>> Visits($x, Mouse) ::: If something sees the bald eagle then the bald eagle visits the mouse.\nVisits($x, Mouse) && Visits($x, BaldEagle) >>> Eats($x, BaldEagle) ::: If something visits the bald eagle and the bald eagle visits the mouse then it eats the bald eagle.\nBlue($x, True) && Eats($x, Tiger) >>> Eats($x, Mouse) ::: If something is blue and it eats the tiger then the tiger eats the mouse.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-897_Q12",
    "context": "Anne is nice. Bob is big. Bob is blue. Bob is cold. Charlie is big. Charlie is cold. Charlie is nice. Charlie is young. Fiona is furry. Fiona is young. If someone is furry and nice then they are cold. If Bob is blue and Bob is big then Bob is cold. All blue, cold people are big. If someone is nice then they are smart. All smart, big people are nice. All smart people are blue. Blue, smart people are furry. Furry, cold people are smart. Cold people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nBig(Charlie, True) ::: Charlie is big.\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nYoung(Charlie, True) ::: Charlie is young.\nFurry(Fiona, True) ::: Fiona is furry.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nFurry($x, True) && Nice($x, True) >>> Cold($x, True) ::: If someone is furry and nice then they are cold.\nBlue($x, True) && Big($x, True) >>> Cold($x, True) ::: If Bob is blue and Bob is big then Bob is cold.\nBlue($x, True) && Cold($x, True) >>> Big($x, True) ::: All blue, cold people are big.\nNice($x, True) >>> Smart($x, True) ::: If someone is nice then they are smart.\nBig($x, True) && Smart($x, True) >>> Nice($x, True) ::: All smart, big people are nice.\nSmart($x, True) >>> Blue($x, True) ::: All smart people are blue.\nBlue($x, True) && Smart($x, True) >>> Furry($x, True) ::: Blue, smart people are furry.\nCold($x, True) && Furry($x, True) >>> Smart($x, True) ::: Cold people are furry.\nFurry($x, True) >>> Smart($x, True) ::: Furry, cold people are smart.\nSmart($x, True) >>> Big($x, True) ::: Smart people are big.\nQuery:\nBig(Anne, False) ::: Anne is not big.\n------\nProblem:\nAnne is nice. Bob is big. Bob is blue. Bob is cold. Charlie is big. Charlie is cold. Charlie is nice. Charlie is young. Fiona is furry. Fiona is young. If someone is furry and nice then they are cold. If Bob is blue and Bob is big then Bob is cold. All blue, cold people are big. If someone is nice then they are smart. All smart, big people are nice. All smart people are blue. Blue, smart people are fur"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-992_Q10",
    "context": "The bear is nice. The bear likes the cat. The bear sees the dog. The cat eats the bear. The cat is cold. The cat sees the bear. The dog eats the bear. The dog eats the lion. The dog is blue. The dog sees the cat. The lion eats the cat. The lion is cold. The lion likes the bear. The lion likes the cat. If someone is big then they eat the dog. If someone is cold then they are nice. If someone is blue and they see the bear then they see the dog. If someone eats the dog then the dog is nice. If someone is blue and they see the dog then they are big. If someone eats the bear and they are nice then they are blue. If someone eats the bear and they see the dog then the dog is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nFacts:\nNice(Bear, True) ::: The bear is nice.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nSees(Bear, Dog, True) ::: The bear sees the dog.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nCold(Cat, True) ::: The cat is cold.\nSees(Cat, Bear, True) ::: The cat sees the bear.\nEats(Dog, Bear, True) ::: The dog eats the bear.\nEats(Dog, Lion, True) ::: The dog eats the lion.\nBlue(Dog, True) ::: The dog is blue.\nSees(Dog, Cat, True) ::: The dog sees the cat.\nEats(Lion, Cat, True) ::: The lion eats the cat.\nCold(Lion, True) ::: The lion is cold.\nLikes(Lion, Bear, True) ::: The lion likes the bear.\nLikes(Lion, Cat, True) ::: The lion likes the cat.\nRules:\nBig($x, True) >>> Eats($x, Dog) ::: If someone is big then they eat the dog.\nCold($x, True) >>> Nice($x, True) ::: If someone is cold then they are nice.\nBlue($x, True) && Sees($x, Bear) >>> Sees($x, Dog) ::: If someone is blue and they see the bear then they see the dog.\nEats($x, Dog) >>> Nice($x, True) ::: If someone eats the dog then the dog is nice.\nBlue($x, True) && Sees($x, Dog) >>> Big($x, True) ::: If someone is blue and they see the dog then they are big.\nEats($x, Bear) && Nice($x, True) >>> Blue($x, True) ::: If someone eats the bear and they are nice then they are blue.\nEats($x, Bear) && Sees($x, Dog) >>> Big($x, True) ::: If someone eats the bear and they see the dog then the dog is big.\nQuery:\nNot(Big(Dog, True)) ::: The dog is not big.\n------\nProblem:\nThe bear is nice. The bear likes the cat. The bear sees the dog. The cat eats the bear. The cat is cold. The cat sees the bear"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-269_Q17",
    "context": "Charlie is blue. Charlie is round. Fiona is big. Fiona is cold. Gary is nice. Harry is nice. Harry is round. All rough, blue things are red. All nice things are cold. Big, cold things are rough. If something is red and blue then it is rough. All blue, cold things are nice. All red things are blue. If something is round and cold then it is blue. Blue things are big. If Charlie is big then Charlie is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nFacts:\nBlue(Charlie, True) ::: Charlie is blue.\nRound(Charlie, True) ::: Charlie is round.\nBig(Fiona, True) ::: Fiona is big.\nCold(Fiona, True) ::: Fiona is cold.\nNice(Gary, True) ::: Gary is nice.\nNice(Harry, True) ::: Harry is nice.\nRound(Harry, True) ::: Harry is round.\nRules:\nBlue($x, True) && Cold($x, True) >>> Nice($x, True) ::: All blue, cold things are nice.\nBlue($x, True) >>> Red($x, True) ::: All blue things are red.\nRound($x, True) && Cold($x, True) >>> Blue($x, True) ::: If something is round and cold then it is blue.\nBig($x, True) && Cold($x, True) >>> Rough($x, True) ::: Big, cold things are rough.\nNice($x, True) >>> Cold($x, True) ::: All nice things are cold.\nRed($x, True) && Blue($x, True) >>> Rough($x, True) ::: If something is red and blue then it is rough.\nRound($x, True) && Cold($x, True) >>> Blue($x, True) ::: If something is round and cold then it is blue.\nBlue($x, True) >>> Big($x, True) ::: Blue things are big.\nBig($x, True) >>> Blue($x, True) ::: If Charlie is big then Charlie is blue.\nQuery:\nRed(Charlie, False) ::: Charlie is not red.\n------\nProblem:\nCharlie is blue. Charlie is round. Fiona is big. Fiona is cold. Gary is nice. Harry is nice. Harry is round. All rough, blue things are red. All nice things are cold. Big, cold things are rough. If something is red and blue then it is rough. All blue, cold things are nice. All red things are blue. If something is round and cold then it is blue. Blue things are big. If Charlie is big then Charlie is blue.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is not red.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nCold($x, bool) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-721_Q8",
    "context": "The bald eagle does not eat the mouse. The bald eagle is not rough. The bald eagle needs the lion. The bald eagle sees the lion. The lion is nice. The mouse is kind. The mouse needs the bald eagle. The mouse needs the lion. The mouse sees the lion. The rabbit eats the bald eagle. The rabbit needs the mouse. If someone eats the bald eagle and they see the bald eagle then they are big. If someone is nice and they eat the rabbit then they eat the bald eagle. If someone eats the bald eagle then they are cold. If someone needs the rabbit and they are big then the rabbit sees the mouse. If someone is cold then they need the lion. If someone is cold and big then they do not need the bald eagle. If someone needs the lion then they see the bald eagle. If the rabbit sees the bald eagle and the rabbit is not big then the bald eagle eats the lion. If the bald eagle eats the lion then the bald eagle does not see the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not see the bald eagle.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFacts:\nEats(BaldEagle, Mouse, False) ::: The bald eagle does not eat the mouse.\nEats(BaldEagle, Lion, False) ::: The bald eagle is not rough.\nEats(BaldEagle, Lion, True) ::: The bald eagle needs the lion.\nSees(BaldEagle, Lion, True) ::: The bald eagle sees the lion.\nKind(Lion, True) ::: The lion is nice.\nKind(Mouse, True) ::: The mouse is kind.\nNeeds(BaldEagle, Mouse, True) ::: The mouse needs the bald eagle.\nNeeds(BaldEagle, Lion, True) ::: The mouse needs the lion.\nSees(Mouse, Lion, True) ::: The mouse sees the lion.\nEats(Rabbit, BaldEagle, True) ::: The rabbit eats the bald eagle.\nNeeds(Rabbit, Mouse, True) ::: The rabbit needs the mouse.\nRules:\nEats($x, $y, True) >>> Big($x, True) ::: If someone eats the bald eagle and they see the bald eagle then they are big.\nKind($x, True) && Eats($x, Rabbit, True) >>> Eats($x, BaldEagle, True) ::: If someone is nice and they eat the rabbit then they eat the bald eagle.\nEats($x, BaldEagle, True) >>> Cold($x, True) ::: If someone eats the bald eagle then they are cold.\nNeeds($x, Mouse, True) && Big($x, True) >>> Sees($x, Mouse, True) ::: If someone needs the rabbit and they are big then the rabbit sees the mouse.\nCold($x, True) >>> Needs($x, Lion, True) ::: If someone is cold then they need the lion.\nCold($x, True) && Big($x, True) >>> Needs($x, BaldEagle, False) ::: If someone is cold and big then they do not need the bald eagle.\nNeeds($x, Lion, True) >>> Sees($x, BaldEagle, True) ::: If someone needs the lion then they see the bald eagle.\nSees(Rabbit, BaldEagle, True) && Not(Big(Rabbit, True)) >>> Eats(BaldEagle, Lion, True) ::: If the rabbit sees the bald eagle and the rabbit is not big"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-31_Q8",
    "context": "The dog chases the squirrel. The lion eats the squirrel. The lion sees the dog. The squirrel chases the dog. The squirrel chases the lion. The squirrel eats the lion. The squirrel is green. The squirrel is rough. The squirrel sees the dog. The squirrel sees the lion. The tiger is rough. If something is blue then it chases the lion. If something chases the lion and it eats the squirrel then the squirrel sees the tiger. If the squirrel eats the lion and the squirrel is green then the lion sees the tiger. If something sees the tiger then it is blue. Rough things are big. If something chases the dog then it chases the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not chase the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nBlue($x, bool) ::: Is x blue?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nFacts:\nChases(Dog, Squirrel, True) ::: The dog chases the squirrel.\nEats(Lion, Squirrel, True) ::: The lion eats the squirrel.\nSees(Lion, Dog, True) ::: The lion sees the dog.\nChases(Squirrel, Dog, True) ::: The squirrel chases the dog.\nChases(Squirrel, Lion, True) ::: The squirrel chases the lion.\nEats(Squirrel, Lion, True) ::: The squirrel eats the lion.\nIs(Squirrel, Green, True) ::: The squirrel is green.\nIs(Squirrel, Rough, True) ::: The squirrel is rough.\nSees(Squirrel, Dog, True) ::: The squirrel sees the dog.\nSees(Squirrel, Lion, True) ::: The squirrel sees the lion.\nIs(Tiger, Rough, True) ::: The tiger is rough.\nRules:\nBlue($x, True) >>> Chases($x, Lion, True) ::: If something is blue then it chases the lion.\nChases($x, Lion, True) && Eats($x, Squirrel, True) >>> Squirrel($x, True) ::: If something chases the lion and it eats the squirrel then the squirrel sees the tiger.\nEats($x, Squirrel, True) && Is($x, Green, True) >>> Lion($x, True) ::: If the squirrel eats the lion and the squirrel is green then the lion sees the tiger.\nSees($x, Tiger, True) >>> Blue($x, True) ::: If something sees the tiger then it is blue.\nRough($x, True) >>> Big($x, True) ::: Rough things are big.\nChases($x, Dog, True) >>> Chases($x, Tiger, True) ::: If something chases the dog then it chases the tiger.\nQuery:\nChases(Lion, Lion, True) ::: The lion does not chase the lion.\n------\nProblem:\nThe dog chases the squirrel. The lion eats the squirrel. The lion sees the dog. The squirrel chases the dog. The squirrel chases"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-327_Q17",
    "context": "Bob is quiet. Bob is smart. Charlie is quiet. Charlie is not white. Fiona is young. Harry is big. Harry is nice. If something is quiet and white then it is green. All smart things are green. Green things are white. All smart, young things are big. White things are not young. If something is smart and not young then it is nice. If Bob is green and Bob is nice then Bob is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nSmart(Bob, True) ::: Bob is smart.\nQuite(Charlie, True) ::: Charlie is quiet.\nWhite(Charlie, False) ::: Charlie is not white.\nYoung(Fiona, True) ::: Fiona is young.\nBig(Harry, True) ::: Harry is big.\nNice(Harry, True) ::: Harry is nice.\nRules:\nQuite($x, True) && White($x, True) >>> Green($x, True) ::: If something is quiet and white then it is green.\nSmart($x, True) >>> Green($x, True) ::: All smart things are green.\nGreen($x, True) >>> White($x, True) ::: Green things are white.\nSmart($x, True) && Young($x, True) >>> Big($x, True) ::: All smart, young things are big.\nWhite($x, True) >>> Young($x, False) ::: White things are not young.\nSmart($x, True) && Not(Young($x, True)) >>> Nice($x, True) ::: If something is smart and not young then it is nice.\nSmart(Bob, True) && Nice(Bob, True) >>> Big(Bob, True) ::: If Bob is green and Bob is nice then Bob is big.\nQuery:\nNot(Green(Fiona, True)) ::: Fiona is not green.\n------\nProblem:\nBob is quiet. Bob is smart. Charlie is quiet. Charlie is not white. Fiona is young. Harry is big. Harry is nice. If something is quiet and white then it is green. All smart things are green. Green things are white. All smart, young things are big. White things are not young. If something is smart and not young then it is nice. If Bob is green and Bob is nice then Bob is big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is not green.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nFacts"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-685_Q24",
    "context": "The bear chases the cow. The bear eats the cow. The bear is young. The cow is red. The cow is round. The cow visits the squirrel. The rabbit is round. The rabbit visits the bear. The squirrel eats the cow. The squirrel visits the rabbit. If someone visits the squirrel and the squirrel chases the cow then the cow is round. If someone is big and red then they chase the rabbit. If someone visits the rabbit then the rabbit visits the bear. If the squirrel chases the cow and the cow is round then the cow is young. If someone chases the squirrel then the squirrel eats the rabbit. If someone eats the cow and the cow eats the rabbit then the cow chases the rabbit. If someone chases the rabbit then the rabbit is red. All red people are big. If someone eats the bear then they chase the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear visits the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nVisits($x, $y, bool) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nFacts:\nChases(Bear, Cow, True) ::: The bear chases the cow.\nEats(Bear, Cow, True) ::: The bear eats the cow.\nYoung(Bear, True) ::: The bear is young.\nRed(Cow, True) ::: The cow is red.\nRound(Cow, True) ::: The cow is round.\nVisits(Cow, Squirrel, True) ::: The cow visits the squirrel.\nRound(Rabbit, True) ::: The rabbit is round.\nVisits(Rabbit, Bear, True) ::: The rabbit visits the bear.\nEats(Squirrel, Cow, True) ::: The squirrel eats the cow.\nVisits(Squirrel, Rabbit, True) ::: The squirrel visits the rabbit.\nChases(Squirrel, Cow, True) ::: The squirrel chases the cow.\nRules:\nVisits($x, $y, True) >>> Visits($y, $x, True) ::: If someone visits the squirrel and the squirrel chases the cow then the cow is round.\nBig($x, True) >>> Red($x, True) ::: If someone is big and red then they chase the rabbit.\nVisits($x, $y, True) >>> Visits($y, $x, True) ::: If someone visits the rabbit then the rabbit visits the bear.\nChases($x, $y, True) && Round($y, True) >>> Young($y, True) ::: If the squirrel chases the cow and the cow is round then the cow is young.\nChases($x, $y, True) >>> Eats($y, $x, True) ::: If someone chases the squirrel then the squirrel eats the rabbit.\nEats($x, $y, True) && Eats($y, $z, True) >>> Chases($x, $z, True) ::: If someone eats the cow and the cow eats the rabbit then the cow chases the rabbit.\nChases($x, $y, True) >>> Red($y, True) ::: If someone chases the rabbit then the rabbit is red.\nAll($x, Red($x, True)) >>> Big($x, True) ::: All red people are big.\nEats($x, $y, True) >>> Chases($y, $x,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1054_Q3",
    "context": "Anne is round. Bob is big. Bob is nice. Bob is round. Dave is big. Dave is blue. Dave is furry. Dave is smart. Harry is smart. Harry is white. All blue, round people are smart. All nice, round people are furry. Smart, blue people are nice. If Anne is furry and Anne is round then Anne is big. All blue, smart people are white. Nice people are furry. All furry, big people are blue. If someone is round then they are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nRound(Anne, True) ::: Anne is round.\nBig(Bob, True) ::: Bob is big.\nNice(Bob, True) ::: Bob is nice.\nRound(Bob, True) ::: Bob is round.\nBig(Dave, True) ::: Dave is big.\nBlue(Dave, True) ::: Dave is blue.\nFurry(Dave, True) ::: Dave is furry.\nSmart(Dave, True) ::: Dave is smart.\nSmart(Harry, True) ::: Harry is smart.\nWhite(Harry, True) ::: Harry is white.\nRules:\nBlue($x, True) >>> Round($x, True) ::: All blue, round people are smart.\nNice($x, True) >>> Furry($x, True) ::: All nice, round people are furry.\nSmart($x, True) >>> Blue($x, True) ::: Smart, blue people are nice.\nFurry($x, True) && Round($x, True) >>> Big($x, True) ::: If Anne is furry and Anne is round then Anne is big.\nSmart($x, True) >>> White($x, True) ::: All blue, smart people are white.\nNice($x, True) >>> Furry($x, True) ::: Nice people are furry.\nFurry($x, True) && Big($x, True) >>> Blue($x, True) ::: All furry, big people are blue.\nRound($x, True) >>> Blue($x, True) ::: If someone is round then they are blue.\nQuery:\nBlue(Bob, True) ::: Bob is blue.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is red. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is quiet. Bob is red. Bob is rough. Bob is white. Dave is furry. Dave is green. Dave is quiet. Dave is red. Dave is rough. Dave is white. Erin is furry. Erin is green. Erin is quiet. Erin is red. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is quiet. Harry is red. Harry is rough. Harry is white. If Anne is furry then Anne is green. If Anne is green"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1041_Q8",
    "context": "Bob is cold. Bob is quiet. Bob is red. Bob is smart. Charlie is kind. Charlie is quiet. Charlie is red. Charlie is rough. Dave is cold. Dave is kind. Dave is smart. Fiona is quiet. If something is quiet and cold then it is smart. Red, cold things are round. If something is kind and rough then it is red. All quiet things are rough. Cold, smart things are red. If something is rough then it is cold. All red things are rough. If Dave is smart and Dave is kind then Dave is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nQuiet(Bob, True) ::: Bob is quiet.\nRed(Bob, True) ::: Bob is red.\nSmart(Bob, True) ::: Bob is smart.\nKind(Charlie, True) ::: Charlie is kind.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nCold(Dave, True) ::: Dave is cold.\nKind(Dave, True) ::: Dave is kind.\nSmart(Dave, True) ::: Dave is smart.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nQuiet($x, True) && Cold($x, True) >>> Smart($x, True) ::: If something is quiet and cold then it is smart.\nRed($x, True) && Cold($x, True) >>> Round($x, True) ::: Red, cold things are round.\nKind($x, True) && Rough($x, True) >>> Red($x, True) ::: If something is kind and rough then it is red.\nQuiet($x, True) >>> Rough($x, True) ::: All quiet things are rough.\nCold($x, True) && Smart($x, True) >>> Red($x, True) ::: Cold, smart things are red.\nRough($x, True) >>> Cold($x, True) ::: If something is rough then it is cold.\nRed($x, True) >>> Rough($x, True) ::: All red things are rough.\nSmart($x, True) && Kind($x, True) >>> Quiet($x, True) ::: If Dave is smart and Dave is kind then Dave is quiet.\nQuery:\nNot(Smart(Fiona, True)) ::: Fiona is not smart.\n------\nProblem:\nBob is cold. Bob is quiet. Bob is red. Bob is smart. Charlie is kind. Charlie is quiet. Charlie is red. Charlie is rough. Dave is cold. Dave is kind. Dave is smart. Fiona is quiet. If something is quiet and cold then it is smart. Red, cold things are round. If something is kind and rough then it is red. All quiet things are rough. Cold, smart things are red. If something is rough then it is cold. All red things are rough. If Dave is smart and Dave is kind then Dave is"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-973_Q19",
    "context": "Charlie is young. Fiona is blue. Gary is blue. Gary is white. Harry is blue. Harry is round. Harry is smart. If Charlie is round and Charlie is quiet then Charlie is not young. If something is quiet then it is smart. All blue things are young. Big, blue things are quiet. Young, white things are round. If Fiona is big and Fiona is not white then Fiona is blue. If Charlie is big and Charlie is young then Charlie is not smart. Round things are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Fiona, True) ::: Fiona is blue.\nBlue(Gary, True) ::: Gary is blue.\nWhite(Gary, True) ::: Gary is white.\nBlue(Harry, True) ::: Harry is blue.\nRound(Harry, True) ::: Harry is round.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nYoung($x, True) >>> Round($x, True) ::: Young, white things are round.\nBlue($x, True) >>> Young($x, True) ::: All blue things are young.\nBig($x, True) && Blue($x, True) >>> Quiet($x, True) ::: Big, blue things are quiet.\nQuiet($x, True) >>> Smart($x, True) ::: If something is quiet then it is smart.\nRound($x, True) && Quiet($x, True) >>> Not(Young($x, True)) ::: If Charlie is round and Charlie is quiet then Charlie is not young.\nBlue($x, True) >>> Not(White($x, True)) ::: If Fiona is big and Fiona is not white then Fiona is blue.\nYoung($x, True) && White($x, True) >>> Round($x, True) ::: If Charlie is big and Charlie is young then Charlie is not smart.\nRound($x, True) >>> Big($x, True) ::: Round things are big.\nQuery:\nNot(White(Charlie, True)) ::: Charlie is not white.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-973_Q6",
    "context": "Charlie is young. Fiona is blue. Gary is blue. Gary is white. Harry is blue. Harry is round. Harry is smart. If Charlie is round and Charlie is quiet then Charlie is not young. If something is quiet then it is smart. All blue things are young. Big, blue things are quiet. Young, white things are round. If Fiona is big and Fiona is not white then Fiona is blue. If Charlie is big and Charlie is young then Charlie is not smart. Round things are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Fiona, True) ::: Fiona is blue.\nBlue(Gary, True) ::: Gary is blue.\nWhite(Gary, True) ::: Gary is white.\nBlue(Harry, True) ::: Harry is blue.\nRound(Harry, True) ::: Harry is round.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nYoung($x, True) >>> Round($x, True) ::: Young, white things are round.\nBlue($x, True) >>> Young($x, True) ::: All blue things are young.\nBig($x, True) && Blue($x, True) >>> Quiet($x, True) ::: Big, blue things are quiet.\nQuiet($x, True) >>> Smart($x, True) ::: If something is quiet then it is smart.\nRound($x, True) && Quiet($x, True) >>> Not($x, True) ::: If Charlie is round and Charlie is quiet then Charlie is not young.\nBlue($x, True) >>> Not($x, True) ::: If Charlie is big and Charlie is young then Charlie is not smart.\nBig($x, True) >>> Round($x, True) ::: Round things are big.\nFiona(Big($x, True) && Not($x, True)) >>> Blue($x, True) ::: If Fiona is big and Fiona is not white then Fiona is blue.\n------\nProblem:\nCharlie is young. Fiona is blue. Gary is blue. Gary is white. Harry is blue. Harry is round. Harry is smart. If Charlie"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-725_Q8",
    "context": "Anne is cold. Anne is smart. Bob is big. Bob is rough. Erin is big. Erin is cold. Erin is kind. Erin is rough. Erin is smart. Erin is white. Erin is young. Harry is cold. Harry is kind. Harry is rough. Smart things are cold. If Erin is kind then Erin is young. White things are kind. If something is rough and kind then it is smart. If Anne is smart then Anne is white. All smart, cold things are kind. Big, cold things are young. If Bob is rough then Bob is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nSmart(Anne, True) ::: Anne is smart.\nBig(Bob, True) ::: Bob is big.\nRough(Bob, True) ::: Bob is rough.\nBig(Erin, True) ::: Erin is big.\nCold(Erin, True) ::: Erin is cold.\nKind(Erin, True) ::: Erin is kind.\nRough(Erin, True) ::: Erin is rough.\nSmart(Erin, True) ::: Erin is smart.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nCold(Harry, True) ::: Harry is cold.\nKind(Harry, True) ::: Harry is kind.\nRough(Harry, True) ::: Harry is rough.\nRules:\nSmart($x, True) >>> Cold($x, True) ::: Smart things are cold.\nKind(Erin, True) >>> Young($x, True) ::: If Erin is kind then Erin is young.\nWhite($x, True) >>> Kind($x, True) ::: White things are kind.\nRough($x, True) && Kind($x, True) >>> Smart($x, True) ::: If something is rough and kind then it is smart.\nSmart(Anne, True) >>> White($x, True) ::: If Anne is smart then Anne is white.\nAll(Smart($x, True), Cold($x, True), Kind"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-107_Q1",
    "context": "Charlie is cold. Charlie is furry. Charlie is red. Charlie is rough. Charlie is smart. Dave is furry. Dave is rough. Fiona is kind. Fiona is young. Harry is red. If something is rough then it is cold. All smart things are red. All kind things are rough. All red, kind things are rough. If Dave is cold and Dave is young then Dave is kind. Cold, young things are furry. Cold, furry things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nFurry(Charlie, True) ::: Charlie is furry.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nSmart(Charlie, True) ::: Charlie is smart.\nFurry(Dave, True) ::: Dave is furry.\nRough(Dave, True) ::: Dave is rough.\nKind(Fiona, True) ::: Fiona is kind.\nYoung(Fiona, True) ::: Fiona is young.\nRed(Harry, True) ::: Harry is red.\nRules:\nRough($x, True) >>> Cold($x, True) ::: If something is rough then it is cold.\nRed($x, True) >>> Smart($x, True) ::: All smart things are red.\nRough($x, True) >>> Kind($x, True) ::: All kind things are rough.\nRed($x, True) && Kind($x, True) >>> Rough($x, True) ::: All red, kind things are rough.\nCold($x, True) && Young($x, True) >>> Furry($x, True) ::: Cold, young things are furry.\nCold($x, True) && Furry($x, True) >>> Smart($x, True) ::: Cold, furry things are smart.\nDave(Cold($x, True) && Young($x, True)) >>> Kind($x, True) ::: If Dave is cold and Dave is young then Dave is kind.\nQuery:\nFur"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-517_Q10",
    "context": "Charlie is cold. Charlie is quiet. Charlie is young. Erin is cold. Erin is green. Erin is kind. Erin is round. Erin is young. Fiona is big. Fiona is round. Harry is green. Harry is kind. All cold, kind people are quiet. All quiet, big people are young. Green people are young. If Erin is young then Erin is cold. If someone is cold then they are big. All kind, round people are green. All big people are kind. Young people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nQuiet(Charlie, True) ::: Charlie is quiet.\nYoung(Charlie, True) ::: Charlie is young.\nCold(Erin, True) ::: Erin is cold.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::: Erin is kind.\nRound(Erin, True) ::: Erin is round.\nYoung(Erin, True) ::: Erin is young.\nBig(Fiona, True) ::: Fiona is big.\nRound(Fiona, True) ::: Fiona is round.\nRules:\nCold($x, True) && Kind($x, True) >>> Quiet($x, True) ::: All cold, kind people are quiet.\nQuiet($x, True) && Big($x, True) >>> Young($x, True) ::: All quiet, big people are young.\nGreen($x, True) >>> Young($x, True) ::: Green people are young.\nYoung($x, True) >>> Cold($x, True) ::: If Erin is young then Erin is cold.\nCold($x, True) >>> Big($x, True) ::: If someone is cold then they are big.\nKind($x, True) && Round($x, True) >>> Green($x, True) ::: All kind, round people are green.\nBig($x, True) >>> Kind($x, True) ::: All big people are kind.\nYoung($x, True) >>> Cold($x, True) ::: Young people are cold.\nQuery:\nNot("
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-973_Q15",
    "context": "Charlie is young. Fiona is blue. Gary is blue. Gary is white. Harry is blue. Harry is round. Harry is smart. If Charlie is round and Charlie is quiet then Charlie is not young. If something is quiet then it is smart. All blue things are young. Big, blue things are quiet. Young, white things are round. If Fiona is big and Fiona is not white then Fiona is blue. If Charlie is big and Charlie is young then Charlie is not smart. Round things are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Fiona, True) ::: Fiona is blue.\nBlue(Gary, True) ::: Gary is blue.\nWhite(Gary, True) ::: Gary is white.\nBlue(Harry, True) ::: Harry is blue.\nRound(Harry, True) ::: Harry is round.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nYoung($x, True) >>> Round($x, True) ::: Young, white things are round.\nBlue($x, True) >>> Young($x, True) ::: All blue things are young.\nBig($x, True) && Blue($x, True) >>> Quiet($x, True) ::: Big, blue things are quiet.\nQuiet($x, True) >>> Smart($x, True) ::: If something is quiet then it is smart.\nRound($x, True) && Quiet($x, True) >>> Not($x, True) ::: If Charlie is round and Charlie is quiet then Charlie is not young.\nBlue($x, True) >>> Not($x, True) ::: If Charlie is big and Charlie is young then Charlie is not smart.\nBig($x, True) >>> Round($x, True) ::: Round things are big.\nFiona(Big($x, True) && Not($x, True)) >>> Blue($x, True) ::: If Fiona is big and Fiona is not white then Fiona is blue.\n------\nProblem:\nCharlie is young. Fiona is blue. Gary is blue. Gary is white. Harry is blue. Harry is round. Harry is smart. If Charlie"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-691_Q3",
    "context": "The bald eagle sees the cat. The cat eats the dog. The cat is big. The cat is kind. The dog eats the bald eagle. The dog eats the cat. The dog is kind. The dog sees the lion. The lion eats the bald eagle. The lion is green. The lion is nice. The lion sees the dog. Cold things are green. If something sees the lion then it needs the dog. If something needs the bald eagle then it sees the lion. If something is nice then it sees the lion. If something is big then it sees the cat. If something is green and it needs the dog then it eats the cat. If something is green and it eats the cat then the cat needs the bald eagle. If something eats the bald eagle then the bald eagle is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion sees the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nNeeds($x, $y, bool) ::: Does x need y?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFacts:\nSees(BaldEagle, Cat, True) ::: The bald eagle sees the cat.\nEats(Cat, Dog, True) ::: The cat eats the dog.\nKind(Cat, True) ::: The cat is kind.\nBig(Cat, True) ::: The cat is big.\nEats(Cat, BaldEagle, True) ::: The cat eats the bald eagle.\nEats(Cat, Cat, True) ::: The cat eats the cat.\nKind(Dog, True) ::: The dog is kind.\nSees(Dog, Lion, True) ::: The dog sees the lion.\nGreen(Lion, True) ::: The lion is green.\nNice(Lion, True) ::: The lion is nice.\nSees(Lion, Dog, True) ::: The lion sees the dog.\nRules:\nCold($x, True) >>> Green($x, True) ::: Cold things are green.\nSees($x, Lion) >>> Needs($x, BaldEagle) ::: If something sees the lion then it needs the bald eagle.\nNeeds($x, BaldEagle) >>> Sees($x, Lion) ::: If something needs the bald eagle then it sees the lion.\nKind($x, True) >>> Sees($x, Lion) ::: If something is kind then it sees the lion.\nBig($x, True) >>> Sees($x, Cat) ::: If something is big then it sees the cat.\nGreen($x, True) && Needs($x"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-428_Q17",
    "context": "The cat is rough. The mouse likes the rabbit. The mouse sees the rabbit. The rabbit sees the squirrel. The squirrel eats the cat. The squirrel eats the rabbit. The squirrel is red. All red people are young. If the squirrel is green and the squirrel likes the rabbit then the rabbit eats the mouse. If someone sees the cat and they like the squirrel then the squirrel sees the cat. If someone is young then they see the mouse. If someone eats the rabbit and they see the mouse then the mouse is red. If someone is cold then they eat the squirrel. If someone sees the rabbit and the rabbit is green then they are young. If someone likes the squirrel and they are red then they are young. If someone sees the squirrel and the squirrel sees the mouse then they like the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not eat the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nRough(Cat, True) ::: The cat is rough.\nLikes(Mouse, Rabbit, True) ::: The mouse likes the rabbit.\nSees(Mouse, Rabbit, True) ::: The mouse sees the rabbit.\nSees(Rabbit, Squirrel, True) ::: The rabbit sees the squirrel.\nEats(Squirrel, Cat, True) ::: The squirrel eats the cat.\nEats(Squirrel, Rabbit, True) ::: The squirrel eats the rabbit.\nRed(Squirrel, True) ::: The squirrel is red.\nYoung(Squirrel, True) ::: All red people are young.\nIf(Squirrel, Green, Squirrel, Likes, Rabbit, Rabbit, Eats, Mouse) ::: If the squirrel is green and the squirrel likes the rabbit then the rabbit eats the mouse.\nIf(Mouse, Sees, Cat, Squirrel, Likes, Rabbit, Rabbit, Sees, Mouse) ::: If someone sees the cat and they like the squirrel then the squirrel sees the cat.\nIf(Mouse, Young, Sees, Rabbit, Rabbit, Green) ::: If someone sees the rabbit and the rabbit is green then they are young.\nIf(Mouse, Red, Likes, Squirrel, Squirrel, Young) ::: If someone likes the squirrel and they are red then they are young.\nIf(Mouse, Sees"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1057_Q5",
    "context": "Bob is kind. Bob is quiet. Bob is white. Charlie is quiet. Erin is furry. Erin is quiet. Erin is white. Fiona is blue. Fiona is furry. Fiona is kind. Fiona is quiet. All kind, rough people are furry. Green, furry people are quiet. If someone is rough then they are kind. If someone is quiet and kind then they are rough. If someone is white then they are quiet. If someone is blue and white then they are kind. If someone is white then they are blue. If Charlie is quiet then Charlie is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nQuiet(Bob, True) ::: Bob is quiet.\nWhite(Bob, True) ::: Bob is white.\nQuiet(Charlie, True) ::: Charlie is quiet.\nFurry(Erin, True) ::: Erin is furry.\nQuiet(Erin, True) ::: Erin is quiet.\nWhite(Erin, True) ::: Erin is white.\nBlue(Fiona, True) ::: Fiona is blue.\nFurry(Fiona, True) ::: Fiona is furry.\nKind(Fiona, True) ::: Fiona is kind.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nKind($x, True) >>> Rough($x, True) ::: All kind, rough people are furry.\nGreen($x, True) >>> Furry($x, True) ::: Green, furry people are quiet.\nRough($x, True) >>> Kind($x, True) ::: If someone is rough then they are kind.\nQuiet($x, True) && Kind($x, True) >>> Rough($x, True) ::: If someone is quiet and kind then they are rough.\nWhite($x, True) >>> Quiet($x, True) ::: If someone is white then they are quiet.\nBlue($x, True) >>> White($x, True) ::: If someone is blue and white then they are kind.\nWhite($x, True) >>> Blue($x, True) ::: If someone is white then they are blue.\nCharlie(Quiet($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-983_Q7",
    "context": "Charlie is blue. Charlie is quiet. Dave is blue. Dave is cold. Dave is young. Erin is blue. Erin is quiet. Erin is white. Erin is young. Gary is cold. Gary is quiet. Gary is young. All quiet things are furry. If Charlie is cold then Charlie is young. White things are cold. All young things are nice. If Gary is nice then Gary is young. If something is young then it is nice. If something is furry and blue then it is white. If something is young and furry then it is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nFacts:\nQuiet(Charlie, True) ::: Charlie is quiet.\nBlue(Charlie, True) ::: Charlie is blue.\nQuiet(Dave, True) ::: Dave is quiet.\nBlue(Dave, True) ::: Dave is blue.\nYoung(Dave, True) ::: Dave is young.\nBlue(Erin, True) ::: Erin is blue.\nQuiet(Erin, True) ::: Erin is quiet.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nCold(Gary, True) ::: Gary is cold.\nQuiet(Gary, True) ::: Gary is quiet.\nYoung(Gary, True) ::: Gary is young.\nRules:\nQuiet($x, True) >>> Furry($x, True) ::: All quiet things are furry.\nCold(Charlie, True) >>> Young(Charlie, True) ::: If Charlie is cold then Charlie is young.\nWhite($x, True) >>> Cold($x, True) ::: White things are cold.\nYoung($x, True) >>> Nice($x, True) ::: All young things are nice.\nNice(Gary, True) >>> Young(Gary, True) ::: If Gary is nice then Gary is young.\nNice($x, True) >>> Young($x, True) ::: If something is young then it is nice.\nFurry($x, True) && Blue($x, True) >>> White($x, True) ::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-107_Q6",
    "context": "Charlie is cold. Charlie is furry. Charlie is red. Charlie is rough. Charlie is smart. Dave is furry. Dave is rough. Fiona is kind. Fiona is young. Harry is red. If something is rough then it is cold. All smart things are red. All kind things are rough. All red, kind things are rough. If Dave is cold and Dave is young then Dave is kind. Cold, young things are furry. Cold, furry things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nFurry(Charlie, True) ::: Charlie is furry.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nSmart(Charlie, True) ::: Charlie is smart.\nFurry(Dave, True) ::: Dave is furry.\nRough(Dave, True) ::: Dave is rough.\nKind(Fiona, True) ::: Fiona is kind.\nYoung(Fiona, True) ::: Fiona is young.\nRed(Harry, True) ::: Harry is red.\nRules:\nRough($x, True) >>> Cold($x, True) ::: If something is rough then it is cold.\nRed($x, True) >>> Smart($x, True) ::: All smart things are red.\nRough($x, True) >>> Kind($x, True) ::: All kind things are rough.\nRed($x, True) && Kind($x, True) >>> Rough($x, True) ::: All red, kind things are rough.\nCold($x, True) && Young($x, True) >>> Furry($x, True) ::: Cold, young things are furry.\nCold($x, True) && Furry($x, True) >>> Smart($x, True) ::: Cold, furry things are smart.\nDave(Cold($x, True) && Young($x, True)) >>> Kind($x, True) ::: If Dave is cold and Dave is young then Dave is kind.\nQuery:\nNot(Cold(Fiona, True)) ::: Fiona is not cold.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-272_Q14",
    "context": "The bald eagle likes the dog. The bald eagle sees the dog. The bear likes the dog. The dog is green. The dog sees the bald eagle. The dog sees the bear. The squirrel sees the bear. If someone is kind then they visit the bald eagle. If the dog is nice and the dog is cold then the dog sees the squirrel. If someone visits the bald eagle and they are kind then the bald eagle is green. If someone likes the bald eagle and the bald eagle is green then they like the dog. If someone is rough and they like the bear then they visit the bald eagle. Green people are kind. If someone visits the bald eagle then the bald eagle sees the dog. If the dog sees the squirrel and the squirrel is rough then the squirrel likes the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear visits the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nVisit($x, $y, bool) ::: Does x visit y?\nLike($x, $y, bool) ::: Does x like y?\nSee($x, $y, bool) ::: Does x see y?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nFacts:\nKind(BaldEagle, True) ::: The bald eagle is kind.\nVisit(BaldEagle, Dog, True) ::: The bald eagle visits the dog.\nSee(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nLike(BaldEagle, Dog, True) ::: The bald eagle likes the dog.\nSee(BaldEagle, Bear, True) ::: The bald eagle sees the bear.\nSee(Dog, BaldEagle, True) ::: The dog sees the bald eagle.\nSee(Dog, Bear, True) ::: The dog sees the bear.\nSee(Squirrel, Bear, True) ::: The squirrel sees the bear.\nRules:\nKind($x, True) >>> Green($x, True) ::: Green people are kind.\nLike($x, $y, True) >>> Visit($x, $y, True) ::: If someone likes the bald eagle and the bald eagle is green then they like the dog.\nLike($x, $y, True) && Green($y, True) >>> Like($x, $y, True) ::: If someone likes the bald eagle and the bald eagle is green then they like the dog.\nKind($x, True) >>> Visit($x, BaldEagle, True) ::: If someone is kind then they visit the bald eagle.\nLike($x, $y, True) && See($x, $y, True) >>> Like($x, $y, True) ::: If the dog sees the squirrel and the squirrel is rough then the squirrel likes the bald e"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1229_Q6",
    "context": "Anne is cold. Anne is white. Bob is nice. Bob is white. Dave is blue. Gary is blue. Gary is smart. All blue people are smart. If someone is smart then they are cold. If someone is white then they are quiet. If someone is nice and quiet then they are blue. All white, furry people are blue. If Gary is furry then Gary is cold. If Bob is not white then Bob is smart. All cold, blue people are not furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nWhite($x, bool) ::: Is x white?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nRules:\nCold($x, True) >>> White($x, True) ::: If someone is cold then they are white.\nWhite($x, True) >>> Quite($x, True) ::: If someone is white then they are quiet.\nNice($x, True) && Quite($x, True) >>> Blue($x, True) ::: If someone is nice and quiet then they are blue.\nBlue($x, True) >>> Furry($x, True) ::: All white, furry people are blue.\nSmart($x, True) >>> Cold($x, True) ::: If someone is smart then they are cold.\nBlue($x, True) >>> Smart($x, True) ::: All blue people are smart.\nFurry($x, True) >>> Cold($x, True) ::: If Gary is furry then Gary is cold.\nNot(White($x, True)) >>> Smart($x, True) ::: If Bob is not white then Bob is smart.\nNot(Furry($x, True)) >>> Cold($x, True) ::: All cold, blue people are not furry.\nFacts:\nCold(Anne, True) ::: Anne is cold.\nWhite(Anne, True) ::: Anne is white.\nNice(Bob, True) ::: Bob is nice.\nWhite(Bob, True) ::: Bob is white.\nBlue(Dave, True) ::: Dave is blue.\nBlue(Gary, True) ::: Gary is blue.\nSmart(Gary, True) ::: Gary is smart.\nQuery:\nNot(Blue(Bob, True)) ::: Bob is not blue.\n------\nProblem:\nAnne is cold. Anne is white. Bob is nice. Bob is white. Dave is blue. Gary is blue. Gary is smart"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-329_Q7",
    "context": "The bald eagle is cold. The bald eagle is rough. The bald eagle needs the tiger. The bald eagle visits the squirrel. The lion is cold. The lion is kind. The lion needs the tiger. The squirrel chases the bald eagle. The squirrel chases the tiger. The squirrel visits the tiger. The tiger is red. If someone needs the squirrel then they chase the tiger. If someone is rough and they chase the squirrel then the squirrel visits the lion. If someone visits the tiger and they visit the lion then the lion needs the bald eagle. If someone visits the bald eagle and the bald eagle visits the squirrel then the bald eagle chases the squirrel. If someone is red then they chase the lion. If someone chases the lion and they visit the bald eagle then they need the bald eagle. If someone visits the bald eagle then they need the bald eagle. If someone chases the lion then they visit the bald eagle. If someone chases the tiger then the tiger chases the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle chases the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nFacts:\nCold(BaldEagle, True) ::: The bald eagle is cold.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nNeeds(BaldEagle, Tiger, True) ::: The bald eagle needs the tiger.\nVisits(BaldEagle, Squirrel, True) ::: The bald eagle visits the squirrel.\nCold(Lion, True) ::: The lion is cold.\nKind(Lion, True) ::: The lion is kind.\nNeeds(Lion, Tiger, True) ::: The lion needs the tiger.\nChases(Squirrel, BaldEagle, True) ::: The squirrel chases the bald eagle.\nChases(Squirrel, Tiger, True) ::: The squirrel chases the tiger.\nVisits(Squirrel, Tiger, True) ::: The squirrel visits the tiger.\nRed(Tiger, True) ::: The tiger is red.\nRules:\nNeeds($x, $y, True) >>> Chases($x, $y, True) ::: If someone needs the squirrel then they chase the tiger.\nRough($x, True) && Chases($x, Squirrel, True) >>> Visits($x, Lion, True) ::: If someone is rough and they chase the squirrel then the squirrel visits the lion.\nVisits($x, Tiger) && Visits($x, Lion) >>> Needs($x, BaldEagle, True) ::: If someone visits the tiger and they visit the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-836_Q16",
    "context": "Anne is young. Bob is red. Bob is rough. Erin is green. Erin is kind. Gary is kind. Gary is round. If Anne is red and Anne is young then Anne is quiet. Round things are kind. If something is green and red then it is rough. If something is round then it is quiet. If something is young then it is round. Kind, red things are young. All red, round things are young. If something is round and quiet then it is green. All red, rough things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nYoung(Anne, True) ::: Anne is young.\nRed(Bob, True) ::: Bob is red.\nRough(Bob, True) ::: Bob is rough.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::: Erin is kind.\nKind(Gary, True) ::: Gary is kind.\nRound(Gary, True) ::: Gary is round.\nRules:\nYoung($x, True) >>> Red($x, True) && Young($x, True) >>> Quiet($x, True) ::: If Anne is red and Anne is young then Anne is quiet.\nRound($x, True) >>> Kind($x, True) ::: Round things are kind.\nGreen($x, True) && Red($x, True) >>> Rough($x, True) ::: If something is green and red then it is rough.\nRound($x, True) >>> Quiet($x, True) ::: If something is round then it is quiet.\nYoung($x, True) >>> Round($x, True) ::: If something is young then it is round.\nKind($x, True) && Red($x, True) >>> Young($x, True) ::: Kind, red things are young.\nRed($x, True) && Round($x, True) >>> Young($x, True) ::: All red, round things are young.\nRound($x, True) && Quiet($x, True) >>> Green($x, True) ::: If something is round and quiet then it is green.\nRed($x, True) && Rough($x, True) >>> Kind($x, True) ::: All red, rough things are"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-692_Q4",
    "context": "Charlie is quiet. Dave is big. Dave is red. Dave is smart. Dave is young. Erin is big. Erin is blue. Erin is quiet. Erin is smart. Harry is big. Harry is furry. Harry is young. Blue people are red. If someone is quiet then they are big. If someone is furry then they are quiet. All quiet, big people are furry. If someone is young then they are blue. If someone is young then they are quiet. If Erin is furry then Erin is young. Blue people are quiet. If someone is furry then they are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFurry($x, bool) ::: Is x furry?\nBlue($x, bool) ::: Is x blue?\nFacts:\nQuite(Charlie, True) ::: Charlie is quiet.\nBig(Dave, True) ::: Dave is big.\nRed(Dave, True) ::: Dave is red.\nSmart(Dave, True) ::: Dave is smart.\nYoung(Dave, True) ::: Dave is young.\nBig(Erin, True) ::: Erin is big.\nBlue(Erin, True) ::: Erin is blue.\nQuite(Erin, True) ::: Erin is quiet.\nSmart(Erin, True) ::: Erin is smart.\nBig(Harry, True) ::: Harry is big.\nFurry(Harry, True) ::: Harry is furry.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBlue($x, True) >>> Red($x, True) ::: Blue people are red.\nQuite($x, True) >>> Big($x, True) ::: If someone is quiet then they are big.\nFurry($x, True) >>> Quite($x, True) ::: If someone is furry then they are quiet.\nQuite($x, True) && Big($x, True) >>> Furry($x, True) ::: All quiet, big people are furry.\nYoung($x, True) >>> Blue($x, True) ::: If someone is young then they are blue.\nYoung($x, True) >>> Quite($x, True) ::: If someone is young then they are quiet.\nIf Erin is furry then Erin is young ::: If Erin is furry then Erin is young.\nBlue($x, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-940_Q9",
    "context": "The bald eagle is kind. The bald eagle is not red. The bald eagle likes the dog. The dog needs the lion. The lion does not need the bald eagle. The mouse likes the dog. The mouse does not see the dog. If someone needs the mouse then the mouse does not see the bald eagle. If someone needs the dog then the dog needs the lion. If someone is rough then they see the mouse. If someone sees the mouse then the mouse is kind. If someone needs the lion then they do not see the bald eagle. If someone sees the dog then they need the mouse. All kind people are rough. If someone sees the mouse then they like the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nRough($x, bool) ::: Is x rough?\nFacts:\nKind(BaldEagle, True) ::: The bald eagle is kind.\nNot(Red(BaldEagle, True)) ::: The bald eagle is not red.\nLikes(BaldEagle, Dog, True) ::: The bald eagle likes the dog.\nNeeds(Dog, Lion, True) ::: The dog needs the lion.\nNot(Needs(Lion, BaldEagle, True)) ::: The lion does not need the bald eagle.\nLikes(Mouse, Dog, True) ::: The mouse likes the dog.\nNot(Sees(Mouse, Dog, True)) ::: The mouse does not see the dog.\nNot(Sees(Mouse, BaldEagle, True)) ::: If someone needs the mouse then the mouse does not see the bald eagle.\nNeeds(Dog, Lion, True) ::: If someone needs the dog then the dog needs the lion.\nRough(Mouse, True) ::: If someone sees the mouse then they see the mouse.\nSees(Mouse, BaldEagle, True) ::: If someone sees the mouse then the mouse is kind.\nNot(Needs(Lion, BaldEagle, True)) ::: If someone needs the lion then they do not see the bald eagle.\nSees(Dog, Mouse, True) ::: If someone sees the dog then they need the mouse.\nAll(Kind($x, True) >>> Rough($x, True)) ::: All kind people are rough.\nSees(Mouse, Lion, True) ::: If someone sees the mouse then they like the lion.\nQuery:\nRough(Mouse, True) ::: The mouse is rough.\n------\nProblem:\nThe dog"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-427_Q11",
    "context": "The bald eagle eats the tiger. The bald eagle is red. The bald eagle likes the rabbit. The bear eats the bald eagle. The bear is rough. The rabbit eats the tiger. The tiger eats the bald eagle. The tiger eats the rabbit. The tiger is kind. The tiger likes the bear. If someone is cold then they see the rabbit. If someone sees the tiger and the tiger is kind then they see the bald eagle. If the rabbit is red and the rabbit is rough then the rabbit likes the bear. If someone sees the rabbit then the rabbit eats the bald eagle. If someone eats the bald eagle then they are cold. If someone sees the bald eagle and they eat the bear then they like the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit sees the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nRules:\nEats(BaldEagle, Tiger, True) ::: The bald eagle eats the tiger.\nRed(BaldEagle, True) ::: The bald eagle is red.\nLikes(BaldEagle, Rabbit, True) ::: The bald eagle likes the rabbit.\nEats(Bear, BaldEagle, True) ::: The bear eats the bald eagle.\nRough(Bear, True) ::: The bear is rough.\nEats(Rabbit, Tiger, True) ::: The rabbit eats the tiger.\nEats(Tiger, BaldEagle, True) ::: The tiger eats the bald eagle.\nEats(Tiger, Rabbit, True) ::: The tiger eats the rabbit.\nKind(Tiger, True) ::: The tiger is kind.\nLikes(Tiger, Bear, True) ::: The tiger likes the bear.\nCold($x, True) >>> Sees($x, Rabbit, True) ::: If someone is cold then they see the rabbit.\nSees(Tiger, BaldEagle, True) >>> Kind(Tiger, True) ::: If someone sees the tiger and the tiger is kind then they see the bald eagle.\nRed($x, True) && Rough($x, True) >>> Likes($x, Bear, True) ::: If the rabbit is red and the rabbit is rough then the rabbit likes the bear.\nSees($x, Rabbit, True) >>> Eats($x, BaldEagle, True) ::: If someone sees the rabbit"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-165_Q11",
    "context": "Anne is furry. Anne is nice. Anne is rough. Anne is white. Erin is furry. Erin is rough. Erin is white. Fiona is big. Fiona is nice. Fiona is round. Harry is nice. Harry is rough. All furry things are white. If Harry is red then Harry is round. All round, red things are furry. If Harry is rough then Harry is round. Nice, red things are big. Round, red things are white. All nice, white things are red. If something is round then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nNice(Anne, True) ::: Anne is nice.\nRough(Anne, True) ::: Anne is rough.\nWhite(Anne, True) ::: Anne is white.\nFurry(Erin, True) ::: Erin is furry.\nRough(Erin, True) ::: Erin is rough.\nWhite(Erin, True) ::: Erin is white.\nBig(Fiona, True) ::: Fiona is big.\nNice(Fiona, True) ::: Fiona is nice.\nRound(Fiona, True) ::: Fiona is round.\nNice(Harry, True) ::: Harry is nice.\nRough(Harry, True) ::: Harry is rough.\nRules:\nFurry($x, True) >>> White($x, True) ::: All furry things are white.\nHarry($x, True) >>> Red($x, True) ::: If Harry is red then Harry is round.\nRed($x, True) >>> Furry($x, True) ::: All round, red things are furry.\nRough($x, True) >>> Round($x, True) ::: If Harry is rough then Harry is round.\nNice($x, True) >>> Red($x, True) ::: Nice, red things are big.\nRed($x, True) >>> White($x, True) ::: Round, red things are white.\nRed($x, True) >>> Nice($x, True) ::: All nice, white things are red.\nRound($x, True) >>> Furry($x, True) ::: If something"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-572_Q4",
    "context": "Charlie is green. Charlie is kind. Charlie is nice. Charlie is rough. Erin is kind. Erin is nice. Erin is quiet. Fiona is quiet. Fiona is rough. Harry is smart. All rough, green people are quiet. If someone is green and rough then they are nice. All kind, smart people are green. If Erin is green and Erin is blue then Erin is quiet. All quiet people are smart. All kind people are green. If someone is smart then they are kind. All rough, nice people are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nGreen(Charlie, True) ::: Charlie is green.\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nRough(Charlie, True) ::: Charlie is rough.\nKind(Erin, True) ::: Erin is kind.\nNice(Erin, True) ::: Erin is nice.\nQuiet(Erin, True) ::: Erin is quiet.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nRough($x, True) && Green($x, True) >>> Quiet($x, True) ::: All rough, green people are quiet.\nGreen($x, True) && Rough($x, True) >>> Nice($x, True) ::: If someone is green and rough then they are nice.\nKind($x, True) && Smart($x, True) >>> Green($x, True) ::: All kind, smart people are green.\nGreen($x, True) && Erin($x, True) && Erin($x, True) >>> Quiet($x, True) ::: If Erin is green and Erin is blue then Erin is quiet.\nQuiet($x, True) >>> Smart($x, True) ::: All quiet people are smart.\nKind($x, True) >>> Green($x, True) ::: All kind people are green.\nKind($x, True) >>> Smart($x, True) ::: If someone is smart then they are kind.\nRough($x, True) && Nice($x, True) >>> Blue($x"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-109_Q13",
    "context": "Anne is green. Anne is rough. Bob is green. Bob is round. Dave is green. Dave is rough. Fiona is cold. All kind things are furry. Green things are round. If something is cold then it is kind. If something is furry then it is green. If Dave is quiet then Dave is not furry. Round things are not quiet. If something is quiet and not kind then it is not rough. All round, cold things are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nRound(Anne, True) ::: Anne is round.\nGreen(Bob, True) ::: Bob is green.\nRound(Bob, True) ::: Bob is round.\nGreen(Dave, True) ::: Dave is green.\nRound(Dave, True) ::: Dave is round.\nCold(Fiona, True) ::: Fiona is cold.\nKind(Fiona, True) ::: Fiona is kind.\nRules:\nFurry($x, True) >>> Green($x, True) ::: If something is furry then it is green.\nGreen($x, True) >>> Round($x, True) ::: Green things are round.\nCold($x, True) >>> Kind($x, True) ::: If something is cold then it is kind.\nKind($x, True) >>> Furry($x, True) ::: If something is kind then it is furry.\nQuiet($x, True) >>> Not(Furry($x, True)) ::: If Dave is quiet then Dave is not furry.\nRound($x, True) >>> Not(Quiet($x, True)) ::: Round things are not quiet.\nQuiet($x, True) && Not(Kind($x, True)) >>> Not(Rough($x, True)) ::: If something is quiet and not kind then it is not rough.\nGreen($x, True) && Round($x, True) && Cold($x, True) >>> Rough($x, True) ::: All round, cold things are rough.\nQuery:\nNot(Kind(Bob, True)) ::: Bob is not kind.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-528_Q6",
    "context": "Charlie is big. Dave is nice. Dave is round. Erin is big. Erin is nice. Fiona is red. Fiona is rough. If someone is red and big then they are nice. If Dave is round and Dave is rough then Dave is big. If someone is round and young then they are big. All nice people are young. If Charlie is round and Charlie is big then Charlie is young. If someone is red then they are big. All rough, green people are round. If someone is big then they are red. Young people are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Charlie, True) ::: Charlie is big.\nNice(Dave, True) ::: Dave is nice.\nRound(Dave, True) ::: Dave is round.\nBig(Erin, True) ::: Erin is big.\nNice(Erin, True) ::: Erin is nice.\nRed(Fiona, True) ::: Fiona is red.\nRough(Fiona, True) ::: Fiona is rough.\nRules:\nRed($x, True) && Big($x, True) >>> Nice($x, True) ::: If someone is red and big then they are nice.\nRound($x, True) && Rough($x, True) >>> Big($x, True) ::: If Dave is round and Dave is rough then Dave is big.\nRound($x, True) && Young($x, True) >>> Big($x, True) ::: If someone is round and young then they are big.\nNice($x, True) >>> Young($x, True) ::: All nice people are young.\nRound($x, True) && Big($x, True) >>> Young($x, True) ::: If Charlie is round and Charlie is big then Charlie is young.\nRed($x, True) >>> Big($x, True) ::: If someone is red then they are big.\nGreen($x, True) >>> Round($x, True) ::: All rough, green people are round.\nBig($x, True) >>> Red($x, True) ::: If someone is big then they are red.\nYoung($x, True) >>> Green($x, True) ::: Young people are green.\nQuery:\nNice(Fiona, False) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-668_Q8",
    "context": "The bald eagle chases the lion. The bald eagle chases the rabbit. The bald eagle is big. The cow needs the bald eagle. The cow needs the rabbit. The lion chases the cow. The lion chases the rabbit. The lion is kind. The lion is not round. The lion needs the bald eagle. The lion does not visit the cow. The lion visits the rabbit. The rabbit chases the bald eagle. The rabbit visits the bald eagle. If someone needs the rabbit then the rabbit chases the lion. If someone is rough and they do not chase the rabbit then they visit the bald eagle. If someone chases the lion then they do not need the cow. If someone needs the bald eagle and the bald eagle chases the cow then the bald eagle is not round. If someone chases the bald eagle and they do not need the cow then they visit the cow. If someone needs the rabbit and the rabbit visits the cow then the rabbit is big. If someone is big then they do not visit the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not visit the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nChases(BaldEagle, Lion, True) ::: The bald eagle chases the lion.\nChases(BaldEagle, Rabbit, True) ::: The bald eagle chases the rabbit.\nBig(BaldEagle, True) ::: The bald eagle is big.\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\nNeeds(Cow, Rabbit, True) ::: The cow needs the rabbit.\nChases(Lion, Cow, True) ::: The lion chases the cow.\nChases(Lion, Rabbit, True) ::: The lion chases the rabbit.\nKind(Lion, True) ::: The lion is kind.\nNot(Round(Lion, True)) ::: The lion is not round.\nNeeds(Lion, BaldEagle, True) ::: The lion needs the bald eagle.\nNot(Visits(Lion, Cow, True)) ::: The lion does not visit the cow.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nChases(Rabbit, BaldEagle, True) ::: The rabbit chases the bald eagle.\nVisits(Rabbit, BaldEagle, True) ::: The rabbit visits the bald eagle.\nIf(Needs(x, Rabbit, True), Chases(x, Lion, True)) ::: If someone needs the rabbit then the rabbit chases the lion.\nIf(Rough(x, True) && Not(Chases(x, Rabbit, True)), Visits"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-856_Q12",
    "context": "The bald eagle needs the lion. The bald eagle visits the lion. The lion is not cold. The lion does not like the tiger. The lion visits the tiger. The squirrel is kind. The squirrel is young. The squirrel likes the tiger. The squirrel does not need the lion. The squirrel visits the bald eagle. The tiger is cold. The tiger visits the bald eagle. If something visits the bald eagle then it is big. If something is big then it needs the squirrel. If something visits the squirrel and it visits the lion then it needs the squirrel. If something needs the squirrel then it is green. If something is young then it needs the tiger. Green things are young. If something is big and it visits the lion then the lion needs the squirrel. If the squirrel is big and the squirrel does not like the tiger then the tiger is not big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not need the tiger.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nIsKind($x, bool) ::: Is x kind?\nIsYoung($x, bool) ::: Is x young?\nIsBig($x, bool) ::: Is x big?\nIsGreen($x, bool) ::: Is x green?\nIsCold($x, bool) ::: Is x cold?\nFacts:\nVisits(BaldEagle, Lion, True) ::: The bald eagle visits the lion.\nVisits(Lion, Tiger, True) ::: The lion visits the tiger.\nNot(Cold(Lion, True)) ::: The lion is not cold.\nNot(Likes(Lion, Tiger, True)) ::: The lion does not like the tiger.\nVisits(Squirrel, Tiger, True) ::: The squirrel visits the tiger.\nKind(Squirrel, True) ::: The squirrel is kind.\nYoung(Squirrel, True) ::: The squirrel is young.\nLikes(Squirrel, Tiger, True) ::: The squirrel likes the tiger.\nNot(Needs(Squirrel, Lion, True)) ::: The squirrel does not need the lion.\nVisits(Squirrel, BaldEagle, True) ::: The squirrel visits the bald eagle.\nCold(Tiger, True) ::: The tiger is cold.\nVisits(Tiger, BaldEagle, True) ::: The tiger visits the bald eagle.\nBig(x, True) >>> Visits(x, Lion, True) ::: If something visits the bald eagle then it is big.\nBig(x, True) >>> Needs(x, Squirrel, True) ::: If something is big then it needs the squirrel.\nVisits(x, Squirrel) && Visits(x, Lion) >>> Needs"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-891_Q18",
    "context": "Bob is green. Bob is kind. Charlie is green. Charlie is not smart. Erin is not young. Fiona is nice. Fiona is young. Green, smart things are quiet. If something is kind then it is green. Smart things are young. Young things are kind. Quiet things are furry. All quiet, nice things are furry. Nice, green things are smart. If Bob is kind and Bob is not green then Bob is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is furry.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nKind(Bob, True) ::: Bob is kind.\nGreen(Charlie, True) ::: Charlie is green.\nSmart(Charlie, False) ::: Charlie is not smart.\nYoung(Erin, False) ::: Erin is not young.\nNice(Fiona, True) ::: Fiona is nice.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nGreen($x, True) && Smart($x, True) >>> Quiet($x, True) ::: Green, smart things are quiet.\nKind($x, True) >>> Green($x, True) ::: If something is kind then it is green.\nSmart($x, True) >>> Young($x, True) ::: Smart things are young.\nYoung($x, True) >>> Kind($x, True) ::: Young things are kind.\nQuiet($x, True) && Nice($x, True) >>> Furry($x, True) ::: Quiet, nice things are furry.\nGreen($x, True) && Nice($x, True) >>> Smart($x, True) ::: Nice, green things are smart.\nKind($x, True) && Not(Green($x, True)) >>> Furry($x, True) ::: If Bob is kind and Bob is not green then Bob is furry.\nQuery:\nFurry(Bob, True) ::: Bob is furry.\n------\nProblem:\nBob is green. Bob is kind. Charlie is green. Charlie is not smart. Erin is not young. Fiona is nice. Fiona is young. Green"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-735_Q12",
    "context": "Bob is big. Bob is nice. Bob is smart. Charlie is nice. Dave is nice. Erin is big. Erin is blue. Erin is furry. Erin is quiet. Erin is round. Erin is smart. All nice things are big. All furry things are blue. Blue, furry things are quiet. If something is round and nice then it is blue. If Bob is round then Bob is blue. Big, quiet things are furry. If something is blue and furry then it is smart. If Charlie is nice and Charlie is big then Charlie is quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(Bob, True) ::: Bob is big.\nNice(Bob, True) ::: Bob is nice.\nSmart(Bob, True) ::: Bob is smart.\nNice(Charlie, True) ::: Charlie is nice.\nNice(Dave, True) ::: Dave is nice.\nBig(Erin, True) ::: Erin is big.\nBlue(Erin, True) ::: Erin is blue.\nFurry(Erin, True) ::: Erin is furry.\nQuiet(Erin, True) ::: Erin is quiet.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nRules:\nNice($x, True) >>> Big($x, True) ::: All nice things are big.\nFurry($x, True) >>> Blue($x, True) ::: All furry things are blue.\nBlue($x, True) && Furry($x, True) >>> Quiet($x, True) ::: Blue, furry things are quiet.\nRound($x, True) && Nice($x, True) >>> Blue($x, True) ::: If something is round and nice then it is blue.\nBig($x, True) && Quiet($x, True) >>> Furry($x, True) ::: Big, quiet things are furry.\nFurry($x, True) && Blue($x, True) >>> Smart($x, True) ::: If something is blue and furry then it is smart.\nNice($x, True) && Big($x, True) && Charlie($x, True)"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-574_Q12",
    "context": "The bald eagle is not green. The bald eagle likes the cow. The bald eagle needs the cat. The cat is cold. The cat likes the cow. The cat needs the bald eagle. The cow eats the cat. The dog does not eat the cow. The dog is green. The dog likes the cow. The dog needs the bald eagle. All cold things are green. If something is cold then it needs the cow. If something is young then it needs the bald eagle. If something is young and cold then it eats the dog. If the bald eagle does not need the cat then the bald eagle likes the dog. If something eats the dog then the dog is cold. If something is cold then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not eat the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBaldEagle($x, bool) ::: Is x a bald eagle?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nFacts:\nBaldEagle(baldEagle, True) ::: The bald eagle is a bald eagle.\nGreen(dog, True) ::: The dog is green.\nLikes(baldEagle, cow, True) ::: The bald eagle likes the cow.\nNeeds(baldEagle, cat, True) ::: The bald eagle needs the cat.\nCold(cat, True) ::: The cat is cold.\nLikes(cat, cow, True) ::: The cat likes the cow.\nNeeds(cat, baldEagle, True) ::: The cat needs the bald eagle.\nEats(cow, cat, True) ::: The cow eats the cat.\nNot(eats(dog, cow), True) ::: The dog does not eat the cow.\nRules:\nNot(BaldEagle(x), True) >>> Green(x, True) ::: The bald eagle is not green.\nNot(Likes(x, y), True) >>> Needs(x, y, True) ::: If something is cold then it needs the cow.\nNot(Needs(x, y), True) >>> Likes(x, z, True) ::: If the bald eagle does not need the cat then the bald eagle likes the dog.\nNot(Eats(x, y), True) >>> Cold(x, True) ::: If something eats the dog then the dog is cold.\nNot(Cold(x), True) >>> Young(x, True) ::: If something is cold then it is young.\nYoung(x, True) >>> Needs("
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-586_Q11",
    "context": "Erin is smart. Fiona is quiet. Gary is blue. Gary is kind. Gary is quiet. Gary is red. Harry is smart. If Harry is smart then Harry is kind. Quiet, smart things are blue. If something is green and smart then it is not blue. Kind things are quiet. All blue, green things are smart. Red things are furry. If Harry is smart and Harry is blue then Harry is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRules:\nSmart($x, True) >>> Quiet($x, True) ::: Quiet, smart things are blue.\nSmart($x, True) >>> Blue($x, True) ::: Quiet, smart things are blue.\nSmart($x, True) >>> Kind($x, True) ::: If Harry is smart then Harry is kind.\nGreen($x, True) >>> Smart($x, True) ::: If something is green and smart then it is not blue.\nKind($x, True) >>> Quiet($x, True) ::: Kind things are quiet.\nAll($x, True) >>> Smart($x, True) ::: All blue, green things are smart.\nRed($x, True) >>> Furry($x, True) ::: Red things are furry.\nSmart($x, True) && Blue($x, True) >>> Red($x, True) ::: If Harry is smart and Harry is blue then Harry is red.\nFacts:\nSmart(Erin, True) ::: Erin is smart.\nQuiet(Fiona, True) ::: Fiona is quiet.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nSmart(Harry, True) ::: Harry is smart.\nQuery:\nFurry(Harry, True) ::: Harry is furry.\n------\nProblem:\nErin is furry. Erin is green. Erin is quiet. Erin is red. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-933_Q12",
    "context": "Anne is cold. Anne is round. Bob is big. Charlie is cold. Charlie is nice. Charlie is round. Charlie is young. Erin is nice. Erin is not rough. Erin is round. If Charlie is cold then Charlie is not quiet. If someone is cold and quiet then they are not big. All young, quiet people are not big. Cold, big people are round. If Bob is round then Bob is nice. If someone is nice and young then they are rough. Big people are young. Young people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nRound(Anne, True) ::: Anne is round.\nBig(Bob, True) ::: Bob is big.\nCold(Charlie, True) ::: Charlie is cold.\nNice(Charlie, True) ::: Charlie is nice.\nRound(Charlie, True) ::: Charlie is round.\nYoung(Charlie, True) ::: Charlie is young.\nNice(Erin, True) ::: Erin is nice.\nNot(Rough(Erin, True)) ::: Erin is not rough.\nRound(Erin, True) ::: Erin is round.\nRules:\nIf Charlie is cold then Charlie is not quiet ::: If Charlie is cold then Charlie is not quiet.\nCold($x, True) && Quiet($x, True) >>> Not(Big($x, True)) ::: If someone is cold and quiet then they are not big.\nYoung($x, True) && Quiet($x, True) >>> Not(Big($x, True)) ::: All young, quiet people are not big.\nCold($x, True) && Big($x, True) >>> Round($x, True) ::: Cold, big people are round.\nBig($x, True) >>> Young($x, True) ::: Big people are young.\nYoung($x, True) >>> Cold($x, True) ::: Young people are cold.\nIf Bob is round then Bob is nice ::: If Bob is round then Bob is nice.\nNice($x, True) && Young($x, True) >>> Rough($x, True) ::: If someone is nice and young"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-358_Q5",
    "context": "The bear eats the cow. The cat eats the bear. The cat eats the cow. The cat is kind. The cat sees the cow. The cat visits the mouse. The cow eats the bear. The cow is big. The cow sees the cat. The cow visits the mouse. The mouse eats the bear. The mouse eats the cat. The mouse is kind. The mouse sees the cat. The mouse visits the cat. The mouse visits the cow. If someone is cold then they visit the bear. If someone visits the cat and the cat eats the mouse then they eat the cow. If someone visits the mouse then the mouse sees the cow. If the cow eats the cat then the cat is big. If someone visits the bear then the bear visits the mouse. If someone sees the cow then they eat the mouse. If someone visits the mouse then they are cold. If someone eats the cat and they are cold then the cat visits the bear. If someone sees the bear and they are rough then they see the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse eats the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nFacts:\nEats(Bear, Cow, True) ::: The bear eats the cow.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nEats(Cat, Cow, True) ::: The cat eats the cow.\nKind(Cat, True) ::: The cat is kind.\nSees(Cat, Cow, True) ::: The cat sees the cow.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nEats(Cow, Bear, True) ::: The cow eats the bear.\nBig(Cow, True) ::: The cow is big.\nSees(Cow, Cat, True) ::: The cow sees the cat.\nVisits(Cow, Mouse, True) ::: The cow visits the mouse.\nEats(Mouse, Bear, True) ::: The mouse eats the bear.\nEats(Mouse, Cat, True) ::: The mouse eats the cat.\nKind(Mouse, True) ::: The mouse is kind.\nSees(Mouse, Cat, True) ::: The mouse sees the cat.\nVisits(Mouse, Cat, True) ::: The mouse visits the cat.\nVisits(Mouse, Cow, True) ::: The mouse visits the cow.\nRules:\nCold($x, True) >>> Visits($x, Bear, True) ::: If someone is cold then they visit the bear.\nVisits($x, Cat) && Eats($x, Mouse) >>> Eats($x, Cow, True) ::: If someone visits the cat and the cat eats the mouse then they eat the cow.\nVisits($x, Mouse) >>> Sees($x, Cow,"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-398_Q21",
    "context": "The bald eagle is blue. The bald eagle is cold. The bald eagle needs the rabbit. The bear visits the lion. The lion is nice. The lion likes the bald eagle. The lion needs the bald eagle. The lion needs the rabbit. The lion visits the rabbit. The rabbit likes the bear. The rabbit needs the bald eagle. The rabbit needs the lion. The rabbit visits the bald eagle. The rabbit visits the bear. If someone visits the rabbit then they need the bear. If someone needs the rabbit then the rabbit likes the bear. If someone visits the bear and the bear needs the rabbit then they need the bear. If someone needs the bear then they need the rabbit. If the bear needs the lion and the bear likes the bald eagle then the bear visits the bald eagle. If someone is blue and they like the bald eagle then the bald eagle needs the rabbit. If someone likes the bear then the bear visits the rabbit. If the bald eagle likes the rabbit and the bald eagle visits the rabbit then the bald eagle needs the bear. If the rabbit likes the bear then the bear visits the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not like the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nFacts:\nBlue(BaldEagle, True) ::: The bald eagle is blue.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nNeeds(BaldEagle, Rabbit, True) ::: The bald eagle needs the rabbit.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nLikes(Lion, BaldEagle, True) ::: The lion likes the bald eagle.\nNeeds(Lion, BaldEagle, True) ::: The lion needs the bald eagle.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nLikes(Rabbit, Bear, True) ::: The rabbit likes the bear.\nNeeds(Rabbit, BaldEagle, True) ::: The rabbit needs the bald eagle.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nVisits(Rabbit, BaldEagle, True) ::: The rabbit visits the bald eagle.\nVisits(Rabbit, Bear, True) ::: The rabbit visits the bear.\nRules:\nVisits($x, $y, True) >>> Needs($x, $y, True) ::: If someone visits the rabbit then they need the bear.\nNeeds($x, $y, True) >>> Likes($y, $x, True) ::: If someone needs the rabbit then the rabbit likes the bear.\nNeeds($x, $y, True) && Visits($y, $z, True) >>> Needs($x, $z, True) ::: If someone visits the bear and the bear needs the rabbit then they need the bear.\nNeeds($x, $y, True) >>> Needs($y, $x, True) ::: If someone needs the bear then they need the rabbit.\nVisits($x, $y, True) && Likes($y, $z, True) >>> Visits($x, $z, True) ::: If the bear needs the lion and the bear likes the bald eagle then the bear visits the bald eagle.\nBlue($x, True) && Likes($x, $y, True) >>> Needs($y, $x, True) ::: If the bald eagle likes the rabbit and the bald eagle visits the rabbit then the bald eagle needs the bear.\nLikes($x, $y, True) && Visits($x, $y, True) >>> Likes($y, $x, True) ::: If the rabbit likes the bear then the bear visits the bald eagle.\nQuery:\nLikes(Bear, BaldEagle, False) ::: The bear does not like the bald eagle.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-668_Q14",
    "context": "The bald eagle chases the lion. The bald eagle chases the rabbit. The bald eagle is big. The cow needs the bald eagle. The cow needs the rabbit. The lion chases the cow. The lion chases the rabbit. The lion is kind. The lion is not round. The lion needs the bald eagle. The lion does not visit the cow. The lion visits the rabbit. The rabbit chases the bald eagle. The rabbit visits the bald eagle. If someone needs the rabbit then the rabbit chases the lion. If someone is rough and they do not chase the rabbit then they visit the bald eagle. If someone chases the lion then they do not need the cow. If someone needs the bald eagle and the bald eagle chases the cow then the bald eagle is not round. If someone chases the bald eagle and they do not need the cow then they visit the cow. If someone needs the rabbit and the rabbit visits the cow then the rabbit is big. If someone is big then they do not visit the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle visits the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nFacts:\nChases(BaldEagle, Lion, True) ::: The bald eagle chases the lion.\nChases(BaldEagle, Rabbit, True) ::: The bald eagle chases the rabbit.\nBig(BaldEagle, True) ::: The bald eagle is big.\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\nNeeds(Cow, Rabbit, True) ::: The cow needs the rabbit.\nChases(Lion, Cow, True) ::: The lion chases the cow.\nChases(Lion, Rabbit, True) ::: The lion chases the rabbit.\nKind(Lion, True) ::: The lion is kind.\nNot(Round(Lion, True)) ::: The lion is not round.\nNeeds(Lion, BaldEagle, True) ::: The lion needs the bald eagle.\nNot(Visits(Lion, Cow, True)) ::: The lion does not visit the cow.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nChases(Rabbit, BaldEagle, True) ::: The rabbit chases the bald eagle.\nVisits(Rabbit, BaldEagle, True) ::: The rabbit visits the bald eagle.\nRules:\nNeeds($x, $y, True) >>> Chases($x, $y, True) ::: If someone needs the rabbit then the rabbit chases the lion.\nRough($x, True) && Not(Chases($x, Rabbit, True)) >>> Visits($x, BaldEagle, True) ::: If someone is rough and they do not chase the rabbit then they visit the bald eagle.\nChases($x, Lion, True) >>> Not(Needs($x, Cow, True)) ::: If someone chases the lion then they do not need the cow.\nNeeds($x, BaldEagle, True) && Chases(BaldEagle, Cow, True) >>> Not(Round(BaldEagle, True)) ::: If someone needs the bald eagle and the bald eagle chases the cow then the bald eagle is not round.\nChases($x, BaldEagle, True) && Not(Needs($x, Cow, True)) >>> Visits($x, Cow, True) ::: If someone chases the bald eagle and they do not need the cow then they visit the cow.\nNeeds($x, Rabbit, True) && Visits($x, Cow, True) >>> Big(Rabbit, True) ::: If someone needs the rabbit and the rabbit visits the cow then the rabbit is big.\nBig($x, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-858_Q12",
    "context": "Anne is big. Anne is smart. Bob is cold. Gary is big. Gary is furry. Harry is not cold. Harry is green. All young people are cold. If someone is smart then they are young. If someone is furry then they are green. Green people are white. If someone is green and cold then they are white. If Harry is green and Harry is young then Harry is furry. Green people are furry. All cold people are furry. If Gary is green then Gary is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nSmart(Anne, True) ::: Anne is smart.\nCold(Bob, True) ::: Bob is cold.\nBig(Gary, True) ::: Gary is big.\nFurry(Gary, True) ::: Gary is furry.\nGreen(Harry, True) ::: Harry is green.\nNot(Cold(Harry, True)) ::: Harry is not cold.\nRules:\nYoung($x, True) >>> Cold($x, True) ::: All young people are cold.\nSmart($x, True) >>> Young($x, True) ::: If someone is smart then they are young.\nFurry($x, True) >>> Green($x, True) ::: If someone is furry then they are green.\nGreen($x, True) >>> White($x, True) ::: Green people are white.\nGreen($x, True) && Cold($x, True) >>> White($x, True) ::: If someone is green and cold then they are white.\nGreen($x, True) && Young($x, True) >>> Furry($x, True) ::: If Harry is green and Harry is young then Harry is furry.\nGreen($x, True) >>> Furry($x, True) ::: Green people are furry.\nCold($x, True) >>> Furry($x, True) ::: All cold people are furry.\nIf(Gary, Green(Gary, True), Furry(Gary, True)) ::: If Gary is green then Gary is furry.\nQuery:\nNot(White(Anne, True)) ::: Anne is not white.\n------\nProblem:\nAnne is big. Anne is smart. Bob is cold. Gary is big. Gary is furry. Harry is not cold. Harry is green. All young people are cold. If someone is smart then they are young. If someone is furry then they are green. Green people are white. If someone is green and cold then they are white. If Harry is green and Harry is young then Harry is furry. Green people are furry. All cold people are furry. If Gary is green then Gary is furry.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Anne is not white.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-983_Q24",
    "context": "The bald eagle chases the tiger. The bald eagle is cold. The bald eagle is rough. The dog chases the rabbit. The dog eats the rabbit. The rabbit chases the dog. The rabbit is round. The tiger chases the dog. The tiger eats the rabbit. The tiger is cold. If someone visits the dog and the dog eats the bald eagle then the bald eagle is green. If someone is red then they chase the rabbit. If someone eats the dog then they eat the rabbit. If someone chases the rabbit and the rabbit is green then they are green. If someone is green then they eat the dog. If someone visits the bald eagle and they are round then the bald eagle is green. If someone visits the rabbit and they eat the bald eagle then they eat the dog. If someone chases the dog then they visit the bald eagle. If someone is rough and they eat the rabbit then they eat the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog visits the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nRules:\nChases(BaldEagle, Tiger, True) ::: The bald eagle chases the tiger.\nCold(BaldEagle, True) ::: The bald eagle is cold.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nChases(Dog, Rabbit, True) ::: The dog chases the rabbit.\nEats(Dog, Rabbit, True) ::: The dog eats the rabbit.\nChases(Rabbit, Dog, True) ::: The rabbit chases the dog.\nRound(Rabbit, True) ::: The rabbit is round.\nChases(Tiger, Dog, True) ::: The tiger chases the dog.\nEats(Tiger, Rabbit, True) ::: The tiger eats the rabbit.\nCold(Tiger, True) ::: The tiger is cold.\nVisits(Dog, BaldEagle, True) >>> Green(BaldEagle, True) ::: If someone visits the dog and the dog eats the bald eagle then the bald eagle is green.\nRed($x, True) >>> Chases($x, Rabbit, True) ::: If someone is red then they chase the rabbit.\nEats($x, Dog) >>> Eats($x, Rabbit) ::: If someone eats the dog then they eat the rabbit.\nChases($x, Rabbit) && Green(Rabbit, True) >>> Green($x, True) ::: If someone chases the rabbit and the rabbit is green then they are green.\nGreen($x, True) >>> Eats($x, Dog) ::: If someone is green then they eat the dog.\nVisits($x, BaldEagle) && Round($x, True) >>> Green(BaldEagle, True) ::: If someone visits the bald eagle and they are round then the bald eagle is green.\nVisits($x, Rabbit) && Eats($x, BaldEagle) >>> Eats($x, Dog) ::: If someone visits the rabbit and they eat the bald eagle then they eat the dog.\nChases($x, Dog) >>> Visits($x, BaldEagle) ::: If someone chases the dog then they visit the bald eagle.\nEats($x, Rabbit) && Rough($x, True) >>> Eats($x, Tiger) ::: If someone eats the rabbit and they are rough then they eat the tiger.\nQuery:\nVisits(Dog, Rabbit, True) ::: The dog visits the rabbit.\n------\nProblem:\nThe dog chases the rab"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-630_Q24",
    "context": "Anne is green. Anne is quiet. Dave is round. Erin is nice. Fiona is not nice. Fiona is quiet. Fiona is rough. If something is rough and green then it is round. All smart things are round. If something is round and blue then it is rough. All blue things are rough. Quiet things are green. Round things are green. All nice things are blue. All rough, nice things are blue. Rough, nice things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nQuiet(Anne, True) ::: Anne is quiet.\nRound(Dave, True) ::: Dave is round.\nNice(Erin, True) ::: Erin is nice.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRough(Fiona, True) ::: Fiona is rough.\nRules:\nGreen($x, True) >>> Round($x, True) ::: If something is rough and green then it is round.\nSmart($x, True) >>> Round($x, True) ::: All smart things are round.\nRound($x, True) >>> Blue($x, True) ::: If something is round and blue then it is rough.\nBlue($x, True) >>> Rough($x, True) ::: All blue things are rough.\nQuiet($x, True) >>> Green($x, True) ::: Quiet things are green.\nRound($x, True) >>> Green($x, True) ::: Round things are green.\nNice($x, True) >>> Blue($x, True) ::: All nice things are blue.\nRough($x, True) && Nice($x, True) >>> Blue($x, True) ::: All rough, nice things are blue.\nRough($x, True) && Nice($x, True) >>> Quiet($x, True) ::: Rough, nice things are quiet.\nQuery:\nNice(Anne, True) ::: Anne is nice.\n------\nProblem:\nAnne is green. Anne is quiet. Dave is round. Erin is nice. Fiona is not nice. Fiona is quiet. Fiona is rough. If something is rough and green then it is round. All smart things are round. If something is round and blue then it is rough. All blue things are rough. Quiet things are green. Round things are green. All nice things are blue. All rough, nice things are blue. Rough, nice things are quiet.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is blue.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nQuiet(Anne, True) ::: Anne is quiet.\nRound(Dave, True) ::: Dave is round.\nNice(Erin,"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-562_Q17",
    "context": "Charlie is round. Charlie is not young. Dave is rough. Dave is not young. Erin is cold. Erin is young. Harry is furry. Round people are white. If someone is young then they are white. All round, rough people are big. All young, big people are not cold. Round, big people are not cold. Furry people are round. White, round people are furry. If Dave is furry and Dave is round then Dave is rough. If someone is furry then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nRules:\nRound($x, True) >>> White($x, True) ::: Round people are white.\nYoung($x, True) >>> White($x, True) ::: If someone is young then they are white.\nRound($x, True) && Rough($x, True) >>> Big($x, True) ::: All round, rough people are big.\nYoung($x, True) && Big($x, True) >>> Not(Cold($x, True)) ::: All young, big people are not cold.\nRound($x, True) && Big($x, True) >>> Not(Cold($x, True)) ::: Round, big people are not cold.\nFurry($x, True) >>> Round($x, True) ::: Furry people are round.\nWhite($x, True) && Round($x, True) >>> Furry($x, True) ::: White, round people are furry.\nFurry($x, True) && Round($x, True) >>> Rough($x, True) ::: If Dave is furry and Dave is round then Dave is rough.\nFurry($x, True) >>> Rough($x, True) ::: If someone is furry then they are rough.\nFacts:\nRound(Charlie, True) ::: Charlie is round.\nNot(Young(Charlie, True)) ::: Charlie is not young.\nRough(Dave, True) ::: Dave is rough.\nNot(Young(Dave, True)) ::: Dave is not young.\nCold(Erin, True) ::: Erin is cold.\nYoung(Erin, True) ::: Erin is young.\nFurry(Harry, True) ::: Harry is furry.\nQuery:\nNot(White(Dave, True)) ::: Dave is not white.\n------\nProblem:\nCharlie is furry. Charlie is not young. Dave is furry. Dave is not young. Erin is cold. Erin is young. Harry is furry. Round people are white. If someone is young then they are white. All round, rough people are big. All young, big people are not cold. Round, big people are not cold. Furry people are round. White, round people are furry. If Dave is furry and Dave is round then Dave is rough. If someone is furry then they are rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Dave is not white.\n###\nPredicates:\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-604_Q11",
    "context": "The cat chases the dog. The cat chases the mouse. The cat chases the tiger. The cat eats the dog. The dog is big. The dog sees the cat. The mouse does not eat the cat. The mouse eats the tiger. The mouse does not see the tiger. The tiger eats the dog. The tiger is nice. If something is young and it eats the tiger then it eats the dog. If something sees the mouse and it eats the mouse then the mouse sees the tiger. If something sees the mouse then it is big. If something chases the dog then the dog chases the cat. If something chases the dog then it chases the cat. If something chases the tiger and the tiger eats the cat then the cat sees the mouse. If something sees the dog and it chases the tiger then the tiger chases the dog. If the tiger is green and the tiger is big then the tiger sees the dog. If something chases the cat then it sees the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger sees the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Cat, Dog, True) ::: The cat chases the dog.\nChases(Cat, Mouse, True) ::: The cat chases the mouse.\nChases(Cat, Tiger, True) ::: The cat chases the tiger.\nEats(Cat, Dog, True) ::: The cat eats the dog.\nBig(Dog, True) ::: The dog is big.\nSees(Cat, Dog, True) ::: The cat sees the dog.\nDoesNotEat(Mouse, Cat, True) ::: The mouse does not eat the cat.\nEats(Mouse, Tiger, True) ::: The mouse eats the tiger.\nDoesNotSee(Mouse, Tiger, True) ::: The mouse does not see the tiger.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nNice(Tiger, True) ::: The tiger is nice.\nRules:\nYoung($x, True) >>> Eats($x, Tiger, True) >>> Eats($x, Dog, True) ::: If something is young and it eats the tiger then it eats the dog.\nSees($x, Mouse) >>> Eats($x, Mouse) >>> Sees($x, Tiger) ::: If something sees the mouse and it eats the mouse then the mouse sees the tiger.\nSees($x, Mouse) >>> Big($x, True) ::: If something sees the mouse then it is big.\nChases($x, Dog) >>> Chases($x, Cat) ::: If something chases the dog then the dog chases the cat.\nChases($x, Dog) >>> Chases($x, Cat) ::: If something chases the dog then it chases the cat.\nChases($x, Tiger) >>> Eats($Tiger, Cat) >>> Sees($Cat, Mouse) ::: If something chases the tiger and the tiger eats the cat then the cat sees the mouse.\nSees($x, Dog) >>> Chases($x, Tiger) ::: If the tiger is green and the tiger is big then the tiger sees the dog.\nChases($x, Cat) >>> Sees($x, Dog) ::: If something chases the cat then it sees the dog.\nQuery:\nSees(Tiger, Dog, True) ::: The tiger sees the dog.\n------\nProblem:\nThe cat chases the dog. The cat chases the mouse. The cat chases the tiger. The cat eats the dog. The dog is big. The dog sees the cat. The mouse does not eat the cat. The mouse eats the tiger. The mouse does not see the tiger. The tiger"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-709_Q1",
    "context": "The bald eagle is green. The bald eagle is rough. The bald eagle is young. The bald eagle needs the squirrel. The bald eagle sees the squirrel. The cat is round. The cat needs the bald eagle. The cat needs the dog. The cat visits the bald eagle. The dog needs the bald eagle. The dog sees the bald eagle. The dog visits the cat. The squirrel needs the cat. The squirrel visits the bald eagle. If something sees the dog then it sees the cat. If something needs the dog and it is round then it needs the cat. If something visits the squirrel then the squirrel visits the dog. If something is nice then it sees the dog. If something needs the cat then it is nice. If something sees the cat then it is green. If something needs the cat then it is rough. If something visits the squirrel and the squirrel visits the dog then the squirrel visits the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle needs the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nNeeds(BaldEagle, Squirrel, True) ::: The bald eagle needs the squirrel.\nSees(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, BaldEagle, True) ::: The cat needs the bald eagle.\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nVisits(Cat, BaldEagle, True) ::: The cat visits the bald eagle.\nNeeds(Dog, BaldEagle, True) ::: The dog needs the bald eagle.\nSees(Dog, BaldEagle, True) ::: The dog sees the bald eagle.\nVisits(Dog, Cat, True) ::: The dog visits the cat.\nNeeds(Squirrel, Cat, True) ::: The squirrel needs the cat.\nVisits(Squirrel, BaldEagle, True) ::: The squirrel visits the bald eagle.\nRules:\nSees($x, $y, True) >>> Sees($y, $x, True) ::: If something sees the dog then it sees the cat.\nNeeds($x, $y, True) && Round($x, True) >>> Needs($x, Cat, True) ::: If something needs the dog and it is round then it needs the cat.\nVisits($x, $y, True) >>> Visits($y, $x, True) ::: If something visits the squirrel then the squirrel visits the dog.\nNice($x, True) >>> Sees($x, Dog, True) ::: If something is nice then it sees the dog.\nNeeds($x, Cat, True) >>> Nice($x, True) ::: If something needs the cat then it is nice.\nSees($x, Cat, True) >>> Green($x, True) ::: If something sees the cat then it is green.\nNeeds($x, Cat, True) >>> Rough($x, True) ::: If something needs the cat then it is rough.\nVisits($x, Squirrel, True) && Visits(Squirrel, Dog, True) >>> Visits($x, BaldEagle, True) ::: If something visits the squirrel and the squirrel visits the dog then the squirrel visits the bald eagle"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-404_Q24",
    "context": "The bear chases the lion. The bear is cold. The bear is nice. The bear visits the rabbit. The lion is red. The rabbit chases the bear. The rabbit is green. The squirrel chases the bear. The squirrel likes the bear. The squirrel visits the lion. If something chases the squirrel then the squirrel is red. If something likes the lion then it chases the squirrel. If something is red then it likes the lion. If something is nice and it chases the lion then it likes the rabbit. If something likes the bear and the bear likes the rabbit then the bear is green. If the squirrel visits the rabbit and the rabbit likes the bear then the bear visits the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit likes the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nVisits($x, $y) ::: Does x visit y?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nLikes($x, $y) ::: Does x like y?\nFacts:\nChases(Bear, Lion) ::: The bear chases the lion.\nCold(Bear, True) ::: The bear is cold.\nNice(Bear, True) ::: The bear is nice.\nVisits(Bear, Rabbit) ::: The bear visits the rabbit.\nRed(Lion, True) ::: The lion is red.\nChases(Rabbit, Bear) ::: The rabbit chases the bear.\nGreen(Rabbit, True) ::: The rabbit is green.\nChases(Squirrel, Bear) ::: The squirrel chases the bear.\nLikes(Squirrel, Bear) ::: The squirrel likes the bear.\nVisits(Squirrel, Lion) ::: The squirrel visits the lion.\nRules:\nChases($x, $y) >>> Red($x, True) ::: If something chases the squirrel then the squirrel is red.\nLikes($x, $y) >>> Chases($x, $y) ::: If something likes the lion then it chases the squirrel.\nRed($x, True) >>> Likes($x, $y) ::: If something is red then it likes the lion.\nNice($x, True) && Chases($x, $y) >>> Likes($x, $z) ::: If something is nice and it chases the lion then it likes the rabbit.\nLikes($x, $y) && Likes($y, $z) >>> Green($x, True) ::: If something likes the bear and the bear likes the rabbit then the bear is green.\nVisits($x, $y) && Likes($y, $z) >>> Visits($x, $z) ::: If the squirrel visits the rabbit and the rabbit likes the bear then the bear visits the squirrel.\nQuery:\nLikes(Rabbit, Bear) ::: The rabbit likes the bear.\n------\nProblem:\nThe bear chases the lion. The bear is cold. The bear is nice. The bear visits the rabbit. The lion is red. The rabbit chases the bear. The rabbit is green. The squirrel chases the bear. The squirrel likes the bear. The squirrel visits the lion. If something chases the squirrel then the squirrel is red. If something likes the lion then it chases the squirrel. If something is red then it likes the lion. If something is nice and it chases the lion then it likes the rabbit. If something likes the bear and the bear likes the rabbit then the bear is green. If the squirrel visits the rabbit and the rabbit likes the bear then the bear visits the squirrel.\nQuestion:"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-559_Q24",
    "context": "The bear is big. The bear needs the rabbit. The bear sees the rabbit. The mouse likes the tiger. The mouse needs the rabbit. The mouse sees the rabbit. The mouse sees the tiger. The rabbit is round. The rabbit likes the tiger. The rabbit needs the tiger. The tiger is red. The tiger likes the mouse. If something sees the mouse and it likes the mouse then it sees the bear. If something needs the tiger then it likes the mouse. If something is red then it likes the mouse. If something likes the mouse then it sees the mouse. If something needs the mouse then the mouse sees the tiger. If the rabbit is nice then the rabbit likes the bear. If something is big and nice then it needs the bear. If something is round and it sees the bear then the bear likes the mouse. If something likes the rabbit and the rabbit needs the tiger then the tiger likes the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear likes the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nLikes($x, $y, bool) ::: Does x like y?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nFacts:\nBig(Bear, True) ::: The bear is big.\nNeeds(Bear, Rabbit, True) ::: The bear needs the rabbit.\nSees(Bear, Rabbit, True) ::: The bear sees the rabbit.\nLikes(Mouse, Tiger, True) ::: The mouse likes the tiger.\nNeeds(Mouse, Rabbit, True) ::: The mouse needs the rabbit.\nSees(Mouse, Rabbit, True) ::: The mouse sees the rabbit.\nSees(Mouse, Tiger, True) ::: The mouse sees the tiger.\nRound(Rabbit, True) ::: The rabbit is round.\nLikes(Rabbit, Tiger, True) ::: The rabbit likes the tiger.\nNeeds(Rabbit, Tiger, True) ::: The rabbit needs the tiger.\nRed(Tiger, True) ::: The tiger is red.\nLikes(Tiger, Mouse, True) ::: The tiger likes the mouse.\nRules:\nSees($x, $y, True) && Likes($x, $y, True) >>> Sees($x, Bear, True) ::: If something sees the mouse and it likes the mouse then it sees the bear.\nNeeds($x, Tiger, True) >>> Likes($x, Mouse, True) ::: If something needs the tiger then it likes the mouse.\nRed($x, True) >>> Likes($x, Mouse, True) ::: If something is red then it likes the mouse.\nLikes($x, $y, True) >>> Sees($x, $y, True) ::: If something likes the mouse then it sees the mouse.\nNeeds($x, Mouse, True) >>> Sees($x, Tiger, True) ::: If something needs the mouse then the mouse sees the tiger.\nNice($x, True) && Big($x, True) >>> Needs($x, Bear, True) ::: If something is big and nice then it needs the bear.\nRound($x, True) && Sees($x, Bear, True) >>> Likes($x, Mouse, True) ::: If something is round and it sees the bear then the bear likes the mouse.\nLikes($x, Rabbit, True) && Needs($x, Tiger, True) >>> Likes($x, Tiger, True) ::: If something likes the rabbit and the rabbit needs the tiger then the tiger likes the rabbit.\nIf the rabbit is nice then the rabbit likes the bear. ::: Rabbit is nice >>> Likes(Rabbit, Bear, True)\nQuestion:\nLikes(Bear, Tiger, True) ::: The bear likes the t"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-178_Q5",
    "context": "Bob is big. Bob is quiet. Erin is white. Gary is big. Gary is red. Harry is green. Harry is smart. If someone is smart and big then they are white. All quiet, red people are smart. If someone is smart and white then they are green. Red, round people are quiet. If someone is big then they are round. If Erin is round and Erin is quiet then Erin is smart. If someone is red and green then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(Bob, True) ::: Bob is big.\nQuiet(Bob, True) ::: Bob is quiet.\nWhite(Erin, True) ::: Erin is white.\nBig(Gary, True) ::: Gary is big.\nRed(Gary, True) ::: Gary is red.\nGreen(Harry, True) ::: Harry is green.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBig($x, True) >>> Round($x, True) ::: If someone is big then they are round.\nQuiet($x, True) >>> Red($x, True) ::: All quiet, red people are smart.\nSmart($x, True) && White($x, True) >>> Green($x, True) ::: If someone is smart and white then they are green.\nSmart($x, True) && White($x, True) >>> Big($x, True) ::: If someone is smart and white then they are big.\nRed($x, True) && Green($x, True) >>> Big($x, True) ::: If someone is red and green then they are big.\nRound($x, True) && Quiet($x, True) >>> Smart($x, True) ::: If Erin is round and Erin is quiet then Erin is smart.\nQuery:\nQuiet(Gary, True) ::: Gary is quiet.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-13_Q11",
    "context": "The bald eagle chases the dog. The bald eagle chases the tiger. The bald eagle needs the tiger. The dog chases the tiger. The dog does not like the squirrel. The dog needs the squirrel. The squirrel chases the dog. The squirrel is young. The squirrel likes the tiger. The tiger is not cold. The tiger does not like the dog. The tiger needs the squirrel. If someone likes the tiger and they need the tiger then the tiger is young. If someone needs the squirrel and the squirrel needs the bald eagle then the bald eagle needs the dog. If someone needs the tiger then they are not cold. If someone is young and they need the bald eagle then they need the tiger. If someone is young then they need the bald eagle. If the dog chases the bald eagle and the dog does not need the tiger then the tiger is not red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger needs the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nIsYoung($x, bool) ::: Is x young?\nIsCold($x, bool) ::: Is x cold?\nIsRed($x, bool) ::: Is x red?\nFacts:\nChases(BaldEagle, Dog, True) ::: The bald eagle chases the dog.\nChases(BaldEagle, Tiger, True) ::: The bald eagle chases the tiger.\nNeeds(BaldEagle, Tiger, True) ::: The bald eagle needs the tiger.\nChases(Dog, Tiger, True) ::: The dog chases the tiger.\nDoesNotLike(Dog, Squirrel, True) ::: The dog does not like the squirrel.\nNeeds(Dog, Squirrel, True) ::: The dog needs the squirrel.\nChases(Squirrel, Dog, True) ::: The squirrel chases the dog.\nIsYoung(Squirrel, True) ::: The squirrel is young.\nLikes(Squirrel, Tiger, True) ::: The squirrel likes the tiger.\nIsNotCold(Tiger, True) ::: The tiger is not cold.\nDoesNotLike(Tiger, Dog, True) ::: The tiger does not like the dog.\nNeeds(Tiger, Squirrel, True) ::: The tiger needs the squirrel.\nRules:\nLikes($x, $y, True) && Needs($x, $y, True) >>> Young($y, True) ::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1183_Q20",
    "context": "Bob is round. Bob is smart. Charlie is not smart. Fiona is young. Gary is nice. Gary is smart. Gary is white. If someone is young then they are smart. If Fiona is young then Fiona is smart. If someone is green and young then they are white. If someone is smart then they are green. If someone is quiet then they are round. If someone is round and not smart then they are not quiet. If someone is nice then they are quiet. If someone is white then they are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nFacts:\nRound(Bob, True) ::: Bob is round.\nSmart(Bob, True) ::: Bob is smart.\nNotSmart(Charlie, True) ::: Charlie is not smart.\nYoung(Fiona, True) ::: Fiona is young.\nNice(Gary, True) ::: Gary is nice.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nRules:\nYoung($x, True) >>> Smart($x, True) ::: If someone is young then they are smart.\nYoung(Fiona, True) >>> Smart(Fiona, True) ::: If Fiona is young then Fiona is smart.\nGreen($x, True) >>> White($x, True) ::: If someone is green and young then they are white.\nSmart($x, True) >>> Green($x, True) ::: If someone is smart then they are green.\nQuiet($x, True) >>> Round($x, True) ::: If someone is quiet then they are round.\nRound($x, True) && NotSmart($x, True) >>> NotQuiet($x, True) ::: If someone is round and not smart then they are not quiet.\nNice($x, True) >>> Quiet($x, True) ::: If someone is nice then they are quiet.\nWhite($x"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-1026_Q9",
    "context": "The cat is green. The cat is nice. The cat likes the squirrel. The rabbit likes the tiger. The rabbit does not need the cat. The rabbit needs the squirrel. The squirrel is cold. The squirrel needs the cat. The squirrel needs the rabbit. The tiger chases the cat. The tiger chases the rabbit. The tiger is kind. The tiger is nice. The tiger is young. The tiger likes the cat. The tiger needs the cat. If something chases the squirrel then the squirrel needs the tiger. If something needs the tiger then it likes the rabbit. If something chases the cat and it likes the rabbit then the rabbit chases the squirrel. If something chases the rabbit then the rabbit does not need the tiger. If something is kind and it chases the rabbit then it needs the tiger. If something is kind then it does not like the squirrel. If something likes the squirrel and it does not need the tiger then the squirrel likes the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel needs the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Cat, True) ::: The cat is green.\nNice(Cat, True) ::: The cat is nice.\nLikes(Cat, Squirrel, True) ::: The cat likes the squirrel.\nNeeds(Rabbit, Tiger, True) ::: The rabbit likes the tiger.\nNeeds(Rabbit, Squirrel, True) ::: The rabbit does not need the cat.\nCold(Squirrel, True) ::: The squirrel is cold.\nNeeds(Squirrel, Cat, True) ::: The squirrel needs the cat.\nNeeds(Squirrel, Rabbit, True) ::: The squirrel needs the rabbit.\nChases(Tiger, Cat, True) ::: The tiger chases the cat.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nKind(Tiger, True) ::: The tiger is kind.\nNice(Tiger, True) ::: The tiger is nice.\nYoung(Tiger, True) ::: The tiger is young.\nLikes(Tiger, Cat, True) ::: The tiger likes the cat.\nNeeds(Tiger, Cat, True) ::: The tiger needs the cat.\nRules:\nIf"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1110_Q4",
    "context": "Bob is blue. Bob is cold. Bob is nice. Bob is round. Bob is smart. Bob is white. Dave is cold. Dave is white. Erin is blue. Erin is cold. Erin is nice. Erin is round. Erin is smart. Fiona is blue. Fiona is nice. Fiona is smart. White people are nice. All rough people are smart. If someone is blue and rough then they are smart. All nice, rough people are smart. If someone is nice and round then they are rough. White, smart people are blue. All blue people are nice. Nice people are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nNice(Bob, True) ::: Bob is nice.\nRound(Bob, True) ::: Bob is round.\nSmart(Bob, True) ::: Bob is smart.\nWhite(Bob, True) ::: Bob is white.\nCold(Dave, True) ::: Dave is cold.\nWhite(Dave, True) ::: Dave is white.\nBlue(Erin, True) ::: Erin is blue.\nCold(Erin, True) ::: Erin is cold.\nNice(Erin, True) ::: Erin is nice.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nBlue(Fiona, True) ::: Fiona is blue.\nNice(Fiona, True) ::: Fiona is nice.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nWhite($x, True) >>> Nice($x, True) ::: White people are nice.\nAll($x, $y) Rough($x, True) >>> Smart($x, True) ::: All rough people are smart.\nBlue($x, True) && Rough($x, True) >>> Smart($x, True) ::: If someone is blue and rough then they are smart."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-550_Q16",
    "context": "Anne is furry. Anne is smart. Bob is furry. Dave is red. Dave is smart. Fiona is nice. Fiona is not round. All smart, round things are not nice. All smart, blue things are nice. If something is blue then it is green. All nice, furry things are not green. All furry things are green. If something is red then it is smart. If something is smart then it is round. Green things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nSmart(Anne, True) ::: Anne is smart.\nFurry(Bob, True) ::: Bob is furry.\nRed(Dave, True) ::: Dave is red.\nSmart(Dave, True) ::: Dave is smart.\nNice(Fiona, True) ::: Fiona is nice.\nNot(Round(Fiona, True)) ::: Fiona is not round.\nRules:\nSmart($x, True) >>> Round($x, True) ::: All smart, round things are not nice.\nSmart($x, True) >>> Nice($x, True) ::: All smart, blue things are nice.\nBlue($x, True) >>> Green($x, True) ::: If something is blue then it is green.\nNice($x, True) && Furry($x, True) >>> Not(Green($x, True)) ::: All nice, furry things are not green.\nFurry($x, True) >>> Green($x, True) ::: All furry things are green.\nRed($x, True) >>> Smart($x, True) ::: If something is red then it is smart.\nSmart($x, True) >>> Round($x, True) ::: If something is smart then it is round.\nGreen($x, True) >>> Red($x"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-694_Q2",
    "context": "Anne is young. Charlie is not red. Gary is not blue. Gary is kind. Gary is not rough. Gary is not young. Harry is green. If Gary is green then Gary is not blue. All young people are blue. If Harry is white and Harry is young then Harry is not green. All red people are green. Blue, young people are red. If someone is green then they are white. If someone is blue and white then they are kind. All red people are not rough. If someone is young and not white then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nFacts:\nYoung(Anne, True) ::: Anne is young.\nNot(Red(Charlie, True)) ::: Charlie is not red.\nNot(Blue(Gary, True)) ::: Gary is not blue.\nKind(Gary, True) ::: Gary is kind.\nNot(Rough(Gary, True)) ::: Gary is not rough.\nNot(Young(Gary, True)) ::: Gary is not young.\nGreen(Harry, True) ::: Harry is green.\nRule:\nIf Gary is green then Gary is not blue ::: If Gary is green then Gary is not blue.\nAll young people are blue ::: All young people are blue.\nIf Harry is white and Harry is young then Harry is not green ::: If Harry is white and Harry is young then Harry is not green.\nAll red people are green ::: All red people are green.\nBlue, young people are red ::: Blue, young people are red.\nIf someone is green then they are white ::: If someone is green then they are white.\nIf someone is blue and white then they are kind ::: If someone is blue and white then they are kind.\nAll red people are not rough ::: All red people are not rough.\nIf someone is young and not white then they are rough ::: If someone is young and not white then they are rough.\nQuery:\nNot(Kind(Gary, True)) ::: Gary is not kind"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-221_Q8",
    "context": "Anne is nice. Anne is young. Dave is cold. Dave is smart. Dave is white. Fiona is nice. Fiona is not red. Fiona is young. Gary is cold. Gary is red. If someone is smart then they are green. If someone is green then they are nice. Nice people are young. If someone is white then they are young. If someone is cold then they are white. If someone is green and smart then they are white. All young, red people are smart. If Fiona is red then Fiona is green. If Anne is smart then Anne is not green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nWhite($x, bool) ::: Is x white?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nYoung(Anne, True) ::: Anne is young.\nCold(Dave, True) ::: Dave is cold.\nSmart(Dave, True) ::: Dave is smart.\nWhite(Dave, True) ::: Dave is white.\nNice(Fiona, True) ::: Fiona is nice.\nRed(Fiona, False) ::: Fiona is not red.\nYoung(Fiona, True) ::: Fiona is young.\nRed(Gary, True) ::: Gary is red.\nCold(Gary, True) ::: Gary is cold.\nRules:\nSmart($x, True) >>> Green($x, True) ::: If someone is smart then they are green.\nGreen($x, True) >>> Nice($x, True) ::: If someone is green then they are nice.\nNice($x, True) >>> Young($x, True) ::: Nice people are young.\nWhite($x, True) >>> Young($x, True) ::: If someone is white then they are young.\nCold($x, True) >>> White($x, True) ::: If someone is cold then they are white.\nSmart($x, True) && Green($x, True) >>> White($x, True) ::: If someone is green and smart then they are white.\nYoung"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1022_Q6",
    "context": "Dave is green. Dave is kind. Erin is cold. Erin is furry. Fiona is big. Fiona is furry. Gary is big. All kind people are cold. Green, smart people are rough. If Fiona is cold and Fiona is kind then Fiona is green. If someone is furry then they are smart. All furry, green people are smart. If someone is green and cold then they are big. If someone is furry and rough then they are big. All furry people are smart. Big, cold people are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nFurry($x, bool) ::: Is x furry?\nFacts:\nGreen(Dave, True) ::: Dave is green.\nKind(Dave, True) ::: Dave is kind.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nBig(Fiona, True) ::: Fiona is big.\nFurry(Fiona, True) ::: Fiona is furry.\nBig(Gary, True) ::: Gary is big.\nRules:\nKind($x, True) >>> Cold($x, True) ::: All kind people are cold.\nGreen($x, True) && Smart($x, True) >>> Rough($x, True) ::: Green, smart people are rough.\nFurry($x, True) && Kind($x, True) && Cold($x, True) >>> Green($x, True) ::: If Fiona is cold and Fiona is kind then Fiona is green.\nFurry($x, True) >>> Smart($x, True) ::: If someone is furry then they are smart.\nGreen($x, True) && Furry($x, True) >>> Smart($x, True) ::: All furry, green people are smart.\nGreen($x, True) && Cold($x, True) >>> Big($x, True) ::: If someone is green and cold then they are big.\nFurry($x"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-884_Q17",
    "context": "The bear is cold. The bear is rough. The bear needs the cat. The bear needs the rabbit. The bear sees the rabbit. The cat eats the bear. The cat is blue. The rabbit eats the cat. The rabbit eats the squirrel. The rabbit is big. The rabbit is rough. The rabbit is round. The squirrel eats the bear. The squirrel eats the cat. The squirrel is big. The squirrel is rough. If something eats the rabbit then the rabbit sees the bear. If something eats the rabbit then it needs the squirrel. If something sees the bear and it sees the cat then the cat sees the rabbit. If something sees the rabbit and the rabbit is rough then it sees the cat. All round, blue things are big. If the bear is big and the bear sees the squirrel then the bear is round. If something sees the cat then it sees the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not need the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nBlue($x, bool) ::: Is x blue?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nFacts:\nCold(Bear, True) ::: The bear is cold.\nRough(Bear, True) ::: The bear is rough.\nNeeds(Bear, Cat, True) ::: The bear needs the cat.\nNeeds(Bear, Rabbit, True) ::: The bear needs the rabbit.\nSees(Bear, Rabbit, True) ::: The bear sees the rabbit.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nBlue(Cat, True) ::: The cat is blue.\nEats(Cat, Rabbit, True) ::: The cat eats the rabbit.\nEats(Rabbit, Cat, True) ::: The rabbit eats the cat.\nEats(Rabbit, Squirrel, True) ::: The rabbit eats the squirrel.\nBig(Rabbit, True) ::: The rabbit is big.\nRough(Rabbit, True) ::: The rabbit is rough.\nRound(Rabbit, True) ::: The rabbit is round.\nEats(Squirrel, Bear, True) ::: The squirrel eats the bear.\nEats(Squirrel, Cat, True) ::: The squirrel eats"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1066_Q12",
    "context": "Bob is quiet. Bob is white. Dave is kind. Dave is red. Dave is young. Fiona is red. Fiona is round. Gary is quiet. Gary is red. Gary is round. White things are round. If something is kind and white then it is green. All young things are kind. All round things are young. All quiet, kind things are white. Quiet, green things are red. Young, quiet things are kind. All quiet, red things are kind. If Gary is young then Gary is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nWhite(Bob, True) ::: Bob is white.\nKind(Dave, True) ::: Dave is kind.\nRed(Dave, True) ::: Dave is red.\nYoung(Dave, True) ::: Dave is young.\nRed(Fiona, True) ::: Fiona is red.\nRound(Fiona, True) ::: Fiona is round.\nQuite(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nRound(Gary, True) ::: Gary is round.\nRules:\nWhite($x, True) >>> Round($x, True) ::: White things are round.\nKind($x, True) && White($x, True) >>> Green($x, True) ::: If something is kind and white then it is green.\nYoung($x, True) >>> Kind($x, True) ::: All young things are kind.\nYoung($x, True) >>> Round($x, True) ::: All round things are young.\nQuite($x, True) && Kind($x, True) >>> White($x, True) ::: All quiet, kind things are white.\nQuite($x, True) && Green($x, True) >>> Red($x, True) ::: Quiet, green things are red.\nYoung($x, True) && Quite($x, True) >>> Kind($x, True) ::: Young, quiet things are kind.\nQuite($x, True) && Red($x, True) >>> Kind($x, True) ::: All quiet, red things are kind.\nIf Gary is young then Gary is round ::: If Gary is young then Gary is round.\nQuery:\nNot(Red(Bob, True)) ::: Bob is not red.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-796_Q6",
    "context": "The bald eagle chases the cat. The bald eagle likes the dog. The cat is green. The cat is red. The cat likes the lion. The dog chases the cat. The dog is red. The dog sees the bald eagle. The dog sees the lion. The lion is green. The lion is rough. The lion sees the cat. If someone is cold then they like the bald eagle. If someone sees the cat and they like the bald eagle then the cat is rough. If someone sees the bald eagle then the bald eagle likes the dog. All rough people are nice. If someone sees the lion then they are green. If the bald eagle is red then the bald eagle is nice. All nice people are cold. If someone chases the dog and the dog likes the cat then they see the bald eagle. If someone is rough then they like the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nLikes($x, $y) ::: Does x like y?\nIs($x, $y) ::: Is x y?\nSees($x, $y) ::: Does x see y?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nRules:\nChases(BaldEagle, Cat) ::: The bald eagle chases the cat.\nLikes(BaldEagle, Dog) ::: The bald eagle likes the dog.\nIs(Cat, Green) ::: The cat is green.\nIs(Cat, Red) ::: The cat is red.\nLikes(Cat, Lion) ::: The cat likes the lion.\nChases(Dog, Cat) ::: The dog chases the cat.\nIs(Dog, Red) ::: The dog is red.\nSees(Dog, BaldEagle) ::: The dog sees the bald eagle.\nSees(Dog, Lion) ::: The dog sees the lion.\nIs(Lion, Green) ::: The lion is green.\nIs(Lion, Rough) ::: The lion is rough.\nSees(Lion, Cat) ::: The lion sees the cat.\nCold($x, True) >>> Likes($x, BaldEagle) ::: If someone is cold then they like the bald eagle.\nIs($x, Cat) && Likes($x, BaldEagle) >>> Rough($x, True) ::: If someone sees the cat and they like the bald eagle then the cat is rough.\nSees(BaldEagle, $x) >>> Likes(BaldEagle, Dog) ::: If someone sees the bald eagle then the bald eagle likes the dog.\nAll($x, Rough) >>> Nice($x, True) ::: All rough people are nice.\nSees($x, Lion) >>> Is($x, Green) ::: If someone sees the lion then they are green.\nIs(BaldEagle, Red) >>> Is(BaldEagle, Nice) ::: If the bald eagle is red then the bald eagle is nice.\nAll($x, Nice) >>> Cold($x,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-746_Q9",
    "context": "Bob is white. Charlie is furry. Charlie is kind. Dave is cold. Dave is smart. Gary is red. Gary is white. Green, furry things are smart. If Charlie is white then Charlie is green. White things are kind. Cold, smart things are red. All furry things are cold. If Bob is kind and Bob is furry then Bob is smart. If something is cold and kind then it is white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nFacts:\nWhite(Bob, True) ::: Bob is white.\nFurry(Charlie, True) ::: Charlie is furry.\nKind(Charlie, True) ::: Charlie is kind.\nCold(Dave, True) ::: Dave is cold.\nSmart(Dave, True) ::: Dave is smart.\nRed(Gary, True) ::: Gary is red.\nWhite(Gary, True) ::: Gary is white.\nRules:\nGreen($x, True) && Furry($x, True) >>> Smart($x, True) ::: Green, furry things are smart.\nWhite($x, True) >>> Kind($x, True) ::: White things are kind.\nCold($x, True) && Smart($x, True) >>> Red($x, True) ::: Cold, smart things are red.\nFurry($x, True) >>> Cold($x, True) ::: All furry things are cold.\nFurry($x, True) && Kind($x, True) >>> Smart($x, True) ::: If Bob is kind and Bob is furry then Bob is smart.\nWhite($x, True) && Kind($x, True) >>> Cold($x, True) ::: If something is cold and kind then it is white.\nQuery:\nSmart(Charlie, True) ::: Charlie is smart.\n------\nProblem:\nBob is white. Charlie is furry. Charlie is kind. Dave is cold. Dave is smart. Gary is red. Gary is white. Green, furry things are smart. If Charlie is white then Charlie is green. White things are kind. Cold, smart things are red. All furry things are cold. If Bob is kind and Bob is furry then Bob is smart. If something is cold and kind then it is white.\nQuestion:\nBased on the above information"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-492_Q6",
    "context": "Anne is big. Anne is blue. Anne is kind. Anne is round. Charlie is green. Gary is kind. Harry is round. All blue things are rough. All white things are kind. If something is green and kind then it is round. If Anne is rough then Anne is big. All big things are blue. If something is green then it is blue. Blue things are big. If Anne is big and Anne is green then Anne is kind. Rough things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Anne, True) ::: Anne is big.\nBlue(Anne, True) ::: Anne is blue.\nKind(Anne, True) ::: Anne is kind.\nRound(Anne, True) ::: Anne is round.\nGreen(Charlie, True) ::: Charlie is green.\nKind(Gary, True) ::: Gary is kind.\nRound(Harry, True) ::: Harry is round.\nRules:\nBlue($x, True) >>> Rough($x, True) ::: All blue things are rough.\nWhite($x, True) >>> Kind($x, True) ::: All white things are kind.\nGreen($x, True) && Kind($x, True) >>> Round($x, True) ::: If something is green and kind then it is round.\nBig($x, True) >>> Anne($x, True) ::: If Anne is rough then Anne is big.\nBlue($x, True) >>> Big($x, True) ::: All big things are blue.\nGreen($x, True) >>> Blue($x, True) ::: If something is green then it is blue.\nBlue($x, True) >>> Anne($x, True) && Green($x, True) >>> Kind($x, True) ::: If Anne is big and Anne is green then Anne is kind.\nRough($x, True) >>> White($x, True) ::: Rough things are white.\nQuery:\nNot(Rough(Charlie, True)) ::: Charlie is not rough.\n------\nProblem:\nAnne is big. Anne is blue. Anne is kind. Anne is round. Charlie is green. Gary is kind. Harry is round. All blue things are rough. All white things are kind. If something is green and kind then it is round. If Anne is rough then Anne is big. All big things are blue. If something is green then it is blue. Blue things are big. If Anne is big"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-280_Q3",
    "context": "The bald eagle needs the mouse. The bald eagle sees the mouse. The cow is red. The cow is rough. The cow sees the bald eagle. The cow sees the mouse. The dog eats the bald eagle. The dog is cold. The dog is rough. The dog needs the bald eagle. The mouse eats the bald eagle. The mouse eats the dog. The mouse is red. The mouse is rough. The mouse is young. The mouse sees the cow. If something is young then it needs the dog. If something eats the cow then the cow is kind. If something is young then it sees the bald eagle. If something is cold and it needs the dog then it eats the mouse. If something needs the bald eagle and it is red then it is young. If something eats the mouse then it needs the mouse. If something eats the bald eagle then it is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nRed($x, bool) ::: Is x red?\nFacts:\nNeeds(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nSees(BaldEagle, Mouse, True) ::: The bald eagle sees the mouse.\nRed(Cow, True) ::: The cow is red.\nRough(Cow, True) ::: The cow is rough.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nSees(Cow, Mouse, True) ::: The cow sees the mouse.\nEats(Dog, BaldEagle, True) ::: The dog eats the bald eagle.\nCold(Dog, True) ::: The dog is cold.\nRough(Dog, True) ::: The dog is rough.\nNeeds(Dog, BaldEagle, True) ::: The dog needs the bald eagle.\nEats(Mouse, BaldEagle, True) ::: The mouse eats the bald eagle.\nEats(Mouse, Dog, True) ::: The mouse eats the dog.\nRed(Mouse, True) ::: The mouse is red.\nRough(Mouse, True) ::: The mouse is rough.\nYoung(Mouse, True) ::: The mouse is young.\nSees(Mouse, Cow, True) ::: The mouse sees the cow.\nRules:\nYoung($x, True) >>> Needs($x, Dog, True) ::: If something is young then it needs the dog.\nSees($x, BaldEagle, True) >>> Kind($x, True) ::: If something sees the bald eagle then the cow is kind.\nYoung($x, True) >>> Sees($x, BaldEagle, True) ::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-276_Q18",
    "context": "Bob is kind. Bob is round. Charlie is rough. Erin is green. Erin is rough. Erin is round. Gary is cold. All rough people are green. If someone is green then they are white. If someone is white then they are not big. If someone is green and not big then they are kind. If someone is kind and not big then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nFacts:\nKind(Bob, True) ::: Bob is kind.\nRound(Bob, True) ::: Bob is round.\nRough(Charlie, True) ::: Charlie is rough.\nGreen(Erin, True) ::: Erin is green.\nRough(Erin, True) ::: Erin is rough.\nRound(Erin, True) ::: Erin is round.\nCold(Gary, True) ::: Gary is cold.\nRules:\nRough($x, True) >>> Green($x, True) ::: All rough people are green.\nGreen($x, True) >>> White($x, True) ::: If someone is green then they are white.\nWhite($x, True) >>> Not(Big($x, True)) ::: If someone is white then they are not big.\nGreen($x, True) && Not(Big($x, True)) >>> Kind($x, True) ::: If someone is green and not big then they are kind.\nKind($x, True) && Not(Big($x, True)) >>> Round($x, True) ::: If someone is kind and not big then they are round.\nQuery:\nKind(Gary, True) ::: Gary is kind.\n------\nProblem:\nBob is kind. Bob is round. Charlie is rough. Erin is green. Erin is rough. Erin is round. Gary is cold. All rough people are green. If someone is green then they are white. If someone is white then they are not big. If someone is green and not big then they are kind. If someone is kind and not big then they are round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is kind.\n###\nPredicates:\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-461_Q13",
    "context": "Anne is big. Anne is kind. Anne is quiet. Anne is rough. Anne is white. Fiona is big. Gary is big. Gary is cold. Gary is kind. Harry is kind. If something is kind then it is big. If something is white and kind then it is rough. If Harry is quiet and Harry is cold then Harry is big. If something is quiet then it is big. If something is cold and rough then it is quiet. All kind things are young. If Harry is kind and Harry is cold then Harry is white. If something is young and kind then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nKind(Anne, True) ::: Anne is kind.\nQuiet(Anne, True) ::: Anne is quiet.\nRough(Anne, True) ::: Anne is rough.\nWhite(Anne, True) ::: Anne is white.\nBig(Fiona, True) ::: Fiona is big.\nBig(Gary, True) ::: Gary is big.\nKind(Gary, True) ::: Gary is kind.\nKind(Harry, True) ::: Harry is kind.\nRules:\nKind($x, True) >>> Big($x, True) ::: If something is kind then it is big.\nWhite($x, True) && Kind($x, True) >>> Rough($x, True) ::: If something is white and kind then it is rough.\nQuiet($x, True) >>> Big($x, True) ::: If Harry is quiet and Harry is cold then Harry is big.\nKind($x, True) >>> Big($x, True) ::: If something is quiet then it is big.\nCold($x, True) && Rough($x, True) >>> Quiet($x, True) ::: If something is cold and rough then it is quiet.\nYoung($x, True) && Kind($x, True) >>> Cold($x, True) ::: If something is young and kind then it is cold.\nKind($x, True) >>> Young($x, True) ::: All kind things are young.\nKind($x, True) && Cold($x, True) >>> White($x, True) ::: If Harry is kind and Harry is cold then Harry is white.\nQuery:\nNot(Rough(Gary, True)) ::: Gary is not rough.\n------\nProblem:\nAnne is big. Anne is kind. Anne is quiet"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1421_Q11",
    "context": "Anne is cold. Anne is rough. Bob is cold. Bob is kind. Dave is big. Dave is red. Dave is smart. Harry is big. Harry is kind. Harry is smart. Big people are young. Red people are smart. If Anne is young and Anne is rough then Anne is smart. Young, cold people are red. Rough people are big. All kind people are rough. If Anne is kind and Anne is cold then Anne is smart. All young people are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nRough(Anne, True) ::: Anne is rough.\nCold(Bob, True) ::: Bob is cold.\nKind(Bob, True) ::: Bob is kind.\nBig(Dave, True) ::: Dave is big.\nRed(Dave, True) ::: Dave is red.\nSmart(Dave, True) ::: Dave is smart.\nBig(Harry, True) ::: Harry is big.\nKind(Harry, True) ::: Harry is kind.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBig($x, True) >>> Young($x, True) ::: Big people are young.\nRed($x, True) >>> Smart($x, True) ::: Red people are smart.\nYoung($x, True) && Cold($x, True) >>> Red($x, True) ::: Young, cold people are red.\nRough($x, True) >>> Big($x, True) ::: Rough people are big.\nKind($x, True) >>> Rough($x, True) ::: All kind people are rough.\nCold($x, True) && Kind($x, True) >>> Smart($x, True) ::: If Anne is kind and Anne is cold then Anne is smart.\nYoung($x, True) >>> Kind($x, True) ::: All young people are kind.\nQuery:\nSmart(Bob, True) ::: Bob is smart.\n------\nProblem:\nAnne is cold. Anne is rough. Bob is cold. Bob is kind. Dave is big. Dave is red. Dave is smart. Harry is big. Harry is kind. Harry is smart. Big people are young. Red people are smart. If Anne is young and Anne is rough then Anne is smart. Young"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-173_Q10",
    "context": "The cat chases the lion. The cat is not blue. The cat is round. The lion eats the cat. The lion is blue. The lion is round. The lion does not need the rabbit. The mouse eats the rabbit. The mouse does not need the cat. The rabbit chases the cat. The rabbit chases the mouse. The rabbit is not big. If something chases the rabbit then it needs the cat. If something eats the mouse then the mouse needs the cat. If something is blue then it chases the rabbit. If something chases the rabbit then the rabbit is blue. If something needs the cat and it is not big then it is kind. If the mouse eats the lion then the lion is not round. If something is kind and round then it does not eat the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not need the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y) ::: Does x chase y?\nNeeds($x, $y) ::: Does x need y?\nEats($x, $y) ::: Does x eat y?\nIs($x, $y) ::: Is x y?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nFacts:\nChases(Cat, Lion) ::: The cat chases the lion.\nNot(Blue(Cat, True)) ::: The cat is not blue.\nRound(Cat, True) ::: The cat is round.\nEats(Lion, Cat) ::: The lion eats the cat.\nBlue(Lion, True) ::: The lion is blue.\nRound(Lion, True) ::: The lion is round.\nNot(Needs(Lion, Rabbit, True)) ::: The lion does not need the rabbit.\nEats(Mouse, Rabbit) ::: The mouse eats the rabbit.\nNot(Needs(Mouse, Cat, True)) ::: The mouse does not need the cat.\nChases(Rabbit, Cat) ::: The rabbit chases the cat.\nChases(Rabbit, Mouse) ::: The rabbit chases the mouse.\nNot(Big(Rabbit, True)) ::: The rabbit is not big.\nRules:\nIf something chases the rabbit then it needs the cat ::: If something chases the rabbit then the rabbit is blue.\nIf something eats the mouse then the mouse needs the cat ::: If something eats the mouse then the mouse needs the cat.\nIf something is blue then it chases the rabbit ::: If something chases the rabbit then the rabbit is blue.\nIf something needs the cat and it is not big then it is kind ::: If something is kind and round then it does not eat the mouse.\nIf the mouse eats the lion then the lion is not round ::: If something is kind and round then it does not eat the mouse.\nQuery:\nNot(Needs(Rabbit, Cat, True)) ::: The rabbit does not need the cat"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-77_Q15",
    "context": "The bear is blue. The cat eats the cow. The cat is red. The cat is round. The cat does not need the cow. The cat does not need the dog. The cow is not round. The dog chases the bear. The dog chases the cat. The dog is round. If the bear is not green then the bear eats the cat. If the dog needs the cat then the dog chases the bear. If the cow needs the bear then the cow is green. If the dog chases the cow then the dog needs the bear. Red things are nice. If something is green then it needs the cow. If something is nice then it eats the bear. If something is nice and it eats the bear then the bear is red. If something eats the dog and it is not red then the dog does not need the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not need the cow.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nEats($x, $y, bool) ::: Does x eat y?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nNeeds($x, $y, bool) ::: Does x need y?\nGreen($x, bool) ::: Is x green?\nChases($x, $y, bool) ::: Does x chase y?\nNice($x, bool) ::: Is x nice?\nFacts:\nBlue(Bear, True) ::: The bear is blue.\nEats(Cat, Cow, True) ::: The cat eats the cow.\nRed(Cat, True) ::: The cat is red.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Cow, False) ::: The cat does not need the cow.\nNeeds(Cat, Dog, False) ::: The cat does not need the dog.\nNot(Round(Cow, True)) ::: The cow is not round.\nChases(Dog, Bear, True) ::: The dog chases the bear.\nChases(Dog, Cat, True) ::: The dog chases the cat.\nRound(Dog, True) ::: The dog is round.\nNot(Green(Bear, True)) >>> Eats(Bear, Cat, True) ::: If the bear is not green then the bear eats the cat.\nNeeds(Cat, Bear, True) >>> Chases(Dog, Bear, True) ::: If the dog needs the cat then the dog chases the bear.\nNeeds(Cow, Bear, True) >>> Green(Cow, True) ::: If the cow needs the bear then the cow is green.\nNeeds(Dog, Cat, True) >>> Chases(Dog, Cow, True) ::: If the dog chases the cow then the dog needs the bear.\nRed($x, True) >>> Nice($x, True) ::: Red things are nice.\nGreen($x, True) >>> Needs(x, Cow, True) ::: If something is green then it needs the cow.\nNice($x, True) >>> Eats(x, Bear, True) ::: If something"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-68_Q7",
    "context": "The cat chases the rabbit. The cat likes the mouse. The dog is blue. The dog is not cold. The dog likes the cat. The dog likes the mouse. The mouse is cold. The mouse does not like the cat. The rabbit chases the mouse. The rabbit is nice. If someone chases the dog then the dog likes the cat. If someone is nice and they eat the mouse then the mouse chases the dog. If someone likes the mouse then they are blue. If someone eats the cat and they chase the rabbit then the rabbit likes the mouse. If the dog eats the rabbit and the rabbit likes the mouse then the dog likes the mouse. If the cat chases the rabbit then the cat chases the dog. If someone eats the rabbit then they like the rabbit. If someone is blue then they eat the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit likes the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Cat, Rabbit, True) ::: The cat chases the rabbit.\nLikes(Cat, Mouse, True) ::: The cat likes the mouse.\nIs(Dog, Blue, True) ::: The dog is blue.\nNot(Cold, Dog, True) ::: The dog is not cold.\nLikes(Dog, Cat, True) ::: The dog likes the cat.\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nIs(Mouse, Cold, True) ::: The mouse is cold.\nNot(Likes, Mouse, Cat, True) ::: The mouse does not like the cat.\nChases(Rabbit, Mouse, True) ::: The rabbit chases the mouse.\nIs(Rabbit, Nice, True) ::: The rabbit is nice.\nRules:\nChases($x, $y, True) >>> Likes($x, $y, True) ::: If someone chases the dog then the dog likes the cat.\nNice($x, True) && Eats($x, Mouse, True) >>> Chases($x, Dog, True) ::: If someone is nice and they eat the mouse then the mouse chases the dog.\nLikes($x, Mouse, True) >>> Blue($x, True) ::: If someone likes the mouse then they are blue.\nEats($x, Rabbit, True) && Likes($x, Mouse, True) >>> Chases($x, Rabbit, True) ::: If the dog eats the rabbit and the rabbit likes the mouse then the dog likes the mouse.\nChases($x, Rabbit, True) >>> Chases($x, Dog, True) ::: If the cat chases the rabbit then the cat chases the dog.\nEats($x, Rabbit, True) >>> Likes($x, Rabbit, True) ::: If someone eats the rabbit then they like the rabbit.\nBlue($x, True) >>> Eats($x, Cat, True) ::: If someone is blue then they eat the cat.\nQuery:\nLikes(Rabbit, Mouse, True) ::: The rabbit likes the mouse.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-664_Q1",
    "context": "Anne is kind. Erin is kind. Erin is smart. Fiona is big. Fiona is red. Fiona is smart. Gary is big. Gary is blue. Gary is not red. Gary is young. Red people are young. If Fiona is smart then Fiona is not round. All round people are red. If someone is blue and round then they are not big. If Anne is kind then Anne is round. If Erin is kind then Erin is smart. All kind, young people are blue. If Fiona is smart then Fiona is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nKind(Erin, True) ::: Erin is kind.\nSmart(Erin, True) ::: Erin is smart.\nBig(Fiona, True) ::: Fiona is big.\nRed(Fiona, True) ::: Fiona is red.\nSmart(Fiona, True) ::: Fiona is smart.\nBig(Gary, True) ::: Gary is big.\nBlue(Gary, True) ::: Gary is blue.\nNot(Red(Gary, True)) ::: Gary is not red.\nYoung(Gary, True) ::: Gary is young.\nRed($x, True) >>> Young($x, True) ::: Red people are young.\nIf(Fiona, Smart(Fiona, True), Not(Round(Fiona, True))) ::: If Fiona is smart then Fiona is not round.\nAll(Round($x, True), Red($x, True)) ::: All round people are red.\nIf(Gary, Blue($x, True), Not(Big($x, True))) ::: If someone is blue and round then they are not big.\nKind(Anne, True) >>> Round(Anne, True) ::: If Anne is kind then Anne is round.\nIf(Erin, Kind($x, True), Smart($x, True)) ::: If Erin is kind then Erin is smart.\nAll(Kind($x, True), Young($x, True), Blue($x, True)) ::: All kind, young people are blue.\nIf(Fiona, Smart($x, True), Big($x, True)) ::: If Fiona is smart then Fiona is big.\nQuery:\nKind(Anne, True) ::: Anne is kind.\n------\nProblem:\nAnne is kind. Erin is kind. Erin is smart. Fiona is big. Fiona is red. Fiona is smart. Gary is big. Gary is blue. Gary is not red. Gary is young. Red people are young. If Fiona is smart then Fiona is not round. All round people are red. If someone is blue and round then they are not big. If Anne is kind then Anne is round. If Erin is kind then Erin is smart. All kind"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1208_Q5",
    "context": "Anne is cold. Anne is not green. Anne is not kind. Anne is quiet. Anne is round. Bob is kind. Bob is round. Charlie is cold. Charlie is quiet. Charlie is round. Erin is furry. If something is quiet then it is rough. Cold things are round. If something is green then it is quiet. All cold things are quiet. Green things are quiet. If something is kind and green then it is furry. Furry things are green. If Bob is kind then Bob is not rough. If something is rough and green then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nRules:\nQuiet($x, True) >>> Rough($x, True) ::: If something is quiet then it is rough.\nCold($x, True) >>> Round($x, True) ::: Cold things are round.\nGreen($x, True) >>> Quiet($x, True) ::: If something is green then it is quiet.\nCold($x, True) >>> Quiet($x, True) ::: All cold things are quiet.\nGreen($x, True) >>> Quiet($x, True) ::: Green things are quiet.\nKind($x, True) && Green($x, True) >>> Furry($x, True) ::: If something is kind and green then it is furry.\nFurry($x, True) >>> Green($x, True) ::: Furry things are green.\nKind($x, True) >>> ~Rough($x, True) ::: If Bob is kind then Bob is not rough.\nRough($x, True) && Green($x, True) >>> Cold($x, True) ::: If something is rough and green then it is cold.\nFacts:\nCold(Anne, True) ::: Anne is cold.\n~Green(Anne, True) ::: Anne is not green.\n~Kind(Anne, True) ::: Anne is not kind.\nQuiet(Anne, True) ::: Anne is quiet.\nRound(Anne, True) ::: Anne is round.\nKind(Bob, True) ::: Bob is kind.\nRound(Bob, True) ::: Bob is round.\nCold(Charlie, True) ::: Charlie is cold.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRound(Charlie, True) ::: Charlie is round.\nFurry(Erin, True) ::: Erin is furry.\nQuery:\nQuiet(Erin, True) ::: Erin is quiet.\n------\nProblem:\nAnne is cold. Anne is not green. Anne is not kind. Anne is quiet. Anne is round. Bob is kind. Bob is round. Charlie is cold. Charlie is quiet. Charlie is round. Erin is furry. If something is quiet then it is rough. Cold things are round. If something is green then it is quiet. All cold things are quiet. Green things are"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-583_Q11",
    "context": "Bob is quiet. Bob is young. Charlie is quiet. Charlie is young. Fiona is nice. Fiona is quiet. Fiona is round. Fiona is white. Gary is green. Gary is nice. Gary is quiet. Gary is young. If someone is quiet and green then they are kind. Quiet people are white. All green, young people are nice. All green, white people are round. White people are nice. Quiet people are young. All green, white people are nice. If someone is kind and white then they are green. All nice, quiet people are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nYoung(Bob, True) ::: Bob is young.\nQuite(Charlie, True) ::: Charlie is quiet.\nYoung(Charlie, True) ::: Charlie is young.\nNice(Fiona, True) ::: Fiona is nice.\nQuite(Fiona, True) ::: Fiona is quiet.\nRound(Fiona, True) ::: Fiona is round.\nWhite(Fiona, True) ::: Fiona is white.\nGreen(Gary, True) ::: Gary is green.\nNice(Gary, True) ::: Gary is nice.\nQuite(Gary, True) ::: Gary is quiet.\nYoung(Gary, True) ::: Gary is young.\nRules:\nQuite($x, True) >>> White($x, True) ::: Quiet people are white.\nYoung($x, True) >>> Quite($x, True) ::: Quiet people are young.\nGreen($x, True) && Young($x, True) >>> Nice($x, True) ::: All green, young people are nice.\nGreen($x, True) && White($x, True) >>> Round($x, True) ::: All green, white people are round.\nWhite($x, True) >>> Nice($x, True) ::: White people are nice.\nQuite($x, True) && Green($x, True) >>> Kind($x, True) ::: If someone is quiet and green then they are kind.\nNice($x, True) && Quite($x, True) >>> Kind($x, True) ::: All nice, quiet people are kind.\nGreen($x, True) && White($x, True) >>> Kind($x, True) ::: If someone is kind and white then they are green.\nQuery:\nRound(Charlie, True) ::: Charlie is round.\n------\nProblem:\nBob is furry. Bob is green. Bob is quiet. Bob is white. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is white. Harry is furry. Harry is green. Harry is quiet. Harry is white. If someone is furry and green then they"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-178_Q18",
    "context": "Bob is big. Bob is quiet. Erin is white. Gary is big. Gary is red. Harry is green. Harry is smart. If someone is smart and big then they are white. All quiet, red people are smart. If someone is smart and white then they are green. Red, round people are quiet. If someone is big then they are round. If Erin is round and Erin is quiet then Erin is smart. If someone is red and green then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(Bob, True) ::: Bob is big.\nQuiet(Bob, True) ::: Bob is quiet.\nWhite(Erin, True) ::: Erin is white.\nBig(Gary, True) ::: Gary is big.\nRed(Gary, True) ::: Gary is red.\nGreen(Harry, True) ::: Harry is green.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBig($x, True) >>> Round($x, True) ::: If someone is big then they are round.\nQuiet($x, True) >>> Red($x, True) ::: All quiet, red people are smart.\nSmart($x, True) && White($x, True) >>> Green($x, True) ::: If someone is smart and white then they are green.\nSmart($x, True) && White($x, True) >>> Big($x, True) ::: If someone is smart and white then they are big.\nRed($x, True) && Green($x, True) >>> Big($x, True) ::: If someone is red and green then they are big.\nRound($x, True) && Quiet($x, True) >>> Smart($x, True) ::: If Erin is round and Erin is quiet then Erin is smart.\nRed($x, True) && Round($x, True) >>> Quiet($x, True) ::: Red, round people are quiet.\nQuery:\nSmart(Erin, True) ::: Erin is smart.\n------\nProblem:\nBob is big. Bob is quiet. Erin is white. Gary is big. Gary is red. Harry is green. Harry is smart. If someone is smart and big then they are white. All quiet, red people are smart. If someone is smart and white then they are green. Red, round people are quiet. If someone is big then they are round. If Erin is round and Erin is quiet then Erin is smart. If someone is red and green then they are big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is smart.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-40_Q3",
    "context": "The bald eagle is big. The bald eagle likes the cat. The bald eagle sees the squirrel. The cat chases the squirrel. The cat sees the squirrel. The squirrel likes the cat. The squirrel does not like the tiger. The tiger is big. The tiger is not young. The tiger sees the squirrel. If the tiger likes the bald eagle then the bald eagle sees the squirrel. If something likes the tiger and it does not chase the cat then the cat is not big. If something sees the cat then the cat is big. If something is big then it sees the bald eagle. If something sees the bald eagle then the bald eagle is young. Cold things are big. If something chases the tiger and it sees the cat then the tiger is big. If something is big then it chases the tiger. If something sees the bald eagle then it sees the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger chases the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nLikes(BaldEagle, Cat, True) ::: The bald eagle likes the cat.\nSees(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nChases(Cat, Squirrel, True) ::: The cat chases the squirrel.\nSees(Cat, Squirrel, True) ::: The cat sees the squirrel.\nLikes(Squirrel, Cat, True) ::: The squirrel likes the cat.\nLikes(Squirrel, Tiger, False) ::: The squirrel does not like the tiger.\nBig(Tiger, True) ::: The tiger is big.\nYoung(Tiger, False) ::: The tiger is not young.\nSees(Tiger, Squirrel, True) ::: The tiger sees the squirrel.\nRules:\nLikes(Tiger, BaldEagle, True) >>> Sees(BaldEagle, Squirrel) ::: If the tiger likes the bald eagle then the bald eagle sees the squirrel.\nLikes($x, Tiger, True) && DoesNotChase($x, Cat, True) >>> CatIsNotBig($x, True) ::: If something likes the tiger and it does not chase the cat then the cat is not big.\nSees($x, Cat) >>> CatIsBig($x, True) ::: If something sees the cat then the cat is big.\nBig($x, True) >>> Sees($x, BaldEagle) ::: If something is big then it sees the bald eagle.\nSees($x, BaldEagle) >>> BaldEagleIsYoung($x, True) ::: If something sees the bald eagle then the bald eagle is young.\nCold($x, True) >>> Big($x, True) ::: Cold things are big.\nChases($x, Tiger, True) && Sees($x, Cat) >>> TigerIsBig($x, True) ::: If something chases the tiger and it sees the cat then the tiger is big.\nBig($x, True) >>> Chases($x, Tiger) ::: If something is big then it chases the"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-144_Q18",
    "context": "The bald eagle is big. The bald eagle is not green. The bald eagle likes the bear. The bald eagle likes the squirrel. The bear chases the lion. The bear is green. The bear visits the bald eagle. The bear visits the squirrel. The lion is not green. The lion likes the bear. The lion visits the squirrel. The squirrel chases the bald eagle. The squirrel is cold. The squirrel visits the bald eagle. If someone is cold then they are not young. All big people are not green. If the lion is big and the lion is green then the lion chases the bald eagle. If someone chases the bald eagle then they like the bear. If someone is round and they visit the bald eagle then the bald eagle likes the squirrel. If someone visits the lion then they like the bald eagle. If the lion visits the squirrel and the squirrel chases the bear then the bear chases the bald eagle. If someone visits the lion then they are cold. If someone likes the bear then they chase the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nNotGreen(BaldEagle, True) ::: The bald eagle is not green.\nLikes(BaldEagle, Bear, True) ::: The bald eagle likes the bear.\nLikes(BaldEagle, Squirrel, True) ::: The bald eagle likes the squirrel.\nChases(Bear, Lion, True) ::: The bear chases the lion.\nGreen(Bear, True) ::: The bear is green.\nVisits(Bear, BaldEagle, True) ::: The bear visits the bald eagle.\nVisits(Bear, Squirrel, True) ::: The bear visits the squirrel.\nNotGreen(Lion, True) ::: The lion is not green.\nLikes(Lion, Bear, True) ::: The lion likes the bear.\nVisits(Lion, Squirrel, True) ::: The lion visits the squirrel.\nChases(Squirrel, BaldEagle, True) ::: The squirrel chases the bald eagle.\nCold(Squirrel, True) ::: The squirrel is cold.\nVisits(Squirrel, BaldEagle, True) ::: The squirrel visits the bald eagle.\nRules:\nYoung($x, True) >>> NotGreen($x, True) ::: If someone is cold then they are not young.\nBig($x, True) >>> NotGreen($x, True) ::: All big people are not green.\nLikes(Lion, BaldEagle, True) >>> Chases(Lion, BaldEagle, True) ::: If the lion is big and the lion is green then the lion chases the bald eagle.\nLikes($x, Bear, True) >>> Chases($x, Bear, True) ::: If someone chases the bald eagle then they like the bear.\nVisits($x, BaldEagle, True) && Round($x, True) >>> Likes(BaldEagle, Squirrel, True) ::: If someone visits the bald eagle then"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-144_Q12",
    "context": "The bald eagle is big. The bald eagle is not green. The bald eagle likes the bear. The bald eagle likes the squirrel. The bear chases the lion. The bear is green. The bear visits the bald eagle. The bear visits the squirrel. The lion is not green. The lion likes the bear. The lion visits the squirrel. The squirrel chases the bald eagle. The squirrel is cold. The squirrel visits the bald eagle. If someone is cold then they are not young. All big people are not green. If the lion is big and the lion is green then the lion chases the bald eagle. If someone chases the bald eagle then they like the bear. If someone is round and they visit the bald eagle then the bald eagle likes the squirrel. If someone visits the lion then they like the bald eagle. If the lion visits the squirrel and the squirrel chases the bear then the bear chases the bald eagle. If someone visits the lion then they are cold. If someone likes the bear then they chase the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not chase the bear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nNotGreen(BaldEagle, True) ::: The bald eagle is not green.\nLikes(BaldEagle, Bear, True) ::: The bald eagle likes the bear.\nLikes(BaldEagle, Squirrel, True) ::: The bald eagle likes the squirrel.\nChases(Bear, Lion, True) ::: The bear chases the lion.\nGreen(Bear, True) ::: The bear is green.\nVisits(Bear, BaldEagle, True) ::: The bear visits the bald eagle.\nVisits(Bear, Squirrel, True) ::: The bear visits the squirrel.\nNotGreen(Lion, True) ::: The lion is not green.\nLikes(Lion, Bear, True) ::: The lion likes the bear.\nVisits(Lion, Squirrel, True) ::: The lion visits the squirrel.\nChases(Squirrel, BaldEagle, True) ::: The squirrel chases the bald eagle.\nCold(Squirrel, True) ::: The squirrel is cold.\nVisits(Squirrel, BaldEagle, True) ::: The squirrel visits the bald eagle.\nRules:\nYoung($x, True) >>> NotGreen($x, True) ::: If someone is cold then they are not young.\nBig($x, True) >>> NotGreen($x, True) ::: All big people are not green.\nLikes(Lion, BaldEagle, True) >>> Chases(Lion, BaldEagle, True) ::: If the lion is big and the lion is green then the lion chases the bald eagle.\nLikes($x, Bear, True) >>> Chases($x, Bear, True) ::: If someone chases the bald eagle then they like the bear.\nVisits(Lion, BaldEagle) && Chases(Squirrel, Bear) >>> Chases(Bear, BaldEagle) ::: If someone visits the lion then they are cold."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-718_Q2",
    "context": "Bob is round. Charlie is big. Charlie is furry. Charlie is green. Charlie is round. Charlie is white. Dave is big. Dave is quiet. Gary is green. Gary is quiet. All furry people are white. If someone is big then they are smart. All white, big people are round. If someone is quiet then they are smart. Smart people are big. All big, green people are furry. If someone is smart and round then they are quiet. Green people are smart. All smart, furry people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nFacts:\nRound(Bob, True) ::: Bob is round.\nBig(Charlie, True) ::: Charlie is big.\nFurry(Charlie, True) ::: Charlie is furry.\nGreen(Charlie, True) ::: Charlie is green.\nRound(Charlie, True) ::: Charlie is round.\nWhite(Charlie, True) ::: Charlie is white.\nBig(Dave, True) ::: Dave is big.\nQuiet(Dave, True) ::: Dave is quiet.\nGreen(Gary, True) ::: Gary is green.\nQuiet(Gary, True) ::: Gary is quiet.\nRules:\nFurry($x, True) >>> White($x, True) ::: All furry people are white.\nBig($x, True) >>> Smart($x, True) ::: If someone is big then they are smart.\nBig($x, True) && White($x, True) >>> Round($x, True) ::: All white, big people are round.\nQuiet($x, True) >>> Smart($x, True) ::: If someone is quiet then they are smart.\nSmart($x, True) >>> Big($x, True) ::: Smart people are big.\nBig($x, True) && Green($x, True) >>> Furry($x, True) ::: All big, green people are furry.\nFurry($x, True) && Smart($x, True) && Round($x, True) >>> Quiet($x, True) ::: If someone is smart and round then they are quiet.\nGreen($x, True) >>> Smart($x, True) ::: Green people are smart.\nSmart($x, True) && Furry($x, True) >>> Big($x, True) ::: All smart, furry people are big.\nQuery:\nNot(Quiet(Gary, True)) ::: Gary is not quiet.\n------\nProblem:\nBob is furry. Bob is green. Bob is quiet. Bob is white. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is white. Dave is furry. Dave is green. Dave is quiet. Dave is white. Erin is furry. Erin is green. Erin is quiet."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1044_Q12",
    "context": "Bob is blue. Bob is white. Charlie is green. Charlie is quiet. Charlie is round. Charlie is white. Erin is blue. Erin is cold. Erin is green. Gary is big. Gary is blue. Gary is cold. Gary is green. Gary is quiet. Gary is round. Gary is white. White things are cold. If something is blue then it is white. If something is cold then it is round. If something is green then it is quiet. All round, big things are green. If Bob is round then Bob is big. All white, quiet things are big. If something is big then it is cold. If something is blue and quiet then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nWhite(Bob, True) ::: Bob is white.\nGreen(Charlie, True) ::: Charlie is green.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRound(Charlie, True) ::: Charlie is round.\nWhite(Charlie, True) ::: Charlie is white.\nBlue(Erin, True) ::: Erin is blue.\nCold(Erin, True) ::: Erin is cold.\nGreen(Erin, True) ::: Erin is green.\nBig(Gary, True) ::: Gary is big.\nBlue(Gary, True) ::: Gary is blue.\nCold(Gary, True) ::: Gary is cold.\nGreen(Gary, True) ::: Gary is green.\nQuiet(Gary, True) ::: Gary is quiet.\nRound(Gary, True) ::: Gary is round.\nWhite(Gary, True) ::: Gary is white.\nRules:\nWhite($x, True) >>> Cold($x, True) ::: White things are cold.\nBlue($x, True) >>> White($x, True) ::: If something is blue then it is white.\nCold($x, True) >>> Round($x, True) ::: If something is cold then it is round.\nGreen($x, True) >>> Quiet($x, True) ::: If something is green then it is quiet.\nBig($x, True) && Green($x, True) >>> Round($x, True) ::: All round, big things are green.\nRound($x, True) >>> Big($x, True) ::: If Bob is round then Bob is big.\nWhite($x, True) && Quiet($x, True) >>> Big($x, True) ::: All white, quiet things are big.\nBig($x, True) >>> Cold($x, True) ::: If something is big then it is cold.\nBlue($x, True) && Quiet($x, True) >>> Cold($x, True) ::: If something is blue and quiet then it is cold.\nQuery:\nNot(Quiet(Bob, True)) ::: Bob is not quiet.\n------\nProblem:\nB"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-268_Q3",
    "context": "Anne is green. Charlie is blue. Charlie is not green. Charlie is nice. Erin is young. Harry is kind. Harry is white. If something is blue then it is nice. If something is blue and not quiet then it is nice. If something is nice then it is kind. If Erin is green then Erin is white. All green things are blue. If something is young then it is white. If Harry is white then Harry is young. If Erin is nice and Erin is blue then Erin is young. All white things are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nYoung($x, bool) ::: Is x young?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nBlue(Charlie, True) ::: Charlie is blue.\nNot(Green(Charlie, True)) ::: Charlie is not green.\nNice(Charlie, True) ::: Charlie is nice.\nYoung(Erin, True) ::: Erin is young.\nKind(Harry, True) ::: Harry is kind.\nWhite(Harry, True) ::: Harry is white.\nRules:\nBlue($x, True) >>> Nice($x, True) ::: If something is blue then it is nice.\nBlue($x, True) && Not(Quite($x, True)) >>> Nice($x, True) ::: If something is blue and not quiet then it is nice.\nNice($x, True) >>> Kind($x, True) ::: If something is nice then it is kind.\nIf(Erin, Green(Erin, True)) >>> White(Erin, True) ::: If Erin is green then Erin is white.\nAll(Green($x, True)) >>> Blue($x, True) ::: All green things are blue.\nYoung($x, True) >>> White($x, True) ::: If something is young then it is white.\nWhite(Harry, True) >>> Young(Harry, True) ::: If Harry is white then Harry is young.\nIf(Erin, Nice(Erin, True)) && If(Erin, Blue(Erin, True)) >>> Young(Erin, True) ::: If Erin is nice and Erin is blue then Erin is young.\nAll(White($x, True)) >>> Green($x, True) ::: All white things are green.\nQuery:\nYoung(Harry, True) ::: Harry is young.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-689_Q2",
    "context": "Anne is big. Anne is rough. Anne is young. Bob is young. Charlie is cold. Charlie is green. Charlie is nice. Charlie is young. Gary is green. Gary is young. Big, quiet people are green. If someone is cold and young then they are nice. If Bob is rough and Bob is green then Bob is cold. Green people are nice. All nice people are quiet. Young people are cold. If someone is quiet and nice then they are rough. If someone is rough and young then they are cold. All rough, nice people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nBig(Anne, True) ::: Anne is big.\nRough(Anne, True) ::: Anne is rough.\nYoung(Anne, True) ::: Anne is young.\nYoung(Bob, True) ::: Bob is young.\nCold(Charlie, True) ::: Charlie is cold.\nGreen(Charlie, True) ::: Charlie is green.\nNice(Charlie, True) ::: Charlie is nice.\nYoung(Charlie, True) ::: Charlie is young.\nGreen(Gary, True) ::: Gary is green.\nYoung(Gary, True) ::: Gary is young.\nRules:\nBig($x, True) >>> Green($x, True) ::: Big, quiet people are green.\nCold($x, True) && Young($x, True) >>> Nice($x, True) ::: If someone is cold and young then they are nice.\nCold($x, True) && Young($x, True) >>> Nice($x, True) ::: If Bob is rough and Bob is green then Bob is cold.\nGreen($x, True) >>> Nice($x, True) ::: Green people are nice.\nNice($x, True) >>> Quiet($x, True) ::: All nice people are quiet.\nYoung($x, True) >>> Cold($x, True) ::: Young people are cold.\nQuiet($x, True) && Nice($x, True) >>> Rough($x, True) ::: If someone is quiet and nice then they are rough.\nRough($x, True) && Young($x, True) >>> Cold($x, True) ::: If someone is rough and young then they are cold.\nNice($"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-333_Q16",
    "context": "Bob is round. Erin is quiet. Erin is smart. Erin is not white. Fiona is green. Fiona is quiet. Fiona is smart. Gary is big. Gary is green. Gary is quiet. Gary is white. All quiet things are smart. Round things are quiet. All green, round things are white. If Fiona is not quiet then Fiona is white. Smart, white things are big. If something is nice and quiet then it is big. If something is quiet and not smart then it is not green. All quiet, smart things are green. If something is big then it is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nFacts:\nRound(Bob, True) ::: Bob is round.\nQuiet(Erin, True) ::: Erin is quiet.\nSmart(Erin, True) ::: Erin is smart.\nNot(White(Erin, True), True) ::: Erin is not white.\nGreen(Fiona, True) ::: Fiona is green.\nQuiet(Fiona, True) ::: Fiona is quiet.\nSmart(Fiona, True) ::: Fiona is smart.\nGreen(Gary, True) ::: Gary is green.\nQuiet(Gary, True) ::: Gary is quiet.\nWhite(Gary, True) ::: Gary is white.\nRules:\nQuiet($x, True) >>> Smart($x, True) ::: All quiet things are smart.\nRound($x, True) >>> Quiet($x, True) ::: Round things are quiet.\nGreen($x, True) && Round($x, True) >>> White($x, True) ::: All green, round things are white.\nNot(Quiet($x, True), True) >>> White($x, True) ::: If Fiona is not quiet then Fiona is white.\nSmart($x, True) && White($x, True) >>> Big($x, True) ::: Smart, white things are big.\nQuiet($x, True) && Not(Smart($x, True), True) >>> Not(Green($x, True), True) ::: If something is quiet and not smart then it is not green.\nQuiet($x, True) && Smart($x, True) >>> Green($x, True) ::: All quiet, smart things are green.\nBig($x, True) >>> Nice($x, True) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-781_Q8",
    "context": "The bald eagle chases the rabbit. The bald eagle is red. The bald eagle is round. The bald eagle likes the squirrel. The lion chases the squirrel. The lion is round. The rabbit is green. The rabbit is nice. The rabbit likes the bald eagle. The rabbit sees the squirrel. The squirrel is round. The squirrel sees the bald eagle. If something likes the rabbit then the rabbit sees the lion. If something chases the squirrel and it likes the bald eagle then the squirrel is nice. If something is nice and it likes the squirrel then the squirrel chases the rabbit. If something likes the bald eagle and it sees the rabbit then it likes the squirrel. If something likes the squirrel and it likes the lion then the lion likes the bald eagle. If something is young then it sees the rabbit. Green things are round. All round things are young. If the squirrel is nice then the squirrel likes the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not see the rabbit.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(BaldEagle, Rabbit, True) ::: The bald eagle chases the rabbit.\nIs(BaldEagle, Red, True) ::: The bald eagle is red.\nIs(BaldEagle, Round, True) ::: The bald eagle is round.\nLikes(BaldEagle, Squirrel, True) ::: The bald eagle likes the squirrel.\nChases(Lion, Squirrel, True) ::: The lion chases the squirrel.\nIs(Lion, Round, True) ::: The lion is round.\nIs(Rabbit, Green, True) ::: The rabbit is green.\nIs(Rabbit, Nice, True) ::: The rabbit is nice.\nLikes(Rabbit, BaldEagle, True) ::: The rabbit likes the bald eagle.\nSees(Rabbit, Squirrel, True) ::: The rabbit sees the squirrel.\nIs(Squirrel, Round, True) ::: The squirrel is round.\nSees(Squirrel, BaldEagle, True) ::: The squirrel sees the bald eagle.\nRules:\nLikes($x, Rabbit, True) >>> Sees($x, Lion, True) ::: If something likes the rabbit then the rabbit sees the lion.\nChases($x, Squirrel, True) && Likes($x, BaldEagle, True) >>> Nice($x, True) ::: If something chases the squirrel and it likes the bald eagle then the squirrel"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-694_Q8",
    "context": "Anne is young. Charlie is not red. Gary is not blue. Gary is kind. Gary is not rough. Gary is not young. Harry is green. If Gary is green then Gary is not blue. All young people are blue. If Harry is white and Harry is young then Harry is not green. All red people are green. Blue, young people are red. If someone is green then they are white. If someone is blue and white then they are kind. All red people are not rough. If someone is young and not white then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nGreen($x, bool) ::: Is x green?\nFacts:\nYoung(Anne, True) ::: Anne is young.\nNot(Red(Charlie, True)) ::: Charlie is not red.\nNot(Blue(Gary, True)) ::: Gary is not blue.\nKind(Gary, True) ::: Gary is kind.\nNot(Rough(Gary, True)) ::: Gary is not rough.\nNot(Young(Gary, True)) ::: Gary is not young.\nGreen(Harry, True) ::: Harry is green.\nIf(Gary, Green(Gary, True), Not(Blue(Gary, True))) ::: If Gary is green then Gary is not blue.\nAll(Young($x, True), Blue($x, True)) ::: All young people are blue.\nIf(Harry, White(Harry, True), Young(Harry, True)), Not(Green(Harry, True))) ::: If Harry is white and Harry is young then Harry is not green.\nAll(Red($x, True), Green($x, True)) ::: All red people are green.\nBlue(Young($x, True), Red($x, True)) ::: Blue, young people are red.\nIf(Someone, Green($x, True), White($x, True)) ::: If someone is green then they are white.\nIf(Someone, Blue($x, True), Kind($x, True)) ::: If someone is blue and white then they are kind.\nAll(Red($x, True), Not(Rough($x, True))) ::: All red people are not rough.\nIf(Someone, Young($x, True), Not(White($x, True))) ::: If someone is young and not white then they are rough.\nQuery:\nRough(An"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-566_Q22",
    "context": "The bald eagle chases the squirrel. The bald eagle eats the dog. The bear eats the bald eagle. The bear eats the dog. The dog chases the bald eagle. The dog chases the bear. The dog chases the squirrel. The dog eats the squirrel. The dog is big. The dog is blue. The dog is green. The squirrel is green. If someone likes the squirrel then they chase the dog. If someone eats the bald eagle then they are red. If someone is green and they eat the bear then they like the squirrel. If someone eats the dog then the dog eats the bald eagle. If someone eats the bear then the bear is big. If someone eats the squirrel and they chase the bear then the bear chases the bald eagle. If someone is red and green then they eat the bear. If someone likes the bear and they eat the bear then the bear eats the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nLikes($x, $y, bool) ::: Does x like y?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nChases(BaldEagle, Squirrel, True) ::: The bald eagle chases the squirrel.\nEats(BaldEagle, Dog, True) ::: The bald eagle eats the dog.\nEats(Bear, BaldEagle, True) ::: The bear eats the bald eagle.\nEats(Bear, Dog, True) ::: The bear eats the dog.\nChases(Dog, BaldEagle, True) ::: The dog chases the bald eagle.\nChases(Dog, Bear, True) ::: The dog chases the bear.\nChases(Dog, Squirrel, True) ::: The dog chases the squirrel.\nEats(Dog, Squirrel, True) ::: The dog eats the squirrel.\nBig(Dog, True) ::: The dog is big.\nBlue(Dog, True) ::: The dog is blue.\nGreen(Dog, True) ::: The dog is green.\nGreen(Squirrel, True) ::: The squirrel is green.\nLikes(x, Squirrel, True) >>> Chases(x, Dog, True) ::: If someone likes the squirrel then they chase the dog.\nEats(x, BaldEagle, True) >>> Red($x, True) ::: If someone eats the bald eagle then they are red.\nGreen($x, True) && Eats(x, Bear, True) >>> Likes(x, Squirrel, True) ::: If someone eats the bear and they are green then they like the squirrel.\nEats(x, Dog) >>> Eats(Dog, BaldEagle, True) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-745_Q18",
    "context": "The bear is round. The bear likes the cow. The bear visits the lion. The cow is big. The cow is rough. The lion needs the bear. The mouse likes the lion. If someone visits the lion then they are round. If someone needs the bear then they need the lion. If someone needs the lion then they visit the lion. If someone visits the lion and the lion is round then they like the lion. If someone is rough then they need the lion. If someone likes the lion and they need the lion then the lion visits the mouse. If someone is rough then they visit the lion. If someone likes the lion and the lion is big then they are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse needs the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nFacts:\nRound(Bear, True) ::: The bear is round.\nLikes(Bear, Cow, True) ::: The bear likes the cow.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nBig(Cow, True) ::: The cow is big.\nRough(Cow, True) ::: The cow is rough.\nNeeds(Lion, Bear, True) ::: The lion needs the bear.\nLikes(Mouse, Lion, True) ::: The mouse likes the lion.\nRules:\nVisits($x, $y, True) >>> Round($x, True) ::: If someone visits the lion then they are round.\nNeeds($x, $y, True) >>> Needs($x, $y, True) ::: If someone needs the bear then they need the lion.\nNeeds($x, $y, True) >>> Visits($x, $y, True) ::: If someone needs the lion then they visit the lion.\nVisits($x, $y, True) && Round($y, True) >>> Likes($x, $y, True) ::: If someone visits the lion and the lion is round then they like the lion.\nRough($x, True) >>> Needs($x, $y, True) ::: If someone is rough then they need the lion.\nLikes($x, $y, True) && Needs($x, $y, True) >>> Visits($y, $z, True) ::: If someone likes the lion and they need the lion then the lion visits the mouse.\nRough($x, True) >>> Visits($x, $y, True) ::: If someone is rough then"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1003_Q15",
    "context": "Anne is big. Anne is blue. Anne is rough. Bob is cold. Bob is green. Bob is rough. Bob is white. Dave is blue. Dave is white. Harry is young. If Bob is big then Bob is white. Young people are white. Cold, young people are rough. If Anne is green and Anne is young then Anne is white. White, big people are blue. All blue people are green. If someone is young and white then they are big. Blue people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nBlue(Anne, True) ::: Anne is blue.\nRough(Anne, True) ::: Anne is rough.\nCold(Bob, True) ::: Bob is cold.\nGreen(Bob, True) ::: Bob is green.\nRough(Bob, True) ::: Bob is rough.\nWhite(Bob, True) ::: Bob is white.\nBlue(Dave, True) ::: Dave is blue.\nWhite(Dave, True) ::: Dave is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBig(Bob, True) >>> White(Bob, True) ::: If Bob is big then Bob is white.\nYoung($x, True) >>> White($x, True) ::: Young people are white.\nYoung($x, True) && Cold($x, True) >>> Rough($x, True) ::: Cold, young people are rough.\nGreen($x, True) && Young($x, True) >>> White($x, True) ::: If Anne is green and Anne is young then Anne is white.\nWhite($x, True) && Big($x, True) >>> Blue($x, True) ::: White, big people are blue.\nBlue($x, True) >>> Green($x, True) ::: All blue people are green.\nYoung($x, True) && White($x, True) >>> Big($x, True) ::: If someone is young and white then they are big.\nBlue($x, True) >>> Cold($x, True) ::: Blue people are cold.\nQuery:\nNot(Big(Dave, True)) ::: Dave is not big."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-178_Q11",
    "context": "Bob is big. Bob is quiet. Erin is white. Gary is big. Gary is red. Harry is green. Harry is smart. If someone is smart and big then they are white. All quiet, red people are smart. If someone is smart and white then they are green. Red, round people are quiet. If someone is big then they are round. If Erin is round and Erin is quiet then Erin is smart. If someone is red and green then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nSmart($x, bool) ::: Is x smart?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(Bob, True) ::: Bob is big.\nQuiet(Bob, True) ::: Bob is quiet.\nWhite(Erin, True) ::: Erin is white.\nBig(Gary, True) ::: Gary is big.\nRed(Gary, True) ::: Gary is red.\nGreen(Harry, True) ::: Harry is green.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBig($x, True) >>> Round($x, True) ::: If someone is big then they are round.\nQuiet($x, True) >>> Red($x, True) ::: All quiet, red people are smart.\nSmart($x, True) && Big($x, True) >>> White($x, True) ::: If someone is smart and big then they are white.\nSmart($x, True) && White($x, True) >>> Green($x, True) ::: If someone is smart and white then they are green.\nRed($x, True) && Round($x, True) >>> Quiet($x, True) ::: Red, round people are quiet.\nGreen($x, True) >>> Red($x, True) ::: If someone is red and green then they are big.\nQuery:\nGreen(Gary, True) ::: Gary is green.\n------\nProblem:\nBob is big. Bob is quiet. Erin is white. Gary is big. Gary is red. Harry is green. Harry is smart. If someone is smart and big then they are white. All quiet, red people are smart. If someone is smart and white then they are green. Red, round people are quiet. If someone is big then they are round. If Erin is round and Erin is quiet then Er"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-419_Q24",
    "context": "The bear likes the cow. The bear does not see the cow. The cow chases the bear. The cow is cold. The cow sees the dog. The dog likes the bear. The dog does not like the tiger. The tiger is not big. The tiger does not see the bear. The tiger sees the cow. If something likes the dog then it is round. If something sees the cow then it is round. If the cow is young and the bear does not see the cow then the bear is young. If something chases the dog then it likes the tiger. If something chases the dog and it is cold then it is young. If the bear likes the cow then the cow chases the dog. If something sees the bear and the bear is young then the bear is rough. If something chases the bear and the bear is young then the bear chases the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger chases the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nChases($x, $y, bool) ::: Does x chase y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nFacts:\nLikes(Bear, Cow, True) ::: The bear likes the cow.\nSees(Bear, Cow, False) ::: The bear does not see the cow.\nChases(Cow, Bear, True) ::: The cow chases the bear.\nCold(Cow, True) ::: The cow is cold.\nSees(Cow, Dog, True) ::: The cow sees the dog.\nLikes(Dog, Bear, True) ::: The dog likes the bear.\nLikes(Dog, Tiger, False) ::: The dog does not like the tiger.\nBig(Tiger, False) ::: The tiger is not big.\nSees(Tiger, Bear, False) ::: The tiger does not see the bear.\nSees(Tiger, Cow, True) ::: The tiger sees the cow.\nRules:\nLikes($x, Dog, True) >>> Round($x, True) ::: If something likes the dog then it is round.\nSees($x, Cow, True) >>> Round($x, True) ::: If something sees the cow then it is round.\nYoung($x, True) && Bear($x, True) && Sees($x, Cow, True) >>> Young($x, True) ::: If the cow is young and the bear does not see the cow then the bear is young.\nChases($x, Dog, True) >>> Likes($x, Tiger, True) ::: If something chases the dog then it likes the tiger.\nChases($x, Dog, True) && Cold($x, True) >>> Young($x, True) ::: If something chases the dog and"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-843_Q11",
    "context": "Charlie is blue. Charlie is quiet. Dave is not blue. Dave is green. Dave is quiet. Dave is round. Dave is not white. Erin is blue. Erin is green. Erin is quiet. Gary is green. Gary is quiet. If someone is blue and not quiet then they are round. If someone is green then they are round. Blue, cold people are green. All blue people are cold. If Charlie is not quiet then Charlie is not round. If Gary is blue and Gary is round then Gary is not cold. All round people are not furry. If someone is cold and not furry then they are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nQuiet($x, bool) ::: Is x quiet?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nFacts:\nBlue(Charlie, True) ::: Charlie is blue.\nQuiet(Charlie, True) ::: Charlie is quiet.\nNot(Blue(Dave, True)) ::: Dave is not blue.\nGreen(Dave, True) ::: Dave is green.\nQuiet(Dave, True) ::: Dave is quiet.\nRound(Dave, True) ::: Dave is round.\nNot(White(Dave, True)) ::: Dave is not white.\nBlue(Erin, True) ::: Erin is blue.\nGreen(Erin, True) ::: Erin is green.\nQuiet(Erin, True) ::: Erin is quiet.\nGreen(Gary, True) ::: Gary is green.\nQuiet(Gary, True) ::: Gary is quiet.\nRules:\nNot(Quiet(Charlie, True)) >>> Not(Round(Charlie, True)) ::: If Charlie is not quiet then Charlie is not round.\nBlue($x, True) && Not(Quiet($x, True)) >>> Round($x, True) ::: If someone is blue and not quiet then they are round.\nGreen($x, True) >>> Round($x, True) ::: If someone is green then they are round.\nBlue($x, True) && Cold($x, True) >>> Green($x, True) ::: Blue, cold people are green.\nAll(Blue($x, True)) >>> Cold($x, True) ::: All blue people are cold.\nNot(Round($x, True)) >>> Furry($x, True) ::: All round people are not furry.\nCold($x, True) && Not(Furry($x, True)) >>> White($x, True) ::: If someone is cold and not furry then they are white.\nNot(Blue($x, True)) >>> Cold($x, True) ::: If Charlie is not quiet then Charlie is not round.\nNot(Blue($x, True)) && Round($x, True) && Cold($x, True) >>> Not(Gary, True) ::: If Gary is blue and Gary is round then Gary is not cold.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1105_Q4",
    "context": "Bob is cold. Bob is furry. Bob is kind. Bob is not nice. Bob is white. Charlie is cold. Charlie is not furry. Charlie is kind. Charlie is red. Gary is kind. Gary is nice. Gary is red. Harry is cold. Harry is furry. Kind things are cold. If something is blue then it is kind. Red, furry things are kind. If something is white and nice then it is red. All cold things are red. All nice, cold things are red. If Harry is red and Harry is kind then Harry is blue. If something is red and blue then it is white. If something is blue and white then it is not nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nWhite($x, bool) ::: Is x white?\nBlue($x, bool) ::: Is x blue?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nFurry(Bob, True) ::: Bob is furry.\nKind(Bob, True) ::: Bob is kind.\nNot(Nice(Bob, True)) ::: Bob is not nice.\nWhite(Bob, True) ::: Bob is white.\nCold(Charlie, True) ::: Charlie is cold.\nNot(Furry(Charlie, True)) ::: Charlie is not furry.\nKind(Charlie, True) ::: Charlie is kind.\nRed(Charlie, True) ::: Charlie is red.\nKind(Gary, True) ::: Gary is kind.\nNice(Gary, True) ::: Gary is nice.\nRed(Gary, True) ::: Gary is red.\nCold(Harry, True) ::: Harry is cold.\nFurry(Harry, True) ::: Harry is furry.\nRules:\nKind($x, True) >>> Cold($x, True) ::: Kind things are cold.\nBlue($x, True) >>> Kind($x, True) ::: If something is blue then it is kind.\nRed($x, True) && Furry($x, True) >>> Kind($x, True) ::: Red, furry things are kind.\nWhite($x, True) && Nice($x, True) >>> Red($x, True) ::: If something is white and nice then it is red.\nAll($x, Cold($x, True)) >>> Red($x, True) ::: All cold things are red.\nAll($x, Nice($x, True) && Cold($x, True)) >>> Red($x, True) ::: All nice, cold things are red.\nIf(Red($x, True) && Kind($x, True) && Blue($x, True)) >>> Harry($x, True) ::: If Harry is red and Harry is kind then Harry is blue.\nIf(Red($x, True) && Blue($x, True)) >>> White($x, True) ::: If something is red and blue then it is white.\nIf(Blue($x, True"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1081_Q4",
    "context": "Anne is big. Anne is furry. Anne is rough. Charlie is round. Erin is kind. Erin is smart. Fiona is furry. Fiona is kind. Fiona is rough. Fiona is smart. White, big people are smart. Rough, big people are kind. If Erin is kind and Erin is smart then Erin is furry. If Charlie is big and Charlie is kind then Charlie is white. Furry people are big. Round people are rough. If someone is rough then they are big. All white people are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Anne, True) ::: Anne is big.\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nRound(Charlie, True) ::: Charlie is round.\nKind(Erin, True) ::: Erin is kind.\nSmart(Erin, True) ::: Erin is smart.\nFurry(Fiona, True) ::: Fiona is furry.\nKind(Fiona, True) ::: Fiona is kind.\nRough(Fiona, True) ::: Fiona is rough.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nBig($x, True) >>> Smart($x, True) ::: White, big people are smart.\nRough($x, True) >>> Big($x, True) ::: Rough, big people are kind.\nFurry($x, True) >>> Big($x, True) ::: Furry people are big.\nRound($x, True) >>> Rough($x, True) ::: Round people are rough.\nRough($x, True) >>> Big($x, True) ::: If someone is rough then they are big.\nKind($x, True) && Smart($x, True) >>> Furry($x, True) ::: If Erin is kind and Erin is smart then Erin is furry.\nKind($x, True) && Smart($x, True) >>> Furry($x, True) ::: If Erin is kind and Erin is smart then Erin is furry.\nBig($x, True) >>> Kind($x, True) ::: If Charlie is big and Charlie is kind then Charlie is white.\nFacts:\nWhite(Charlie, True) ::: Charlie is white.\nQuery:\nNot(Rough(Charlie, True)) ::: Charlie is not rough.\n------\nProblem:\nAnne is big. Anne is furry. Anne is rough. Charlie is round. Erin is kind. Erin is smart. Fiona is furry. Fiona is kind. Fiona is rough. Fiona is smart. White, big people are smart. Rough,"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1176_Q18",
    "context": "Bob is not round. Charlie is furry. Charlie is nice. Charlie is smart. Erin is red. Fiona is furry. Fiona is young. All red people are not round. Red people are not blue. All young people are furry. If Erin is red and Erin is not round then Erin is nice. If someone is round and nice then they are not young. All smart people are young. Nice people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotRound(Bob, True) ::: Bob is not round.\nFurry(Charlie, True) ::: Charlie is furry.\nNice(Charlie, True) ::: Charlie is nice.\nSmart(Charlie, True) ::: Charlie is smart.\nRed(Erin, True) ::: Erin is red.\nFurry(Fiona, True) ::: Fiona is furry.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nRed($x, True) >>> NotRound($x, True) ::: All red people are not round.\nRed($x, True) >>> NotBlue($x, True) ::: Red people are not blue.\nYoung($x, True) >>> Furry($x, True) ::: All young people are furry.\nRed($x, True) && NotRound($x, True) >>> Nice($x, True) ::: If Erin is red and Erin is not round then Erin is nice.\nRound($x, True) && Nice($x, True) >>> NotYoung($x, True) ::: If someone is round and nice then they are not young.\nSmart($x, True) >>> Young($x, True) ::: All smart people are young.\nNice($x, True) >>> Smart($x, True) ::: Nice people are smart.\nQuery:\nRound(Charlie, True) ::: Charlie is round.\n------\nProblem:\nBob is not round. Charlie is furry. Charlie is nice. Charlie is smart. Erin is red. Fiona is furry. Fiona is young. All red people are not round. Red people are not blue. All young people are furry. If Erin is red and Erin is not round then Erin is nice. If someone is round and nice then they are not young. All smart people are young. Nice people are smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is round.\n###\nPredicates:\nRound($x, bool) ::: Is x round?\nFurry($x,"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-305_Q11",
    "context": "Anne is quiet. Bob is not rough. Gary is big. Gary is kind. Gary is rough. Gary is young. Harry is young. All big people are furry. Young people are furry. All quiet, kind people are furry. If Harry is furry and Harry is quiet then Harry is round. Rough, kind people are quiet. Young, rough people are kind. All quiet, furry people are round. Furry people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nNot(Rough(Bob, True)) ::: Bob is not rough.\nBig(Gary, True) ::: Gary is big.\nKind(Gary, True) ::: Gary is kind.\nRough(Gary, True) ::: Gary is rough.\nYoung(Gary, True) ::: Gary is young.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBig($x, True) >>> Furry($x, True) ::: All big people are furry.\nYoung($x, True) >>> Furry($x, True) ::: Young people are furry.\nQuite($x, True) && Kind($x, True) >>> Furry($x, True) ::: All quiet, kind people are furry.\nHarry(Furry, True) && Harry(Quite, True) >>> Harry(Round, True) ::: If Harry is furry and Harry is quiet then Harry is round.\nRough($x, True) && Kind($x, True) >>> Quite($x, True) ::: Rough, kind people are quiet.\nYoung($x, True) && Rough($x, True) >>> Kind($x, True) ::: Young, rough people are kind.\nFurry($x, True) >>> Round($x, True) ::: All quiet, furry people are round.\nFurry($x, True) >>> Rough($x, True) ::: Furry people are rough.\nQuery:\nRound(Harry, True) ::: Harry is round.\n------\nProblem:\nAnne is quiet. Bob is not rough. Gary is big. Gary is kind. Gary is rough. Gary is young. Harry is young. All big people are furry. Young people are furry. All quiet, kind people are furry. If Harry is furry and Harry is quiet then Harry is round. Rough, kind people are quiet. Young, rough people are kind. All quiet, furry people are round. Furry people are rough.\nQuestion:\nBased on the above information, is the following statement true"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-585_Q1",
    "context": "The cow is not rough. The lion is green. The lion needs the cow. The lion needs the rabbit. The rabbit is not rough. The squirrel chases the rabbit. The squirrel is not rough. If something needs the squirrel then it likes the cow. If something needs the cow then it needs the squirrel. If something is round and young then it does not need the squirrel. If something is round then it does not need the rabbit. If something likes the rabbit then it chases the lion. If something needs the lion then it chases the squirrel. If the squirrel likes the cow then the cow does not need the rabbit. If the squirrel likes the cow and the squirrel is not green then the squirrel needs the rabbit. If something needs the squirrel then the squirrel needs the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is not rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotRough(Cow, True) ::: The cow is not rough.\nGreen(Lion, True) ::: The lion is green.\nNeeds(Lion, Cow, True) ::: The lion needs the cow.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nNotRough(Rabbit, True) ::: The rabbit is not rough.\nChases(Squirrel, Rabbit, True) ::: The squirrel chases the rabbit.\nNotRough(Squirrel, True) ::: The squirrel is not rough.\nRules:\nNeeds(x, y, True) >>> Likes(x, Cow, True) ::: If something needs the squirrel then it likes the cow.\nNeeds(x, Cow, True) >>> Needs(x, Squirrel, True) ::: If something needs the cow then it needs the squirrel.\nRound(x, True) && Young(x, True) >>> NotNeeds(x, Squirrel, True) ::: If something is round and young then it does not need the squirrel.\nRound(x, True) >>> NotNeeds(x, Rabbit, True) ::: If something is round then it does not need the rabbit.\nLikes(x, Rabbit, True) >>> Chases(x, Lion, True) ::: If something likes the rabbit then it chases the lion.\nNeeds(x, Lion, True) >>> Chases(x, Squirrel, True) ::: If something needs the lion then it chases the squirrel.\nLikes(Squirrel, Cow, True) >>> NotNeeds(Cow, Rabbit, True) ::: If the squirrel likes the cow then the cow does not need the rabbit.\nNotGreen(Squirrel, True) && Likes(Squirrel, Cow, True) >>> Needs(Squirrel, Rabbit, True) ::: If the squirrel likes the cow and the squirrel is not green then the squirrel needs the rabbit.\nNeeds(x, Squirrel, True) >>> Needs(x, Cow, True) ::: If"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-111_Q2",
    "context": "Bob is big. Bob is blue. Bob is cold. Bob is white. Dave is cold. Dave is kind. Dave is nice. Gary is cold. Gary is kind. Harry is white. All white things are blue. All big, kind things are nice. If something is nice then it is big. If something is kind then it is nice. If something is rough then it is white. If something is big and nice then it is rough. All white, blue things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nWhite(Bob, True) ::: Bob is white.\nCold(Dave, True) ::: Dave is cold.\nKind(Dave, True) ::: Dave is kind.\nNice(Dave, True) ::: Dave is nice.\nCold(Gary, True) ::: Gary is cold.\nKind(Gary, True) ::: Gary is kind.\nWhite(Harry, True) ::: Harry is white.\nRules:\nWhite($x, True) >>> Blue($x, True) ::: All white things are blue.\nBig($x, True) && Kind($x, True) >>> Nice($x, True) ::: If something is nice then it is big.\nKind($x, True) >>> Nice($x, True) ::: If something is kind then it is nice.\nRough($x, True) >>> White($x, True) ::: If something is rough then it is white.\nBig($x, True) && Nice($x, True) >>> Rough($x, True) ::: If something is big and nice then it is rough.\nWhite($x, True) && Blue($x, True) >>> Cold($x, True) ::: All white, blue things are cold.\nQuery:\nNot(Blue(Bob, True)) ::: Bob is not blue.\n------\nProblem:\nBob is big. Bob is blue. Bob is cold. Bob is white. Dave is cold. Dave is kind. Dave is nice. Gary is cold. Gary is kind. Harry is white. All white things are blue. All big, kind things are nice. If something is nice then it is big. If something is kind then it is nice. If something is rough then it is white. If something is big and nice then it is rough. All white, blue things are cold.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Bob is not blue.\n###\nPredicates:\nBig($x, bool) :::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-582_Q12",
    "context": "The dog chases the squirrel. The lion chases the rabbit. The lion needs the dog. The lion visits the dog. The lion visits the rabbit. The rabbit is cold. The squirrel visits the dog. If something is rough and it chases the rabbit then the rabbit is rough. If something chases the squirrel then it visits the dog. If something chases the lion then it is rough. If something is green then it needs the dog. If something is green then it needs the lion. If something visits the dog then it is green. If something needs the lion then it chases the lion. All cold things are green. If the rabbit needs the lion and the lion is cold then the lion visits the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(Dog, Squirrel, True) ::: The dog chases the squirrel.\nChases(Lion, Rabbit, True) ::: The lion chases the rabbit.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nVisits(Lion, Dog, True) ::: The lion visits the dog.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nCold(Rabbit, True) ::: The rabbit is cold.\nVisits(Squirrel, Dog, True) ::: The squirrel visits the dog.\nRules:\nRough($x, True) && Chases($x, Rabbit, True) >>> Rough(Rabbit, True) ::: If something is rough and it chases the rabbit then the rabbit is rough.\nChases($x, Squirrel, True) >>> Visits($x, Dog, True) ::: If something chases the squirrel then it visits the dog.\nChases($x, Lion, True) >>> Rough($x, True) ::: If something chases the lion then it is rough.\nGreen($x, True) >>> Needs($x, Dog, True) ::: If something is green then it needs the dog.\nGreen($x, True) >>> Needs($x, Lion, True) ::: If something is green then it needs the lion.\nVisits($x, Dog, True) >>> Green($x, True) ::: If something visits the dog then it is green.\nNeeds(Lion, $x, True) && Cold($x, True) >>> Visits(Lion, Squirrel, True) ::: If the rabbit needs the lion and the lion is cold then the lion visits the squirrel.\nAll Cold($x, True) >>> Green($x, True) ::: All cold things are green.\n------\nProblem:\nThe dog chases the squirrel. The lion chases the rabbit. The lion needs the dog. The lion visits the dog. The lion visits the rabbit. The rabbit is cold. The squirrel visits the"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-251_Q10",
    "context": "The cat is nice. The cat needs the lion. The cat visits the lion. The cow is nice. The cow needs the cat. The lion is nice. The lion is red. The lion is young. The lion needs the cow. The lion needs the squirrel. The squirrel is young. If the cow needs the lion then the lion visits the squirrel. If something needs the squirrel then it visits the cat. If something needs the cow and it chases the squirrel then the cow is rough. If something chases the squirrel and it is young then the squirrel needs the cat. If something visits the cow then it is rough. If the squirrel visits the cat and the cat is red then the squirrel chases the cow. All nice things are big. If something is big then it visits the squirrel. If something visits the cat and the cat visits the squirrel then the squirrel is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nFacts:\nNice(Cat, True) ::: The cat is nice.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nNice(Cow, True) ::: The cow is nice.\nNeeds(Cow, Cat, True) ::: The cow needs the cat.\nNice(Lion, True) ::: The lion is nice.\nRed(Lion, True) ::: The lion is red.\nYoung(Lion, True) ::: The lion is young.\nNeeds(Lion, Cow, True) ::: The lion needs the cow.\nNeeds(Lion, Squirrel, True) ::: The lion needs the squirrel.\nYoung(Squirrel, True) ::: The squirrel is young.\nRules:\nNeeds(Cow, Lion) >>> Visits(Lion, Squirrel) ::: If the cow needs the lion then the lion visits the squirrel.\nNeeds($x, Squirrel) >>> Visits($x, Cat) ::: If something needs the squirrel then it visits the cat.\nNeeds(Cow, Squirrel) && Chases(Squirrel, Cow) >>> Cow is Rough ::: If something needs the cow and it chases the squirrel then the cow is rough.\nChases(Squirrel, Cow) && Young(Squirrel) >>> Cow needs Cat ::: If something chases the squirrel and it is young then the squirrel needs the cat.\nVisits(Cow) >>> Cow is Rough ::: If something visits the cow then it is rough.\nVisits(Cat) && Visits(Squirrel) && Red(Squirrel) >>> Squirrel chases Cow ::: If the squirrel visits the cat and the cat visits the squirrel then the squirrel chases the cow.\nBig($x) >>> Visits(Squirrel) ::: If something is big then it visits the squirrel.\nVisits(Cat) && Visits(Squirrel) >>> Squirrel is Nice ::: If the squirrel visits the cat and the cat visits the"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-975_Q22",
    "context": "The lion is kind. The mouse chases the lion. The rabbit is blue. The rabbit is round. The tiger is blue. The tiger is cold. The tiger is young. If something sees the rabbit then the rabbit is cold. If something sees the tiger then the tiger is kind. If something is round then it is kind. If the rabbit sees the lion and the rabbit sees the mouse then the mouse sees the tiger. If something is kind then it sees the mouse. If something is blue and kind then it sees the rabbit. If something chases the lion and the lion chases the rabbit then the rabbit chases the mouse. If something is kind and it sees the mouse then it sees the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse chases the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nBlue($x, bool) ::: Is x blue?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nKind(Lion, True) ::: The lion is kind.\nChases(Mouse, Lion, True) ::: The mouse chases the lion.\nBlue(Rabbit, True) ::: The rabbit is blue.\nRound(Rabbit, True) ::: The rabbit is round.\nBlue(Tiger, True) ::: The tiger is blue.\nCold(Tiger, True) ::: The tiger is cold.\nYoung(Tiger, True) ::: The tiger is young.\nSees(Rabbit, Lion, True) ::: If something sees the rabbit then the rabbit is cold.\nSees(Tiger, Lion, True) ::: If something sees the tiger then the tiger is kind.\nKind(Rabbit, True) ::: If something is round then it is kind.\nSees(Mouse, Tiger, True) ::: If the rabbit sees the lion and the rabbit sees the mouse then the mouse sees the tiger.\nKind(Mouse, True) ::: If something is kind then it sees the mouse.\nBlue(Rabbit, True) && Kind(Rabbit, True) ::: If something is blue and kind then it sees the rabbit.\nChases(Lion, Rabbit, True) ::: If something chases the lion and the lion chases the rabbit then the rabbit chases the mouse.\nKind(Mouse, True) && Sees(Mouse, Lion, True) ::: If something is kind and it sees the mouse then it sees the lion.\nRules:\n------\nQuery:\nChases(Mouse, Mouse, True) ::: The mouse chases the mouse.\n------\nProblem:\nThe lion is kind. The mouse chases the lion. The rabbit is blue. The rabbit is round. The tiger is blue. The tiger is cold. The tiger is young. If something sees the rabbit then the rabbit is cold. If something sees the tiger then the tiger is kind. If something is round then it is kind. If the rabbit sees the lion and the rabbit sees the mouse then the mouse sees"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-249_Q10",
    "context": "The cat chases the rabbit. The cat chases the tiger. The cat sees the mouse. The cat does not see the rabbit. The mouse chases the cat. The mouse does not like the cat. The rabbit likes the tiger. The tiger is nice. The tiger is young. The tiger likes the cat. All big things are blue. If the cat sees the tiger then the cat chases the tiger. If something likes the rabbit then the rabbit does not like the mouse. All blue things are young. If something is blue then it is young. If something chases the cat then it likes the mouse. If something is young then it likes the tiger. If something likes the mouse then the mouse is big. If something sees the mouse and the mouse is not blue then the mouse likes the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nLikes($x, $y, bool) ::: Does x like y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Cat, Rabbit, True) ::: The cat chases the rabbit.\nChases(Cat, Tiger, True) ::: The cat chases the tiger.\nSees(Cat, Mouse, True) ::: The cat sees the mouse.\nNot(Sees(Cat, Rabbit, True)) ::: The cat does not see the rabbit.\nChases(Mouse, Cat, True) ::: The mouse chases the cat.\nNot(Likes(Mouse, Cat, True)) ::: The mouse does not like the cat.\nLikes(Rabbit, Tiger, True) ::: The rabbit likes the tiger.\nNice(Tiger, True) ::: The tiger is nice.\nYoung(Tiger, True) ::: The tiger is young.\nLikes(Tiger, Cat, True) ::: The tiger likes the cat.\nAll(Big($x, True), $x, Blue($x, True)) ::: All big things are blue.\nIf(Sees(Cat, Tiger, True), Chases(Cat, Tiger, True)) ::: If the cat sees the tiger then the cat chases the tiger.\nIf(Likes($x, Rabbit, True), Not(Likes(Rabbit, $x, True))) ::: If something likes the rabbit then the rabbit does not like the mouse.\nAll(Blue($x, True), $x, Young($x, True)) ::: All blue things are young.\nIf(Blue($x, True), Young($x, True)) ::: If something is blue then it is young.\nIf(Chases($x, Cat, True), Likes($x, Mouse, True)) ::: If something chases the cat then it likes the mouse.\nIf(Young($x, True), Likes($x, Tiger, True)) ::: If something is young then it likes the tiger.\nIf(Likes($x, Mouse, True), Is(Mouse, Big($x, True))) ::: If something likes the mouse then the mouse is big.\nIf(Sees(Mouse, $x, True), Not(Blue($x, True)), Likes(Mouse, Cat, True)) ::: If something sees the mouse and the mouse is not blue then the mouse likes the cat.\nQuery:\nNot(Young(Mouse, True)) ::: The mouse is not young.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-481_Q23",
    "context": "The bald eagle needs the mouse. The bald eagle visits the mouse. The dog is young. The dog needs the mouse. The dog visits the mouse. The mouse is red. The mouse is rough. The mouse visits the bald eagle. The tiger is cold. The tiger needs the bald eagle. The tiger needs the dog. The tiger visits the dog. If the mouse visits the dog then the mouse visits the tiger. If something needs the tiger and the tiger is cold then it is green. If something is cold and it needs the bald eagle then the bald eagle visits the mouse. If something needs the mouse then it visits the bald eagle. If something is young then it needs the tiger. If something visits the dog and the dog is green then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is not rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nFacts:\nNeeds(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nVisits(BaldEagle, Mouse, True) ::: The bald eagle visits the mouse.\nYoung(Dog, True) ::: The dog is young.\nNeeds(Dog, Mouse, True) ::: The dog needs the mouse.\nVisits(Dog, Mouse, True) ::: The dog visits the mouse.\nRed(Mouse, True) ::: The mouse is red.\nRough(Mouse, True) ::: The mouse is rough.\nVisits(Mouse, BaldEagle, True) ::: The mouse visits the bald eagle.\nCold(Tiger, True) ::: The tiger is cold.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nNeeds(Tiger, Dog, True) ::: The tiger needs the dog.\nVisits(Tiger, Dog, True) ::: The tiger visits the dog.\nIf(Mouse, Visits, Dog, Tiger) ::: If the mouse visits the dog then the mouse visits the tiger.\nGreen(Tiger, True) >>> Cold($x, True) && Needs($x, BaldEagle, True) ::: If something needs the tiger and the tiger is cold then it is green.\nCold($x, True) && Needs($x, BaldEagle, True) >>> Visits(BaldEagle, Mouse, True) ::: If something is cold and it needs the bald eagle then the bald eagle visits the mouse.\nNeeds(Mouse, BaldEagle, True) >>> Visits(Mouse, BaldEagle, True) ::: If something needs the mouse then it visits the bald eagle.\nYoung($x, True) >>> Needs($x, Tiger, True) ::: If something is young then it needs the tiger.\nYoung($x, True) >>> Is($x, Green, True) && Visits(Dog, $x, True) ::: If something is young then it needs the tiger.\nQuery:\nNot(Rough(BaldEagle, True)) ::: The bald eagle is not rough.\n------\nProblem:\nThe dog is young. The dog is furry. The dog is green. The dog is rough. The dog is white. The dog is quiet. The dog is red. The dog"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-251_Q21",
    "context": "The cat is nice. The cat needs the lion. The cat visits the lion. The cow is nice. The cow needs the cat. The lion is nice. The lion is red. The lion is young. The lion needs the cow. The lion needs the squirrel. The squirrel is young. If the cow needs the lion then the lion visits the squirrel. If something needs the squirrel then it visits the cat. If something needs the cow and it chases the squirrel then the cow is rough. If something chases the squirrel and it is young then the squirrel needs the cat. If something visits the cow then it is rough. If the squirrel visits the cat and the cat is red then the squirrel chases the cow. All nice things are big. If something is big then it visits the squirrel. If something visits the cat and the cat visits the squirrel then the squirrel is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not need the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nNice(Cat, True) ::: The cat is nice.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nNice(Cow, True) ::: The cow is nice.\nNeeds(Cow, Cat, True) ::: The cow needs the cat.\nNice(Lion, True) ::: The lion is nice.\nRed(Lion, True) ::: The lion is red.\nYoung(Lion, True) ::: The lion is young.\nNeeds(Lion, Cow, True) ::: The lion needs the cow.\nNeeds(Lion, Squirrel, True) ::: The lion needs the squirrel.\nYoung(Squirrel, True) ::: The squirrel is young.\nRules:\nNeeds(Cow, Lion) >>> Visits(Lion, Squirrel) ::: If the cow needs the lion then the lion visits the squirrel.\nNeeds($x, Squirrel) >>> Visits($x, Cat) ::: If something needs the squirrel then it visits the cat.\nNeeds(Cow, Squirrel) && Chases(Squirrel, Cow) >>> Rough(Cow) ::: If something needs the cow and it chases the squirrel then the cow is rough.\nChases(Squirrel, Cow) && Young(Squirrel) >>> Needs(Squirrel, Cat) ::: If something chases the squirrel and it is young then the squirrel needs the cat.\nVisits(Cow) >>> Rough(Cow) ::: If something visits the cow then it is rough.\nVisits(Cat) && Visits(Squirrel) && Red(Squirrel) >>> Chases(Squirrel, Cow) ::: If the squirrel visits the cat and the cat visits the squirrel then the squirrel chases the cow.\nBig($x) >>> Visits(Squirrel) ::: If something is big then it visits the squirrel.\nVisits(Cat) && Visits(Squirrel) >>> Nice(Squirrel) ::: If the squirrel visits the cat and the cat visits the squirrel then the squirrel is nice.\nYoung($x) >>> Needs(Cat, $x) ::: If something visits the cat and the cat visits the squirrel then the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-347_Q1",
    "context": "Anne is big. Anne is kind. Charlie is big. Erin is big. Erin is blue. Erin is not kind. Erin is not young. Harry is big. Harry is nice. Harry is white. Harry is young. All kind, big things are blue. If something is young and kind then it is nice. Blue, cold things are nice. White things are cold. White, big things are cold. If Erin is blue and Erin is white then Erin is nice. All cold, nice things are young. All kind, blue things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nFacts:\nBig(Anne, True) ::: Anne is big.\nKind(Anne, True) ::: Anne is kind.\nBig(Charlie, True) ::: Charlie is big.\nBig(Erin, True) ::: Erin is big.\nBlue(Erin, True) ::: Erin is blue.\nNot(Kind(Erin, True)) ::: Erin is not kind.\nNot(Young(Erin, True)) ::: Erin is not young.\nBig(Harry, True) ::: Harry is big.\nNice(Harry, True) ::: Harry is nice.\nWhite(Harry, True) ::: Harry is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nKind($x, True) >>> Big($x, True) && Blue($x, True) ::: All kind, big things are blue.\nYoung($x, True) && Kind($x, True) >>> Nice($x, True) ::: If something is young and kind then it is nice.\nBlue($x, True) && Cold($x, True) >>> Nice($x, True) ::: Blue, cold things are nice.\nWhite($x, True) >>> Cold($x, True) ::: White things are cold.\nBig($x, True) && White($x, True) >>> Cold($x, True) ::: White, big things are cold.\nIf(Erin, Blue($x, True) && White($x, True)) >>> Nice($x, True) ::: If Erin is blue and Erin is white then Erin is nice.\nYoung($x, True) && Nice($x, True) >>> Cold($x, True) ::: All cold, nice things are young.\nKind($x, True) && Blue($x, True) >>> White($x, True) ::: All kind, blue things are white.\nQuery:\nWhite(Harry, True) ::: Harry is white.\n------\nProblem:\nAnne is big. Anne is kind. Anne is not young. Anne is not white. Anne is not blue. Anne is not cold. Anne is not nice. Anne is not red. Anne is not green. Anne is not rough. Anne is not furry. Anne is not quiet. Anne is not furry. Anne is not green. Anne is not rough. Anne is not white. Anne is not red. Anne is not quiet. Anne is not furry. Anne is not green. Anne is not rough. Anne is not white. Anne is not red. Anne is not quiet. Anne is not furry. Anne is not green. Anne is not"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-866_Q17",
    "context": "Anne is furry. Anne is rough. Anne is round. Anne is smart. Anne is white. Dave is furry. Erin is big. Erin is white. Gary is quiet. Gary is round. Gary is smart. Gary is white. Rough, furry things are smart. If something is rough and round then it is smart. If Dave is smart then Dave is white. If something is furry then it is rough. Round, rough things are smart. White, furry things are round. All white, big things are round. All rough, big things are smart. If something is round then it is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nRound(Anne, True) ::: Anne is round.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nFurry(Dave, True) ::: Dave is furry.\nBig(Erin, True) ::: Erin is big.\nWhite(Erin, True) ::: Erin is white.\nQuiet(Gary, True) ::: Gary is quiet.\nRound(Gary, True) ::: Gary is round.\nSmart(Gary, True) ::: Gary is smart.\nWhite(Gary, True) ::: Gary is white.\nRules:\nFurry($x, True) >>> Rough($x, True) ::: If something is furry then it is rough.\nRound($x, True) >>> Rough($x, True) ::: Round, rough things are smart.\nWhite($x, True) >>> Furry($x, True) ::: White, furry things are round.\nBig($x, True) >>> Round($x, True) ::: All white, big things are round.\nBig($x, True) >>> Rough($x, True) ::: All rough, big things are smart.\nRound($x, True) >>> Big($x, True) ::: If something is round then it is big.\nSmart($x, True) >>> White($x, True) ::: If Dave is smart then Dave is white.\nSmart($x, True) >>> Rough($x, True) ::: Rough, furry things are smart.\nQuery:\nQuiet(Dave, False) ::: Dave is not quiet.\n------\nProblem:\nAnne is furry. Anne is rough. Anne is round. Anne is smart. Anne is white. Dave is furry. Erin is big. Erin is white. Gary is quiet. Gary is round. Gary is smart. Gary is white. Rough, furry things are smart. If something is rough and round then it is smart. If Dave is smart then Dave is white. If something is furry then it is rough. Round, rough things are smart. White, furry things are round. All white, big things are round. All rough, big things are smart. If something is round then it is big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Anne is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-731_Q5",
    "context": "The bald eagle eats the cat. The bald eagle needs the cow. The bald eagle visits the squirrel. The cat does not eat the squirrel. The cat is green. The cat needs the cow. The cow is young. The squirrel eats the cat. The squirrel is blue. The squirrel needs the bald eagle. The squirrel needs the cow. If someone needs the cow and they are not nice then they eat the squirrel. If someone eats the cow and the cow needs the bald eagle then they eat the squirrel. If someone needs the cat then they need the bald eagle. If someone eats the squirrel and they visit the squirrel then the squirrel eats the bald eagle. If someone needs the squirrel then the squirrel does not need the bald eagle. If someone needs the cat then the cat does not eat the cow. If someone needs the cat and they need the bald eagle then the bald eagle is young. If someone is young then they need the cat. If the squirrel does not eat the bald eagle then the squirrel visits the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow needs the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nYoung($x, bool) ::: Is x young?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nFacts:\nEats(BaldEagle, Cat, True) ::: The bald eagle eats the cat.\nNeeds(BaldEagle, Cow, True) ::: The bald eagle needs the cow.\nVisits(BaldEagle, Squirrel, True) ::: The bald eagle visits the squirrel.\nNot(Eats(Cat, Squirrel, True)) ::: The cat does not eat the squirrel.\nGreen(Cat, True) ::: The cat is green.\nNeeds(Cat, Cow, True) ::: The cat needs the cow.\nYoung(Cow, True) ::: The cow is young.\nEats(Cat, Squirrel, True) ::: The cat eats the squirrel.\nBlue(Squirrel, True) ::: The squirrel is blue.\nNeeds(Squirrel, BaldEagle, True) ::: The squirrel needs the bald eagle.\nNeeds(Squirrel, Cow, True) ::: The squirrel needs the cow.\nNot(If(Someone, Needs(Cow, BaldEagle), Eats(Someone, Squirrel))) ::: If someone needs the cow and they are not nice then they eat the squirrel.\nIf(Someone, Eats(Cow, BaldEagle), Eats(Someone, Squirrel)) ::: If someone eats the cow and the cow needs the bald eagle then they eat the squirrel.\nNeeds(Someone, Cat, True) >>> Needs(Someone, BaldEagle, True) ::: If someone needs the cat then they need the bald eagle.\nIf(Someone, Eats(Squirrel, Someone), Eats(Squirrel, BaldEagle)) ::: If someone eats the squirrel and they visit the squirrel then the squirrel eats the bald eagle.\nNot(If(Someone, Needs(Squirrel, BaldEagle), Not(Needs(Squirrel, Someone)))) ::: If someone needs the squirrel then the squirrel does not need the bald eagle.\nNot(If(Someone, Needs(Cat, Someone), Eats(Someone, Cow))) ::: If someone needs the cat then the cat does not eat the cow.\nNeeds(Someone, Cat, True) >>> Young(Someone, True) ::: If"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-31_Q12",
    "context": "The dog chases the squirrel. The lion eats the squirrel. The lion sees the dog. The squirrel chases the dog. The squirrel chases the lion. The squirrel eats the lion. The squirrel is green. The squirrel is rough. The squirrel sees the dog. The squirrel sees the lion. The tiger is rough. If something is blue then it chases the lion. If something chases the lion and it eats the squirrel then the squirrel sees the tiger. If the squirrel eats the lion and the squirrel is green then the lion sees the tiger. If something sees the tiger then it is blue. Rough things are big. If something chases the dog then it chases the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nIs($x, $y, bool) ::: Is x y?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nFacts:\nChases(Dog, Squirrel, True) ::: The dog chases the squirrel.\nEats(Lion, Squirrel, True) ::: The lion eats the squirrel.\nSees(Lion, Dog, True) ::: The lion sees the dog.\nChases(Squirrel, Dog, True) ::: The squirrel chases the dog.\nChases(Squirrel, Lion, True) ::: The squirrel chases the lion.\nEats(Squirrel, Lion, True) ::: The squirrel eats the lion.\nIs(Squirrel, Green, True) ::: The squirrel is green.\nIs(Squirrel, Rough, True) ::: The squirrel is rough.\nSees(Squirrel, Dog, True) ::: The squirrel sees the dog.\nSees(Squirrel, Lion, True) ::: The squirrel sees the lion.\nIs(Tiger, Rough, True) ::: The tiger is rough.\nRules:\nBlue($x, True) >>> Chases($x, Lion, True) ::: If something is blue then it chases the lion.\nChases($x, Lion, True) && Eats($x, Squirrel, True) >>> Squirrel($x, True) ::: If something chases the lion and it eats the squirrel then the squirrel sees the tiger.\nEats($x, Squirrel, True) && Is($x, Green, True) >>> Lion($x, True) ::: If the squirrel eats the lion and the squirrel is green then the lion sees the tiger.\nSees($x, Tiger, True) >>> Blue($x, True) ::: If something sees the tiger then it is blue.\nRough($x, True) >>> Big($x, True) ::: Rough things are big.\nChases($x, Dog, True) >>> Chases($x, Tiger, True) ::: If something chases the dog then it chases the tiger.\nQuery:\nBlue(Squirrel, False) ::: The squirrel is not blue.\n------\nProblem:\nThe dog chases the squirrel. The lion eats the squirrel. The lion sees the dog. The squirrel chases the dog. The squirrel chases"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-785_Q10",
    "context": "The bald eagle is round. The bear needs the bald eagle. The cat eats the bear. The cat does not eat the lion. The cat is round. The lion needs the bear. The lion sees the bald eagle. If something is round then it sees the bald eagle. If something is red and not young then it needs the lion. If something sees the bald eagle then it needs the lion. If something needs the lion and it needs the bear then the bear is round. If the lion is round and the lion does not eat the cat then the cat eats the bald eagle. If something needs the lion and the lion sees the bald eagle then it is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not need the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nNeeds($x, $y, bool) ::: Does x need y?\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nFacts:\nRound(BaldEagle, True) ::: The bald eagle is round.\nNeeds(Bear, BaldEagle, True) ::: The bear needs the bald eagle.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nEats(Cat, Lion, False) ::: The cat does not eat the lion.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Lion, True) ::: The cat needs the lion.\nSees(Cat, BaldEagle, True) ::: The cat sees the bald eagle.\nYoung(Cat, False) ::: The cat is not young.\nRed(Cat, False) ::: The cat is not red.\nNeeds(Lion, Bear, True) ::: The lion needs the bear.\nSees(Lion, BaldEagle, True) ::: The lion sees the bald eagle.\nRules:\nRound($x, True) >>> Sees($x, BaldEagle, True) ::: If something is round then it sees the bald eagle.\nRed($x, True) && Not(Young($x, True)) >>> Needs($x, Lion, True) ::: If something is red and not young then it needs the lion.\nNeeds($x, Lion, True) && Needs($x, Bear, True) >>> Bear(Round, True) ::: If something needs the lion and it needs the bear then the bear is round.\nNeeds($x, Lion, True) && Sees($x, BaldEagle, True) >>> Red($x, True) ::: If something needs the lion and the lion sees the bald eagle then it is red.\nNot(Eats($x, Cat, True)) && Round($x, True) >>> Eats(Cat, BaldEagle, True) ::: If the lion is round and the lion does not eat the cat then the cat eats the bald eagle.\nNeeds($x, Lion, True) && Sees($x, BaldEagle, True) >>> Red($x, True) ::: If something needs the lion and the lion sees the bald eagle then it is red.\nQuery:\nNeeds(Bear, Lion, False) ::: The bear does not need the lion.\n------\nProblem:\nThe cat is furry. The cat is green. The cat is red. The cat is rough. The cat is white. The cat is young. The dog is furry. The dog is green. The dog is red. The dog is rough. The dog is white"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-903_Q6",
    "context": "The bear is nice. The bear visits the tiger. The dog does not chase the bear. The dog sees the mouse. The mouse does not chase the bear. The mouse is nice. The mouse is round. The mouse is young. The mouse visits the bear. The tiger chases the bear. The tiger sees the mouse. If someone chases the mouse and they see the tiger then the tiger is round. If the dog sees the mouse then the dog visits the tiger. If someone chases the mouse then they see the bear. If someone is nice and cold then they chase the mouse. If someone visits the mouse and they see the mouse then the mouse visits the dog. If the mouse visits the dog then the dog does not visit the bear. If someone sees the bear then they visit the dog. All nice people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not chase the mouse.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Bear, True) ::: The bear is nice.\nVisits(Bear, Tiger, True) ::: The bear visits the tiger.\nChases(Dog, Bear, False) ::: The dog does not chase the bear.\nSees(Dog, Mouse, True) ::: The dog sees the mouse.\nChases(Mouse, Bear, False) ::: The mouse does not chase the bear.\nNice(Mouse, True) ::: The mouse is nice.\nRound(Mouse, True) ::: The mouse is round.\nYoung(Mouse, True) ::: The mouse is young.\nVisits(Mouse, Bear, True) ::: The mouse visits the bear.\nChases(Tiger, Bear, True) ::: The tiger chases the bear.\nSees(Tiger, Mouse, True) ::: The tiger sees the mouse.\nRules:\nChases($x, $y, True) && Sees($x, $y, True) >>> Round($y, True) ::: If someone chases the mouse and they see the tiger then the tiger is round.\nVisits($x, $y, True) && Sees($x, $y, True) >>> Visits($x, Tiger, True) ::: If someone visits the mouse and they see the mouse then the mouse visits the dog.\nChases($x, $y, True) >>> Sees($x, Bear, True) ::: If someone chases the mouse then they see the bear.\nNice($x, True) && Cold($x, True) >>> Chases($x, Mouse, True) ::: If someone is nice and cold then they chase the mouse.\nVisits($x, $y, True) >>> Sees($x, $y, True) ::: If someone visits the mouse and they see the mouse then the mouse visits the dog.\nYoung($x, True) && Visits($x, $y, True) >>> DoesNotVisit($x, Bear, True) ::: If the mouse visits the dog then the dog does not visit the bear.\nSees($x, $y, True) >>> Visits($x, $y, True) ::: If someone sees the bear then they visit the dog.\nAll($x, Nice($x, True) >>> Cold($x, True)) ::: All nice people are cold.\nQuery:\nChases(Mouse, Mouse, True) ::: The mouse does not chase the mouse.\n------\nProblem"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-428_Q15",
    "context": "The cat is rough. The mouse likes the rabbit. The mouse sees the rabbit. The rabbit sees the squirrel. The squirrel eats the cat. The squirrel eats the rabbit. The squirrel is red. All red people are young. If the squirrel is green and the squirrel likes the rabbit then the rabbit eats the mouse. If someone sees the cat and they like the squirrel then the squirrel sees the cat. If someone is young then they see the mouse. If someone eats the rabbit and they see the mouse then the mouse is red. If someone is cold then they eat the squirrel. If someone sees the rabbit and the rabbit is green then they are young. If someone likes the squirrel and they are red then they are young. If someone sees the squirrel and the squirrel sees the mouse then they like the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not eat the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nRough(Cat, True) ::: The cat is rough.\nLikes(Mouse, Rabbit, True) ::: The mouse likes the rabbit.\nSees(Mouse, Rabbit, True) ::: The mouse sees the rabbit.\nSees(Rabbit, Squirrel, True) ::: The rabbit sees the squirrel.\nEats(Squirrel, Cat, True) ::: The squirrel eats the cat.\nEats(Squirrel, Rabbit, True) ::: The squirrel eats the rabbit.\nRed(Squirrel, True) ::: The squirrel is red.\nYoung(Squirrel, True) ::: All red people are young.\nIf(Squirrel, Green, Squirrel, Likes, Rabbit, Rabbit, Eats, Mouse) ::: If the squirrel is green and the squirrel likes the rabbit then the rabbit eats the mouse.\nIf(Mouse, Sees, Cat, Squirrel, Likes, Rabbit) ::: If someone sees the cat and they like the squirrel then the squirrel sees the cat.\nIf(Mouse, Young, Sees, Rabbit, Rabbit, Green) ::: If someone sees the rabbit and the rabbit is green then they are young.\nIf(Mouse, Red, Likes, Squirrel, Young) ::: If someone likes the squirrel and they are red then they are young.\nIf(Mouse, Sees, Squirrel, Squirrel, Sees, Mouse, Likes, Rabbit) ::: If someone sees the squirrel and the squirrel sees the mouse then they like the rabbit.\nQuery:\nEats(Rabbit, Squirrel, True) ::: The rabbit does not eat the squirrel.\n------\nProblem:\nThe cat is rough. The mouse likes the rabbit. The mouse sees the rabbit. The rabbit sees the squirrel. The squirrel eats the cat. The squirrel eats the rabbit. The squirrel is red. All red people are young. If the squirrel is green and the squirrel likes the rabbit then the rabbit eats the mouse. If someone sees the cat and they like the squirrel then the squirrel sees the cat. If someone is young then they see the mouse. If someone eats the rabbit and they see the mouse then the mouse is red. If someone is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-177_Q19",
    "context": "Anne is furry. Anne is smart. Bob is kind. Bob is nice. Charlie is big. Charlie is green. Charlie is nice. Charlie is young. Gary is furry. Gary is kind. Gary is nice. Gary is young. If something is young then it is nice. If Anne is green then Anne is big. Smart things are nice. All smart, kind things are green. Young, big things are kind. Kind, smart things are furry. If something is nice and big then it is young. All nice things are kind. If Anne is young and Anne is big then Anne is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nSmart(Anne, True) ::: Anne is smart.\nKind(Bob, True) ::: Bob is kind.\nNice(Bob, True) ::: Bob is nice.\nBig(Charlie, True) ::: Charlie is big.\nGreen(Charlie, True) ::: Charlie is green.\nNice(Charlie, True) ::: Charlie is nice.\nYoung(Charlie, True) ::: Charlie is young.\nKind(Gary, True) ::: Gary is kind.\nFurry(Gary, True) ::: Gary is furry.\nNice(Gary, True) ::: Gary is nice.\nYoung(Gary, True) ::: Gary is young.\nRules:\nYoung($x, True) >>> Nice($x, True) ::: If something is young then it is nice.\nGreen(Anne, True) >>> Big(Anne, True) ::: If Anne is green then Anne is big.\nSmart($x, True) >>> Nice($x, True) ::: Smart things are nice.\nGreen($x, True) && Kind($x, True) >>> All smart, kind things are green.\nYoung($x, True) && Big($x, True) >>> Kind($x, True) ::: Young, big things are kind.\nKind($x, True) && Smart($x, True) >>> Furry($x, True) ::: Kind, smart things are furry.\nNice($x, True) && Big($x, True) >>> Young($x, True) ::: If something is nice and big then it is young.\nNice($x, True) >>> Kind($x, True) ::: All nice things are kind.\nYoung($x, True) && Big($x, True) >>> Nice($x, True) ::: If Anne is young and Anne is big then Anne is nice.\nQuery:\nNot(Big(Bob, True)) ::: Bob is not big.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-829_Q6",
    "context": "The dog does not eat the rabbit. The mouse eats the tiger. The mouse is green. The rabbit does not chase the tiger. The rabbit eats the dog. The rabbit is young. The tiger is green. If something visits the mouse then the mouse is big. If something eats the tiger then the tiger visits the mouse. If the dog is young and the dog does not visit the mouse then the mouse does not visit the rabbit. If something is green and it chases the rabbit then the rabbit does not eat the mouse. If something is green then it visits the dog. If something visits the rabbit and the rabbit is young then it is round. If something is round and it visits the dog then it chases the tiger. If something is big then it visits the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nChases($x, $y, bool) ::: Does x chase y?\nIs($x, $y, bool) ::: Is x y?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nFacts:\nEats(Dog, Rabbit, True) ::: The dog eats the rabbit.\nEats(Mouse, Tiger, True) ::: The mouse eats the tiger.\nIs(Mouse, Green, True) ::: The mouse is green.\nChases(Rabbit, Tiger, False) ::: The rabbit does not chase the tiger.\nEats(Rabbit, Dog, True) ::: The rabbit eats the dog.\nIs(Rabbit, Young, True) ::: The rabbit is young.\nIs(Tiger, Green, True) ::: The tiger is green.\nVisits(Mouse, Tiger, True) ::: If something visits the mouse then the mouse is big.\nEats(Tiger, Mouse, True) ::: If something eats the tiger then the tiger visits the mouse.\nIs(Dog, Young, True) && Is(Dog, Visits, False) >>> Is(Mouse, Visits, False) ::: If the dog is young and the dog does not visit the mouse then the mouse does not visit the rabbit.\nIs(Rabbit, Green) && Is(Rabbit, Chases, True) >>> Is(Mouse, Eats, False) ::: If something is green and it chases the rabbit then the rabbit does not eat the mouse.\nIs(x, Green) >>> Is(x, Visits, True) ::: If something is green then it visits the dog.\nIs(Rabbit, Visits) && Is(Rabbit, Young) >>> Is(Rabbit, Round, True) ::: If something is round and it visits the dog then it chases the tiger.\nIs(x, Big) >>> Is(x, Visits, True) ::: If something is big then it visits the rabbit.\nQuery:\nIs(Mouse, Big, False) ::: The mouse is not big.\n------\nProblem:"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-602_Q16",
    "context": "The cat is red. The cat is not rough. The cat does not like the squirrel. The cat does not see the squirrel. The dog is not young. The dog needs the cat. The mouse is round. The mouse likes the cat. The mouse needs the cat. The mouse sees the cat. The squirrel is young. The squirrel needs the mouse. If something sees the dog then it is red. If something is red and it needs the squirrel then the squirrel likes the mouse. If something is young and it sees the dog then the dog needs the mouse. If something needs the mouse then it is rough. If the cat likes the mouse then the mouse sees the squirrel. If something needs the cat and it needs the mouse then it likes the cat. If something is rough then it sees the dog. If something is rough and not red then it likes the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel likes the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nRed(Cat, True) ::: The cat is red.\nNot(Rough(Cat, True)) ::: The cat is not rough.\nNot(Likes(Cat, Squirrel, True)) ::: The cat does not like the squirrel.\nNot(Sees(Cat, Squirrel, True)) ::: The cat does not see the squirrel.\nNot(Young(Dog, True)) ::: The dog is not young.\nNeeds(Dog, Cat, True) ::: The dog needs the cat.\nRound(Mouse, True) ::: The mouse is round.\nLikes(Mouse, Cat, True) ::: The mouse likes the cat.\nNeeds(Mouse, Cat, True) ::: The mouse needs the cat.\nSees(Mouse, Cat, True) ::: The mouse sees the cat.\nYoung(Squirrel, True) ::: The squirrel is young.\nNeeds(Squirrel, Mouse, True) ::: The squirrel needs the mouse.\nRules:\nRed($x, True) >>> Needs($x, Squirrel, True) ::: If something sees the dog then it is red.\nRed($x, True) && Needs($x, Squirrel, True) >>> Likes(Squirrel, Mouse, True) ::: If something is red and it needs the squirrel then the squirrel likes the mouse.\nYoung($x, True) && Sees($x, Dog, True) >>> Needs(Dog, Mouse, True) ::: If something needs the mouse then it is rough.\nLikes(Cat, Mouse, True) >>> Sees(Mouse, Squirrel, True) ::: If the cat likes the mouse then the mouse sees the squirrel.\nNeeds($x, Cat) && Needs($x, Mouse) >>> Likes($x, Cat, True) ::: If something needs the cat and it needs the mouse then it likes the cat.\nRough($x, True) >>> Sees($x, Dog, True) ::: If something is rough then"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-189_Q12",
    "context": "Dave is blue. Dave is kind. Dave is rough. Erin is blue. Erin is furry. Erin is quiet. Erin is smart. Gary is blue. Gary is quiet. Harry is big. All blue things are rough. If something is kind and furry then it is big. If something is kind and big then it is rough. All quiet, kind things are rough. All kind things are furry. If something is big then it is quiet. Quiet things are blue. Rough things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nRough($x, bool) ::: Is x rough?\nFurry($x, bool) ::: Is x furry?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nFacts:\nBlue(Dave, True) ::: Dave is blue.\nKind(Dave, True) ::: Dave is kind.\nRough(Dave, True) ::: Dave is rough.\nBlue(Erin, True) ::: Erin is blue.\nFurry(Erin, True) ::: Erin is furry.\nQuiet(Erin, True) ::: Erin is quiet.\nSmart(Erin, True) ::: Erin is smart.\nBlue(Gary, True) ::: Gary is blue.\nQuiet(Gary, True) ::: Gary is quiet.\nBig(Harry, True) ::: Harry is big.\nRules:\nBlue($x, True) >>> Rough($x, True) ::: All blue things are rough.\nKind($x, True) && Furry($x, True) >>> Big($x, True) ::: If something is kind and furry then it is big.\nKind($x, True) && Big($x, True) >>> Rough($x, True) ::: If something is kind and big then it is rough.\nQuiet($x, True) && Kind($x, True) >>> Rough($x, True) ::: All quiet, kind things are rough.\nKind($x, True) >>> Furry($x, True) ::: All kind things are furry.\nBig($x, True) >>> Quiet($x, True) ::: If something is big then it is quiet.\nQuiet($x, True) >>> Blue($x, True) ::: Quiet things are blue.\nRough($x, True) >>> Kind($x, True) ::: Rough things are kind.\nQuery:\nFurry(Harry, False) ::: Harry is not furry.\n------\nProblem:\nDave is blue. Dave is kind. Dave is rough. Erin is blue. Erin is furry. Erin is quiet. Erin is smart. Gary is blue. Gary is quiet. Harry is big. All blue things are rough. If something is kind and furry then"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1251_Q1",
    "context": "Erin is big. Erin is green. Erin is kind. Erin is quiet. Erin is red. Erin is smart. Fiona is big. Gary is rough. Harry is quiet. Harry is smart. All smart people are kind. If Harry is rough and Harry is red then Harry is quiet. If someone is green then they are smart. All kind people are quiet. If someone is rough and big then they are green. Rough people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nRough($x, bool) ::: Is x rough?\nFacts:\nBig(Erin, True) ::: Erin is big.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::: Erin is kind.\nQuiet(Erin, True) ::: Erin is quiet.\nRed(Erin, True) ::: Erin is red.\nSmart(Erin, True) ::: Erin is smart.\nBig(Fiona, True) ::: Fiona is big.\nRough(Gary, True) ::: Gary is rough.\nQuiet(Harry, True) ::: Harry is quiet.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nSmart($x, True) >>> Kind($x, True) ::: All smart people are kind.\nHarry(Rough, True) && Harry(Red, True) >>> Harry(Quiet, True) ::: If Harry is rough and Harry is red then Harry is quiet.\nGreen($x, True) >>> Smart($x, True) ::: If someone is green then they are smart.\nKind($x, True) >>> Quiet($x, True) ::: All kind people are quiet.\nRough($x, True) >>> Big($x, True) ::: Rough people are big.\nBig($x, True) >>> Green($x, True) ::: If someone is rough and big then they are green.\nQuery:\nRed(Erin, True) ::: Erin is red.\n------\nProblem:\nErin is big. Erin is green. Erin is kind. Erin is quiet. Erin is red. Erin is smart. Fiona is big. Gary is rough. Harry is quiet. Harry is smart. All smart people are kind. If Harry is rough and Harry is red then Harry is quiet. If someone is green then they are smart. All kind people are quiet. If someone is rough and big then they are green. Rough people are big.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is red.\n###\nPred"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-585_Q24",
    "context": "The cow is not rough. The lion is green. The lion needs the cow. The lion needs the rabbit. The rabbit is not rough. The squirrel chases the rabbit. The squirrel is not rough. If something needs the squirrel then it likes the cow. If something needs the cow then it needs the squirrel. If something is round and young then it does not need the squirrel. If something is round then it does not need the rabbit. If something likes the rabbit then it chases the lion. If something needs the lion then it chases the squirrel. If the squirrel likes the cow then the cow does not need the rabbit. If the squirrel likes the cow and the squirrel is not green then the squirrel needs the rabbit. If something needs the squirrel then the squirrel needs the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow likes the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nChases($x, $y, bool) ::: Does x chase y?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nFacts:\nNotRough(Cow, True) ::: The cow is not rough.\nGreen(Lion, True) ::: The lion is green.\nNeeds(Lion, Cow, True) ::: The lion needs the cow.\nNeeds(Lion, Rabbit, True) ::: The lion needs the rabbit.\nNotRough(Rabbit, True) ::: The rabbit is not rough.\nChases(Squirrel, Rabbit, True) ::: The squirrel chases the rabbit.\nNotRough(Squirrel, True) ::: The squirrel is not rough.\nIfNeedsSquirrel($x, True) >>> Likes($x, Cow, True) ::: If something needs the squirrel then it likes the cow.\nIfNeedsCow($x, True) >>> Needs($x, Squirrel, True) ::: If something needs the cow then it needs the squirrel.\nIfRoundAndYoung($x, True) >>> NotNeedsSquirrel($x, True) ::: If something is round and young then it does not need the squirrel.\nIfRound($x, True) >>> NotNeedsRabbit($x, True) ::: If something is round then it does not need the rabbit.\nIfLikesRabbit($x, True) >>> Chases($x, Lion, True) ::: If something likes the rabbit then it chases the lion.\nIfNeedsLion($x, True) >>> Chases($x, Squirrel, True) ::: If something needs the lion then it chases the squirrel.\nIfLikesCow($x, True) && NotGreen($x, True) >>> NeedsRabbit($x, True) ::: If the squirrel likes the cow and the squirrel is not green then the squirrel needs the rabbit.\nIfNeedsSquirrel($x, True) >>> NeedsCow($x, True) ::: If something needs the squir"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-78_Q12",
    "context": "The lion eats the mouse. The lion is green. The mouse is kind. The squirrel is green. The squirrel is round. The squirrel likes the lion. The squirrel visits the mouse. The squirrel visits the tiger. The tiger is kind. The tiger is nice. If someone visits the mouse then the mouse is nice. If someone eats the mouse and they visit the tiger then the mouse is green. Big, nice people are round. If the mouse is green then the mouse is big. If the lion is nice then the lion does not visit the tiger. If someone is round and big then they like the lion. If someone is green then they visit the tiger. If someone eats the tiger and they are not nice then the tiger likes the lion. If someone likes the tiger and they do not eat the squirrel then the tiger likes the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not like the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nFacts:\nEats(Lion, Mouse, True) ::: The lion eats the mouse.\nGreen(Lion, True) ::: The lion is green.\nKind(Mouse, True) ::: The mouse is kind.\nRound(Squirrel, True) ::: The squirrel is round.\nLikes(Squirrel, Lion, True) ::: The squirrel likes the lion.\nVisits(Squirrel, Mouse, True) ::: The squirrel visits the mouse.\nVisits(Squirrel, Tiger, True) ::: The squirrel visits the tiger.\nKind(Tiger, True) ::: The tiger is kind.\nNice(Tiger, True) ::: The tiger is nice.\nRules:\nVisits($x, $y, True) >>> Mouse($x, True) ::: If someone visits the mouse then the mouse is nice.\nEats($x, $y, True) && Visits($x, $y, True) >>> Green($x, True) ::: If someone eats the mouse and they visit the tiger then the mouse is green.\nBig($x, True) >>> Nice($x, True) ::: Big, nice people are round.\nGreen($x, True) >>> Big($x, True) ::: If the mouse is green then the mouse is big.\nNice($x, True) >>> Not(Visits($x, Tiger, True)) ::: If the lion is nice then the lion does not visit the tiger.\nLikes($x, $y, True) >>> Round($x, True) ::: If someone is round and big then they like the lion.\nVisits($x, $y, True) >>> Green($x, True) ::: If someone is green then they visit the tiger.\nEats($x, $y, True) && Not(Nice($x, True)) >>> Likes($x, $y, True) ::: If someone eats the t"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-739_Q12",
    "context": "The bald eagle eats the dog. The bald eagle sees the dog. The dog is cold. The dog likes the squirrel. The dog sees the rabbit. The rabbit eats the dog. The rabbit eats the squirrel. The rabbit likes the dog. The rabbit sees the squirrel. The squirrel likes the bald eagle. If someone is cold and they like the bald eagle then they eat the rabbit. If someone likes the dog and they see the squirrel then the dog likes the bald eagle. If the bald eagle sees the dog and the bald eagle is cold then the bald eagle likes the dog. If someone likes the rabbit then they are young. If someone likes the dog and the dog likes the squirrel then they like the bald eagle. If the bald eagle is red and the bald eagle likes the squirrel then the squirrel eats the rabbit. If the dog likes the bald eagle and the bald eagle sees the dog then the bald eagle is cold. If someone sees the bald eagle then the bald eagle is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not eat the rabbit.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nLikes($x, $y, bool) ::: Does x like y?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nRules:\nEats(BaldEagle, Dog, True) ::: The bald eagle eats the dog.\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\nCold(Dog, True) ::: The dog is cold.\nLikes(Dog, Squirrel, True) ::: The dog likes the squirrel.\nSees(Dog, Rabbit, True) ::: The dog sees the rabbit.\nEats(Rabbit, Dog, True) ::: The rabbit eats the dog.\nEats(Rabbit, Squirrel, True) ::: The rabbit eats the squirrel.\nLikes(Rabbit, Dog, True) ::: The rabbit likes the dog.\nSees(Rabbit, Squirrel, True) ::: The rabbit sees the squirrel.\nLikes(Squirrel, BaldEagle, True) ::: The squirrel likes the bald eagle.\nCold($x, True) && Likes($x, BaldEagle, True) >>> Eats($x, Rabbit, True) ::: If someone is cold and they like the bald eagle then they eat the rabbit.\nLikes(Dog, BaldEagle, True) && Sees(Dog, Squirrel, True) >>> Likes(BaldEagle, Dog, True) ::: If someone likes the dog and they see the squirrel then the dog likes the bald eagle.\nSees(BaldEagle, Dog, True) && Cold(BaldEagle, True) >>> Likes(BaldEagle, Dog, True) ::: If the bald eagle sees the dog and the bald eagle is cold then the bald eagle likes the dog.\nLikes(Dog, Rabbit, True) >>> Young($x, True) ::: If someone likes the rabbit then they are young.\nLikes(Dog, BaldEagle, True) && Likes(BaldEagle, Squirrel, True) >>> Likes(Dog"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-726_Q6",
    "context": "The bear visits the tiger. The cat is kind. The mouse is green. The mouse is kind. The mouse sees the tiger. The tiger is rough. The tiger visits the cat. If something visits the bear then it sees the bear. If something sees the bear then the bear likes the cat. If something visits the cat then the cat visits the bear. If something sees the bear and the bear likes the cat then it is cold. Cold things are rough. If something is green and it likes the tiger then the tiger visits the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not see the bear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits($x, $y) ::: Does x visit y?\nSees($x, $y) ::: Does x see y?\nLikes($x, $y) ::: Does x like y?\nKind($x, bool) ::: Is x kind?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nVisits(Bear, Tiger) ::: The bear visits the tiger.\nKind(Cat, True) ::: The cat is kind.\nGreen(Mouse, True) ::: The mouse is green.\nKind(Mouse, True) ::: The mouse is kind.\nSees(Mouse, Tiger) ::: The mouse sees the tiger.\nRough(Tiger, True) ::: The tiger is rough.\nVisits(Tiger, Cat) ::: The tiger visits the cat.\nRules:\nVisits($x, $y) >>> Sees($x, $y) ::: If something visits the bear then it sees the bear.\nSees($x, $y) >>> Likes($x, Cat) ::: If something sees the bear then the bear likes the cat.\nVisits($x, $y) >>> Visits($y, $x) ::: If something visits the cat then the cat visits the bear.\nSees($x, $y) && Likes($x, $y) >>> Cold($x, True) ::: If something sees the bear and the bear likes the cat then it is cold.\nCold($x, True) >>> Rough($x, True) ::: Cold things are rough.\nGreen($x, True) && Likes($x, Tiger) >>> Visits(Tiger, $x) ::: If something is green and it likes the tiger then the tiger visits the mouse.\nQuery:\nSees(Cat, Bear, False) ::: The cat does not see the bear.\n------\nProblem:\nThe bear is furry. The cat is furry. The cat is green. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is kind. The cat is red. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is kind. The cat is red. The cat is rough. The cat is white. The cat is young. The cat is quiet. The cat is kind. The cat is red."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-347_Q14",
    "context": "Anne is big. Anne is kind. Charlie is big. Erin is big. Erin is blue. Erin is not kind. Erin is not young. Harry is big. Harry is nice. Harry is white. Harry is young. All kind, big things are blue. If something is young and kind then it is nice. Blue, cold things are nice. White things are cold. White, big things are cold. If Erin is blue and Erin is white then Erin is nice. All cold, nice things are young. All kind, blue things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Anne, True) ::: Anne is big.\nKind(Anne, True) ::: Anne is kind.\nBig(Charlie, True) ::: Charlie is big.\nBig(Erin, True) ::: Erin is big.\nBlue(Erin, True) ::: Erin is blue.\nNot(Kind(Erin, True)) ::: Erin is not kind.\nNot(Young(Erin, True)) ::: Erin is not young.\nBig(Harry, True) ::: Harry is big.\nNice(Harry, True) ::: Harry is nice.\nWhite(Harry, True) ::: Harry is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nKind($x, True) >>> Big($x, True) && Blue($x, True) ::: All kind, big things are blue.\nYoung($x, True) && Kind($x, True) >>> Nice($x, True) ::: If something is young and kind then it is nice.\nBlue($x, True) && Cold($x, True) >>> Nice($x, True) ::: Blue, cold things are nice.\nWhite($x, True) >>> Cold($x, True) ::: White things are cold.\nBig($x, True) && White($x, True) >>> Cold($x, True) ::: White, big things are cold.\nIf Erin is blue and Erin is white then Erin is nice ::: If Erin is blue and Erin is white then Erin is nice.\nYoung($x, True) && Nice($x, True) >>> Cold($x, True) ::: All cold, nice things are young.\nKind($x, True) && Blue($x, True) >>> White($x, True) ::: All kind, blue things are white.\nQuery:\nYoung(Charlie, True) ::: Charlie is young.\n------\nProblem:\nAnne is big. Anne is kind. Anne is not young. Anne is not white. Anne is not blue. Anne is not"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-264_Q5",
    "context": "The bald eagle likes the cat. The bald eagle visits the rabbit. The cat needs the bald eagle. The cat needs the cow. The cat visits the rabbit. The cow likes the bald eagle. The cow likes the rabbit. The cow visits the bald eagle. The rabbit is green. The rabbit is red. The rabbit needs the cat. If someone needs the bald eagle and they are red then they visit the cow. If someone needs the bald eagle then the bald eagle needs the rabbit. If someone needs the cat then they like the bald eagle. If someone needs the bald eagle then they are red. If someone is green then they need the bald eagle. If someone likes the bald eagle and they need the bald eagle then the bald eagle visits the rabbit. If the cat likes the bald eagle then the bald eagle visits the cow. If someone visits the cow then they need the cat. If the cow is rough and the cow is nice then the cow is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit visits the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nRough($x, bool) ::: Is x rough?\nNice($x, bool) ::: Is x nice?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nFacts:\nLikes(BaldEagle, Cat, True) ::: The bald eagle likes the cat.\nVisits(BaldEagle, Rabbit, True) ::: The bald eagle visits the rabbit.\nNeeds(Cat, BaldEagle, True) ::: The cat needs the bald eagle.\nNeeds(Cat, Cow, True) ::: The cat needs the cow.\nVisits(Cat, Rabbit, True) ::: The cat visits the rabbit.\nLikes(Cow, BaldEagle, True) ::: The cow likes the bald eagle.\nLikes(Cow, Rabbit, True) ::: The cow likes the rabbit.\nVisits(Cow, BaldEagle, True) ::: The cow visits the bald eagle.\nIs(Rabbit, Green, True) ::: The rabbit is green.\nIs(Rabbit, Red, True) ::: The rabbit is red.\nNeeds(Rabbit, Cat, True) ::: The rabbit needs the cat.\nRules:\nIf someone needs the bald eagle and they are red then they visit the cow ::: If someone needs the bald eagle and they are red then they visit the cow.\nIf someone needs the bald eagle then the bald eagle needs the rabbit ::: If someone needs the bald eagle then the bald eagle needs the rabbit.\nIf someone needs the cat then they like the bald eagle ::: If someone needs the cat then they like the bald eagle.\nIf someone needs the bald eagle then they are red ::: If someone needs the bald eagle then they are red.\nIf someone is green then they need the bald eagle ::: If someone is green then they need the bald eagle.\nIf someone likes the bald eagle and they need the bald eagle then the bald eagle visits the rabbit ::: If someone likes the bald eagle and they need the bald eagle then the bald eagle visits the rabbit.\nIf the cat likes the bald eagle then the bald eagle visits the cow ::: If the cat likes the bald eagle then the bald eagle visits the cow.\nIf someone visits the cow then they need the cat ::: If someone visits the cow then they need the cat.\nIf the cow is rough and the cow is nice then the cow is red ::: If the cow is rough and the cow is nice then the cow is red.\nQuery:\nVisits(Rabbit, Cow, True) ::: The rabbit visits the cow.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1286_Q7",
    "context": "Anne is green. Fiona is cold. Fiona is white. Fiona is young. Gary is green. Harry is cold. Harry is rough. All young, cold things are white. If something is cold then it is green. Young things are white. White things are blue. If something is blue then it is red. If something is green then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nCold(Fiona, True) ::: Fiona is cold.\nWhite(Fiona, True) ::: Fiona is white.\nYoung(Fiona, True) ::: Fiona is young.\nGreen(Gary, True) ::: Gary is green.\nCold(Harry, True) ::: Harry is cold.\nRough(Harry, True) ::: Harry is rough.\nRules:\nYoung($x, True) >>> Cold($x, True) ::: Young things are white.\nCold($x, True) >>> Green($x, True) ::: If something is cold then it is green.\nYoung($x, True) >>> White($x, True) ::: Young things are white.\nWhite($x, True) >>> Blue($x, True) ::: White things are blue.\nBlue($x, True) >>> Red($x, True) ::: If something is blue then it is red.\nGreen($x, True) >>> Young($x, True) ::: If something is green then it is young.\nQuery:\nBlue(Gary, True) ::: Gary is blue.\n------\nProblem:\nAnne is green. Fiona is cold. Fiona is white. Fiona is young. Gary is green. Harry is cold. Harry is rough. All young, cold things are white. If something is cold then it is green. Young things are white. White things are blue. If something is blue then it is red. If something is green then it is young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is blue.\n###\nPredicates:\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nCold(Fiona, True) ::: Fiona is cold.\nWhite(Fiona, True) ::: Fiona is white.\nYoung(Fiona, True) ::: Fiona is young.\nGreen(Gary, True) ::: Gary is green.\nCold(Harry, True) ::: Harry is cold.\nRough(Harry, True) ::: Harry is rough.\nRules:\nYoung($x, True) >>> Cold($x, True) ::: Young things are white.\nCold($x,"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-355_Q4",
    "context": "The cow does not chase the mouse. The cow chases the squirrel. The cow eats the mouse. The cow likes the squirrel. The lion chases the squirrel. The lion eats the cow. The lion eats the squirrel. The lion is cold. The lion likes the cow. The mouse eats the cow. The mouse is not nice. The squirrel chases the lion. If someone is big then they chase the lion. If someone chases the lion then they eat the lion. If someone is nice then they do not eat the lion. If the lion is cold and the lion is not rough then the lion is nice. If the cow chases the lion and the cow likes the lion then the cow eats the lion. If someone eats the lion then the lion is big. If someone is big and they chase the mouse then the mouse does not chase the cow. If someone is rough then they like the lion. If someone eats the lion then they like the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not eat the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChase($x, $y, bool) ::: Does x chase y?\nEat($x, $y, bool) ::: Does x eat y?\nLike($x, $y, bool) ::: Does x like y?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nFacts:\nChase(Cow, Mouse, False) ::: The cow does not chase the mouse.\nChase(Cow, Squirrel, True) ::: The cow chases the squirrel.\nEat(Cow, Mouse, True) ::: The cow eats the mouse.\nLike(Cow, Squirrel, True) ::: The cow likes the squirrel.\nChase(Lion, Squirrel, True) ::: The lion chases the squirrel.\nEat(Lion, Cow, True) ::: The lion eats the cow.\nEat(Lion, Squirrel, True) ::: The lion eats the squirrel.\nCold(Lion, True) ::: The lion is cold.\nLike(Lion, Cow, True) ::: The lion likes the cow.\nEat(Mouse, Cow, True) ::: The mouse eats the cow.\nNice(Mouse, False) ::: The mouse is not nice.\nChase(Squirrel, Lion, True) ::: The squirrel chases the lion.\nRules:\nBig($x, True) >>> Chase($x, Lion, True) ::: If someone is big then they chase the lion.\nChase($x, Lion, True) >>> Eat($x, Lion, True) ::: If someone chases the lion then they eat the lion.\nNice($x, True) >>> Eat($x, Lion, False) ::: If someone is nice then they do not eat the lion.\nCold($x, True) && Not(Rough($x, True)) >>> Nice($x, True) ::: If the lion is cold and the lion is not rough then the lion is nice.\nChase(Cow, Lion, True) && Like(Cow, Lion, True) >>> Eat(Cow, Lion, True) ::: If the cow chases the lion and the cow likes the lion then the cow eats the lion.\nEat($x, Lion, True) >>> Big($x, True) ::: If someone eats the lion then the lion is big.\nBig($x, True) && Chase($x, Mouse, True) >>> Mouse(Mouse, False) ::: If someone is big and they chase the mouse then the mouse does not chase the cow.\nRough($x, True) >>> Like($x, Lion, True) ::: If someone is rough then they like the lion.\nEat($x, Lion, True) >>> Like($x, Squirrel, True) ::: If someone eats the lion"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-226_Q19",
    "context": "The bear is not big. The bear needs the squirrel. The dog is nice. The dog sees the tiger. The squirrel sees the bear. The squirrel sees the tiger. The tiger eats the dog. The tiger is green. The tiger needs the bear. The tiger sees the squirrel. If someone eats the dog then the dog needs the bear. If someone eats the bear then they eat the tiger. If someone needs the tiger and they see the dog then they eat the tiger. If someone is nice and they need the bear then they eat the bear. If someone sees the dog then they eat the squirrel. If someone needs the tiger and the tiger eats the bear then they eat the squirrel. If someone eats the tiger then the tiger eats the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not see the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nNeeds($x, $y, bool) ::: Does x need y?\nNice($x, bool) ::: Is x nice?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nGreen($x, bool) ::: Is x green?\nFacts:\nNotBig(Bear, True) ::: The bear is not big.\nNeeds(Bear, Squirrel, True) ::: The bear needs the squirrel.\nNice(Dog, True) ::: The dog is nice.\nSees(Dog, Tiger, True) ::: The dog sees the tiger.\nSees(Squirrel, Bear, True) ::: The squirrel sees the bear.\nSees(Squirrel, Tiger, True) ::: The squirrel sees the tiger.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nGreen(Tiger, True) ::: The tiger is green.\nNeeds(Tiger, Bear, True) ::: The tiger needs the bear.\nSees(Tiger, Squirrel, True) ::: The tiger sees the squirrel.\nRules:\nNotBig(Bear, True) >>> Needs(Bear, Squirrel, True) ::: The bear is not big.\nEats(Dog, Bear, True) >>> Needs(Bear, Squirrel, True) ::: If someone eats the dog then the dog needs the bear.\nNeeds(Bear, Tiger, True) >>> Eats(Tiger, Bear, True) ::: If someone needs the tiger and they eat the bear then they eat the tiger.\nNeeds(Tiger, Bear, True) >>> Eats(Tiger, Squirrel, True) ::: If someone needs the tiger and the tiger eats the bear then they eat the squirrel.\nEats(Tiger, Bear, True) >>> Eats(Tiger, Squirrel, True) ::: If someone eats the tiger then the tiger eats the bear.\nEats(Tiger, Bear, True) >>> Needs(Tiger, Bear, True) ::: If someone eats the tiger then the tiger eats the bear.\nEats(Tiger, Bear, True) >>> Needs(Tiger, Bear, True) ::: If someone eats the tiger then the tiger eats the bear.\nEats(Tiger, Bear, True) >>> Needs(Tiger, Bear, True) ::: If someone eats the tiger then the tiger eats the bear.\nEats(Tiger, Bear, True) >>> Needs(Tiger, Bear, True) ::: If someone eats the tiger then the tiger eats the bear.\nEats(Tiger, Bear, True) >>> Needs(Tiger, Bear,"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-203_Q7",
    "context": "Bob is nice. Bob is round. Bob is young. Dave is round. Erin is big. Erin is red. Gary is young. All round things are nice. All nice, big things are white. If something is big and white then it is round. Young things are nice. Big, red things are young. All nice things are quiet. All quiet things are big. Young, quiet things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nWhite($x, bool) ::: Is x white?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nFacts:\nNice(Bob, True) ::: Bob is nice.\nRound(Bob, True) ::: Bob is round.\nYoung(Bob, True) ::: Bob is young.\nRound(Dave, True) ::: Dave is round.\nBig(Erin, True) ::: Erin is big.\nRed(Erin, True) ::: Erin is red.\nYoung(Gary, True) ::: Gary is young.\nRules:\nRound($x, True) >>> Nice($x, True) ::: All round things are nice.\nNice($x, True) && Big($x, True) >>> White($x, True) ::: All nice, big things are white.\nBig($x, True) && White($x, True) >>> Round($x, True) ::: If something is big and white then it is round.\nYoung($x, True) >>> Nice($x, True) ::: Young things are nice.\nBig($x, True) && Red($x, True) >>> Young($x, True) ::: Big, red things are young.\nNice($x, True) >>> Quiet($x, True) ::: All nice things are quiet.\nQuiet($x, True) >>> Big($x, True) ::: All quiet things are big.\nYoung($x, True) && Quiet($x, True) >>> Red($x, True) ::: Young, quiet things are red.\nQuery:\nBig(Gary, True) ::: Gary is big.\n------\nProblem:\nBob is nice. Bob is round. Bob is young. Dave is round. Erin is big. Erin is red. Gary is young. All round things are nice. All nice, big things are white. If something is big and white then it is round. Young things are nice. Big, red things are young. All nice things are quiet. All quiet things are big. Young, quiet things are red.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is white.\n###\nPredicates:\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nWhite($x, bool) ::: Is x white?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nFacts:\nNice(Bob, True) ::: Bob is nice.\nRound(Bob, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-586_Q7",
    "context": "Erin is smart. Fiona is quiet. Gary is blue. Gary is kind. Gary is quiet. Gary is red. Harry is smart. If Harry is smart then Harry is kind. Quiet, smart things are blue. If something is green and smart then it is not blue. Kind things are quiet. All blue, green things are smart. Red things are furry. If Harry is smart and Harry is blue then Harry is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart($x, bool) ::: Is x smart?\nQuiet($x, bool) ::: Is x quiet?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nFacts:\nSmart(Erin, True) ::: Erin is smart.\nQuiet(Fiona, True) ::: Fiona is quiet.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nSmart($x, True) >>> Kind($x, True) ::: If Harry is smart then Harry is kind.\nQuiet($x, True) && Smart($x, True) >>> Blue($x, True) ::: Quiet, smart things are blue.\nGreen($x, True) && Smart($x, True) >>> Blue($x, False) ::: If something is green and smart then it is not blue.\nKind($x, True) >>> Quiet($x, True) ::: Kind things are quiet.\nBlue($x, True) >>> Green($x, True) ::: All blue, green things are smart.\nRed($x, True) >>> Furry($x, True) ::: Red things are furry.\nSmart($x, True) && Blue($x, True) >>> Red($x, True) ::: If Harry is smart and Harry is blue then Harry is red.\nQuery:\nBlue(Harry, True) ::: Harry is blue.\n------\nProblem:\nErin is furry. Erin is green. Erin is quiet. Erin is red. Erin is rough. Erin is white. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is white. Harry is furry. Harry is green. Harry is quiet. Harry is red. Harry is rough. Harry is white. Young people are furry. If Anne is quiet then Anne is red. Young, green people are rough. If someone is green then they are white. If someone is furry and quiet then they are white. If someone is young and white then they are rough. All red people are young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is white.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Erin, True) ::: Erin is furry."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-75_Q5",
    "context": "The bald eagle chases the cow. The bald eagle chases the dog. The cow needs the bald eagle. The cow sees the lion. The dog chases the cow. The dog is green. The lion is rough. If someone is blue and rough then they see the lion. If someone needs the cow and they do not need the lion then they chase the cow. If someone sees the cow then the cow is kind. If someone is rough then they chase the bald eagle. If someone is blue then they do not chase the bald eagle. If someone is kind then they chase the lion. If someone chases the bald eagle and the bald eagle chases the dog then the bald eagle sees the dog. If the bald eagle sees the dog then the bald eagle sees the cow. If someone needs the cow then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle sees the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nFacts:\nChases(BaldEagle, Cow, True) ::: The bald eagle chases the cow.\nChases(BaldEagle, Dog, True) ::: The bald eagle chases the dog.\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\nSees(Cow, Lion, True) ::: The cow sees the lion.\nChases(Dog, Cow, True) ::: The dog chases the cow.\nGreen(Dog, True) ::: The dog is green.\nRough(Lion, True) ::: The lion is rough.\nRules:\nBlue($x, True) >>> Sees($x, Lion, True) ::: If someone is blue and rough then they see the lion.\nNeeds(Cow, $y, True) && $y!= Lion >>> Chases(Cow, $y, True) ::: If someone needs the cow and they do not need the lion then they chase the cow.\nSees($x, Cow, True) >>> Kind($x, True) ::: If someone sees the cow then the cow is kind.\nRough($x, True) >>> Chases($x, BaldEagle, True) ::: If someone is rough then they chase the bald eagle.\nBlue($x, True) >>> Chases($x, BaldEagle, False) ::: If someone is blue then they do not chase the bald eagle.\nKind($x, True) >>> Chases($x, Lion, True) ::: If someone is kind then they chase the lion.\nChases(BaldEagle, Dog, True) && Chases(Dog, Cow, True) >>> Chases(BaldEagle, Cow, True) ::: If the bald eagle chases the dog and the dog chases the cow then the bald eagle sees the cow.\nChases(BaldEagle, Cow, True) >>> Chases(BaldEagle, Dog, True) ::: If the bald eagle chases the cow then the bald eagle chases the dog.\nQuery:\nSees(BaldEagle, Dog, True) ::: The bald eagle sees the dog.\n------\nProblem:\nThe dog is furry. The dog is green. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is red. The dog is kind. The dog is blue. The dog is green. The dog is rough. The dog is white. The dog is young. The dog is quiet. The dog is red. The dog is kind"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-649_Q12",
    "context": "The bald eagle is nice. The bald eagle is rough. The bald eagle needs the mouse. The bald eagle needs the squirrel. The mouse is kind. The mouse is young. The mouse likes the tiger. The mouse sees the bald eagle. The squirrel is kind. The squirrel is nice. The squirrel needs the bald eagle. The tiger is kind. If someone likes the bald eagle then they are rough. If someone is blue and they see the tiger then the tiger needs the squirrel. If the mouse needs the bald eagle and the bald eagle likes the mouse then the bald eagle is rough. If the mouse needs the squirrel then the squirrel likes the mouse. If someone is rough then they see the mouse. If someone needs the tiger and the tiger is kind then they like the bald eagle. If someone sees the mouse then they need the squirrel. If someone needs the squirrel and the squirrel is nice then the squirrel needs the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not need the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nNice(BaldEagle, True) ::: The bald eagle is nice.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nNeeds(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nNeeds(BaldEagle, Squirrel, True) ::: The bald eagle needs the squirrel.\nKind(Mouse, True) ::: The mouse is kind.\nYoung(Mouse, True) ::: The mouse is young.\nLikes(Mouse, Tiger, True) ::: The mouse likes the tiger.\nSees(Mouse, BaldEagle, True) ::: The mouse sees the bald eagle.\nKind(Squirrel, True) ::: The squirrel is kind.\nNice(Squirrel, True) ::: The squirrel is nice.\nNeeds(Squirrel, BaldEagle, True) ::: The squirrel needs the bald eagle.\nKind(Tiger, True) ::: The tiger is kind.\nRules:\nLikes($x, $y, True) >>> Rough($x, True) ::: If someone likes the bald eagle then they are rough.\nBlue($x, True) && Sees($x, Tiger, True) >>> Needs($x, Squirrel, True) ::: If someone is blue and they see the tiger then the tiger needs the squirrel.\nNeeds($x, BaldEagle, True) && Likes($x, Mouse, True) >>> Rough($x, True) ::: If the mouse needs the bald eagle and the bald eagle likes the mouse then the bald eagle is rough.\nNeeds($x, Squirrel, True) >>> Likes($x, Mouse, True) ::: If the mouse needs the squirrel then the squirrel likes the mouse.\nRough($x, True) >>> Sees($x, Mouse, True) ::: If someone is rough then they see the mouse.\nNeeds($x, Tiger, True) && Kind($x, True) >>> Likes($x, BaldEagle, True) ::: If someone needs the tiger and the tiger is kind then they like the bald eagle.\nSees($x, Mouse, True) >>> Needs($x, Squirrel, True) ::: If someone sees the mouse then they need the squirrel.\nNeeds($x, Squirrel, True) && Nice($x,"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-818_Q16",
    "context": "Charlie is young. Erin is blue. Erin is not kind. Fiona is blue. Fiona is white. Gary is blue. Gary is kind. Furry, nice things are white. If something is young and blue then it is smart. All blue, smart things are furry. All smart, white things are furry. Young things are nice. If Fiona is smart and Fiona is young then Fiona is not furry. If Erin is kind then Erin is furry. If Gary is smart and Gary is white then Gary is not kind. If something is nice then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nSmart($x, bool) ::: Is x smart?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Erin, True) ::: Erin is blue.\nNot(Kind(Erin, True)) ::: Erin is not kind.\nBlue(Fiona, True) ::: Fiona is blue.\nWhite(Fiona, True) ::: Fiona is white.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nWhite(Gary, True) ::: Gary is white.\nFurry(Furry, Nice, True) ::: Furry, nice things are white.\nYoung($x, True) >>> Smart($x, True) ::: If something is young and blue then it is smart.\nBlue($x, True) >>> Smart($x, True) >>> Furry($x, True) ::: All blue, smart things are furry.\nSmart($x, True) >>> Furry($x, True) ::: All smart, white things are furry.\nYoung($x, True) >>> Nice($x, True) ::: Young things are nice.\nNot(Furry(Fiona, True)) >>> Smart(Fiona, True) >>> Young(Fiona, True) ::: If Fiona is smart and Fiona is young then Fiona is not furry.\nKind(Erin, True) >>> Furry(Erin, True) ::: If Erin is kind then Erin is furry.\nNot(Kind(Gary, True)) >>> Smart(Gary, True) >>> White(Gary, True) ::: If Gary is smart and Gary is white then Gary is not kind.\nNice($x, True) >>> Blue($x, True) ::: If something is nice then it is blue.\nQuery:\nNice(Erin, True) ::: Erin is nice.\n------\nProblem:\nCharlie is young. Erin is blue. Erin is not kind. Fiona is blue. Fiona is white. Gary is blue. Gary is kind. Furry, nice things are white. If something is young and blue then it is smart. All blue, smart things are furry. All smart, white things are furry. Young things are nice. If Fiona is smart and Fiona is young then Fiona is not furry. If Erin is kind then Erin is furry. If Gary is smart and Gary is white then Gary is not kind. If something is nice then it is blue.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is nice.\n###"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-582_Q5",
    "context": "The dog chases the squirrel. The lion chases the rabbit. The lion needs the dog. The lion visits the dog. The lion visits the rabbit. The rabbit is cold. The squirrel visits the dog. If something is rough and it chases the rabbit then the rabbit is rough. If something chases the squirrel then it visits the dog. If something chases the lion then it is rough. If something is green then it needs the dog. If something is green then it needs the lion. If something visits the dog then it is green. If something needs the lion then it chases the lion. All cold things are green. If the rabbit needs the lion and the lion is cold then the lion visits the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nRough($x, bool) ::: Is x rough?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nFacts:\nChases(Dog, Squirrel, True) ::: The dog chases the squirrel.\nChases(Lion, Rabbit, True) ::: The lion chases the rabbit.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nVisits(Lion, Dog, True) ::: The lion visits the dog.\nVisits(Lion, Rabbit, True) ::: The lion visits the rabbit.\nCold(Rabbit, True) ::: The rabbit is cold.\nVisits(Squirrel, Dog, True) ::: The squirrel visits the dog.\nRules:\nRough($x, True) && Chases($x, Rabbit, True) >>> Rough(Rabbit, True) ::: If something is rough and it chases the rabbit then the rabbit is rough.\nChases($x, Squirrel, True) >>> Visits($x, Dog, True) ::: If something chases the squirrel then it visits the dog.\nChases($x, Lion, True) >>> Rough($x, True) ::: If something chases the lion then it is rough.\nGreen($x, True) >>> Needs($x, Lion, True) ::: If something is green then it needs the lion.\nGreen($x, True) >>> Needs($x, Dog, True) ::: If something is green then it needs the dog.\nVisits($x, Dog, True) >>> Green($x, True) ::: If something visits the dog then it is green.\nNeeds(Lion, $x, True) && Cold($x, True) >>> Visits(Lion, Squirrel, True) ::: If the rabbit needs the lion and the lion is cold then the lion visits the squirrel.\nAll cold things are green ::: All cold things are green.\n------\nProblem:\nThe dog chases the squirrel. The lion chases the rabbit. The lion needs the dog. The lion visits the dog. The lion visits the rabbit. The rabbit is cold. The squirrel visits the dog. If something is rough and it chases the rabbit then the rabbit is rough. If something chases the squirrel then it visits the dog. If something chases the lion then it is rough. If something is green then it needs the dog. If something is green then it needs the lion. If something visits the dog then it is green. If something needs the lion then it chases the lion. All cold things are green. If the rabbit needs the lion and the lion is cold then the lion visits the squ"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-861_Q9",
    "context": "The cat needs the dog. The dog is kind. The dog needs the rabbit. The rabbit eats the dog. The rabbit is green. The tiger chases the rabbit. The tiger is big. If something is nice and it eats the tiger then it needs the dog. If something chases the cat then it eats the cat. If the dog chases the tiger then the tiger needs the rabbit. If the rabbit chases the tiger then the rabbit chases the cat. If something chases the cat then the cat is kind. If something eats the dog then it chases the cat. If something is rough then it eats the dog. If something is kind then it is rough. If something eats the rabbit and the rabbit is big then it is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat eats the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nKind($x, bool) ::: Is x kind?\nEats($x, $y, bool) ::: Does x eat y?\nChases($x, $y, bool) ::: Does x chase y?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nFacts:\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nKind(Dog, True) ::: The dog is kind.\nNeeds(Dog, Rabbit, True) ::: The dog needs the rabbit.\nEats(Rabbit, Dog, True) ::: The rabbit eats the dog.\nGreen(Rabbit, True) ::: The rabbit is green.\nChases(Tiger, Rabbit, True) ::: The tiger chases the rabbit.\nBig(Tiger, True) ::: The tiger is big.\nRules:\nNice($x, True) && Eats($x, Tiger) >>> Needs($x, Dog, True) ::: If something is nice and it eats the tiger then it needs the dog.\nChases($x, Cat) >>> Eats($x, Cat) ::: If something chases the cat then it eats the cat.\nDog($x, True) && Chases($x, Tiger) >>> Rabbit($x, True) >>> Needs($x, Rabbit, True) ::: If the dog chases the tiger then the tiger needs the rabbit.\nChases($x, Rabbit) >>> Chases($x, Cat) ::: If the rabbit chases the tiger then the rabbit chases the cat.\nChases($x, Cat) >>> Kind($x, True) ::: If something chases the cat then the cat is kind.\nEats($x, Dog) >>> Chases($x, Cat) ::: If something eats the dog then it chases the cat.\nRough($x, True) >>> Eats($x, Dog) ::: If something is rough then it eats the dog.\nKind($x, True) >>> Rough($x, True) ::: If something is kind then it is rough.\nEats($x, Rabbit) && Big($x, True) >>> Kind($x, True) ::: If something eats the rabbit and the rabbit is big then it is kind.\nQuery:\nEats(Cat, Dog, True) ::: The cat eats the dog.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-890_Q2",
    "context": "The bald eagle needs the cow. The bald eagle needs the mouse. The cow is round. The mouse does not visit the rabbit. The rabbit is green. The rabbit needs the bald eagle. The rabbit visits the bald eagle. If someone visits the mouse then they like the cow. If someone likes the mouse and they are blue then the mouse needs the rabbit. If someone needs the bald eagle then the bald eagle likes the rabbit. If someone needs the bald eagle then the bald eagle likes the mouse. If someone likes the cow then they are blue. If someone is red and they visit the cow then the cow is green. If someone visits the mouse then they do not visit the bald eagle. If someone is round and they need the bald eagle then the bald eagle is round. If someone visits the bald eagle and the bald eagle likes the rabbit then the bald eagle visits the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not visit the bald eagle.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nNeeds(BaldEagle, Cow, True) ::: The bald eagle needs the cow.\nNeeds(BaldEagle, Mouse, True) ::: The bald eagle needs the mouse.\nRound(Cow, True) ::: The cow is round.\nDoesNotVisit(Mouse, Rabbit, True) ::: The mouse does not visit the rabbit.\nGreen(Rabbit, True) ::: The rabbit is green.\nNeeds(Rabbit, BaldEagle, True) ::: The rabbit needs the bald eagle.\nVisits(Rabbit, BaldEagle, True) ::: The rabbit visits the bald eagle.\nIfVisitsMouseThenLikesCow($x, $y, True) ::: If someone visits the mouse then they like the cow.\nIfLikesMouseAndIsBlueThenMouseNeedsRabbit($x, $y, True) ::: If someone likes the mouse and they are blue then the mouse needs the rabbit.\nIfNeedsBaldEagleThenBaldEagleLikesRabbit($x, $y, True) ::: If someone needs the bald eagle then the bald eagle likes the rabbit.\nIfNeedsBaldEagleThenBaldEagleLikesMouse($x, $y, True) ::: If someone needs the bald eagle then the bald eagle likes the mouse.\nIfLikesCowThenIsBlue($x, $y, True) ::: If someone likes the cow then they are blue.\nIfIsRedAndVisitsCowThenCowIsGreen($x, $y, True) ::: If someone is red and they visit the cow then the cow is green.\nDoesNotVisitMouseThenDoesNotVisitBaldEagle($x, $y, True) ::: If someone visits the mouse then they do not visit the bald eagle.\nIfIsRoundAndNeedsBaldEagleThenBaldEagleIsRound($x, $y, True) ::: If someone is round and they need the bald eagle then the bald eagle is round.\nIfVisitsBaldEagleAndBaldEagleLikesRabbitThenBaldEagleVisitsMouse($x, $y"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-680_Q14",
    "context": "Bob is kind. Charlie is cold. Charlie is kind. Charlie is nice. Charlie is quiet. Charlie is smart. Fiona is quiet. Fiona is smart. Gary is nice. Gary is quiet. Gary is white. If Fiona is cold then Fiona is nice. All nice things are white. If something is white then it is nice. Nice, white things are quiet. White, smart things are rough. Smart, kind things are rough. All cold things are white. If Bob is kind then Bob is white. Quiet, kind things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nRules:\nKind(Bob, True) >>> White(Bob, True) ::: If Bob is kind then Bob is white.\nCold(Fiona, True) >>> Nice(Fiona, True) ::: If Fiona is cold then Fiona is nice.\nWhite($x, True) >>> Nice($x, True) ::: All nice things are white.\nNice($x, True) >>> White($x, True) ::: If something is white then it is nice.\nNice($x, True) && White($x, True) >>> Quiet($x, True) ::: Nice, white things are quiet.\nWhite($x, True) && Smart($x, True) >>> Rough($x, True) ::: White, smart things are rough.\nSmart($x, True) && Kind($x, True) >>> Rough($x, True) ::: Smart, kind things are rough.\nCold($x, True) >>> White($x, True) ::: All cold things are white.\nKind(Bob, True) >>> White(Bob, True) ::: If Bob is kind then Bob is white.\nQuiet($x, True) && Kind($x, True) >>> Smart($x, True) ::: Quiet, kind things are smart.\nFacts:\nKind(Bob, True) ::: Bob is kind.\nCold(Charlie, True) ::: Charlie is cold.\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nQuiet(Charlie, True) ::: Charlie is quiet.\nSmart(Charlie, True) ::: Charlie is smart.\nQuiet(Fiona, True) ::: Fiona is quiet.\nSmart(Fiona, True) ::: Fiona is smart.\nNice(Gary, True) ::: Gary is nice.\nQuiet(Gary, True) ::: Gary is quiet.\nWhite(Gary, True) ::: Gary is white.\nQuery:\nRough(Fiona, True) ::: Fiona is rough.\n------\nProblem:\nBob is kind. Charlie is cold. Charlie is kind. Charlie is nice. Charlie is quiet. Charlie is smart. Fiona is quiet. Fiona is smart. Gary is nice. Gary is quiet. Gary is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-327_Q1",
    "context": "Anne is cold. Anne is furry. Anne is rough. Anne is smart. Anne is white. Bob is nice. Bob is rough. Erin is cold. Erin is furry. Erin is nice. Erin is rough. Erin is smart. Erin is white. Erin is young. Fiona is cold. Fiona is furry. All smart things are cold. If Bob is young and Bob is cold then Bob is furry. Young things are cold. If Fiona is rough and Fiona is cold then Fiona is smart. Cold, furry things are white. All rough, nice things are young. If something is white and furry then it is smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nNice(Bob, True) ::: Bob is nice.\nRough(Bob, True) ::: Bob is rough.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nNice(Erin, True) ::: Erin is nice.\nRough(Erin, True) ::: Erin is rough.\nSmart(Erin, True) ::: Erin is smart.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nCold(Fiona, True) ::: Fiona is cold.\nFurry(Fiona, True) ::: Fiona is furry.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nSmart($x, True) >>> Cold($x, True) ::: All smart things are cold.\nYoung($x, True) >>> Cold($x, True) ::: Young things are cold.\nFurry($x, True) && Cold($x, True) >>> White($x, True) ::: Cold, furry things are white.\nFurry($x, True) && Cold($x, True) >>> Smart($x, True) ::: If Fiona is rough and Fiona is cold then Fiona is smart.\nRough($x, True) && Nice($x, True) >>> Young($x, True) ::: All rough, nice things are young.\nWhite($x, True) && Furry($x, True) >>> Smart($x, True) ::: If something is white and furry then it is smart.\nQuery:\nRough(Anne, True) ::: Anne is rough.\n------\nProblem:\nAnne is cold. Anne is furry. Anne is rough. Anne is smart. Anne is white. Bob is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-785_Q5",
    "context": "Anne is rough. Anne is young. Bob is nice. Bob is red. Bob is young. Charlie is cold. Charlie is quiet. Charlie is red. Charlie is rough. Charlie is smart. Fiona is cold. Fiona is quiet. Cold people are young. Rough, young people are nice. Cold, red people are smart. Red people are smart. If someone is smart and quiet then they are cold. All rough, nice people are red. All red, quiet people are cold. All smart people are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nFacts:\nRough(Anne, True) ::: Anne is rough.\nYoung(Anne, True) ::: Anne is young.\nNice(Bob, True) ::: Bob is nice.\nRed(Bob, True) ::: Bob is red.\nYoung(Bob, True) ::: Bob is young.\nCold(Charlie, True) ::: Charlie is cold.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nSmart(Charlie, True) ::: Charlie is smart.\nCold(Fiona, True) ::: Fiona is cold.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nCold($x, True) >>> Young($x, True) ::: Cold people are young.\nRough($x, True) && Young($x, True) >>> Nice($x, True) ::: Rough, young people are nice.\nCold($x, True) && Red($x, True) >>> Smart($x, True) ::: Cold, red people are smart.\nRed($x, True) >>> Smart($x, True) ::: Red people are smart.\nSmart($x, True) && Quiet($x, True) >>> Cold($x, True) ::: If someone is smart and quiet then they are cold.\nRough($x, True) && Nice($x, True) >>> Red($x, True) ::: All rough, nice people are red.\nRed($x, True) && Quiet($x, True) >>> Cold($x, True) ::: All red, quiet people are cold.\nSmart($x, True) >>> Quiet($x, True) ::: All smart people are quiet.\nQuery:\nQuiet(Bob, True) ::: Bob is quiet.\n------\nProblem:\nAnne is furry. Anne is green. Anne is quiet. Anne is rough. Anne is white. Bob is furry. Bob is green. Bob is quiet. Bob is rough. Bob is white. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is rough. Charlie is white. Erin is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-718_Q3",
    "context": "Bob is round. Charlie is big. Charlie is furry. Charlie is green. Charlie is round. Charlie is white. Dave is big. Dave is quiet. Gary is green. Gary is quiet. All furry people are white. If someone is big then they are smart. All white, big people are round. If someone is quiet then they are smart. Smart people are big. All big, green people are furry. If someone is smart and round then they are quiet. Green people are smart. All smart, furry people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nWhite($x, bool) ::: Is x white?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nFacts:\nRound(Bob, True) ::: Bob is round.\nBig(Charlie, True) ::: Charlie is big.\nFurry(Charlie, True) ::: Charlie is furry.\nGreen(Charlie, True) ::: Charlie is green.\nRound(Charlie, True) ::: Charlie is round.\nWhite(Charlie, True) ::: Charlie is white.\nBig(Dave, True) ::: Dave is big.\nQuiet(Dave, True) ::: Dave is quiet.\nGreen(Gary, True) ::: Gary is green.\nQuiet(Gary, True) ::: Gary is quiet.\nRules:\nFurry($x, True) >>> White($x, True) ::: All furry people are white.\nBig($x, True) >>> Smart($x, True) ::: If someone is big then they are smart.\nBig($x, True) && White($x, True) >>> Round($x, True) ::: All white, big people are round.\nQuiet($x, True) >>> Smart($x, True) ::: If someone is quiet then they are smart.\nSmart($x, True) >>> Big($x, True) ::: Smart people are big.\nBig($x, True) && Green($x, True) >>> Furry($x, True) ::: All big, green people are furry.\nFurry($x, True) && Smart($x, True) && Round($x, True) >>> Quiet($x, True) ::: If someone is smart and round then they are quiet.\nGreen($x, True) >>> Smart($x, True) ::: Green people are smart.\nSmart($x, True) && Furry($x, True) >>> Big($x, True) ::: All smart, furry people are big.\nQuery:\nSmart(Charlie, True) ::: Charlie is smart.\n------\nProblem:\nBob is furry. Bob is green. Bob is quiet. Bob is white. Charlie is furry. Charlie is green. Charlie is quiet. Charlie is white. Dave is furry. Dave is green. Dave is quiet. Dave is white. Erin is furry. Erin is green. Erin is quiet. Erin is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-14_Q9",
    "context": "The cat needs the mouse. The cat visits the lion. The lion is cold. The lion is red. The lion is round. The lion likes the squirrel. The lion needs the squirrel. The lion visits the squirrel. The mouse is cold. The mouse needs the lion. The mouse visits the lion. The squirrel likes the lion. If something needs the mouse and it needs the lion then the lion needs the mouse. If something visits the lion then it needs the cat. If the mouse visits the squirrel then the squirrel likes the cat. If something is rough then it is cold. If the squirrel is cold then the squirrel visits the cat. If something visits the cat then the cat likes the mouse. If something visits the squirrel then the squirrel is rough. If something likes the mouse then it does not need the squirrel. If something is red and it does not need the squirrel then it visits the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat likes the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nIs($x, $y, bool) ::: Is x y?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nFacts:\nNeeds(Cat, Mouse, True) ::: The cat needs the mouse.\nVisits(Cat, Lion, True) ::: The cat visits the lion.\nCold(Lion, True) ::: The lion is cold.\nRed(Lion, True) ::: The lion is red.\nRound(Lion, True) ::: The lion is round.\nLikes(Lion, Squirrel, True) ::: The lion likes the squirrel.\nNeeds(Lion, Squirrel, True) ::: The lion needs the squirrel.\nVisits(Lion, Squirrel, True) ::: The lion visits the squirrel.\nLikes(Squirrel, Lion, True) ::: The squirrel likes the lion.\nNeeds(Mouse, Lion, True) ::: The mouse needs the lion.\nVisits(Mouse, Lion, True) ::: The mouse visits the lion.\nRules:\nNeeds(x, Mouse) && Needs(x, Lion) >>> Needs(Lion, Mouse) ::: If something needs the mouse and it needs the lion then the lion needs the mouse.\nVisits(x, Lion) >>> Needs(x, Cat) ::: If something visits the lion then it needs the cat.\nVisits(Mouse, Squirrel) >>> Likes(Squirrel, Cat) ::: If the mouse visits the squirrel then the squirrel likes the cat.\nRough(x) >>> Cold(x) ::: If something is rough then it is cold.\nCold(Squirrel) >>> Visits(Squirrel, Cat) ::: If the squirrel is cold then the squirrel visits the cat.\nVisits(x, Cat) >>> Likes(x, Mouse) ::: If something visits the cat then the cat likes the mouse.\nVisits(x, Squirrel) >>> Rough(x) ::: If something visits the squirrel then the squirrel is rough.\nLikes(x, Mouse) >>> Not(Needs(x, Squirrel)) ::: If something likes the mouse then it does not need the squirrel."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-515_Q4",
    "context": "Bob is red. Charlie is nice. Charlie is smart. Dave is cold. Dave is smart. Fiona is big. Fiona is red. All green people are rough. Red, smart people are green. If Bob is green and Bob is rough then Bob is red. If someone is rough then they are big. If someone is smart and big then they are cold. If someone is green and big then they are nice. All smart, nice people are cold. All nice, rough people are big. If Dave is cold then Dave is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed($x, bool) ::: Is x red?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRules:\nRed($x, True) >>> Smart($x, True) ::: Red, smart people are green.\nGreen($x, True) >>> Rough($x, True) ::: All green people are rough.\nSmart($x, True) >>> Green($x, True) ::: Red, smart people are green.\nGreen($x, True) && Rough($x, True) >>> Red($x, True) ::: If Bob is green and Bob is rough then Bob is red.\nRough($x, True) >>> Big($x, True) ::: If someone is rough then they are big.\nSmart($x, True) && Big($x, True) >>> Cold($x, True) ::: If someone is smart and big then they are cold.\nGreen($x, True) && Big($x, True) >>> Nice($x, True) ::: If someone is green and big then they are nice.\nSmart($x, True) && Nice($x, True) >>> Cold($x, True) ::: All smart, nice people are cold.\nNice($x, True) && Rough($x, True) >>> Big($x, True) ::: All nice, rough people are big.\nCold($x, True) >>> Red($x, True) ::: If Dave is cold then Dave is red.\nFacts:\nRed(Bob, True) ::: Bob is red.\nNice(Charlie, True) ::: Charlie is nice.\nSmart(Charlie, True) ::: Charlie is smart.\nSmart(Dave, True) ::: Dave is smart.\nCold(Dave, True) ::: Dave is cold.\nBig(Fiona, True) ::: Fiona is big.\nRed(Fiona, True) ::: Fiona is red.\nQuery:\nNot(Red(Dave, True)) ::: Dave is not red.\n------\nProblem:\nBob is red. Charlie is nice. Charlie is smart. Dave is cold. Dave is smart. Fiona is big. Fiona is red. All green people are rough. Red, smart people are green. If Bob is green and Bob is rough then Bob is red. If someone is rough then they are big. If someone is smart and big then they are cold. If someone is green and big then they are nice. All smart, nice people are cold. All"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-301_Q21",
    "context": "The cat eats the dog. The cat is young. The cat needs the rabbit. The dog is young. The dog needs the rabbit. The lion is green. The lion needs the cat. The rabbit chases the cat. The rabbit chases the dog. The rabbit eats the cat. The rabbit needs the cat. The rabbit needs the lion. All green things are red. If something is red and young then it eats the lion. If something eats the cat then the cat is green. If something is blue and it eats the cat then the cat chases the dog. If something eats the rabbit and it needs the lion then the rabbit is red. If something eats the lion then the lion is young. If something is big then it eats the cat. If something eats the rabbit then the rabbit eats the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not need the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nChases($x, $y, bool) ::: Does x chase y?\nFacts:\nEats(Cat, Dog, True) ::: The cat eats the dog.\nYoung(Cat, True) ::: The cat is young.\nNeeds(Cat, Rabbit, True) ::: The cat needs the rabbit.\nYoung(Dog, True) ::: The dog is young.\nNeeds(Dog, Rabbit, True) ::: The dog needs the rabbit.\nGreen(Lion, True) ::: The lion is green.\nNeeds(Lion, Cat, True) ::: The lion needs the cat.\nChases(Cat, Rabbit, True) ::: The rabbit chases the cat.\nChases(Dog, Rabbit, True) ::: The rabbit chases the dog.\nEats(Cat, Rabbit, True) ::: The rabbit eats the cat.\nNeeds(Rabbit, Cat, True) ::: The rabbit needs the cat.\nNeeds(Rabbit, Lion, True) ::: The rabbit needs the lion.\nRed(Lion, True) ::: All green things are red.\nYoung(Lion, True) ::: If something is red and young then it eats the lion.\nEats(Cat, Lion, True) ::: If something eats the cat then the cat is green.\nBlue(Cat, True) ::: If something eats the cat and it is blue then the cat chases the dog.\nEats(Rabbit, Lion, True) ::: If something eats the rabbit and it needs the lion then the rabbit is red.\nEats(Lion, Cat, True) ::: If something eats the lion then the lion is young.\nBig(Cat, True) ::: If something is big then it eats the cat.\nEats(Rabbit, Dog, True) ::: If something eats the rabbit then the rabbit eats the dog.\nQuery:\nNeeds(Cat, Dog, True) ::: The cat does not need the dog.\n------\nProblem:\nThe cat eats the dog. The cat is young. The cat needs the rabbit. The dog is young. The dog needs"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-992_Q11",
    "context": "The bear is nice. The bear likes the cat. The bear sees the dog. The cat eats the bear. The cat is cold. The cat sees the bear. The dog eats the bear. The dog eats the lion. The dog is blue. The dog sees the cat. The lion eats the cat. The lion is cold. The lion likes the bear. The lion likes the cat. If someone is big then they eat the dog. If someone is cold then they are nice. If someone is blue and they see the bear then they see the dog. If someone eats the dog then the dog is nice. If someone is blue and they see the dog then they are big. If someone eats the bear and they are nice then they are blue. If someone eats the bear and they see the dog then the dog is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat eats the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nFacts:\nNice(Bear, True) ::: The bear is nice.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nSees(Bear, Dog, True) ::: The bear sees the dog.\nEats(Cat, Bear, True) ::: The cat eats the bear.\nCold(Cat, True) ::: The cat is cold.\nSees(Cat, Bear, True) ::: The cat sees the bear.\nEats(Dog, Bear, True) ::: The dog eats the bear.\nEats(Dog, Lion, True) ::: The dog eats the lion.\nBlue(Dog, True) ::: The dog is blue.\nSees(Dog, Cat, True) ::: The dog sees the cat.\nEats(Lion, Cat, True) ::: The lion eats the cat.\nCold(Lion, True) ::: The lion is cold.\nLikes(Lion, Bear, True) ::: The lion likes the bear.\nLikes(Lion, Cat, True) ::: The lion likes the cat.\nRules:\nBig($x, True) >>> Eats($x, Dog) ::: If someone is big then they eat the dog.\nCold($x, True) >>> Nice($x, True) ::: If someone is cold then they are nice.\nBlue($x, True) && Sees($x, Bear) >>> Sees($x, Dog) ::: If someone is blue and they see the bear then they see the dog.\nEats($x, Dog) >>> Nice($x, True) ::: If someone eats the dog then the dog is nice.\nBlue($x, True) && Sees($x, Dog) >>> Big($x, True) ::: If someone is blue and they see the dog then they are big.\nEats($x, Bear) && Nice($x, True) >>> Blue($x, True) ::: If someone eats the bear and they are nice then they are blue.\nEats($x, Bear) && Sees($x, Dog) >>> Big($x, True) ::: If someone eats the bear and they see the dog then the dog is big."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-532_Q7",
    "context": "Anne is furry. Anne is rough. Bob is cold. Bob is green. Bob is red. Gary is cold. Gary is quiet. Gary is red. Harry is not cold. Harry is red. Red things are not kind. If something is cold and not furry then it is not kind. Green, rough things are quiet. If something is furry and cold then it is quiet. If Bob is furry then Bob is green. Rough things are green. If something is kind and not furry then it is green. All quiet things are cold. Cold things are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nCold(Bob, True) ::: Bob is cold.\nGreen(Bob, True) ::: Bob is green.\nRed(Bob, True) ::: Bob is red.\nCold(Gary, True) ::: Gary is cold.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nNot(Cold(Harry, True)) ::: Harry is not cold.\nRed(Harry, True) ::: Harry is red.\nNot(Kind(Anne, True)) ::: Red things are not kind.\nNot(Furry($x, True) && Cold($x, True)) >>> Kind($x, True) ::: If something is cold and not furry then it is not kind.\nGreen($x, True) && Rough($x, True) >>> Quiet($x, True) ::: Green, rough things are quiet.\nFurry($x, True) && Cold($x, True) >>> Quiet($x, True) ::: If something is furry and cold then it is quiet.\nIf(Bob, Furry(Bob, True)) ::: If Bob is furry then Bob is green.\nRough($x, True) >>> Green($x, True) ::: Rough things are green.\nNot(Furry($x, True) && Kind($x, True)) >>> Green($x, True) ::: If something is kind and not furry then it is green.\nAll(Quiet($x, True), Cold($x, True)) ::: All quiet things are cold.\nCold($x, True) >>> Red($x, True) ::: Cold things are red.\nQuery:\nCold(Anne, True) ::: Anne is cold.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-650_Q17",
    "context": "The bald eagle chases the squirrel. The cat eats the squirrel. The cat is rough. The cat is young. The cat does not see the bald eagle. The squirrel is blue. The tiger chases the squirrel. If the tiger eats the bald eagle then the tiger chases the bald eagle. If something chases the cat then the cat eats the bald eagle. If the cat sees the squirrel and the cat is not rough then the squirrel is big. If something sees the bald eagle and it does not chase the cat then the cat chases the bald eagle. If something eats the tiger then the tiger is young. If something chases the squirrel then it eats the tiger. If something eats the squirrel then it eats the bald eagle. If the squirrel sees the bald eagle and the cat does not chase the squirrel then the cat does not eat the squirrel. If something is young then it eats the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not eat the squirrel.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nYoung($x, bool) ::: Is x young?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nChases(BaldEagle, Squirrel, True) ::: The bald eagle chases the squirrel.\nEats(Cat, Squirrel, True) ::: The cat eats the squirrel.\nRough(Cat, True) ::: The cat is rough.\nYoung(Cat, True) ::: The cat is young.\nNot(Sees(Cat, BaldEagle, True)) ::: The cat does not see the bald eagle.\nBlue(Squirrel, True) ::: The squirrel is blue.\nChases(Tiger, Squirrel, True) ::: The tiger chases the squirrel.\nIf(Eats(Tiger, BaldEagle, True), Chases(Tiger, BaldEagle, True)) ::: If the tiger eats the bald eagle then the tiger chases the bald eagle.\nIf(Chases(Cat, Squirrel, True), Eats(Cat, BaldEagle, True)) ::: If something chases the cat then the cat eats the bald eagle.\nIf(Sees(Cat, Squirrel, True) && Not(Rough(Cat, True)), Big(Squirrel, True)) ::: If the cat sees the squirrel and the cat is not rough then the squirrel is big.\nIf(Sees(x, BaldEagle, True) && Not(Chases(Cat, x, True)), Chases(Cat, BaldEagle, True)) ::: If something sees the bald eagle and it does not chase the cat then the cat chases the bald eagle.\nIf(Eats(x, Tiger, True), Young(Tiger, True)) ::: If something eats the tiger then the tiger is young.\nIf(Chases(x, Squirrel, True), Eats(x, Tiger, True)) :::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-973_Q9",
    "context": "Charlie is young. Fiona is blue. Gary is blue. Gary is white. Harry is blue. Harry is round. Harry is smart. If Charlie is round and Charlie is quiet then Charlie is not young. If something is quiet then it is smart. All blue things are young. Big, blue things are quiet. Young, white things are round. If Fiona is big and Fiona is not white then Fiona is blue. If Charlie is big and Charlie is young then Charlie is not smart. Round things are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nBig($x, bool) ::: Is x big?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nYoung(Charlie, True) ::: Charlie is young.\nBlue(Fiona, True) ::: Fiona is blue.\nBlue(Gary, True) ::: Gary is blue.\nWhite(Gary, True) ::: Gary is white.\nBlue(Harry, True) ::: Harry is blue.\nRound(Harry, True) ::: Harry is round.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nYoung($x, True) >>> Round($x, True) ::: Young, white things are round.\nBlue($x, True) >>> Young($x, True) ::: All blue things are young.\nBig($x, True) && Blue($x, True) >>> Quiet($x, True) ::: Big, blue things are quiet.\nQuiet($x, True) >>> Smart($x, True) ::: If something is quiet then it is smart.\nRound($x, True) && Quiet($x, True) >>> Not(Young($x, True)) ::: If Charlie is round and Charlie is quiet then Charlie is not young.\nBlue($x, True) >>> Not(White($x, True)) ::: If Fiona is big and Fiona is not white then Fiona is blue.\nYoung($x, True) && White($x, True) >>> Round($x, True) ::: If Charlie is big and Charlie is young then Charlie is not smart.\nRound($x, True) >>> Big($x, True) ::: Round things are big.\nQuery:\nQuiet(Gary, True) ::: Gary is quiet.\n------\nProblem:\nCharlie is young. Fiona is blue. Gary is blue. Gary is white. Harry is blue. Harry is round. Harry is smart. If Charlie is round and Charlie is quiet then Charlie is not young. If something is quiet then it is smart. All blue things are young. Big, blue things are quiet. Young, white"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-305_Q10",
    "context": "Anne is quiet. Bob is not rough. Gary is big. Gary is kind. Gary is rough. Gary is young. Harry is young. All big people are furry. Young people are furry. All quiet, kind people are furry. If Harry is furry and Harry is quiet then Harry is round. Rough, kind people are quiet. Young, rough people are kind. All quiet, furry people are round. Furry people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nFurry($x, bool) ::: Is x furry?\nYoung($x, bool) ::: Is x young?\nRound($x, bool) ::: Is x round?\nFacts:\nQuite(Anne, True) ::: Anne is quiet.\nNot(Rough(Bob, True)) ::: Bob is not rough.\nBig(Gary, True) ::: Gary is big.\nKind(Gary, True) ::: Gary is kind.\nRough(Gary, True) ::: Gary is rough.\nYoung(Gary, True) ::: Gary is young.\nYoung(Harry, True) ::: Harry is young.\nRules:\nBig($x, True) >>> Furry($x, True) ::: All big people are furry.\nYoung($x, True) >>> Furry($x, True) ::: Young people are furry.\nQuite($x, True) && Kind($x, True) >>> Furry($x, True) ::: All quiet, kind people are furry.\nHarry(Furry, True) && Harry(Quite, True) >>> Harry(Round, True) ::: If Harry is furry and Harry is quiet then Harry is round.\nRough($x, True) && Kind($x, True) >>> Quite($x, True) ::: Rough, kind people are quiet.\nYoung($x, True) && Rough($x, True) >>> Kind($x, True) ::: Young, rough people are kind.\nFurry($x, True) >>> Round($x, True) ::: All quiet, furry people are round.\nFurry($x, True) >>> Rough($x, True) ::: Furry people are rough.\nQuery:\nNot(Quite(Harry, True)) ::: Harry is not quiet.\n------\nProblem:\nAnne is quiet. Bob is not rough. Gary is big. Gary is kind. Gary is rough. Gary is young. Harry is young. All big people are furry. Young people are furry. All quiet, kind people are furry. If Harry is furry and"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-709_Q11",
    "context": "The bald eagle is green. The bald eagle is rough. The bald eagle is young. The bald eagle needs the squirrel. The bald eagle sees the squirrel. The cat is round. The cat needs the bald eagle. The cat needs the dog. The cat visits the bald eagle. The dog needs the bald eagle. The dog sees the bald eagle. The dog visits the cat. The squirrel needs the cat. The squirrel visits the bald eagle. If something sees the dog then it sees the cat. If something needs the dog and it is round then it needs the cat. If something visits the squirrel then the squirrel visits the dog. If something is nice then it sees the dog. If something needs the cat then it is nice. If something sees the cat then it is green. If something needs the cat then it is rough. If something visits the squirrel and the squirrel visits the dog then the squirrel visits the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nYoung(BaldEagle, True) ::: The bald eagle is young.\nNeeds(BaldEagle, Squirrel, True) ::: The bald eagle needs the squirrel.\nSees(BaldEagle, Squirrel, True) ::: The bald eagle sees the squirrel.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, BaldEagle, True) ::: The cat needs the bald eagle.\nNeeds(Cat, Dog, True) ::: The cat needs the dog.\nVisits(Cat, BaldEagle, True) ::: The cat visits the bald eagle.\nNeeds(Dog, BaldEagle, True) ::: The dog needs the bald eagle.\nSees(Dog, BaldEagle, True) ::: The dog sees the bald eagle.\nVisits(Dog, Cat, True) ::: The dog visits the cat.\nNeeds(Squirrel, Cat, True) ::: The squirrel needs the cat.\nVisits(Squirrel, BaldEagle, True) ::: The squirrel visits the bald eagle.\nRules:\nSees($x, $y, True) >>> Sees($y, $x, True) ::: If something sees the dog then it sees the cat.\nNeeds($x, $y, True) && Round($x, True) >>> Needs($x, Cat, True) ::: If something needs the dog and it is round then it needs the cat.\nVisits($x, $y, True) && Visits($y, $z, True) >>> Visits"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-399_Q8",
    "context": "Bob is quiet. Bob is smart. Charlie is kind. Charlie is smart. Charlie is white. Erin is blue. Harry is green. White, green things are smart. Smart, quiet things are white. All quiet, kind things are white. If Erin is kind and Erin is blue then Erin is white. All kind things are quiet. White things are quiet. Green things are kind. All white, smart things are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nWhite($x, bool) ::: Is x white?\nFurry($x, bool) ::: Is x furry?\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nFacts:\nQuite(Bob, True) ::: Bob is quiet.\nSmart(Bob, True) ::: Bob is smart.\nKind(Charlie, True) ::: Charlie is kind.\nSmart(Charlie, True) ::: Charlie is smart.\nWhite(Charlie, True) ::: Charlie is white.\nBlue(Erin, True) ::: Erin is blue.\nGreen(Harry, True) ::: Harry is green.\nRules:\nWhite($x, True) >>> Green($x, True) ::: White, green things are smart.\nSmart($x, True) && Quite($x, True) >>> White($x, True) ::: Smart, quiet things are white.\nQuite($x, True) && Kind($x, True) >>> White($x, True) ::: All quiet, kind things are white.\nKind($x, True) >>> Quite($x, True) ::: All kind things are quiet.\nWhite($x, True) >>> Quite($x, True) ::: White things are quiet.\nGreen($x, True) >>> Kind($x, True) ::: Green things are kind.\nWhite($x, True) && Smart($x, True) >>> Furry($x, True) ::: All white, smart things are furry.\nQuery:\nNot(White(Harry, True)) ::: Harry is not white.\n------\nProblem:\nBob is quiet. Bob is smart. Charlie is kind. Charlie is smart. Charlie is white. Erin is blue. Harry is green. White, green things are smart. Smart, quiet things are white. All quiet, kind things are white. If Erin is kind and Erin is blue then Erin is white. All kind things are quiet. White things are quiet. Green things are kind. All white, smart things are furry.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-985_Q4",
    "context": "Anne is blue. Anne is rough. Anne is young. Bob is blue. Bob is green. Erin is blue. Erin is green. Erin is rough. Gary is green. Gary is white. All young things are white. If Anne is green then Anne is young. If something is cold then it is young. All blue, rough things are red. All blue things are cold. All young, rough things are white. If something is young and red then it is green. All white, young things are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nBlue(Anne, True) ::: Anne is blue.\nRough(Anne, True) ::: Anne is rough.\nYoung(Anne, True) ::: Anne is young.\nBlue(Bob, True) ::: Bob is blue.\nGreen(Bob, True) ::: Bob is green.\nBlue(Erin, True) ::: Erin is blue.\nGreen(Erin, True) ::: Erin is green.\nRough(Erin, True) ::: Erin is rough.\nGreen(Gary, True) ::: Gary is green.\nWhite(Gary, True) ::: Gary is white.\nRules:\nYoung($x, True) >>> White($x, True) ::: All young things are white.\nGreen($x, True) >>> Young($x, True) ::: If Anne is green then Anne is young.\nCold($x, True) >>> Young($x, True) ::: If something is cold then it is young.\nBlue($x, True) && Rough($x, True) >>> Red($x, True) ::: All blue, rough things are red.\nBlue($x, True) >>> Cold($x, True) ::: All blue things are cold.\nYoung($x, True) && Rough($x, True) >>> White($x, True) ::: All young, rough things are white.\nYoung($x, True) && Red($x, True) >>> Green($x, True) ::: If something is young and red then it is green.\nWhite($x, True) && Young($x, True) >>> Rough($x, True) ::: All white, young things are rough.\nQuery:\nNot(Red(Anne, True)) ::: Anne is not red.\n------\nProblem:\nAnne is blue. Anne is green. Anne is rough. Anne is white. Bob is blue. Bob is green. Bob is rough. Bob is white. Er"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-779_Q12",
    "context": "Bob is green. Charlie is nice. Charlie is smart. Charlie is white. Erin is nice. Harry is nice. Harry is white. If Charlie is green then Charlie is blue. All nice people are cold. All cold people are blue. Rough people are green. If someone is blue then they are green. Blue, green people are white. If Bob is smart and Bob is blue then Bob is not green. If Charlie is white then Charlie is nice. All white people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nRough($x, bool) ::: Is x rough?\nFacts:\nGreen(Bob, True) ::: Bob is green.\nNice(Charlie, True) ::: Charlie is nice.\nSmart(Charlie, True) ::: Charlie is smart.\nWhite(Charlie, True) ::: Charlie is white.\nNice(Erin, True) ::: Erin is nice.\nNice(Harry, True) ::: Harry is nice.\nWhite(Harry, True) ::: Harry is white.\nRules:\nCharlie(Green, True) >>> Charlie(Blue, True) ::: If Charlie is green then Charlie is blue.\nNice($x, True) >>> Cold($x, True) ::: All nice people are cold.\nCold($x, True) >>> Blue($x, True) ::: All cold people are blue.\nRough($x, True) >>> Green($x, True) ::: Rough people are green.\nBlue($x, True) >>> Green($x, True) ::: If someone is blue then they are green.\nBlue($x, True) && Green($x, True) >>> White($x, True) ::: If Bob is smart and Bob is blue then Bob is not green.\nWhite($x, True) >>> Smart($x, True) ::: All white people are smart.\nCharlie(White, True) >>> Nice($x, True) ::: If Charlie is white then Charlie is nice.\nQuery:\nSmart(Erin, False) ::: Erin is not smart.\n------\nProblem:\nBob is green. Charlie is nice. Charlie is smart. Charlie is white. Erin is nice. Harry is nice. Harry is white. If Charlie is green then Charlie is blue. All nice people are cold. All cold people are blue. Rough people are green. If someone is blue then they are green. Blue, green people are white. If Bob is smart and Bob is blue then Bob is not green. If Charlie is white then Charlie is"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-116_Q12",
    "context": "The cow is young. The cow sees the lion. The dog likes the cow. The dog likes the rabbit. The dog sees the rabbit. The lion is young. The lion sees the cow. The lion sees the dog. The lion sees the rabbit. The rabbit is round. The rabbit likes the cow. If someone visits the rabbit then the rabbit likes the lion. If someone likes the rabbit and the rabbit is red then the rabbit is big. If someone likes the lion and they see the rabbit then the lion likes the rabbit. If someone is young then they like the rabbit. If someone is young then they see the lion. If the lion is big then the lion visits the dog. If the rabbit likes the lion then the rabbit is young. If someone is young and they like the rabbit then they visit the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not see the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung($x, bool) ::: Is x young?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nFacts:\nYoung(Cow, True) ::: The cow is young.\nSees(Cow, Lion, True) ::: The cow sees the lion.\nLikes(Dog, Cow, True) ::: The dog likes the cow.\nLikes(Dog, Rabbit, True) ::: The dog likes the rabbit.\nSees(Dog, Rabbit, True) ::: The dog sees the rabbit.\nYoung(Lion, True) ::: The lion is young.\nSees(Lion, Cow, True) ::: The lion sees the cow.\nSees(Lion, Dog, True) ::: The lion sees the dog.\nSees(Lion, Rabbit, True) ::: The lion sees the rabbit.\nRound(Rabbit, True) ::: The rabbit is round.\nLikes(Rabbit, Cow, True) ::: The rabbit likes the cow.\nVisits(Rabbit, Lion, True) ::: If someone visits the rabbit then the rabbit likes the lion.\nRed($x, True) >>> Big($x, True) ::: If someone is red then they are big.\nLikes(Lion, $x, True) && Sees($x, Rabbit, True) >>> Likes(Lion, Rabbit, True) ::: If someone likes the lion and they see the rabbit then the lion likes the rabbit.\nYoung($x, True) >>> Likes($x, Rabbit, True) ::: If someone is young then they like the rabbit.\nYoung($x, True) >>> Sees($x, Lion, True) ::: If someone is young then they see the lion.\nBig($x, True) >>> Visits($x, Dog, True) ::: If the lion is big then the lion visits the dog.\nLikes(Rabbit, Lion, True) >>> Young(Rabbit, True) ::: If the rabbit"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-115_Q11",
    "context": "The bald eagle is blue. The bald eagle is red. The bald eagle likes the lion. The bald eagle needs the bear. The bald eagle needs the dog. The bear is not blue. The bear is nice. The bear needs the dog. The dog chases the bald eagle. The dog is red. The dog does not need the bear. The lion does not like the bear. If something likes the lion and it is not red then it chases the lion. If something is red and it needs the bald eagle then the bald eagle needs the lion. If something is round then it does not like the dog. If the bald eagle needs the dog then the dog is round. If something likes the dog then it likes the bald eagle. If something chases the lion and the lion likes the dog then the dog does not like the lion. If the bear likes the lion then the lion likes the dog. If something likes the bear then the bear likes the lion. If something is round then it likes the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion likes the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nRed($x, bool) ::: Is x red?\nLikes($x, $y, bool) ::: Does x like y?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nRound($x, bool) ::: Is x round?\nFacts:\nBlue(BaldEagle, True) ::: The bald eagle is blue.\nRed(BaldEagle, True) ::: The bald eagle is red.\nLikes(BaldEagle, Lion, True) ::: The bald eagle likes the lion.\nNeeds(BaldEagle, Bear, True) ::: The bald eagle needs the bear.\nNeeds(BaldEagle, Dog, True) ::: The bald eagle needs the dog.\nNot(Blue(Bear, True)) ::: The bear is not blue.\nNice(Bear, True) ::: The bear is nice.\nNeeds(Bear, Dog, True) ::: The bear needs the dog.\nChases(Dog, BaldEagle, True) ::: The dog chases the bald eagle.\nRed(Dog, True) ::: The dog is red.\nNot(Needs(Dog, Bear, True)) ::: The dog does not need the bear.\nNot(Likes(Lion, Bear, True)) ::: The lion does not like the bear.\nIf(Likes(Lion, $x, True), Not(Red($x, True))) ::: If something likes the lion and it is not red then it chases the lion.\nIf(Red($x, True), Needs(BaldEagle, Lion, True)) ::: If something is red and it needs the bald eagle then the bald eagle needs the lion.\nRound($x, True) >>> Not(Likes($x, Dog, True)) ::: If something is round then it does not like the dog.\nNeeds(BaldEagle, Dog, True) >>> Round(Dog, True) ::: If the bald eagle needs the dog then the dog is round.\nLikes($x, Dog, True) >>> Likes($x, BaldEagle, True) ::: If something likes the dog then it likes the bald eagle.\nChases"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-314_Q13",
    "context": "The bear chases the cow. The bear eats the squirrel. The bear is cold. The bear visits the mouse. The bear visits the squirrel. The cow eats the mouse. The cow is cold. The cow visits the bear. The cow visits the squirrel. The mouse chases the cow. The squirrel eats the bear. If something eats the cow then the cow chases the squirrel. If something eats the squirrel and the squirrel eats the mouse then the mouse chases the cow. If something eats the mouse then it visits the cow. If something eats the mouse then it chases the bear. If something visits the bear and it visits the mouse then the bear is blue. If something eats the bear then the bear is cold. If something is blue and it eats the squirrel then it eats the cow. If the mouse chases the cow and the cow chases the squirrel then the mouse visits the bear. If something chases the bear then the bear is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not chase the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nIsBlue($x, bool) ::: Is x blue?\nIsCold($x, bool) ::: Is x cold?\nFacts:\nChases(Bear, Cow, True) ::: The bear chases the cow.\nEats(Bear, Squirrel, True) ::: The bear eats the squirrel.\nIsCold(Bear, True) ::: The bear is cold.\nVisits(Bear, Mouse, True) ::: The bear visits the mouse.\nVisits(Bear, Squirrel, True) ::: The bear visits the squirrel.\nEats(Cow, Mouse, True) ::: The cow eats the mouse.\nIsCold(Cow, True) ::: The cow is cold.\nVisits(Cow, Bear, True) ::: The cow visits the bear.\nVisits(Cow, Squirrel, True) ::: The cow visits the squirrel.\nChases(Mouse, Cow, True) ::: The mouse chases the cow.\nEats(Squirrel, Bear, True) ::: The squirrel eats the bear.\nRules:\nEats($x, $y, True) >>> Chases($x, $y, True) ::: If something eats the cow then the cow chases the squirrel.\nEats($x, $y, True) && Eats($y, $z, True) && Eats($z, $w, True) >>> Chases($x, $w, True) ::: If something eats the squirrel and the squirrel eats the mouse then the mouse chases the cow.\nEats($x, $y, True) >>> Visits($x, $y, True) ::: If something eats the mouse then it visits the cow.\nEats($x, $y, True) >>> Chases($x, $z, True) ::: If something eats the mouse then it chases the bear.\nVisits($x, $y, True) && Visits($x, $z, True) >>> IsBlue($x, True) ::: If something visits the bear and it visits the mouse then the bear is blue.\nEats($x, $y, True) >>> IsCold($x, True) ::: If something eats the bear then the bear is cold.\nEats($x, $y, True) && IsBlue($x, True) && Eats($y, $z, True) >>> Eats($x, $z, True) ::: If something eats the squirrel then it eats the cow.\nChases($x, $y, True) && Chases($y, $z, True) >>> Visits($x, $z, True) ::: If the mouse chases the cow and the cow chases the squirrel then the mouse visits the bear.\nChases($x, $y, True) >>> IsBlue($x, True) ::: If the bear chases the cow then the bear is blue.\nQuery:\nChases(Mouse, Bear, False) ::: The mouse does not chase the bear.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1095_Q14",
    "context": "Bob is blue. Bob is cold. Bob is green. Bob is nice. Bob is red. Bob is round. Bob is white. Charlie is cold. Charlie is green. Charlie is round. Gary is blue. Gary is cold. Gary is green. Gary is nice. Gary is red. Harry is round. If Harry is round then Harry is nice. If something is nice then it is green. All white, round things are red. White, red things are cold. All cold things are blue. All nice things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nFacts:\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nGreen(Bob, True) ::: Bob is green.\nNice(Bob, True) ::: Bob is nice.\nRed(Bob, True) ::: Bob is red.\nRound(Bob, True) ::: Bob is round.\nWhite(Bob, True) ::: Bob is white.\nCold(Charlie, True) ::: Charlie is cold.\nGreen(Charlie, True) ::: Charlie is green.\nRound(Charlie, True) ::: Charlie is round.\nBlue(Gary, True) ::: Gary is blue.\nCold(Gary, True) ::: Gary is cold.\nGreen(Gary, True) ::: Gary is green.\nNice(Gary, True) ::: Gary is nice.\nRed(Gary, True) ::: Gary is red.\nRound(Harry, True) ::: Harry is round.\nRules:\nRound($x, True) >>> Nice($x, True) ::: If Harry is round then Harry is nice.\nNice($x, True) >>> Green($x, True) ::: If something is nice then it is green.\nWhite($x, True) && Round($x, True) >>> Red($x, True) ::: All white, round things are red.\nWhite($x, True) && Red($x, True) >>> Cold($x, True) ::: White, red things are cold.\nCold($x, True) >>> Blue($x, True) ::: All cold things are blue.\nNice($x, True) >>> White($x, True) ::: All nice things are white.\nQuery:\nRed(Charlie, True) ::: Charlie is red.\n------\nProblem:\nBob is blue. Bob is cold. Bob is green. Bob is nice. Bob is red. Bob is round. Bob is white. Charlie is cold. Charlie is green. Charlie is round. Gary is blue. Gary is cold. Gary is green. Gary is nice. Gary is red. Harry is round. If Harry is round then Harry is nice. If something is nice then it is green. All white, round things are red. White, red things are cold. All cold things are blue. All nice things are white.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is red.\n###\nPredicates:\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nWhite($x, bool) ::: Is x white?\nFacts:\nBlue"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-412_Q9",
    "context": "Dave is furry. Dave is green. Dave is quiet. Dave is red. Fiona is blue. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is red. Gary is blue. Gary is nice. Gary is quiet. Gary is red. Gary is smart. Harry is blue. Harry is smart. If something is blue and furry then it is quiet. If Dave is furry then Dave is nice. If something is furry then it is blue. Quiet things are red. All furry, green things are quiet. If something is red then it is green. All nice things are furry. All smart things are nice. Red things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFacts:\nFurry(Dave, True) ::: Dave is furry.\nGreen(Dave, True) ::: Dave is green.\nQuiet(Dave, True) ::: Dave is quiet.\nRed(Dave, True) ::: Dave is red.\nBlue(Fiona, True) ::: Fiona is blue.\nFurry(Fiona, True) ::: Fiona is furry.\nGreen(Fiona, True) ::: Fiona is green.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nBlue(Gary, True) ::: Gary is blue.\nNice(Gary, True) ::: Gary is nice.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nSmart(Gary, True) ::: Gary is smart.\nBlue(Harry, True) ::: Harry is blue.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nFurry($x, True) >>> Blue($x, True) ::: If something is blue and furry then it is quiet.\nFurry(Dave, True) >>> Nice(Dave, True) ::: If Dave is furry then Dave is nice.\nFurry($x, True) >>> Blue($x, True) ::: If something is furry then it is blue.\nQuiet($x, True) >>> Red($x, True) ::: Quiet things are red.\nGreen($x, True) && Furry($x, True) >>> Quiet($x, True) ::: All furry, green things are quiet.\nRed($x, True) >>> Green($x, True) ::: If something is red then it is green.\nNice($x, True) >>> Furry($x, True) ::: All nice things are furry.\nSmart($x, True) >>> Nice($x, True) ::: All smart things are nice.\nRed($x, True) >>> Quiet($x, True) ::: Red things are quiet.\nQuery:\nRed(Harry, True) ::: Harry is red.\n------\nProblem:\nDave is furry. Dave is green. Dave is quiet. Dave is red. Fiona is blue. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is red. Gary is blue. Gary is nice. Gary is quiet. Gary is red. Gary is smart. Harry is blue. Harry is smart. If something is blue and furry then it is quiet. If Dave is furry then Dave is nice. If something is furry then it is blue. Quiet things are red. All furry, green things are quiet. If something is red then it is green. All nice things are furry. All smart things are nice. Red things are quiet."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-414_Q2",
    "context": "Charlie is nice. Charlie is quiet. Charlie is white. Charlie is young. Dave is not furry. Gary is quiet. Harry is furry. If something is nice and cold then it is quiet. If something is cold then it is young. Quiet, furry things are white. All furry things are cold. If something is young then it is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nFacts:\nNice(Charlie, True) ::: Charlie is nice.\nQuiet(Charlie, True) ::: Charlie is quiet.\nWhite(Charlie, True) ::: Charlie is white.\nYoung(Charlie, True) ::: Charlie is young.\nNot(Furry(Dave, True)) ::: Dave is not furry.\nQuiet(Gary, True) ::: Gary is quiet.\nFurry(Harry, True) ::: Harry is furry.\nRules:\nNice($x, True) && Cold($x, True) >>> Quiet($x, True) ::: If something is nice and cold then it is quiet.\nCold($x, True) >>> Young($x, True) ::: If something is cold then it is young.\nQuiet($x, True) && Furry($x, True) >>> White($x, True) ::: Quiet, furry things are white.\nFurry($x, True) >>> Cold($x, True) ::: All furry things are cold.\nYoung($x, True) >>> Nice($x, True) ::: If something is young then it is nice.\nQuery:\nNot(White(Charlie, True)) ::: Charlie is not white.\n------\nProblem:\nCharlie is nice. Charlie is quiet. Charlie is white. Charlie is young. Dave is not furry. Gary is quiet. Harry is furry. If something is nice and cold then it is quiet. If something is cold then it is young. Quiet, furry things are white. All furry things are cold. If something is young then it is nice.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is not white.\n###\nPredicates:\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nFacts:\nNice(Charlie, True) ::: Charlie is nice.\nQuiet(Charlie, True) ::: Charlie is quiet.\nWhite(Charlie, True) ::: Charlie is white.\nYoung(Charlie, True) ::: Charlie is young.\nNot(Furry(Dave, True)) ::: Dave is not furry.\nQuiet(Gary, True) ::: Gary is quiet.\nFurry(Harry, True) ::: Harry is furry.\nRules:\nNice($x, True) && Cold($x, True) >>> Quiet($x, True) ::: If something is nice and cold then it is quiet.\nCold($x, True) >>> Young($x, True) ::: If something is"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1169_Q1",
    "context": "Anne is green. Anne is rough. Anne is young. Dave is cold. Dave is nice. Dave is rough. Fiona is kind. Harry is green. Harry is kind. Harry is quiet. Harry is young. Kind, quiet things are green. If Dave is kind then Dave is quiet. All kind things are young. All rough, kind things are quiet. If Anne is cold and Anne is kind then Anne is green. If something is young then it is rough. If something is green and quiet then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nFacts:\nGreen(Anne, True) ::: Anne is green.\nRough(Anne, True) ::: Anne is rough.\nYoung(Anne, True) ::: Anne is young.\nKind(Dave, True) ::: Dave is kind.\nNice(Dave, True) ::: Dave is nice.\nRough(Dave, True) ::: Dave is rough.\nKind(Fiona, True) ::: Fiona is kind.\nGreen(Harry, True) ::: Harry is green.\nKind(Harry, True) ::: Harry is kind.\nQuiet(Harry, True) ::: Harry is quiet.\nYoung(Harry, True) ::: Harry is young.\nRules:\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($x, True) ::: Kind, quiet things are green.\nKind($x, True) >>> Quiet($"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-224_Q4",
    "context": "The dog chases the lion. The dog is nice. The lion does not eat the tiger. The lion is not big. The lion visits the tiger. The mouse does not chase the tiger. The mouse is nice. The tiger chases the lion. The tiger eats the dog. The tiger does not eat the mouse. The tiger visits the lion. If something visits the dog and it is kind then it visits the mouse. If something chases the dog then it is not red. If something chases the lion and it visits the dog then it chases the dog. If something chases the lion then it is big. If something eats the lion then it is not cold. If something is big then it visits the dog. If something visits the mouse then the mouse is red. If the tiger visits the dog and the dog is not big then the dog chases the mouse. If something visits the tiger and the tiger is not red then it is not nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nIsKind($x, bool) ::: Is x kind?\nIsBig($x, bool) ::: Is x big?\nIsRed($x, bool) ::: Is x red?\nIsCold($x, bool) ::: Is x cold?\nFacts:\nChases(Dog, Lion, True) ::: The dog chases the lion.\nIsKind(Dog, True) ::: The dog is nice.\nNotEats(Lion, Tiger, True) ::: The lion does not eat the tiger.\nNotBig(Lion, True) ::: The lion is not big.\nVisits(Lion, Tiger, True) ::: The lion visits the tiger.\nNotChases(Mouse, Tiger, True) ::: The mouse does not chase the tiger.\nIsKind(Mouse, True) ::: The mouse is nice.\nChases(Tiger, Lion, True) ::: The tiger chases the lion.\nEats(Tiger, Dog, True) ::: The tiger eats the dog.\nNotEats(Tiger, Mouse, True) ::: The tiger does not eat the mouse.\nVisits(Tiger, Lion, True) ::: The tiger visits the lion.\nRules:\nIf something visits the dog and it is kind then it visits the mouse. ::: If something visits the dog and it is kind then it visits the mouse.\nIf something chases the dog then it is not red. ::: If something chases the dog then it is not red.\nIf something chases the lion and it visits the dog then it chases the dog. ::: If something chases the lion and it visits the dog then it chases the dog.\nIf something chases the lion then it is big. ::: If something chases the lion then it is big.\nIf something eats the lion then it is not cold. ::: If something eats the lion then it is not cold.\nIf something is big then it visits the dog. ::: If something is big then it visits the dog.\nIf something visits the mouse then the mouse is red. ::: If something visits the mouse then the mouse is red.\nIf the tiger visits the dog and the dog is not big then the dog chases the mouse. ::: If the tiger visits the dog and the dog is not big then the dog chases the mouse.\nIf something visits the tiger and the tiger is not red then it is not nice. ::: If something visits the tiger and the tiger is not red then it is not nice.\nQuery:\nNotBig(Tiger, True) ::: The tiger is not big.\n------\nProblem:\nThe dog chases the lion. The dog is nice. The lion does not eat the tiger. The lion is not big. The lion visits the tiger. The mouse does not chase the tiger. The mouse is nice. The tiger chases the lion. The tiger eats the dog. The tiger does not eat the mouse. The tiger visits the lion. If something visits the dog and it is kind then it visits the mouse. If something chases the dog then it"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-317_Q13",
    "context": "The cow chases the squirrel. The cow is young. The cow sees the squirrel. The dog is round. The dog likes the rabbit. The dog likes the squirrel. The dog sees the rabbit. The rabbit chases the cow. The rabbit does not chase the dog. The squirrel chases the rabbit. The squirrel is young. The squirrel likes the cow. If someone chases the cow then the cow is big. If someone likes the rabbit and they do not see the squirrel then they are big. If someone is big then they like the rabbit. If someone is young then they do not see the dog. If someone is blue then they chase the cow. If someone likes the rabbit then they like the cow. If someone likes the cow then they see the cow. If someone sees the cow and they chase the squirrel then they see the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not see the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nYoung($x, bool) ::: Is x young?\nBig($x, bool) ::: Is x big?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(Cow, Squirrel, True) ::: The cow chases the squirrel.\nYoung(Cow, True) ::: The cow is young.\nSees(Cow, Squirrel, True) ::: The cow sees the squirrel.\nRound(Dog, True) ::: The dog is round.\nLikes(Dog, Rabbit, True) ::: The dog likes the rabbit.\nLikes(Dog, Squirrel, True) ::: The dog likes the squirrel.\nSees(Dog, Rabbit, True) ::: The dog sees the rabbit.\nChases(Rabbit, Cow, True) ::: The rabbit chases the cow.\nChases(Rabbit, Dog, False) ::: The rabbit does not chase the dog.\nChases(Squirrel, Rabbit, True) ::: The squirrel chases the rabbit.\nYoung(Squirrel, True) ::: The squirrel is young.\nLikes(Squirrel, Cow, True) ::: The squirrel likes the cow.\nRules:\nChases($x, $y, True) >>> Young($x, True) ::: If someone chases the cow then the cow is big.\nLikes($x, Rabbit, True) && Not(Sees($x, Squirrel, True)) >>> Big($x, True) ::: If someone likes the rabbit and they do not see the squirrel then they are big.\nBig($x, True) >>> Likes($x, Rabbit, True) ::: If someone is big then they like the rabbit.\nYoung($x, True) >>> Not(Sees($x, Dog, True)) ::: If someone is young then they do not see the dog.\nBlue($x, True) >>> Chases($x, Cow, True) ::: If someone is blue then they chase the cow.\nLikes($x, Rabbit, True) >>> Likes($x, Cow, True) ::: If someone likes the rabbit then they like the cow.\nLikes($x, Cow, True) >>> Sees($x, Cow, True) ::: If someone likes the cow then they see the cow.\nSees($x, Cow, True) && Chases($x, Squirrel, True) >>> Sees($x, Rabbit, True) ::: If someone sees the cow and they chase the squirrel then they see the rabbit.\nQuery:\nNot(Sees(Squirrel, Rabbit, True)) ::: The squirrel does not see the rabbit.\n------\nProblem:\nThe cow chases the squirrel. The cow is young. The cow sees the squirrel. The dog is round. The dog likes the rabbit. The dog likes the squirrel. The dog sees the rabbit. The rabbit chases the cow. The rabbit"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-963_Q9",
    "context": "Anne is kind. Anne is round. Dave is blue. Dave is cold. Dave is furry. Dave is green. Dave is quiet. Erin is green. Fiona is furry. Fiona is round. If Fiona is quiet and Fiona is kind then Fiona is green. All green people are blue. Quiet, round people are cold. Kind people are green. If someone is quiet then they are blue. If someone is cold then they are furry. All blue, kind people are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nRound($x, bool) ::: Is x round?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nRound(Anne, True) ::: Anne is round.\nBlue(Dave, True) ::: Dave is blue.\nCold(Dave, True) ::: Dave is cold.\nFurry(Dave, True) ::: Dave is furry.\nGreen(Dave, True) ::: Dave is green.\nQuiet(Dave, True) ::: Dave is quiet.\nGreen(Erin, True) ::: Erin is green.\nFurry(Fiona, True) ::: Fiona is furry.\nRound(Fiona, True) ::: Fiona is round.\nRules:\nFurry($x, True) >>> Cold($x, True) ::: If someone is quiet then they are blue.\nKind($x, True) >>> Green($x, True) ::: Kind people are green.\nQuiet($x, True) && Round($x, True) >>> Cold($x, True) ::: Quiet, round people are cold.\nGreen($x, True) >>> Blue($x, True) ::: All green people are blue.\nFurry($x, True) >>> Cold($x, True) ::: If someone is cold then they are furry.\nQuiet($x, True) && Kind($x, True) >>> Green($x, True) ::: If Fiona is quiet and Fiona is kind then Fiona is green.\nBlue($x, True) && Kind($x, True) >>> Quiet($x, True) ::: All blue, kind people are quiet.\nQuery:\nCold(Anne, True) ::: Anne is cold.\n------\nProblem:\nAnne is furry. Anne is green. Anne is kind. Anne is quiet. Anne is round. Anne is white. Dave is furry. Dave is green. Dave is kind. Dave is quiet. Dave is round. Dave is white. Erin is furry. Erin is green. Erin is kind. Erin is quiet. Erin is round. Erin is white. Fiona is furry. Fiona is green. Fiona is kind. Fiona is quiet. Fiona is round. Fiona is white. Harry is furry. Harry is green. Harry is kind. Harry is quiet. Harry is round. Harry is white. If Anne is green then Anne is quiet. If Anne is green then Anne is white. If Anne is green then Anne is kind. If Anne is green then Anne is furry. If Anne is green then Anne is round. If Anne is green then Anne is quiet. If Anne is green then Anne is white. If Anne is green then Anne is kind. If Anne is green then Anne is furry. If Anne is green then Anne is round. If Anne is green then Anne is quiet. If Anne is green then Anne is white. If Anne is green then Anne is kind. If Anne is green then Anne is furry. If Anne is green then Anne is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-266_Q24",
    "context": "The bald eagle eats the cow. The bald eagle does not eat the dog. The bald eagle is rough. The cow is round. The cow sees the bald eagle. The cow does not see the dog. The cow visits the bald eagle. The cow visits the lion. The dog is rough. The lion is young. The lion does not see the bald eagle. The lion sees the cow. If someone is green and they eat the bald eagle then the bald eagle is not rough. If someone is big and they do not see the bald eagle then the bald eagle is rough. If someone is big then they visit the dog. If someone eats the lion and they are big then the lion eats the dog. If someone visits the dog then the dog eats the cow. If someone is rough and they eat the cow then they are young. If the lion eats the cow then the lion visits the bald eagle. If someone is big and they see the lion then they are green. If someone is young then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nFacts:\nEats(BaldEagle, Cow, True) ::: The bald eagle eats the cow.\nEats(BaldEagle, Dog, False) ::: The bald eagle does not eat the dog.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nRound(Cow, True) ::: The cow is round.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nSees(Cow, Dog, False) ::: The cow does not see the dog.\nVisits(Cow, BaldEagle, True) ::: The cow visits the bald eagle.\nVisits(Cow, Lion, True) ::: The cow visits the lion.\nRough(Dog, True) ::: The dog is rough.\nYoung(Lion, True) ::: The lion is young.\nSees(Lion, BaldEagle, False) ::: The lion does not see the bald eagle.\nSees(Lion, Cow, True) ::: The lion sees the cow.\nRules:\nGreen($x, True) && Eats($x, BaldEagle, True) >>> Rough(BaldEagle, False) ::: If someone is green and they eat the bald eagle then the bald eagle is not rough.\nBig($x, True) && Not(Sees($x, BaldEagle, True)) >>> Rough(BaldEagle, True) ::: If someone is big and they do not see the bald eagle then the bald eagle is rough.\nBig($x, True) >>> Visits($x, Dog, True) ::: If someone is big then they visit the dog.\nEats($x, Lion, True) && Big($x, True) >>> Lion(Lion, True) ::: If someone eats the lion and they are big then the lion eats the dog.\nVisits($x, Dog, True) && Rough($x, True) >>> Eats($x, Cow, True) ::: If someone is rough and they eat the cow then they are young.\nVisits(Lion, BaldEagle, True) >>> Lion(Lion, True) ::: If the lion eats the cow then the lion visits the bald eagle.\nBig($x, True) && Sees($x, Lion, True) >>> Green($x, True) ::: If someone is big and they see the lion then they are green.\nYoung($x, True) >>> Big($x, True) ::: If someone is young then they are big.\nQuery:\nRound(Lion, True) ::: The lion is round.\n------\nProblem:\nThe dog is furry. The dog is green"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-949_Q24",
    "context": "The bear is green. The bear likes the cat. The bear likes the dog. The bear visits the dog. The cat is young. The cat sees the bear. The cat sees the dog. The cat visits the bear. The cat visits the mouse. The dog is round. The dog likes the bear. The dog likes the mouse. The dog visits the mouse. The mouse is big. The mouse is cold. The mouse is round. If something visits the mouse and the mouse visits the dog then it is cold. If something likes the cat then it visits the dog. If something is cold then it likes the cat. If something is green then it sees the dog. If something likes the mouse then it sees the cat. If something is green and cold then it likes the cat. If something is big and it visits the bear then the bear is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nYoung($x, bool) ::: Is x young?\nSee($x, $y, bool) ::: Does x see y?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nCold($x, bool) ::: Is x cold?\nFacts:\nGreen(Bear, True) ::: The bear is green.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nLikes(Bear, Dog, True) ::: The bear likes the dog.\nVisits(Bear, Dog, True) ::: The bear visits the dog.\nYoung(Cat, True) ::: The cat is young.\nSee(Cat, Bear, True) ::: The cat sees the bear.\nSee(Cat, Dog, True) ::: The cat sees the dog.\nVisits(Cat, Bear, True) ::: The cat visits the bear.\nVisits(Cat, Mouse, True) ::: The cat visits the mouse.\nRound(Dog, True) ::: The dog is round.\nLikes(Dog, Bear, True) ::: The dog likes the bear.\nLikes(Dog, Mouse, True) ::: The dog likes the mouse.\nVisits(Dog, Mouse, True) ::: The dog visits the mouse.\nBig(Mouse, True) ::: The mouse is big.\nCold(Mouse, True) ::: The mouse is cold.\nRound(Mouse, True) ::: The mouse is round.\nRules:\nVisits($x, $y, True) && Visits($y, $z, True) >>> Cold($x, True) ::: If something visits the mouse and the mouse visits the dog then it is cold.\nLikes($x, Cat, True) >>> Visits($x, Dog, True) ::: If something likes the cat then it visits the dog.\nCold($x, True) >>> Likes($x, Cat, True) ::: If something is cold then it likes the cat.\nGreen($x, True) >>> See($x, Dog, True) ::: If something is green then it sees the dog.\nLikes($x, Mouse, True) >>> See($x, Cat, True) ::: If something likes the mouse then it sees the cat.\nGreen($x, True) && Cold($x, True) >>> Likes($x, Cat, True) ::: If something is green and cold then it likes the cat.\nBig($x, True) && Visits($x, Bear, True) >>> Green($Bear, True) ::: If something is big and it visits the bear then the bear is green.\nQuery:\nYoung(Bear, True) ::: The bear is young.\n------\nProblem:\nThe bear is green. The bear likes the cat. The bear likes the dog. The bear visits the dog. The cat is young. The cat sees the bear. The cat sees the dog. The cat visits the bear. The cat visits the mouse. The dog is round. The dog likes the bear. The dog likes the mouse. The dog visits the mouse. The mouse is big."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-370_Q2",
    "context": "Anne is kind. Anne is nice. Anne is quiet. Anne is round. Erin is cold. Erin is nice. Erin is rough. Erin is smart. Fiona is kind. Fiona is nice. Harry is kind. Harry is nice. Harry is quiet. Harry is rough. Harry is round. Harry is smart. If someone is rough then they are cold. If someone is quiet and nice then they are round. If Harry is cold then Harry is rough. Rough people are quiet. Quiet people are round. Kind, nice people are quiet. If someone is round then they are rough. All cold people are nice. All kind, cold people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nNice(Anne, True) ::: Anne is nice.\nQuiet(Anne, True) ::: Anne is quiet.\nRound(Anne, True) ::: Anne is round.\nCold(Erin, True) ::: Erin is cold.\nNice(Erin, True) ::: Erin is nice.\nRough(Erin, True) ::: Erin is rough.\nSmart(Erin, True) ::: Erin is smart.\nKind(Fiona, True) ::: Fiona is kind.\nNice(Fiona, True) ::: Fiona is nice.\nKind(Harry, True) ::: Harry is kind.\nNice(Harry, True) ::: Harry is nice.\nQuiet(Harry, True) ::: Harry is quiet.\nRough(Harry, True) ::: Harry is rough.\nRound(Harry, True) ::: Harry is round.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nRough($x, True) >>> Cold($x, True) ::: If someone is rough then they are cold.\nQuiet($x, True) && Nice($x, True) >>> Round($x, True) ::: If someone is quiet and nice then they are round.\nHarry($x, True) >>> Cold($x, True) ::: If Harry is cold then Harry is rough.\nRough($x, True) >>> Quiet($x, True) ::: Rough people are quiet.\nQuiet($x, True) >>> Round($x, True) ::: Quiet people are round.\nKind($x, True) && Nice($x, True) >>> Quiet($x, True) ::: Kind, nice people are quiet.\nRound($x, True) >>> Rough($x, True) ::: If someone is round then they are rough.\nCold($x, True) >>> Nice($x, True) ::: All cold people are nice.\nKind($x, True) && Cold($x, True) >>> Smart($x, True) ::: All kind, cold people are smart.\nQuery:\nNot(Quiet(Harry, True)) ::: Harry is not quiet.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-1036_Q11",
    "context": "The bear eats the squirrel. The bear is cold. The bear is rough. The bear visits the lion. The cat eats the lion. The lion likes the cat. The lion visits the bear. The squirrel eats the lion. The squirrel is cold. The squirrel is rough. The squirrel likes the bear. The squirrel visits the lion. Red people are green. If someone eats the lion then the lion is red. If someone is green and they like the lion then they eat the bear. If someone visits the bear then the bear likes the lion. If someone likes the squirrel and they like the lion then they visit the lion. If someone is green then they eat the squirrel. If someone likes the lion then they visit the bear. If someone visits the lion and the lion is green then they are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel eats the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nFacts:\nEats(Bear, Squirrel, True) ::: The bear eats the squirrel.\nCold(Bear, True) ::: The bear is cold.\nRough(Bear, True) ::: The bear is rough.\nVisits(Bear, Lion, True) ::: The bear visits the lion.\nEats(Cat, Lion, True) ::: The cat eats the lion.\nLikes(Cat, Lion, True) ::: The lion likes the cat.\nVisits(Lion, Bear, True) ::: The lion visits the bear.\nEats(Squirrel, Lion, True) ::: The squirrel eats the lion.\nCold(Squirrel, True) ::: The squirrel is cold.\nRough(Squirrel, True) ::: The squirrel is rough.\nLikes(Squirrel, Bear, True) ::: The squirrel likes the bear.\nVisits(Squirrel, Lion, True) ::: The squirrel visits the lion.\nRules:\nRed($x, True) >>> Green($x, True) ::: Red people are green.\nEats($x, Lion, True) >>> Red($x, True) ::: If someone eats the lion then the lion is red.\nGreen($x, True) && Likes($x, Lion, True) >>> Eats($x, Bear, True) ::: If someone is green and they like the lion then they eat the bear.\nVisits($x, Bear, True) >>> Likes($x, Lion, True) ::: If someone visits the bear then the bear likes the lion.\nLikes($x, Squirrel, True) && Likes($x, Lion, True) >>> Visits($x, Lion, True) ::: If someone likes the squirrel and they like the lion then they visit the lion.\nGreen($x, True) >>> Eats($x, Squirrel, True) ::: If someone is green then they eat the squirrel.\nLikes($x, Lion, True) >>> Visits($x, Bear, True) ::: If someone likes the lion then they visit the bear.\nVisits($x, Lion, True) && Green($"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-301_Q16",
    "context": "Bob is cold. Bob is kind. Bob is red. Bob is smart. Bob is young. Fiona is blue. Gary is blue. Gary is kind. Harry is kind. Harry is young. All red people are blue. All blue people are smart. All young people are cold. Cold people are red. If someone is kind and smart then they are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nFacts:\nCold(Bob, True) ::: Bob is cold.\nKind(Bob, True) ::: Bob is kind.\nRed(Bob, True) ::: Bob is red.\nSmart(Bob, True) ::: Bob is smart.\nYoung(Bob, True) ::: Bob is young.\nBlue(Fiona, True) ::: Fiona is blue.\nBlue(Gary, True) ::: Gary is blue.\nKind(Gary, True) ::: Gary is kind.\nKind(Harry, True) ::: Harry is kind.\nYoung(Harry, True) ::: Harry is young.\nRules:\nRed($x, True) >>> Cold($x, True) ::: Cold people are red.\nRed($x, True) >>> Blue($x, True) ::: All red people are blue.\nBlue($x, True) >>> Smart($x, True) ::: All blue people are smart.\nYoung($x, True) >>> Cold($x, True) ::: All young people are cold.\nKind($x, True) && Smart($x, True) >>> White($x, True) ::: If someone is kind and smart then they are white.\nQuery:\nCold(Fiona, True) ::: Fiona is cold.\n------\nProblem:\nBob is cold. Bob is kind. Bob is red. Bob is smart. Bob is young. Fiona is blue. Gary is blue. Gary is kind. Harry is kind. Harry is young. All red people are blue. All blue people are smart. All young people are cold. Cold people are red. If someone is kind and smart then they are white.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is cold.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nBlue($x, bool) ::: Is x blue?\nWhite($x, bool) ::: Is x white?\nFacts:\nCold(Bob, True) ::: Bob is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-995_Q6",
    "context": "The bear is blue. The bear is young. The cow chases the mouse. The cow eats the mouse. The cow does not visit the rabbit. The mouse is not round. The rabbit chases the bear. If something is young and blue then it visits the mouse. If something chases the rabbit and the rabbit does not visit the bear then it does not visit the rabbit. If something chases the rabbit then it visits the rabbit. If something is round then it chases the rabbit. If something chases the rabbit then the rabbit is young. If something chases the bear then the bear eats the rabbit. If something visits the cow then the cow eats the bear. If something eats the bear then the bear is round. If the bear visits the mouse then the bear visits the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not visit the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nRound($x, bool) ::: Is x round?\nFacts:\nBlue(Bear, True) ::: The bear is blue.\nYoung(Bear, True) ::: The bear is young.\nChases(Cow, Mouse, True) ::: The cow chases the mouse.\nEats(Cow, Mouse, True) ::: The cow eats the mouse.\nDoesNotVisit(Cow, Rabbit, True) ::: The cow does not visit the rabbit.\nNotRound(Mouse, True) ::: The mouse is not round.\nChases(Rabbit, Bear, True) ::: The rabbit chases the bear.\nRules:\nYoung($x, True) && Blue($x, True) >>> Visits($x, Mouse, True) ::: If something is young and blue then it visits the mouse.\nChases($x, Rabbit, True) && DoesNotVisit(Rabbit, $y, True) >>> DoesNotVisit($x, $y, True) ::: If something chases the rabbit and the rabbit does not visit the bear then it does not visit the rabbit.\nChases($x, Rabbit, True) >>> Visits($x, Rabbit, True) ::: If something chases the rabbit then it visits the rabbit.\nRound($x, True) >>> Chases($x, Rabbit, True) ::: If something chases the rabbit then the rabbit is young.\nChases($x, Bear, True) >>> Eats(Bear, Rabbit, True) ::: If something chases the bear then the bear eats the rabbit.\nVisits($x, Cow, True) >>> Eats(Cow, Bear, True) ::: If something visits the cow then the cow eats the bear.\nEats(Bear, Rabbit, True) >>> Round(Rabbit, True) ::: If something eats the bear then the bear is round.\nVisits(Bear, Mouse, True) >>> Visits(Bear, Cow, True) ::: If the bear visits the mouse then the bear visits the cow.\nQuery:\nDoesNotVisit(Bear, Cow, True) ::: The bear does not visit the cow.\n------\nProblem:\nThe bear is blue. The bear is young. The cow chases the mouse. The cow e"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-683_Q4",
    "context": "The bear chases the cat. The bear chases the cow. The bear likes the cat. The bear likes the lion. The bear visits the cat. The cat is red. The cat visits the bear. The cat visits the cow. The cow visits the lion. The lion chases the cat. The lion is nice. If something likes the bear and it visits the lion then it is green. If something likes the lion and the lion is nice then it chases the lion. If something is green and it chases the cow then the cow is cold. Cold things are green. If something chases the lion and the lion chases the cat then it is cold. If the lion likes the cat and the cat chases the lion then the lion is nice. If something likes the cat then it likes the lion. If something likes the cat then it likes the lion. If something chases the lion then the lion visits the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not chase the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nIs($x, $y, bool) ::: Is x y?\nGreen($x, bool) ::: Is x green?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nFacts:\nChases(Bear, Cat, True) ::: The bear chases the cat.\nChases(Bear, Cow, True) ::: The bear chases the cow.\nLikes(Bear, Cat, True) ::: The bear likes the cat.\nLikes(Bear, Lion, True) ::: The bear likes the lion.\nVisits(Bear, Cat, True) ::: The bear visits the cat.\nRed(Cat, True) ::: The cat is red.\nVisits(Cat, Bear, True) ::: The cat visits the bear.\nVisits(Cat, Cow, True) ::: The cat visits the cow.\nVisits(Cow, Lion, True) ::: The cow visits the lion.\nChases(Lion, Cat, True) ::: The lion chases the cat.\nNice(Lion, True) ::: The lion is nice.\nRules:\nLikes($x, $y, True) && Visits($x, $y, True) >>> Green($x, True) ::: If something likes the bear and it visits the lion then it is green.\nLikes($x, $y, True) && Nice($y, True) >>> Chases($x, $y, True) ::: If something likes the lion and the lion is nice then it chases the lion.\nGreen($x, True) && Chases($x, $y, True) >>> Cold($y, True) ::: If something chases the lion and the lion chases the cat then it is cold.\nCold($x, True) >>> Green($x, True) ::: Cold things are green.\nChases($x, $y, True) && Chases($y, $z, True) >>> Cold($x, True) ::: If the lion chases the cat and the cat chases the lion then the lion is nice.\nLikes($x, $y, True) && Likes($y, $z, True) >>> Likes($x, $z, True) ::: If something likes the cat then it likes the lion.\nLikes($x, $y, True) && Likes($y, $z, True) >>> Likes($x, $z, True) ::"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-766_Q5",
    "context": "Bob is big. Bob is round. Charlie is not cold. Charlie is green. Fiona is big. Fiona is green. Fiona is nice. Fiona is round. Harry is cold. Harry is nice. If someone is rough then they are not nice. All green people are nice. If someone is cold then they are nice. All big people are round. All green, blue people are big. If someone is round then they are not rough. All nice people are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(Bob, True) ::: Bob is big.\nRound(Bob, True) ::: Bob is round.\nNot(Cold(Charlie, True)) ::: Charlie is not cold.\nGreen(Charlie, True) ::: Charlie is green.\nBig(Fiona, True) ::: Fiona is big.\nGreen(Fiona, True) ::: Fiona is green.\nNice(Fiona, True) ::: Fiona is nice.\nRound(Fiona, True) ::: Fiona is round.\nCold(Harry, True) ::: Harry is cold.\nNice(Harry, True) ::: Harry is nice.\nRules:\nNot(Rough($x, True)) >>> Nice($x, True) ::: If someone is rough then they are not nice.\nGreen($x, True) >>> Nice($x, True) ::: All green people are nice.\nCold($x, True) >>> Nice($x, True) ::: If someone is cold then they are nice.\nBig($x, True) >>> Round($x, True) ::: All big people are round.\nGreen($x, True) && Blue($x, True) >>> Big($x, True) ::: All green, blue people are big.\nRound($x, True) >>> Not(Rough($x, True)) ::: If someone is round then they are not rough.\nNice($x, True) >>> Blue($x, True) ::: All nice people are blue.\nQuery:\nBlue(Charlie, True) ::: Charlie is blue.\n------\nProblem:\nBob is big. Bob is round. Charlie is not cold. Charlie is green. Fiona is big. Fiona is green. Fiona is nice. Fiona is round. Harry is cold. Harry is nice. If someone is rough then they are not nice. All green people are nice. If someone is cold then they are nice. All big people are round. All green, blue people are big. If someone is round then they are not rough. All nice people are blue.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is blue.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nRound($x, bool"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-829_Q7",
    "context": "The cow eats the lion. The cow eats the mouse. The cow is green. The cow visits the lion. The cow visits the mouse. The lion eats the cow. The lion eats the rabbit. The lion is big. The lion is green. The lion is round. The mouse eats the lion. The mouse is big. The mouse visits the cow. The rabbit is round. The rabbit needs the cow. The rabbit visits the lion. If someone eats the lion and the lion is green then they are blue. If someone visits the cow and they eat the rabbit then the rabbit is cold. If someone needs the mouse and the mouse needs the rabbit then the mouse needs the cow. If someone visits the cow and they are big then the cow visits the mouse. If someone is green and they need the rabbit then they eat the rabbit. If someone is blue then they eat the rabbit. All cold people are blue. If someone visits the cow then the cow is green. If someone eats the lion then they are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nGreen($x, bool) ::: Is x green?\nBig($x, bool) ::: Is x big?\nRound($x, bool) ::: Is x round?\nCold($x, bool) ::: Is x cold?\nBlue($x, bool) ::: Is x blue?\nFacts:\nEats(Cow, Lion, True) ::: The cow eats the lion.\nEats(Cow, Mouse, True) ::: The cow eats the mouse.\nGreen(Cow, True) ::: The cow is green.\nVisits(Cow, Lion, True) ::: The cow visits the lion.\nVisits(Cow, Mouse, True) ::: The cow visits the mouse.\nEats(Lion, Cow, True) ::: The lion eats the cow.\nEats(Lion, Rabbit, True) ::: The lion eats the rabbit.\nBig(Lion, True) ::: The lion is big.\nGreen(Lion, True) ::: The lion is green.\nRound(Lion, True) ::: The lion is round.\nEats(Mouse, Lion, True) ::: The mouse eats the lion.\nBig(Mouse, True) ::: The mouse is big.\nVisits(Mouse, Cow, True) ::: The mouse visits the cow.\nRound(Rabbit, True) ::: The rabbit is round.\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow.\nVisits(Rabbit, Lion, True) ::: The rabbit visits the lion.\nRule:\nEats($x, $y, True) && Green($x, True) >>> Blue($x, True) ::: If someone eats the lion and the lion is green then they are blue.\nRule:\nVisits($x, $y, True) && Eats($x, $y, True) && Eats($y, $z, True) >>> Rabbit($z, True) ::: If someone visits the cow and they eat the rabbit then the rabbit is cold.\nRule:\nNeeds($x, $y, True) && Needs($y, $z, True) >>> Needs($x, $z, True) ::: If someone needs the mouse and the mouse needs the rabbit then the mouse needs the cow.\nRule:\nVisits($x, $y, True) &&"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-960_Q10",
    "context": "The dog is round. The dog needs the tiger. The lion chases the dog. The lion chases the mouse. The lion needs the dog. The lion sees the dog. The mouse is red. The mouse sees the tiger. The tiger is blue. The tiger is red. The tiger is round. The tiger sees the lion. If something chases the mouse and it is round then the mouse is kind. If the mouse sees the tiger and the tiger is red then the tiger is kind. If something chases the mouse then it sees the mouse. If something chases the lion and the lion sees the tiger then the tiger chases the lion. If something is round then it needs the tiger. If something chases the dog then it is round. If something is round then it sees the lion. If something is kind then it chases the dog. If something needs the lion then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nNeeds($x, $y, bool) ::: Does x need y?\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nFacts:\nRound(Dog, True) ::: The dog is round.\nNeeds(Dog, Tiger, True) ::: The dog needs the tiger.\nChases(Lion, Dog, True) ::: The lion chases the dog.\nChases(Lion, Mouse, True) ::: The lion chases the mouse.\nNeeds(Lion, Dog, True) ::: The lion needs the dog.\nSees(Lion, Dog, True) ::: The lion sees the dog.\nRed(Mouse, True) ::: The mouse is red.\nSees(Mouse, Tiger, True) ::: The mouse sees the tiger.\nBlue(Tiger, True) ::: The tiger is blue.\nRed(Tiger, True) ::: The tiger is red.\nRound(Tiger, True) ::: The tiger is round.\nSees(Tiger, Lion, True) ::: The tiger sees the lion.\nRules:\nRound($x, True) >>> Kind($x, True) ::: If something chases the mouse and it is round then the mouse is kind.\nSees($x, Tiger) && Red($x, True) >>> Kind($x, True) ::: If the mouse sees the tiger and the tiger is red then the tiger is kind.\nChases($x, Mouse) >>> Sees($x, Mouse) ::: If something chases the mouse then it sees the mouse.\nChases($x, Lion) && Sees($x, Tiger) >>> Chases($x, Tiger) ::: If something chases the lion and the lion sees the tiger then the tiger chases the lion.\nRound($x, True) >>> Needs($x, Tiger, True) ::: If something is round then it needs the tiger.\nChases($x, Dog) >>> Round($x, True) ::: If something chases the dog then it is round.\nRound($x, True) >>> Sees($x, Lion) ::: If something is round then it sees the lion.\nKind($x, True) >>> Chases($x, Dog) ::: If something is kind then it chases the dog.\nNeeds($x, Lion, True) >>> Round($x, True) ::: If something needs the lion then it is round.\nQuery:\nNot(Round(Mouse"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-305_Q3",
    "context": "Bob is big. Bob is blue. Bob is cold. Bob is furry. Bob is green. Bob is round. Dave is round. Erin is red. Fiona is cold. Fiona is green. All green things are blue. If something is round and cold then it is red. Blue, big things are round. If something is furry and blue then it is round. All red, green things are furry. If something is round then it is red. If Bob is furry and Bob is red then Bob is round. Red things are big. All blue things are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nFacts:\nBig(Bob, True) ::: Bob is big.\nBlue(Bob, True) ::: Bob is blue.\nCold(Bob, True) ::: Bob is cold.\nFurry(Bob, True) ::: Bob is furry.\nGreen(Bob, True) ::: Bob is green.\nRound(Bob, True) ::: Bob is round.\nRound(Dave, True) ::: Dave is round.\nRed(Erin, True) ::: Erin is red.\nCold(Fiona, True) ::: Fiona is cold.\nGreen(Fiona, True) ::: Fiona is green.\nRules:\nGreen($x, True) >>> Blue($x, True) ::: All green things are blue.\nRound($x, True) && Cold($x, True) >>> Red($x, True) ::: If something is round and cold then it is red.\nBlue($x, True) >>> Round($x, True) ::: Blue, big things are round.\nFurry($x, True) && Blue($x, True) >>> Round($x, True) ::: If something is furry and blue then it is round.\nRed($x, True) >>> Green($x, True) ::: All red, green things are furry.\nRound($x, True) >>> Red($x, True) ::: If something is round then it is red.\nFurry($x, True) && Red($x, True) && Bob($x, True) >>> Round($x, True) ::: If Bob is furry and Bob is red then Bob is round.\nRed($x, True) >>> Big($x, True) ::: Red things are big.\nFurry($x, True) >>> Blue($x, True) ::: All blue things are furry.\nQuery:\nRed(Bob, True) ::: Bob is red.\n------\nProblem:\nBob is big. Bob is blue. Bob is cold. Bob is furry. Bob is green. Bob is round. Dave is round. Erin is red. Fiona is cold. Fiona is green. All green things are blue. If something is round and cold then it is red. Blue, big things are round. If something is furry and blue then it is round"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-882_Q2",
    "context": "Bob is nice. Dave is big. Erin is furry. Erin is nice. Erin is rough. Harry is cold. Harry is white. All rough people are furry. If someone is rough and cold then they are white. If someone is nice then they are big. Furry, nice people are big. All big people are red. All nice, big people are rough. All furry, big people are cold. All cold, white people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nRed($x, bool) ::: Is x red?\nFacts:\nNice(Bob, True) ::: Bob is nice.\nBig(Dave, True) ::: Dave is big.\nFurry(Erin, True) ::: Erin is furry.\nNice(Erin, True) ::: Erin is nice.\nRough(Erin, True) ::: Erin is rough.\nWhite(Harry, True) ::: Harry is white.\nCold(Harry, True) ::: Harry is cold.\nRules:\nRough($x, True) >>> Furry($x, True) ::: All rough people are furry.\nRough($x, True) && Cold($x, True) >>> White($x, True) ::: If someone is rough and cold then they are white.\nNice($x, True) >>> Big($x, True) ::: If someone is nice then they are big.\nFurry($x, True) && Nice($x, True) >>> Big($x, True) ::: Furry, nice people are big.\nBig($x, True) >>> Red($x, True) ::: All big people are red.\nNice($x, True) && Big($x, True) >>> Rough($x, True) ::: All nice, big people are rough.\nFurry($x, True) && Big($x, True) >>> Cold($x, True) ::: All furry, big people are cold.\nCold($x, True) && White($x, True) >>> Rough($x, True) ::: All cold, white people are rough.\nQuery:\nNot(White(Harry, True)) ::: Harry is not white.\n------\nProblem:\nBob is nice. Dave is big. Erin is furry. Erin is nice. Erin is rough. Harry is cold. Harry is white. All rough people are furry. If someone is rough and cold then they are white. If someone is nice then they are big. Furry, nice people are big. All big people are red. All nice, big people are rough. All furry, big people are cold. All cold, white people are rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is not white.\n###\nPredicates:"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1_Q1",
    "context": "Anne is furry. Charlie is round. Charlie is smart. Charlie is white. Charlie is young. Erin is kind. Erin is nice. Erin is round. Erin is smart. Erin is white. Erin is young. Harry is furry. Harry is nice. Harry is round. Harry is smart. Harry is young. All round people are nice. Nice, furry people are kind. All kind, white people are round. All white, furry people are kind. If someone is round and white then they are kind. Nice people are smart. If Anne is nice and Anne is round then Anne is kind. If someone is furry then they are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nKind($x, bool) ::: Is x kind?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRound(Charlie, True) ::: Charlie is round.\nSmart(Charlie, True) ::: Charlie is smart.\nWhite(Charlie, True) ::: Charlie is white.\nYoung(Charlie, True) ::: Charlie is young.\nKind(Erin, True) ::: Erin is kind.\nNice(Erin, True) ::: Erin is nice.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nRound(Harry, True) ::: Harry is round.\nSmart(Harry, True) ::: Harry is smart.\nYoung(Harry, True) ::: Harry is young.\nRules:\nRound($x, True) >>> Nice($x, True) ::: All round people are nice.\nNice($x, True) && Furry($x, True) >>> Kind($x, True) ::: Nice, furry people are kind.\nKind($x, True) && White($x, True) >>> Round($x, True) ::: All kind, white people are round.\nFurry($x, True) >>> White($x, True) ::: If someone is furry then they are white.\nNice($x, True) >>> Smart($x, True) ::: Nice people are smart.\nFurry(Anne, True) && Round(Anne, True) >>> Kind(Anne, True) ::: If Anne is nice and Anne is round then Anne is kind.\n###\nProblem:\nAnne is furry. Anne is kind. Anne is nice. Anne is white. Anne is young. Charlie is furry. Charlie is kind. Charlie is nice. Charlie is white. Charlie is young. Erin is furry. Erin is kind. Erin is nice. Erin is white. Erin is young. Fiona is furry. Fiona is kind. Fiona is nice. Fiona is white. Fiona is young. Harry is furry. Harry is kind. Harry is nice. Harry is white. Harry is young. All furry people are kind. All kind, white people are nice. All nice, white people are young. All young, white people are nice. If someone is furry then they are white. If someone is kind then they are nice. If someone is nice then they are young. If someone is white then they are young.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Erin is kind.\n###\nPredicates:\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nKind(Anne, True) ::: Anne is kind.\nNice(Anne, True) ::: Anne is nice.\nWhite(Anne, True) ::: Anne is white.\nYoung(Anne, True) ::: Anne is young.\nFurry(Charlie, True) ::: Charlie is furry.\nKind(Charlie, True) ::: Charlie is kind.\nNice(Charlie, True) ::: Charlie is nice.\nWhite(Charlie, True) ::: Charlie is white.\nYoung(Charlie, True) ::: Charlie is young.\nFurry(Erin, True) ::: Erin is furry.\nKind(Erin, True) ::: Erin is kind.\nNice(Erin, True) ::: Erin is nice.\nWhite(Er"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-327_Q14",
    "context": "Anne is cold. Anne is furry. Anne is rough. Anne is smart. Anne is white. Bob is nice. Bob is rough. Erin is cold. Erin is furry. Erin is nice. Erin is rough. Erin is smart. Erin is white. Erin is young. Fiona is cold. Fiona is furry. All smart things are cold. If Bob is young and Bob is cold then Bob is furry. Young things are cold. If Fiona is rough and Fiona is cold then Fiona is smart. Cold, furry things are white. All rough, nice things are young. If something is white and furry then it is smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nNice(Bob, True) ::: Bob is nice.\nRough(Bob, True) ::: Bob is rough.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nNice(Erin, True) ::: Erin is nice.\nRough(Erin, True) ::: Erin is rough.\nSmart(Erin, True) ::: Erin is smart.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nCold(Fiona, True) ::: Fiona is cold.\nFurry(Fiona, True) ::: Fiona is furry.\nSmart(Fiona, True) ::: Fiona is smart.\nRules:\nYoung($x, True) >>> Cold($x, True) ::: Young things are cold.\nSmart($x, True) >>> Cold($x, True) ::: All smart things are cold.\nCold($x, True) && Furry($x, True) >>> White($x, True) ::: Cold, furry things are white.\nRough($x, True) && Nice($x, True) >>> Young($x, True) ::: All rough, nice things are young.\nFurry($x, True) && Smart($x, True) >>> White($x, True) ::: If something is white and furry then it is smart.\nCold($x, True) && Furry($x, True) >>> Smart($x, True) ::: If Fiona is rough and Fiona is cold then Fiona is smart.\nQuery:\nYoung(Anne, True) ::: Anne is young.\n------\nProblem:\nAnne is cold. Anne is furry. Anne is rough. Anne is smart. Anne is white. Bob is nice. Bob is rough. Erin is cold. Erin is furry. Erin is nice. Erin is rough. Erin is smart. Erin is white. Erin is young. Fiona is cold. Fiona is furry. All smart things are cold. If Bob is young and Bob is cold then Bob is furry. Young things are cold. If Fiona is rough and Fiona is cold then Fiona is smart. Cold, furry things are white. All rough, nice things are young. If something is white and furry then it is smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Anne is young.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nNice($x, bool) ::: Is x nice?\nRough($x, bool) ::: Is x rough?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nFurry(Anne, True) ::: Anne is furry.\nRough(Anne, True) ::: Anne is rough.\nSmart(Anne, True) ::: Anne is smart.\nWhite(Anne, True) ::: Anne is white.\nNice(Bob, True) ::: Bob is nice.\nRough(Bob, True) ::: Bob is rough.\nCold(Erin, True) ::: Erin is cold.\nFurry(Erin, True) ::: Erin is furry.\nNice(Erin, True) ::: Er"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1030_Q23",
    "context": "Dave is quiet. Fiona is big. Fiona is furry. Gary is round. Gary is young. Harry is quiet. Harry is rough. If someone is furry then they are rough. Big people are rough. If someone is rough then they are young. If someone is young and round then they are quiet. Big, young people are cold. Cold people are round. If someone is young and not furry then they are not round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nQuite(Dave, True) ::: Dave is quiet.\nBig(Fiona, True) ::: Fiona is big.\nFurry(Fiona, True) ::: Fiona is furry.\nRound(Gary, True) ::: Gary is round.\nYoung(Gary, True) ::: Gary is young.\nQuite(Harry, True) ::: Harry is quiet.\nRough(Harry, True) ::: Harry is rough.\nRules:\nFurry($x, True) >>> Rough($x, True) ::: If someone is furry then they are rough.\nBig($x, True) >>> Rough($x, True) ::: Big people are rough.\nRough($x, True) >>> Young($x, True) ::: If someone is rough then they are young.\nYoung($x, True) && Round($x, True) >>> Quite($x, True) ::: If someone is young and round then they are quiet.\nBig($x, True) && Young($x, True) >>> Cold($x, True) ::: Big, young people are cold.\nCold($x, True) >>> Round($x, True) ::: Cold people are round.\nYoung($x, True) && Not(Furry($x, True)) >>> Not(Round($x, True)) ::: If someone is young and not furry then they are not round.\nQuery:\nNot(Big(Dave, True)) ::: Dave is not big.\n------\nProblem:\nDave is quiet. Fiona is big. Fiona is furry. Gary is round. Gary is young. Harry is quiet. Harry is rough. If someone is furry then they are rough. Big people are rough. If someone is rough then they are young. If someone is young and round then they are quiet. Big, young people are cold. Cold people are round. If someone is young and not furry then they are not round.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Dave is not big.\n###\nPredicates:\nQuiet($x, bool) ::: Is x quiet?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nQuite(Dave, True) ::: Dave is quiet.\nBig(Fiona, True) ::: Fiona is big.\nFurry(Fiona, True) ::: Fiona is furry.\nRound(Gary, True) ::: Gary is round.\nYoung(Gary, True) ::: Gary is young.\nQuite(Harry, True) ::: Harry is quiet.\nRough(Harry, True) ::: Harry is rough.\nRules:\nFurry($x, True) >>> Rough($x, True) ::: If someone is furry then they are rough.\nBig($x, True) >>> Rough($x, True) ::: Big people are rough.\nRough($x, True) >>> Young($x, True) ::: If someone is rough then they are young.\nYoung($x, True) && Round($x, True) >>> Quite($x, True) ::: If someone is young and round then they are quiet.\nBig($x, True) && Young($x, True) >>> Cold($x, True) ::: Big, young people are cold.\nCold($x, True) >>> Round($x, True) ::: Cold people are round.\nYoung($x, True) && Not(Furry($x, True)) >>> Not(Round($x, True)) ::: If someone is young and not furry then they are not round.\nQuery:\nNot(Big(Dave, True)) ::: Dave is not big.\n------\nProblem:\nDave is quiet. Fiona is big. Fiona is furry. Gary is round. Gary is young. Harry is quiet"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-785_Q8",
    "context": "Anne is rough. Anne is young. Bob is nice. Bob is red. Bob is young. Charlie is cold. Charlie is quiet. Charlie is red. Charlie is rough. Charlie is smart. Fiona is cold. Fiona is quiet. Cold people are young. Rough, young people are nice. Cold, red people are smart. Red people are smart. If someone is smart and quiet then they are cold. All rough, nice people are red. All red, quiet people are cold. All smart people are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nFacts:\nRough(Anne, True) ::: Anne is rough.\nYoung(Anne, True) ::: Anne is young.\nNice(Bob, True) ::: Bob is nice.\nRed(Bob, True) ::: Bob is red.\nYoung(Bob, True) ::: Bob is young.\nCold(Charlie, True) ::: Charlie is cold.\nQuiet(Charlie, True) ::: Charlie is quiet.\nRed(Charlie, True) ::: Charlie is red.\nRough(Charlie, True) ::: Charlie is rough.\nSmart(Charlie, True) ::: Charlie is smart.\nCold(Fiona, True) ::: Fiona is cold.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRules:\nCold($x, True) >>> Young($x, True) ::: Cold people are young.\nRough($x, True) && Young($x, True) >>> Nice($x, True) ::: Rough, young people are nice.\nCold($x, True) && Red($x, True) >>> Smart($x, True) ::: Cold, red people are smart.\nRed($x, True) >>> Smart($x, True) ::: Red people are smart.\nSmart($x, True) && Quiet($x, True) >>> Cold($x, True) ::: If someone is smart and quiet then they are cold.\nRough($x, True) && Nice($x, True) >>> Red($x, True) ::: All rough, nice people are red.\nRed($x, True) && Quiet($x, True) >>> Cold($x, True) ::: All red, quiet people are cold.\nSmart($x, True) >>> Quiet($x, True) ::: All smart people are quiet.\nQuery:\nNot(Smart(Anne, True)) ::: Anne is not smart.\n------\nProblem:\nAnne is cold. Anne is rough. Anne is young. Anne is quiet. Anne is smart. Bob is cold. Bob is rough. Bob is young. Bob is quiet. Bob is smart. Charlie is cold. Charlie is rough. Charlie is young. Charlie is quiet. Charlie is smart. Fiona is cold. Fiona is rough. Fiona is young. Fiona is quiet. Fiona is smart. Harry is cold. Harry is rough. Harry is young. Harry is quiet. Harry is smart.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Anne is not smart.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nYoung($x, bool) ::: Is x young?\nQuiet($x, bool) ::: Is x quiet?\nSmart($x, bool) ::: Is x smart?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nRough(Anne, True) ::: Anne is rough.\nYoung(Anne, True) ::: Anne is young.\nQuiet(Anne, True) ::: Anne is quiet.\nSmart(Anne, True) ::: Anne is smart.\nCold(Bob, True) ::: Bob is cold.\nRough(Bob, True) ::: Bob is rough.\nYoung(Bob, True) ::: Bob is young.\nQuiet(Bob, True) ::: Bob is quiet.\nSmart(Bob, True) ::: Bob is smart.\nCold(Charlie, True) ::: Charlie is cold.\nRough(Charlie, True) ::: Charlie is rough.\nYoung(Charlie, True) ::: Charlie is young.\nQuiet(Charlie, True) ::: Charlie is quiet.\nSmart(Charlie, True) ::: Charlie is smart.\nCold(Fiona, True) ::: Fiona is cold.\nRough(Fiona, True) ::: Fiona is rough"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-461_Q16",
    "context": "Anne is big. Anne is kind. Anne is quiet. Anne is rough. Anne is white. Fiona is big. Gary is big. Gary is cold. Gary is kind. Harry is kind. If something is kind then it is big. If something is white and kind then it is rough. If Harry is quiet and Harry is cold then Harry is big. If something is quiet then it is big. If something is cold and rough then it is quiet. All kind things are young. If Harry is kind and Harry is cold then Harry is white. If something is young and kind then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nKind(Anne, True) ::: Anne is kind.\nQuiet(Anne, True) ::: Anne is quiet.\nRough(Anne, True) ::: Anne is rough.\nWhite(Anne, True) ::: Anne is white.\nBig(Fiona, True) ::: Fiona is big.\nBig(Gary, True) ::: Gary is big.\nKind(Gary, True) ::: Gary is kind.\nKind(Harry, True) ::: Harry is kind.\nRules:\nKind($x, True) >>> Big($x, True) ::: If something is kind then it is big.\nWhite($x, True) && Kind($x, True) >>> Rough($x, True) ::: If something is white and kind then it is rough.\nQuiet($x, True) && Cold($x, True) >>> Big($x, True) ::: If Harry is quiet and Harry is cold then Harry is big.\nBig($x, True) >>> Quiet($x, True) ::: If something is quiet then it is big.\nCold($x, True) && Rough($x, True) >>> Quiet($x, True) ::: If something is cold and rough then it is quiet.\nYoung($x, True) && Kind($x, True) >>> Cold($x, True) ::: If something is young and kind then it is cold.\nKind($x, True) >>> Young($x, True) ::: All kind things are young.\nKind($x, True) && Cold($x, True) >>> White($x, True) ::: If Harry is kind and Harry is cold then Harry is white.\nQuery:\nYoung(Fiona, True) ::: Fiona is young.\n------\nProblem:\nAnne is big. Anne is kind. Anne is quiet. Anne is rough. Anne is white. Fiona is big. Gary is big. Gary is cold. Gary is kind. Harry is kind. If something is kind then it is big. If something is white and kind then it is rough. If Harry is quiet and Harry is cold then Harry is big. If something is quiet then it is big. If something is cold and rough then it is quiet. All kind things are young. If Harry is kind and Harry is cold then Harry is white. If something is young and kind then it is cold.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Fiona is young.\n###\nPredicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nQuiet($x, bool) ::: Is x quiet?\nRough($x, bool) ::: Is x rough?\nWhite($x, bool) ::: Is x white?\nCold($x, bool) ::: Is x cold?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Anne, True) ::: Anne is big.\nKind(Anne, True) ::: Anne is kind.\nQuiet(Anne, True) ::: Anne is quiet.\nRough(Anne, True) ::: Anne is rough.\nWhite(Anne, True) ::: Anne is white.\nBig(Fiona, True) ::: Fiona is big.\nBig(Gary, True) ::: Gary is big.\nKind(Gary, True) ::: Gary is kind.\nKind(Harry, True) ::: Harry is kind.\nRules:\nKind($x, True) >>> Big($x, True) ::: If something is kind then it is big.\nWhite($x, True) && Kind($x, True) >>> Rough($x, True) ::: If something is white and kind then it is rough.\nQuiet($x, True) && Cold($x, True) >>> Big($x, True) ::: If Harry is quiet and Harry is cold then Harry is big.\nBig($x, True) >>> Quiet($x, True) ::: If something is quiet then it is big"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-29_Q18",
    "context": "The bald eagle is big. The bald eagle is red. The bald eagle sees the tiger. The bald eagle visits the bear. The bear needs the bald eagle. The bear sees the bald eagle. The bear does not see the tiger. The rabbit is big. The rabbit needs the bald eagle. The rabbit needs the bear. The rabbit visits the tiger. The tiger needs the bald eagle. The tiger needs the rabbit. The tiger visits the bear. If something is big then it needs the tiger. If something needs the tiger and it sees the bald eagle then the tiger is big. If something needs the tiger and it visits the bear then the tiger needs the rabbit. If the bald eagle visits the bear and the bald eagle needs the tiger then the bear needs the tiger. If something needs the tiger then it is red. If the bear sees the rabbit then the rabbit sees the tiger. If something is blue then it visits the bear. If something is blue and it needs the tiger then it does not visit the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nVisits($x, $y, bool) ::: Does x visit y?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nRed(BaldEagle, True) ::: The bald eagle is red.\nSees(BaldEagle, Tiger, True) ::: The bald eagle sees the tiger.\nVisits(BaldEagle, Bear, True) ::: The bald eagle visits the bear.\nNeeds(Bear, BaldEagle, True) ::: The bear needs the bald eagle.\nSees(Bear, BaldEagle, True) ::: The bear sees the bald eagle.\nNot(Sees(Bear, Tiger, True)) ::: The bear does not see the tiger.\nBig(Rabbit, True) ::: The rabbit is big.\nNeeds(Rabbit, BaldEagle, True) ::: The rabbit needs the bald eagle.\nNeeds(Rabbit, Bear, True) ::: The rabbit needs the bear.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nNeeds(Tiger, Rabbit, True) ::: The tiger needs the rabbit.\nVisits(Tiger, Bear, True) ::: The tiger visits the bear.\nRules:\nBig($x, True) >>> Needs($x, Tiger, True) ::: If something is big then it needs the tiger.\nNeeds($x, Tiger, True) && Sees($x, BaldEagle, True) >>> TigerIsBig($x, True) ::: If something needs the tiger and it sees the bald eagle then the tiger is big.\nNeeds($x, Tiger, True) && Visits($x, Bear, True) >>> TigerNeedsRabbit($x, True) ::: If something needs the tiger and it visits the bear then the tiger needs the rabbit.\nSees(BaldEagle, Bear, True) && Needs(BaldEagle, Tiger, True) >>> BearNeedsTiger($x, True) ::: If the bald eagle visits the bear and the bald eagle needs the tiger then the bear needs the tiger.\nNeeds($x, Tiger, True) >>> Red($x, True) ::: If something needs the tiger then it is red.\nSees(Bear, Rabbit, True) >>> Sees(Rabbit, Tiger, True) ::: If the bear sees the rabbit then the rabbit sees the tiger.\nBlue($x, True) >>> Visits($x, Bear, True) ::: If something is blue then it visits the bear.\nBlue($x, True) && Needs($x, Tiger, True) >>> Not(Visits($x, BaldEagle, True)) ::: If something is blue and it needs the tiger then it does not visit the bald eagle.\nQuery:\nBlue(Tiger, True) ::: The tiger is blue.\n------\nProblem:\nThe bear is big. The bear is red. The bear is rough. The bear is white. The bear is young. The bear is furry. The bear is quiet. The bear is green. The bear is blue. The bear is black. The bear is brown. The bear is orange. The bear is purple. The bear is yellow. The bear is pink. The bear is gray. The bear is silver. The bear is gold. The bear is platinum. The bear is diamond. The bear is ruby. The bear is sapphire. The bear is emerald. The bear is topaz. The bear is amethyst. The bear is aquamarine. The bear is garnet. The bear is tourmaline. The bear is opal. The bear is jade. The bear is onyx. The bear is obsidian. The bear is agate. The bear is jasper. The bear is carnelian. The bear is chalcedony. The bear is chrysoprase. The bear is chry"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-169_Q6",
    "context": "The bald eagle chases the rabbit. The bald eagle does not chase the tiger. The bald eagle is green. The bald eagle is red. The bald eagle is young. The bald eagle sees the rabbit. The bear sees the bald eagle. The rabbit is red. The rabbit needs the bald eagle. The tiger chases the bear. The tiger is green. The tiger sees the bald eagle. If something is young and red then it is green. If something sees the bear then it needs the tiger. If something needs the bald eagle then the bald eagle chases the rabbit. If something is big and it chases the rabbit then it sees the bear. If something sees the rabbit and it needs the tiger then the tiger is not blue. If something chases the rabbit then it sees the bald eagle. If the rabbit is not young and the rabbit does not need the bald eagle then the rabbit sees the bear. If something is red and it needs the bear then it is big. If something is red then it needs the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nSees($x, $y, bool) ::: Does x see y?\nNeeds($x, $y, bool) ::: Does x need y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nYoung($x, bool) ::: Is x young?\nRed($x, bool) ::: Is x red?\nGreen($x, bool) ::: Is x green?\nBlue($x, bool) ::: Is x blue?\nFacts:\nChases(BaldEagle, Rabbit, True) ::: The bald eagle chases the rabbit.\nChases(BaldEagle, Tiger, False) ::: The bald eagle does not chase the tiger.\nIs(BaldEagle, Green, True) ::: The bald eagle is green.\nIs(BaldEagle, Red, True) ::: The bald eagle is red.\nIs(BaldEagle, Young, True) ::: The bald eagle is young.\nSees(BaldEagle, Rabbit, True) ::: The bald eagle sees the rabbit.\nSees(Bear, BaldEagle, True) ::: The bear sees the bald eagle.\nIs(Rabbit, Red, True) ::: The rabbit is red.\nNeeds(Rabbit, BaldEagle, True) ::: The rabbit needs the bald eagle.\nChases(Tiger, Bear, True) ::: The tiger chases the bear.\nIs(Tiger, Green, True) ::: The tiger is green.\nSees(Tiger, BaldEagle, True) ::: The tiger sees the bald eagle.\nRules:\nYoung($x, True) && Red($x, True) >>> Green($x, True) ::: If something is young and red then it is green.\nNeeds($x, $y, True) >>> Chases($x, $y, True) ::: If something needs the bald eagle then the bald eagle chases the rabbit.\nSees($x, $y, True) && Chases($x, $y, True) >>> Big($x, True) ::: If something is big and it chases the rabbit then it sees the bear.\nSees($x, $y, True) && Needs($x, $y, True) >>> Not(Blue($y, True)) ::: If something sees the rabbit and it needs the tiger then the tiger is not blue.\nChases($x, $y, True) >>> Sees($x, $y, True) ::: If the rabbit is not young and the rabbit does not need the bald eagle then the rabbit sees the bear.\nRed($x, True) && Needs($x, Bear, True) >>> Big($x, True) ::: If something is red and it needs the bear then it is big.\nRed($x, True) >>> Needs($x, Bear, True) ::: If something is red then it needs the bear.\nQuery:\nNot(Big(Rabbit, True)) ::: The rabbit is not big.\n------\nProblem:\nThe bear is furry. The bear is green. The bear is red. The bear is young. The bear is white. The bear is rough. The bear is quiet. The bear is not blue. The bear is not big. The bear is not green. The bear is not red. The bear is not young. The bear is not white. The bear is not rough. The bear is not quiet. The bear is not furry. The bear is not blue. The bear is not big. The bear is not green. The bear is not red. The bear is not young. The bear is not white. The bear is not rough. The bear is not quiet. The bear is not furry. The bear is not blue. The bear is not big. The bear is not green. The bear is not red. The bear is not young. The bear is not white. The bear is not rough. The bear is not quiet. The bear is not furry. The bear is not blue. The bear is not big. The bear is not green. The bear is not red. The bear is not young. The bear is not white. The bear is not rough. The bear is not quiet. The bear is not furry. The bear is not blue. The bear is not big. The bear is not green. The bear is not red"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-120_Q17",
    "context": "Dave is nice. Dave is red. Erin is red. Fiona is rough. Fiona is round. Gary is cold. Gary is green. Gary is red. Gary is rough. Gary is not smart. Smart, round things are nice. Red things are nice. Rough, nice things are round. Cold things are rough. If something is red and nice then it is cold. All round things are green. If something is nice and not cold then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Dave, True) ::: Dave is nice.\nRed(Dave, True) ::: Dave is red.\nRed(Erin, True) ::: Erin is red.\nRound(Fiona, True) ::: Fiona is round.\nRound(Gary, True) ::: Gary is round.\nCold(Gary, True) ::: Gary is cold.\nGreen(Gary, True) ::: Gary is green.\nRed(Gary, True) ::: Gary is red.\nRough(Gary, True) ::: Gary is rough.\nNotSmart(Gary, True) ::: Gary is not smart.\nRules:\nSmart($x, True) >>> Round($x, True) ::: Smart, round things are nice.\nRed($x, True) >>> Nice($x, True) ::: Red things are nice.\nRough($x, True) && Nice($x, True) >>> Round($x, True) ::: Rough, nice things are round.\nCold($x, True) >>> Rough($x, True) ::: Cold things are rough.\nRed($x, True) && Nice($x, True) >>> Cold($x, True) ::: If something is red and nice then it is cold.\nAll($x, Round($x, True)) >>> Green($x, True) ::: All round things are green.\nNice($x, True) && NotCold($x, True) >>> Green($x, True) ::: If something is nice and not cold then it is green.\nQuery:\nNotSmart(Dave, True) ::: Dave is not smart.\n------\nProblem:\nDave is nice. Dave is red. Erin is red. Fiona is rough. Fiona is round. Gary is cold. Gary is green. Gary is red. Gary is rough. Gary is not smart. Smart, round things are nice. Red things are nice. Rough, nice things are round. Cold things are rough. If something is red and nice then it is cold. All round things are green. If something is nice and not cold then it is green.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Dave is not smart.\n###\nPredicates:\nNice($x, bool) ::: Is x nice?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nCold($x, bool) ::: Is x cold?\nFacts:\nNice(Dave, True) ::: Dave is nice.\nRed(Dave, True) ::: Dave is red.\nRed(Erin, True) ::: Erin is red.\nRound(Fiona, True) ::: Fiona is round.\nRound(Gary, True) ::: Gary is round.\nCold(Gary, True) ::: Gary is cold.\nGreen(Gary, True) ::: Gary is green.\nRed(Gary, True) ::: Gary is red.\nRough(Gary, True) ::: Gary is rough.\nNotSmart(Gary, True) ::: Gary is not smart.\nRules:\nSmart($x, True) >>> Round($x, True) ::: Smart, round things are nice.\nRed($x, True) >>> Nice($x, True) ::: Red things are nice.\nRough($x, True) && Nice($x, True) >>> Round($x, True) ::: Rough, nice things are round.\nCold($x, True) >>> Rough($x, True) ::: Cold things are rough.\nRed($x, True) && Nice($x, True) >>> Cold($x, True) ::: If something is red and nice then it is cold.\nAll($x, Round($x, True)) >>> Green($x, True) ::: All round things are green.\nNice($x, True) && NotCold($x, True) >>> Green($x, True) ::: If something is nice and not cold then it is green.\nQuery:\nNotSmart(Dave, True) ::: Dave is not smart."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1149_Q12",
    "context": "Anne is kind. Charlie is not big. Charlie is green. Erin is green. Erin is not kind. Harry is big. Harry is green. All big, green things are young. Big things are young. All red things are green. If something is kind then it is not red. All furry things are kind. If Harry is young then Harry is cold. If something is young and cold then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nNot(Big(Charlie, True)) ::: Charlie is not big.\nGreen(Charlie, True) ::: Charlie is green.\nGreen(Erin, True) ::: Erin is green.\nNot(Kind(Erin, True)) ::: Erin is not kind.\nBig(Harry, True) ::: Harry is big.\nGreen(Harry, True) ::: Harry is green.\nRules:\nBig($x, True) >>> Young($x, True) ::: Big things are young.\nYoung($x, True) >>> Furry($x, True) ::: If Harry is young then Harry is furry.\nBig($x, True) && Green($x, True) >>> Young($x, True) ::: All big, green things are young.\nRed($x, True) >>> Green($x, True) ::: All red things are green.\nKind($x, True) >>> Not(Red($x, True)) ::: If something is kind then it is not red.\nFurry($x, True) >>> Kind($x, True) ::: All furry things are kind.\nYoung($x, True) && Cold($x, True) >>> Furry($x, True) ::: If something is young and cold then it is furry.\nQuery:\nRed(Harry, True) ::: Harry is red.\n------\nProblem:\nAnne is kind. Charlie is not big. Charlie is green. Erin is green. Erin is not kind. Harry is big. Harry is green. All big, green things are young. Big things are young. All red things are green. If something is kind then it is not red. All furry things are kind. If Harry is young then Harry is cold. If something is young and cold then it is furry.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Harry is red.\n###\nPredicates:\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nFacts:\nKind(Anne, True) ::: Anne is kind.\nNot(Big(Charlie, True)) ::: Charlie is not big.\nGreen(Charlie, True) ::: Charlie is green.\nGreen(Erin, True) ::: Erin is green.\nNot(Kind(Erin, True)) ::: Erin is not kind.\nBig(Harry, True) ::: Harry is big.\nGreen(Harry, True) ::: Harry is green.\nRules:\nBig($x, True) >>> Young($x, True) ::: Big things are young.\nYoung($x, True) >>> Furry($x, True) ::: If Harry is young then Harry is furry.\nBig($x, True) && Green($x, True) >>> Young($x, True) ::: All big, green things are young.\nRed($x, True) >>> Green($x, True) ::: All red things are green.\nKind($x, True) >>> Not(Red($x, True)) ::: If something is kind then it is not red.\nFurry($x, True) >>> Kind($x, True) ::: All furry things are kind.\nYoung($x, True) && Cold($x, True) >>> Furry($x, True) ::: If something is young and cold then it is furry.\nQuery:\nRed(Harry, True) ::: Harry is red.\n------\nProblem:\nAnne is kind. Charlie is not big. Charlie is green. Erin is green. Erin is not kind. Harry is big. Harry is green. All big, green things are young. Big things are young"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-562_Q11",
    "context": "Charlie is round. Charlie is not young. Dave is rough. Dave is not young. Erin is cold. Erin is young. Harry is furry. Round people are white. If someone is young then they are white. All round, rough people are big. All young, big people are not cold. Round, big people are not cold. Furry people are round. White, round people are furry. If Dave is furry and Dave is round then Dave is rough. If someone is furry then they are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nRules:\nRound($x, True) >>> White($x, True) ::: Round people are white.\nYoung($x, True) >>> White($x, True) ::: If someone is young then they are white.\nRound($x, True) && Rough($x, True) >>> Big($x, True) ::: All round, rough people are big.\nYoung($x, True) && Big($x, True) >>> Not(Cold($x, True)) ::: All young, big people are not cold.\nRound($x, True) && Big($x, True) >>> Not(Cold($x, True)) ::: Round, big people are not cold.\nFurry($x, True) >>> Round($x, True) ::: Furry people are round.\nWhite($x, True) && Round($x, True) >>> Furry($x, True) ::: White, round people are furry.\nFurry($x, True) && Round($x, True) >>> Rough($x, True) ::: If Dave is furry and Dave is round then Dave is rough.\nFurry($x, True) >>> Rough($x, True) ::: If someone is furry then they are rough.\nFacts:\nRound(Charlie, True) ::: Charlie is round.\nNot(Young(Charlie, True)) ::: Charlie is not young.\nRough(Dave, True) ::: Dave is rough.\nNot(Young(Dave, True)) ::: Dave is not young.\nCold(Erin, True) ::: Erin is cold.\nYoung(Erin, True) ::: Erin is young.\nFurry(Harry, True) ::: Harry is furry.\nQuery:\nNot(Cold(Charlie, True)) ::: Charlie is not cold.\n------\nProblem:\nCharlie is furry. Charlie is not young. Dave is furry. Dave is not young. Erin is cold. Erin is young. Harry is furry. Round people are white. If someone is young then they are white. All round, rough people are big. All young, big people are not cold. Round, big people are not cold. Furry people are round. White, round people are furry. If Dave is furry and Dave is round then Dave is rough. If someone is furry then they are rough.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Charlie is not cold.\n###\nPredicates:\nRound($x, bool) ::: Is x round?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nWhite($x, bool) ::: Is x white?\nRules:\nRound($x, True) >>> White($x, True) ::: Round people are white.\nYoung($x, True) >>> White($x, True) ::: If someone is young then they are white.\nRound($x, True) && Rough($x, True) >>> Big($x, True) ::: All round, rough people are big.\nYoung($x, True) && Big($x, True) >>> Not(Cold($x, True)) ::: All young, big people are not cold.\nRound($x, True) && Big($x, True) >>> Not(Cold($x, True)) ::: Round, big people are not cold.\nFurry($x, True) >>> Round($x, True) ::: Furry people are round.\nWhite($x, True) && Round($x, True) >>> Furry($x, True) ::: White, round people are furry.\nFurry($x, True) && Round($x, True) >>> Rough($x, True) ::: If Dave is furry and Dave is round then Dave is rough.\nFurry($x, True) >>> Rough($x, True) ::: If someone is furry then they are rough.\nFacts:"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-121_Q8",
    "context": "The bald eagle needs the cow. The bald eagle needs the tiger. The bald eagle sees the cow. The cow is big. The cow needs the bald eagle. The cow needs the tiger. The mouse eats the cow. The mouse is blue. The mouse is cold. The mouse needs the bald eagle. The mouse sees the cow. The mouse sees the tiger. The tiger eats the cow. The tiger needs the bald eagle. The tiger needs the cow. The tiger needs the mouse. If someone needs the tiger then they are red. If the mouse needs the bald eagle and the bald eagle needs the cow then the mouse needs the cow. If the cow needs the mouse and the mouse sees the cow then the mouse is big. If someone eats the mouse then they see the cow. If someone sees the mouse and they see the bald eagle then the bald eagle needs the tiger. If someone is big then they see the bald eagle. If someone is big and they see the bald eagle then they need the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds($x, $y, bool) ::: Does x need y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nIs($x, $y, bool) ::: Is x y?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nCold($x, bool) ::: Is x cold?\nFacts:\nNeeds(BaldEagle, Cow, True) ::: The bald eagle needs the cow.\nNeeds(BaldEagle, Tiger, True) ::: The bald eagle needs the tiger.\nSees(BaldEagle, Cow, True) ::: The bald eagle sees the cow.\nIs(Cow, Big, True) ::: The cow is big.\nNeeds(Cow, BaldEagle, True) ::: The cow needs the bald eagle.\nNeeds(Cow, Tiger, True) ::: The cow needs the tiger.\nEats(Mouse, Cow, True) ::: The mouse eats the cow.\nIs(Mouse, Blue, True) ::: The mouse is blue.\nIs(Mouse, Cold, True) ::: The mouse is cold.\nNeeds(Mouse, BaldEagle, True) ::: The mouse needs the bald eagle.\nSees(Mouse, Cow, True) ::: The mouse sees the cow.\nSees(Mouse, Tiger, True) ::: The mouse sees the tiger.\nEats(Tiger, Cow, True) ::: The tiger eats the cow.\nNeeds(Tiger, BaldEagle, True) ::: The tiger needs the bald eagle.\nNeeds(Tiger, Cow, True) ::: The tiger needs the cow.\nNeeds(Tiger, Mouse, True) ::: The tiger needs the mouse.\nRed(Mouse, True) ::: If someone needs the tiger then they are red.\nNeeds(Mouse, BaldEagle) && Needs(BaldEagle, Cow) >>> Needs(Mouse, Cow) ::: If the mouse needs the bald eagle and the bald eagle needs the cow then the mouse needs the cow.\nIs(Cow, Mouse) && Sees(Cow, Cow) >>> Big(Mouse, True) ::: If the cow needs the mouse and the mouse sees the cow then the mouse is big.\nEats(Mouse, Mouse) >>> Sees(Cow, Cow) ::: If someone eats the mouse then they see the cow.\nSees(Mouse, BaldEagle) && Sees(BaldEagle, Tiger) >>> Needs(Tiger, BaldEagle) ::: If someone sees the mouse and they see the bald eagle then the bald eagle needs the tiger.\nIs(Mouse, Big) >>> Sees(BaldEagle, Tiger) ::: If someone is big then they see the bald eagle.\nIs(Mouse, Big) && Sees(BaldEagle, Tiger) >>> Needs(Mouse, Cow) ::: If someone is big and they see the bald eagle then they need the mouse.\nQuery:\nNot(Big(Mouse, True)) ::: The mouse is not big.\n------"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-428_Q12",
    "context": "The cat is rough. The mouse likes the rabbit. The mouse sees the rabbit. The rabbit sees the squirrel. The squirrel eats the cat. The squirrel eats the rabbit. The squirrel is red. All red people are young. If the squirrel is green and the squirrel likes the rabbit then the rabbit eats the mouse. If someone sees the cat and they like the squirrel then the squirrel sees the cat. If someone is young then they see the mouse. If someone eats the rabbit and they see the mouse then the mouse is red. If someone is cold then they eat the squirrel. If someone sees the rabbit and the rabbit is green then they are young. If someone likes the squirrel and they are red then they are young. If someone sees the squirrel and the squirrel sees the mouse then they like the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not see the mouse.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough($x, bool) ::: Is x rough?\nLikes($x, $y, bool) ::: Does x like y?\nSees($x, $y, bool) ::: Does x see y?\nEats($x, $y, bool) ::: Does x eat y?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFacts:\nRough(Cat, True) ::: The cat is rough.\nLikes(Mouse, Rabbit, True) ::: The mouse likes the rabbit.\nSees(Mouse, Rabbit, True) ::: The mouse sees the rabbit.\nSees(Rabbit, Squirrel, True) ::: The rabbit sees the squirrel.\nEats(Squirrel, Cat, True) ::: The squirrel eats the cat.\nEats(Squirrel, Rabbit, True) ::: The squirrel eats the rabbit.\nRed(Squirrel, True) ::: The squirrel is red.\nYoung(Squirrel, True) ::: All red people are young.\nIf(Squirrel, Green, Squirrel, Likes, Rabbit, Rabbit, Eats, Mouse) ::: If the squirrel is green and the squirrel likes the rabbit then the rabbit eats the mouse.\nIf(Mouse, Sees, Cat, Squirrel, Likes, Squirrel, Squirrel, Sees, Mouse) ::: If someone sees the cat and they like the squirrel then the squirrel sees the cat.\nIf(Mouse, Young, Sees, Mouse) ::: If someone sees the mouse and they are young then they see the mouse.\nIf(Rabbit, Green, Mouse, Eats, Rabbit, Rabbit, Red, Mouse) ::: If someone eats the rabbit and they see the mouse then the mouse is red.\nIf(Mouse, Cold, Squirrel, Eats, Squirrel) ::: If someone eats the squirrel and they are cold then they eat the squirrel.\nIf(Rabbit, Sees, Mouse, Green, Rabbit, Young) ::: If someone sees the rabbit and the rabbit is green then they are young.\nIf(Squirrel, Red, Likes, Squirrel, Young) ::: If someone likes the squirrel and they are red then they are young.\nIf(Squirrel, Sees, Mouse, Squirrel, Sees, Mouse, Likes, Rabbit) ::: If someone sees the squirrel and the squirrel sees the mouse then they like the rabbit.\nQuery:\nSees(Mouse, Mouse, True) ::: The mouse does not see the mouse.\n------\nProblem:\nThe cat is rough. The mouse likes the rabbit. The mouse sees the rabbit. The rabbit sees the squirrel. The squirrel eats the cat. The squirrel eats the rabbit. The squirrel is red. All red people are young. If the squirrel is green and the squirrel likes the rabbit then the rabbit eats the mouse. If someone sees the cat and they like the squirrel then the squirrel sees the cat. If someone is young"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-347_Q11",
    "context": "Anne is big. Anne is kind. Charlie is big. Erin is big. Erin is blue. Erin is not kind. Erin is not young. Harry is big. Harry is nice. Harry is white. Harry is young. All kind, big things are blue. If something is young and kind then it is nice. Blue, cold things are nice. White things are cold. White, big things are cold. If Erin is blue and Erin is white then Erin is nice. All cold, nice things are young. All kind, blue things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nBlue($x, bool) ::: Is x blue?\nYoung($x, bool) ::: Is x young?\nNice($x, bool) ::: Is x nice?\nCold($x, bool) ::: Is x cold?\nWhite($x, bool) ::: Is x white?\nFacts:\nBig(Anne, True) ::: Anne is big.\nKind(Anne, True) ::: Anne is kind.\nBig(Charlie, True) ::: Charlie is big.\nBig(Erin, True) ::: Erin is big.\nBlue(Erin, True) ::: Erin is blue.\nNot(Kind(Erin, True)) ::: Erin is not kind.\nNot(Young(Erin, True)) ::: Erin is not young.\nBig(Harry, True) ::: Harry is big.\nNice(Harry, True) ::: Harry is nice.\nWhite(Harry, True) ::: Harry is white.\nYoung(Harry, True) ::: Harry is young.\nRules:\nKind($x, True) >>> Big($x, True) && Blue($x, True) ::: All kind, big things are blue.\nYoung($x, True) && Kind($x, True) >>> Nice($x, True) ::: If something is young and kind then it is nice.\nBlue($x, True) && Cold($x, True) >>> Nice($x, True) ::: Blue, cold things are nice.\nWhite($x, True) >>> Cold($x, True) ::: White things are cold.\nBig($x, True) && White($x, True) >>> Cold($x, True) ::: White, big things are cold.\nIf(Erin, Blue(Erin, True) && White(Erin, True)) >>> Nice(Erin, True) ::: If Erin is blue and Erin is white then Erin is nice.\nYoung($x, True) && Nice($x, True) >>> Cold($x, True) ::: All cold, nice things are young.\nKind($x, True) && Blue($x, True) >>> White($x, True) ::: All kind, blue things are white.\nQuery:\nYoung(Anne, True) ::: Anne is young.\n------\nProblem:\nAnne is big. Anne is kind. Anne is not young. Anne is not white. Anne is not blue. Anne is not cold. Anne is not nice. Anne is not red. Anne is not green. Anne is not rough. Anne is not furry. Anne is not quiet. Anne is not furry. Anne is not green. Anne is not rough. Anne is not white. Anne is not red. Anne is not quiet. Anne is not young. Anne is not nice. Anne is not cold. Anne is not blue. Anne is not green. Anne is not rough. Anne is not furry. Anne is not quiet. Anne is not red. Anne is not white. Anne is not young. Anne is not nice. Anne is not cold. Anne is not blue. Anne is not green. Anne is not rough. Anne is not furry. Anne is not quiet. Anne is not red. Anne is not white. Anne is not young. Anne is not nice. Anne is not cold. Anne is not"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-856_Q19",
    "context": "The bald eagle needs the lion. The bald eagle visits the lion. The lion is not cold. The lion does not like the tiger. The lion visits the tiger. The squirrel is kind. The squirrel is young. The squirrel likes the tiger. The squirrel does not need the lion. The squirrel visits the bald eagle. The tiger is cold. The tiger visits the bald eagle. If something visits the bald eagle then it is big. If something is big then it needs the squirrel. If something visits the squirrel and it visits the lion then it needs the squirrel. If something needs the squirrel then it is green. If something is young then it needs the tiger. Green things are young. If something is big and it visits the lion then the lion needs the squirrel. If the squirrel is big and the squirrel does not like the tiger then the tiger is not big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not visit the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBaldEagle($x, bool) ::: Is x a bald eagle?\nLion($x, bool) ::: Is x a lion?\nTiger($x, bool) ::: Is x a tiger?\nSquirrel($x, bool) ::: Is x a squirrel?\nCold($x, bool) ::: Is x cold?\nBig($x, bool) ::: Is x big?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nLikes($x, $y, bool) ::: Does x like y?\nFacts:\nBaldEagle(Anne, True) ::: Anne is a bald eagle.\nLion(Erin, True) ::: Erin is a lion.\nTiger(Fiona, True) ::: Fiona is a tiger.\nSquirrel(Harry, True) ::: Harry is a squirrel.\nCold(Fiona, True) ::: Fiona is cold.\nBig(Fiona, True) ::: Fiona is big.\nNeeds(Anne, Harry, True) ::: Anne needs Harry.\nVisits(Anne, Erin, True) ::: Anne visits Erin.\nLikes(Anne, Fiona, True) ::: Anne likes Fiona.\nNeeds(Harry, Erin, True) ::: Harry needs Erin.\nVisits(Harry, Fiona, True) ::: Harry visits Fiona.\nKind(Harry, True) ::: Harry is kind.\nYoung(Harry, True) ::: Harry is young.\nLikes(Harry, Fiona, True) ::: Harry likes Fiona.\nNeeds(Harry, Anne, False) ::: Harry does not need Anne.\nVisits(Harry, Anne, True) ::: Harry visits Anne.\nCold(Fiona, True) ::: Fiona is cold.\nBig(Fiona, True) ::: Fiona is big.\nNeeds(Fiona, Erin, True) ::: Fiona needs Erin.\nVisits(Fiona, Erin, True) ::: Fiona visits Erin.\nRules:\nBaldEagle($x, True) >>> Lion($x, True) ::: The bald eagle needs the lion.\nBaldEagle($x, True) >>> Visits($x, $y, True) ::: The bald eagle visits the lion.\nLion($x, True) >>> Not($x, Cold, True) ::: The lion is not cold.\nLion($x, True) >>> Not($x, Likes, True, $y) ::: The lion does not like the tiger.\nLion($x, True) >>> Visits($x, $y, True) ::: The lion visits the tiger.\nSquirrel($x, True) >>> Kind($x, True) ::: The squirrel is kind.\nSquirrel($x, True) >>> Young($x, True) ::: The squirrel is young.\nSquirrel($x, True) >>> Likes($x, $y, True) ::: The squirrel likes the tiger.\nSquirrel($x, True) >>> Not($x, Needs, True, $y) ::: The squirrel does"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-410_Q24",
    "context": "The bald eagle is green. The bald eagle needs the lion. The bald eagle sees the cat. The bald eagle sees the lion. The cat sees the bald eagle. The cow sees the bald eagle. The lion needs the bald eagle. If someone sees the cat and the cat is green then they visit the cat. If someone needs the cat and the cat needs the bald eagle then they are blue. If someone is blue and they need the lion then they see the lion. If someone sees the cow then the cow needs the bald eagle. If someone needs the bald eagle then they see the lion. If someone needs the cat then the cat is blue. If someone visits the lion and they are nice then the lion visits the cat. If someone needs the bald eagle and they see the lion then they see the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion is kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen($x, bool) ::: Is x green?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nKind($x, bool) ::: Is x kind?\nFacts:\nGreen(BaldEagle, True) ::: The bald eagle is green.\nNeeds(BaldEagle, Lion, True) ::: The bald eagle needs the lion.\nSees(BaldEagle, Cat, True) ::: The bald eagle sees the cat.\nSees(BaldEagle, Lion, True) ::: The bald eagle sees the lion.\nSees(Cat, BaldEagle, True) ::: The cat sees the bald eagle.\nSees(Cow, BaldEagle, True) ::: The cow sees the bald eagle.\nNeeds(Lion, BaldEagle, True) ::: The lion needs the bald eagle.\nRules:\nGreen($x, True) && Sees($x, Cat) >>> Visits($x, Cat) ::: If someone sees the cat and the cat is green then they visit the cat.\nNeeds($x, Cat) && Needs(Cat, BaldEagle) >>> $x is Blue ::: If someone needs the cat and the cat needs the bald eagle then they are blue.\nBlue($x, True) && Needs($x, Lion) >>> Sees($x, Lion) ::: If someone is blue and they need the lion then they see the lion.\nSees($x, Cow) >>> Needs(Cow, BaldEagle) ::: If someone sees the cow then the cow needs the bald eagle.\nNeeds($x, BaldEagle) >>> Sees($x, Lion) ::: If someone needs the bald eagle then they see the lion.\nNeeds($x, Cat) >>> Cat is Blue ::: If someone needs the cat then the cat is blue.\nVisits($x, Lion) && Nice($x, True) >>> Lion visits Cat ::: If someone visits the lion and they are nice then the lion visits the cat.\nNeeds($x, BaldEagle) && Sees($x, Lion) >>> Sees($x, Cow) ::: If someone needs the bald eagle and they see the lion then they see the cow.\nQuery:\nKind(Lion, True) ::: The lion is kind.\n------\nProblem:\nThe cat is green. The cat is furry. The cat is quiet. The cat is rough. The cat is white. The cat is young. The cat is red. The cat is blue. The cat is nice. The cat is kind. The cat is rough. The cat is quiet. The cat is white. The cat is young. The cat is red. The cat is blue. The cat is nice. The cat is kind. The cat is rough. The cat is quiet. The cat is white. The cat is young. The cat is red. The cat is blue. The cat is nice. The cat is kind. The cat is rough. The cat is quiet. The cat is white. The cat is young. The cat is red. The cat is blue. The cat is nice. The cat is kind. The cat is rough. The cat is quiet. The cat is white. The cat is young. The cat is"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-77_Q12",
    "context": "The bear is blue. The cat eats the cow. The cat is red. The cat is round. The cat does not need the cow. The cat does not need the dog. The cow is not round. The dog chases the bear. The dog chases the cat. The dog is round. If the bear is not green then the bear eats the cat. If the dog needs the cat then the dog chases the bear. If the cow needs the bear then the cow is green. If the dog chases the cow then the dog needs the bear. Red things are nice. If something is green then it needs the cow. If something is nice then it eats the bear. If something is nice and it eats the bear then the bear is red. If something eats the dog and it is not red then the dog does not need the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not eat the bear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nEats($x, $y, bool) ::: Does x eat y?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nNeeds($x, $y, bool) ::: Does x need y?\nGreen($x, bool) ::: Is x green?\nNice($x, bool) ::: Is x nice?\nFacts:\nBlue(Bear, True) ::: The bear is blue.\nEats(Cat, Cow, True) ::: The cat eats the cow.\nRed(Cat, True) ::: The cat is red.\nRound(Cat, True) ::: The cat is round.\nNeeds(Cat, Cow, False) ::: The cat does not need the cow.\nNeeds(Cat, Dog, False) ::: The cat does not need the dog.\nNot(Round(Cow, True)) ::: The cow is not round.\nChases(Dog, Bear, True) ::: The dog chases the bear.\nChases(Dog, Cat, True) ::: The dog chases the cat.\nRound(Dog, True) ::: The dog is round.\nNot(Green(Bear, True)) >>> Eats(Bear, Cat, True) ::: If the bear is not green then the bear eats the cat.\nNeeds(Cat, Bear, True) >>> Chases(Dog, Bear, True) ::: If the dog needs the cat then the dog chases the bear.\nNeeds(Cow, Bear, True) >>> Green(Cow, True) ::: If the cow needs the bear then the cow is green.\nNeeds(Dog, Cat, True) >>> Chases(Dog, Cow, True) ::: If the dog chases the cow then the dog needs the bear.\nRed($x, True) >>> Nice($x, True) ::: Red things are nice.\nGreen($x, True) >>> Needs($x, Cow, True) ::: If something is green then it needs the cow.\nNice($x, True) >>> Eats($x, Bear, True) ::: If something is nice then it eats the bear.\nNice($x, True) && Eats($x, Bear, True) >>> Bear(Red, True) ::: If something is nice and it eats the bear then the bear is red.\nNot(Eats($x, Dog, True)) && Not(Red($x, True)) >>> Needs($x, Cow, True) ::: If something eats the dog and it is not red then the dog does not need the cow.\nQuery:\nNot(Eats(Bear, Bear, True)) ::: The bear does not eat the bear.\n------\nProblem:\nThe bear is blue. The cat eats the cow. The cat is red. The cat is round. The cat does not need the cow. The cat does not need the dog. The cow is not round. The dog chases the bear. The dog chases the cat. The dog is round. If the bear is not green then the bear eats the cat. If the dog needs the cat then the dog chases the bear. If the cow needs the bear then the cow is green. If the dog chases the cow then the dog needs the bear. Red things are nice. If something is green"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-904_Q14",
    "context": "Charlie is cold. Charlie is round. Erin is big. Erin is kind. Erin is nice. Erin is round. Gary is not big. Gary is not cold. Harry is blue. Harry is kind. Harry is nice. If someone is blue then they are round. All smart people are round. All nice people are round. If Harry is cold then Harry is not kind. If someone is smart then they are kind. If someone is cold and round then they are smart. If someone is kind and blue then they are big. All kind people are blue. If someone is big then they are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFacts:\nCold(Charlie, True) ::: Charlie is cold.\nRound(Charlie, True) ::: Charlie is round.\nBig(Erin, True) ::: Erin is big.\nKind(Erin, True) ::: Erin is kind.\nNice(Erin, True) ::: Erin is nice.\nRound(Erin, True) ::: Erin is round.\nNot(Big(Gary, True)) ::: Gary is not big.\nNot(Cold(Gary, True)) ::: Gary is not cold.\nBlue(Harry, True) ::: Harry is blue.\nKind(Harry, True) ::: Harry is kind.\nNice(Harry, True) ::: Harry is nice.\nRules:\nRound($x, True) >>> Smart($x, True) ::: All smart people are round.\nRound($x, True) >>> Nice($x, True) ::: All nice people are round.\nKind($x, True) >>> Blue($x, True) ::: All kind people are blue.\nKind($x, True) >>> Smart($x, True) ::: If Harry is cold then Harry is not kind.\nCold($x, True) && Round($x, True) >>> Smart($x, True) ::: If someone is cold and round then they are smart.\nKind($x, True) && Blue($x, True) >>> Big($x, True) ::: If someone is kind and blue then they are big.\nSmart($x, True) >>> Kind($x, True) ::: If someone is smart then they are kind.\nRound($x, True) >>> Cold($x, True) ::: If someone is cold and round then they are smart.\nBig($x, True) >>> Nice($x, True) ::: If someone is big then they are nice.\nQuery:\nSmart(Gary, True) ::: Gary is smart.\n------\nProblem:\nCharlie is cold. Charlie is round. Erin is big. Erin is kind. Erin is nice. Erin is round. Gary is not big. Gary is not cold. Harry is blue. Harry is kind. Harry is nice. If someone is blue then they are round. All smart people are round. All nice people are round. If Harry is cold then Harry is not kind. If someone is smart then they are kind. If someone is cold and round then they are smart. If someone is kind and blue then they are big. All kind people are blue. If someone is big then they are nice.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Gary is smart.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nRound($x, bool) ::: Is x round?\nBig($x, bool) ::: Is x big?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-437_Q1",
    "context": "The cow is not blue. The cow is green. The cow visits the mouse. The lion does not eat the mouse. The lion sees the cow. The lion visits the mouse. The mouse is blue. The mouse is red. The squirrel is red. The squirrel visits the mouse. If something eats the squirrel then the squirrel visits the cow. If the cow eats the mouse and the cow eats the squirrel then the squirrel visits the cow. If something is red and big then it eats the lion. If something visits the cow then it does not visit the squirrel. If something sees the mouse then the mouse eats the squirrel. If something sees the lion then it sees the mouse. If something is red and it visits the lion then it does not eat the cow. If something is blue then it sees the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel visits the mouse.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nBig($x, bool) ::: Is x big?\nEats($x, $y, bool) ::: Does x eat y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nNotBlue(Cow, True) ::: The cow is not blue.\nGreen(Cow, True) ::: The cow is green.\nVisits(Cow, Mouse, True) ::: The cow visits the mouse.\nNotEats(Lion, Mouse, True) ::: The lion does not eat the mouse.\nSees(Lion, Cow, True) ::: The lion sees the cow.\nVisits(Lion, Mouse, True) ::: The lion visits the mouse.\nBlue(Mouse, True) ::: The mouse is blue.\nRed(Mouse, True) ::: The mouse is red.\nRed(Squirrel, True) ::: The squirrel is red.\nVisits(Squirrel, Mouse, True) ::: The squirrel visits the mouse.\nIfEats(Squirrel, Cow, True) >>> SquirrelVisitsCow(True) ::: If something eats the squirrel then the squirrel visits the cow.\nIfEats(Cow, Mouse) && IfEats(Cow, Squirrel) >>> SquirrelVisitsCow(True) ::: If something eats the squirrel then the squirrel visits the cow.\nIfRedAndBig($x, True) >>> Eats($x, Lion, True) ::: If something is red and big then it eats the lion.\nNotVisits(Cow, Squirrel, True) ::: If something visits the cow then it does not visit the squirrel.\nIfSees(Mouse, $x, True) >>> Eats($x, Squirrel, True) ::: If something sees the mouse then the mouse eats the squirrel.\nIfSees(Lion, $x, True) >>> Sees($x, Mouse, True) ::: If something sees the lion then it sees the mouse.\nIfRedAndVisits(Lion, $x, True) >>> NotEats($x, Cow, True) ::: If something is red and it visits the lion then it does not eat the cow.\nIfBlue($x, True) >>> Sees(Lion, $x, True) ::: If something is blue then it sees the lion.\nQuery:\nVisits(Squirrel, Mouse, True) ::: The squirrel visits the mouse.\n------\nProblem:\nThe cow is not blue. The cow is green. The cow visits the mouse. The lion does not eat the mouse. The lion sees the cow. The lion visits the mouse. The mouse is blue. The mouse is red. The squirrel is red. The squirrel visits the mouse. If something eats the squirrel then the squirrel visits the cow. If something eats the mouse and something eats the squirrel then the squirrel visits the cow. If something is red and big then it eats the lion. If something visits the cow then it does not visit the"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-902_Q5",
    "context": "The lion chases the mouse. The mouse is cold. The mouse needs the rabbit. The rabbit chases the squirrel. The rabbit sees the lion. The rabbit sees the squirrel. The squirrel chases the lion. If something is cold then it sees the rabbit. If something sees the rabbit then it sees the squirrel. If something is cold and it sees the squirrel then the squirrel is cold. If something chases the squirrel then it needs the squirrel. If something chases the squirrel and it is not cold then the squirrel does not chase the rabbit. If the rabbit sees the squirrel and the squirrel chases the rabbit then the rabbit does not chase the squirrel. If the rabbit chases the squirrel and the squirrel does not chase the rabbit then the squirrel needs the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse sees the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nNeeds($x, $y, bool) ::: Does x need y?\nCold($x, bool) ::: Is x cold?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nChases(Lion, Mouse, True) ::: The lion chases the mouse.\nCold(Mouse, True) ::: The mouse is cold.\nNeeds(Mouse, Rabbit, True) ::: The mouse needs the rabbit.\nChases(Rabbit, Squirrel, True) ::: The rabbit chases the squirrel.\nSees(Rabbit, Lion, True) ::: The rabbit sees the lion.\nSees(Rabbit, Squirrel, True) ::: The rabbit sees the squirrel.\nChases(Squirrel, Lion, True) ::: The squirrel chases the lion.\nRules:\nCold($x, True) >>> Sees($x, Rabbit, True) ::: If something is cold then it sees the rabbit.\nSees($x, Rabbit, True) >>> Sees($x, Squirrel, True) ::: If something sees the rabbit then it sees the squirrel.\nCold($x, True) && Sees($x, Squirrel, True) >>> Cold($x, True) ::: If something is cold and it sees the squirrel then the squirrel is cold.\nChases($x, Squirrel, True) >>> Needs($x, Squirrel, True) ::: If something chases the squirrel then it needs the squirrel.\nChases($x, Squirrel, True) && Not(Cold($x, True)) >>> Not(Sees($x, Squirrel, True)) ::: If something chases the squirrel and it is not cold then the squirrel does not chase the rabbit.\nSees($x, Squirrel, True) && Chases($x, Squirrel, True) >>> Not(Chases($x, Rabbit, True)) ::: If the rabbit sees the squirrel and the squirrel chases the rabbit then the rabbit does not chase the squirrel.\nChases($x, Squirrel, True) && Not(Sees($x, Squirrel, True)) >>> Needs($x, Mouse, True) ::: If the rabbit chases the squirrel and the squirrel does not chase the rabbit then the squirrel needs the mouse.\nQuery:\nSees(Mouse, Squirrel, True) ::: The mouse sees the squirrel.\n------\nProblem:\nThe lion chases the mouse. The mouse is cold. The mouse needs the rabbit. The rabbit chases the squirrel. The rabbit sees the lion. The rabbit sees the squirrel. The squirrel chases the lion. If something is cold then it sees the rabbit. If something sees the rabbit then it sees the squirrel. If something is cold and it sees the squirrel then the squirrel is cold. If something chases the squirrel then it needs the squirrel. If something chases the squirrel and it is not cold then the squirrel does not chase the rabbit. If the rabbit"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1421_Q1",
    "context": "Anne is cold. Anne is rough. Bob is cold. Bob is kind. Dave is big. Dave is red. Dave is smart. Harry is big. Harry is kind. Harry is smart. Big people are young. Red people are smart. If Anne is young and Anne is rough then Anne is smart. Young, cold people are red. Rough people are big. All kind people are rough. If Anne is kind and Anne is cold then Anne is smart. All young people are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nRough(Anne, True) ::: Anne is rough.\nCold(Bob, True) ::: Bob is cold.\nKind(Bob, True) ::: Bob is kind.\nBig(Dave, True) ::: Dave is big.\nRed(Dave, True) ::: Dave is red.\nSmart(Dave, True) ::: Dave is smart.\nBig(Harry, True) ::: Harry is big.\nKind(Harry, True) ::: Harry is kind.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nBig($x, True) >>> Young($x, True) ::: Big people are young.\nRed($x, True) >>> Smart($x, True) ::: Red people are smart.\nYoung($x, True) && Cold($x, True) >>> Red($x, True) ::: Young, cold people are red.\nRough($x, True) >>> Big($x, True) ::: Rough people are big.\nKind($x, True) >>> Rough($x, True) ::: All kind people are rough.\nCold($x, True) && Kind($x, True) >>> Smart($x, True) ::: If Anne is kind and Anne is cold then Anne is smart.\nYoung($x, True) >>> Kind($x, True) ::: All young people are kind.\nQuery:\nRed(Dave, True) ::: Dave is red.\n------\nProblem:\nAnne is cold. Anne is rough. Bob is cold. Bob is kind. Dave is big. Dave is red. Dave is smart. Harry is big. Harry is kind. Harry is smart. Big people are young. Red people are smart. If Anne is young and Anne is rough then Anne is smart. Young, cold people are red. Rough people are big. All kind people are rough. If Anne is kind and Anne is cold then Anne is smart. All young people are kind.\nQuestion:\nBased on the above information, is the following statement true, false, or unknown? Dave is red.\n###\nPredicates:\nCold($x, bool) ::: Is x cold?\nRough($x, bool) ::: Is x rough?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nRed($x, bool) ::: Is x red?\nSmart($x, bool) ::: Is x smart?\nYoung($x, bool) ::: Is x young?\nFacts:\nCold(Anne, True) ::: Anne is cold.\nRough(Anne, True) ::: Anne is rough.\nCold(Bob, True) ::: Bob is cold.\nKind(Bob, True) ::: Bob is kind.\nBig(Dave, True) ::: Dave is big.\nRed(Dave, True"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-414_Q22",
    "context": "Charlie is nice. Charlie is quiet. Charlie is white. Charlie is young. Dave is not furry. Gary is quiet. Harry is furry. If something is nice and cold then it is quiet. If something is cold then it is young. Quiet, furry things are white. All furry things are cold. If something is young then it is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nQuiet($x, bool) ::: Is x quiet?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nFacts:\nNice(Charlie, True) ::: Charlie is nice.\nQuiet(Charlie, True) ::: Charlie is quiet.\nWhite(Charlie, True) ::: Charlie is white.\nYoung(Charlie, True) ::: Charlie is young.\nNot(Furry(Dave, True)) ::: Dave is not furry.\nQuiet(Gary, True) ::: Gary is quiet.\nFurry(Harry, True) ::: Harry is furry.\nRules:\nNice($x, True) && Cold($x, True) >>> Quiet($x, True) ::: If something is nice and cold then it is quiet.\nCold($x, True) >>> Young($x, True) ::: If something is cold then it is young.\nQuiet($x, True) && Furry($x, True) >>> White($x, True) ::: Quiet, furry things are white.\nFurry($x, True) >>> Cold($x, True) ::: All furry things are cold.\nYoung($x, True) >>> Nice($x, True) ::: If something is young then it is nice.\nQuery:\nRound(Harry, True) ::: Harry is round.\n------"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-412_Q4",
    "context": "Dave is furry. Dave is green. Dave is quiet. Dave is red. Fiona is blue. Fiona is furry. Fiona is green. Fiona is quiet. Fiona is red. Gary is blue. Gary is nice. Gary is quiet. Gary is red. Gary is smart. Harry is blue. Harry is smart. If something is blue and furry then it is quiet. If Dave is furry then Dave is nice. If something is furry then it is blue. Quiet things are red. All furry, green things are quiet. If something is red then it is green. All nice things are furry. All smart things are nice. Red things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nGreen($x, bool) ::: Is x green?\nQuiet($x, bool) ::: Is x quiet?\nRed($x, bool) ::: Is x red?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nSmart($x, bool) ::: Is x smart?\nFacts:\nFurry(Dave, True) ::: Dave is furry.\nGreen(Dave, True) ::: Dave is green.\nQuiet(Dave, True) ::: Dave is quiet.\nRed(Dave, True) ::: Dave is red.\nBlue(Fiona, True) ::: Fiona is blue.\nFurry(Fiona, True) ::: Fiona is furry.\nGreen(Fiona, True) ::: Fiona is green.\nQuiet(Fiona, True) ::: Fiona is quiet.\nRed(Fiona, True) ::: Fiona is red.\nBlue(Gary, True) ::: Gary is blue.\nNice(Gary, True) ::: Gary is nice.\nQuiet(Gary, True) ::: Gary is quiet.\nRed(Gary, True) ::: Gary is red.\nSmart(Gary, True) ::: Gary is smart.\nBlue(Harry, True) ::: Harry is blue.\nSmart(Harry, True) ::: Harry is smart.\nRules:\nFurry($x, True) >>> Blue($x, True) ::: If something is blue and furry then it is quiet.\nFurry(Dave, True) >>>"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-775_Q9",
    "context": "The dog chases the squirrel. The dog chases the tiger. The dog eats the tiger. The dog is young. The dog needs the squirrel. The rabbit chases the dog. The rabbit chases the tiger. The squirrel chases the dog. The squirrel is round. The squirrel needs the rabbit. The squirrel needs the tiger. The tiger chases the dog. The tiger eats the dog. The tiger eats the squirrel. The tiger is green. The tiger is round. If someone is green then they eat the rabbit. If someone needs the squirrel and the squirrel is green then they need the tiger. If someone eats the rabbit then they need the squirrel. If the tiger needs the rabbit then the rabbit is green. If someone is nice then they need the rabbit. If the tiger is round then the tiger is young. If someone chases the tiger and the tiger is kind then the tiger eats the rabbit. If someone needs the squirrel then they are nice. If someone chases the tiger then the tiger chases the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger needs the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nNeeds($x, $y, bool) ::: Does x need y?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nGreen($x, bool) ::: Is x green?\nFacts:\nChases(Dog, Squirrel, True) ::: The dog chases the squirrel.\nChases(Dog, Tiger, True) ::: The dog chases the tiger.\nEats(Dog, Tiger, True) ::: The dog eats the tiger.\nYoung(Dog, True) ::: The dog is young.\nNeeds(Dog, Squirrel, True) ::: The dog needs the squirrel.\nChases(Rabbit, Dog, True) ::: The rabbit chases the dog.\nChases(Rabbit, Tiger, True) ::: The rabbit chases the tiger.\nChases(Squirrel, Dog, True) ::: The squirrel chases the dog.\nRound(Squirrel, True) ::: The squirrel is round.\nNeeds(Squirrel, Rabbit, True) ::: The squirrel needs the rabbit.\nNeeds(Squirrel, Tiger, True) ::: The squirrel needs the tiger.\nChases(Tiger, Dog, True) ::: The tiger chases the"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1_Q5",
    "context": "Anne is furry. Charlie is round. Charlie is smart. Charlie is white. Charlie is young. Erin is kind. Erin is nice. Erin is round. Erin is smart. Erin is white. Erin is young. Harry is furry. Harry is nice. Harry is round. Harry is smart. Harry is young. All round people are nice. Nice, furry people are kind. All kind, white people are round. All white, furry people are kind. If someone is round and white then they are kind. Nice people are smart. If Anne is nice and Anne is round then Anne is kind. If someone is furry then they are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry($x, bool) ::: Is x furry?\nRound($x, bool) ::: Is x round?\nSmart($x, bool) ::: Is x smart?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nKind($x, bool) ::: Is x kind?\nNice($x, bool) ::: Is x nice?\nFacts:\nFurry(Anne, True) ::: Anne is furry.\nRound(Charlie, True) ::: Charlie is round.\nSmart(Charlie, True) ::: Charlie is smart.\nWhite(Charlie, True) ::: Charlie is white.\nYoung(Charlie, True) ::: Charlie is young.\nKind(Erin, True) ::: Erin is kind.\nNice(Erin, True) ::: Erin is nice.\nRound(Erin, True) ::: Erin is round.\nSmart(Erin, True) ::: Erin is smart.\nWhite(Erin, True) ::: Erin is white.\nYoung(Erin, True) ::: Erin is young.\nFurry(Harry, True) ::: Harry is furry.\nNice(Harry, True) ::: Harry is nice.\nRound(Harry, True) ::: Harry is round.\nSmart(Harry, True) ::: Harry is smart.\nYoung(Harry, True) ::: Harry is young.\nRules:\nRound($x, True) >>> Nice($x, True) ::: All round people are nice.\nNice($x, True) && Furry($"
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D5-406_Q4",
    "context": "The bald eagle is big. The bald eagle is rough. The bald eagle sees the lion. The cat chases the lion. The cat is red. The cat is rough. The cat sees the bald eagle. The cow does not eat the bald eagle. The cow is not young. The lion eats the cow. The lion is rough. If something sees the bald eagle and the bald eagle chases the cat then it is red. If something is big and rough then it chases the cat. If something chases the cow and the cow chases the cat then it is rough. If something chases the cow then it eats the bald eagle. If something chases the cat then it sees the bald eagle. If something is red then it chases the cow. If something is round and it chases the lion then it does not eat the lion. If the cow chases the lion then the lion does not chase the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not chase the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nRough($x, bool) ::: Is x rough?\nSees($x, $y, bool) ::: Does x see y?\nChases($x, $y, bool) ::: Does x chase y?\nEats($x, $y, bool) ::: Does x eat y?\nRed($x, bool) ::: Is x red?\nRound($x, bool) ::: Is x round?\nFacts:\nBig(BaldEagle, True) ::: The bald eagle is big.\nRough(BaldEagle, True) ::: The bald eagle is rough.\nSees(BaldEagle, Lion, True) ::: The bald eagle sees the lion.\nChases(Cat, Lion, True) ::: The cat chases the lion.\nRed(Cat, True) ::: The cat is red.\nRough(Cat, True) ::: The cat is rough.\nSees(Cat, BaldEagle, True) ::: The cat sees the bald eagle.\nDoesNotEat(Cow, BaldEagle, True) ::: The cow does not eat the bald eagle.\nNotYoung(Cow, True) ::: The cow is not young.\nEats(Lion, Cow, True) ::: The lion eats the cow.\nRough(Lion, True) ::: The lion is rough.\nRules:\nIf something sees the bald eagle and the bald eagle chases the cat then it is red ::: If something sees the bald eagle and the bald eagle chases the cat then it is red.\nIf something is big and rough then it chases the cat :::"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-127_Q4",
    "context": "The bear is blue. The bear is green. The bear is red. The bear sees the rabbit. The cow is blue. The cow needs the tiger. The cow visits the rabbit. The rabbit is cold. The rabbit is nice. The rabbit needs the cow. The rabbit sees the cow. The rabbit sees the tiger. The tiger needs the bear. The tiger needs the rabbit. The tiger visits the bear. The tiger visits the cow. If something is green then it visits the tiger. If something sees the bear and it is cold then the bear is green. If the cow needs the rabbit and the rabbit needs the cow then the rabbit is red. If something is green then it needs the cow. If something visits the tiger then the tiger is red. If something needs the tiger and the tiger sees the cow then the cow needs the bear. If something sees the bear and it needs the bear then it sees the cow. If something visits the rabbit then the rabbit needs the tiger. If something needs the bear and the bear visits the tiger then it sees the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not need the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue($x, bool) ::: Is x blue?\nGreen($x, bool) ::: Is x green?\nRed($x, bool) ::: Is x red?\nCold($x, bool) ::: Is x cold?\nNice($x, bool) ::: Is x nice?\nNeeds($x, $y, bool) ::: Does x need y?\nVisits($x, $y, bool) ::: Does x visit y?\nSees($x, $y, bool) ::: Does x see y?\nFacts:\nBlue(Bear, True) ::: The bear is blue.\nGreen(Bear, True) ::: The bear is green.\nRed(Bear, True) ::: The bear is red.\nSees(Bear, Rabbit, True) ::: The bear sees the rabbit.\nBlue(Cow, True) ::: The cow is blue.\nNeeds(Cow, Tiger, True) ::: The cow needs the tiger.\nVisits(Cow, Rabbit, True) ::: The cow visits the rabbit.\nCold(Rabbit, True) ::: The rabbit is cold.\nNice(Rabbit, True) ::: The rabbit is nice.\nNeeds(Rabbit, Cow, True) ::: The rabbit needs the cow.\nSees(Rabbit, Cow, True) ::: The rabbit sees the cow.\nSees(Rabbit, Tiger, True) ::: The rabbit sees the tiger.\nNeeds(Tiger, Bear, True) ::: The tiger needs the bear.\nNeeds(Tiger, Rabbit, True) ::: The tiger"
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D5-581_Q1",
    "context": "The cat likes the rabbit. The cat likes the tiger. The mouse is blue. The mouse is nice. The mouse is round. The mouse visits the tiger. The rabbit likes the tiger. The rabbit visits the tiger. The tiger eats the mouse. The tiger eats the rabbit. The tiger visits the cat. If the mouse is big then the mouse visits the cat. If something visits the mouse then it visits the tiger. If something likes the tiger and the tiger eats the cat then the cat is red. If something visits the tiger then the tiger visits the mouse. If something is blue and it visits the cat then it likes the rabbit. If something is nice then it likes the cat. If something is blue then it likes the cat. If something is round then it is nice. If something visits the tiger then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat likes the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes($x, $y, bool) ::: Does x like y?\nVisits($x, $y, bool) ::: Does x visit y?\nEats($x, $y, bool) ::: Does x eat y?\nBig($x, bool) ::: Is x big?\nBlue($x, bool) ::: Is x blue?\nNice($x, bool) ::: Is x nice?\nRound($x, bool) ::: Is x round?\nRed($x, bool) ::: Is x red?\nFacts:\nLikes(Cat, Rabbit, True) ::: The cat likes the rabbit.\nLikes(Cat, Tiger, True) ::: The cat likes the tiger.\nBlue(Mouse, True) ::: The mouse is blue.\nNice(Mouse, True) ::: The mouse is nice.\nRound(Mouse, True) ::: The mouse is round.\nVisits(Mouse, Tiger, True) ::: The mouse visits the tiger.\nLikes(Rabbit, Tiger, True) ::: The rabbit likes the tiger.\nVisits(Rabbit, Tiger, True) ::: The rabbit visits the tiger.\nEats(Tiger, Mouse, True) ::: The tiger eats the mouse.\nEats(Tiger, Rabbit, True) ::: The tiger eats the rabbit.\nVisits(Tiger, Cat, True) ::: The tiger visits the cat.\nBig(Mouse, True) ::: The mouse is big.\nRules:\nIf the mouse is big then the mouse visits the cat. ::: If the mouse is big then the mouse visits the cat.\nIf something visits the"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-572_Q4",
    "context": "Anne is nice. Anne is white. Anne is young. Dave is cold. Dave is nice. Dave is smart. Erin is cold. Erin is not kind. Erin is not nice. Erin is smart. Erin is young. Fiona is kind. Smart people are white. Kind, cold people are smart. Kind people are big. If Fiona is cold and Fiona is big then Fiona is nice. If someone is nice and big then they are cold. If someone is young and white then they are cold. If Anne is nice then Anne is cold. Big, young people are nice. Big people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice($x, bool) ::: Is x nice?\nWhite($x, bool) ::: Is x white?\nYoung($x, bool) ::: Is x young?\nCold($x, bool) ::: Is x cold?\nKind($x, bool) ::: Is x kind?\nBig($x, bool) ::: Is x big?\nSmart($x, bool) ::: Is x smart?\nFacts:\nNice(Anne, True) ::: Anne is nice.\nWhite(Anne, True) ::: Anne is white.\nYoung(Anne, True) ::: Anne is young.\nCold(Dave, True) ::: Dave is cold.\nNice(Dave, True) ::: Dave is nice.\nSmart(Dave, True) ::: Dave is smart.\nCold(Erin, True) ::: Erin is cold.\nNotKind(Erin, True) ::: Erin is not kind.\nNotNice(Erin, True) ::: Erin is not nice.\nSmart(Erin, True) ::: Erin is smart.\nYoung(Erin, True) ::: Erin is young.\nKind(Fiona, True) ::: Fiona is kind.\nSmart(Fiona, True) ::: Fiona is smart.\nYoung(Fiona, True) ::: Fiona is young.\nRules:\nWhite($x, True) >>> Smart($x, True) ::: Smart people are white.\nKind($x, True) && Cold($x, True) >>> Smart($x, True) ::: Kind, cold people are smart.\nKind($x, True) >>> Big($x, True)"
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D5-1066_Q21",
    "context": "Bob is big. Charlie is furry. Charlie is kind. Charlie is smart. Fiona is furry. Fiona is young. Gary is smart. Big, smart things are kind. If something is red and not smart then it is kind. Smart things are furry. If something is red and big then it is furry. If Charlie is red then Charlie is kind. If something is kind then it is young. Young things are not red. If something is furry and smart then it is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nFurry($x, bool) ::: Is x furry?\nKind($x, bool) ::: Is x kind?\nSmart($x, bool) ::: Is x smart?\nRed($x, bool) ::: Is x red?\nYoung($x, bool) ::: Is x young?\nFacts:\nBig(Bob, True) ::: Bob is big.\nFurry(Charlie, True) ::: Charlie is furry.\nKind(Charlie, True) ::: Charlie is kind.\nSmart(Charlie, True) ::: Charlie is smart.\nFurry(Fiona, True) ::: Fiona is furry.\nYoung(Fiona, True) ::: Fiona is young.\nSmart(Gary, True) ::: Gary is smart.\nRules:\nBig($x, True) && Smart($x, True) >>> Kind($x, True) ::: Big, smart things are kind.\nRed($x, True) && Not(Smart($x, True)) >>> Kind($x, True) ::: If something is red and not smart then it is kind.\nSmart($x, True) >>> Furry($x, True) ::: Smart things are furry.\nRed($x, True) && Big($x, True) >>> Furry($x, True) ::: If something is red and big then it is furry.\nCharlie(Red, True) >>> Kind($x, True) ::: If Charlie is red then Charlie is kind.\nKind($x, True) >>> Young($x, True) ::: If something is kind then it is young.\nYoung($"
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D5-1032_Q6",
    "context": "Bob is big. Bob is green. Dave is kind. Dave is white. Erin is green. Erin is kind. Erin is smart. Fiona is big. Fiona is blue. Fiona is furry. White, blue things are furry. All big, white things are smart. Furry things are green. Kind things are blue. All green things are furry. Green things are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig($x, bool) ::: Is x big?\nGreen($x, bool) ::: Is x green?\nKind($x, bool) ::: Is x kind?\nWhite($x, bool) ::: Is x white?\nSmart($x, bool) ::: Is x smart?\nFurry($x, bool) ::: Is x furry?\nBlue($x, bool) ::: Is x blue?\nFacts:\nBig(Bob, True) ::: Bob is big.\nGreen(Bob, True) ::: Bob is green.\nKind(Dave, True) ::: Dave is kind.\nWhite(Dave, True) ::: Dave is white.\nGreen(Erin, True) ::: Erin is green.\nKind(Erin, True) ::: Erin is kind.\nSmart(Erin, True) ::: Erin is smart.\nBig(Fiona, True) ::: Fiona is big.\nBlue(Fiona, True) ::: Fiona is blue.\nFurry(Fiona, True) ::: Fiona is furry.\nRules:\nWhite($x, True) && Blue($x, True) >>> Furry($x, True) ::: White, blue things are furry.\nBig($x, True) && White($x, True) >>> Smart($x, True) ::: All big, white things are smart.\nFurry($x, True) >>> Green($x, True) ::: Furry things are green.\nKind($x, True) >>> Blue($x, True) ::: Kind things are blue.\nGreen($x, True) >>> Big($x, True) ::: All green things are big.\nGreen($x"
    ]
  }
]